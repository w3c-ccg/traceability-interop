{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "10c68270-be38-43a1-b406-d5f0aad7202f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6b2d5e5e-121c-475f-afd1-061cf77fd8fc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b4b5f155-e895-4bf7-bd49-be93a9421d67",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "31f370b6-cf1e-493b-81bf-fdb43fdd9650"
                }
              }
            ]
          },
          {
            "id": "15829c01-63ba-4c98-8562-33ffb6ec8638",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d8949ae9-2f0e-4127-96f0-60d0e6548b0b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3829aadc-5220-4337-8262-bb9c364fa71c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e6dc18c0-be0e-4959-b385-bbdfafde8516",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9f11ef88-78ab-4abf-8a14-159c05ac80ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cec17210-b788-485e-a524-8aa2cd90cd9e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "309d9b49-a6f6-4d78-b091-264509f09d96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76250ba1-672e-4bc5-a370-ca323311d17d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "555907fb-16b3-46eb-9307-2fc0c231ec0d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f6ffb3da-9d8c-40c2-9cf4-7d4dd8fb1a28"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9f7167a0-a0ad-4930-9b82-77ca8ec9f2d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a946e5b6-eeb6-4451-b4bb-c05e2b072ee2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "539766b9-8636-4fe7-82ec-14828c50d2a5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ed7642d6-82b9-4f82-9159-9ca7ca11634c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ae0aeb5-44a6-4db4-a1a4-9378074e82b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b812e7fd-9023-4024-b6a2-652c14136e5e"
            }
          }
        ]
      },
      {
        "id": "f0ddbe53-5fa3-4cf6-b081-245ffb26c9cb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6cc1cbec-6062-4fb0-8b3a-c80578599c81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db9f6c30-e52e-40be-9146-8b5c2e228e78",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "92de6cfa-0f50-48dd-9cca-bbfd3699c22e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5732be-0cac-49bf-92ea-90560b203a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95ba8a8e-b9f4-443b-9172-b0417331665f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fcec90-1a3b-48f5-827e-74c531870bd0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b09160c-bdea-448a-87bd-4e96785e3f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4a2330a-6eb0-421d-bc93-f19d91e59caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fb34d9-cc26-4b85-8180-1932a93484d7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f6fd51-0212-4370-af31-9f77f1d93aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19e6a596-fa6b-4c17-9bbe-c958e22d9732"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9a011d1a-54b0-4a60-8b51-3b4bd0b20fd3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "345503a9-4438-4277-991b-ea0f47216056",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caefddbd-021a-435c-a0eb-1bf3769aa7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9381d006-5d9b-4584-ab8d-58247db057be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9831f37c-0272-4704-ace5-43783305a1d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b69f61-10ef-4e7b-a169-566f4ab1cc2a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9e4e6654-0952-4127-9d09-604950ea6bf2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0e61beae-d178-4116-a84d-7aac6d350b88",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6e0b870-ad95-468b-832f-785c061a944e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "21ce3a8b-8f01-4d2f-bb77-6c05a0fecc0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "859e1ed2-5430-408a-9118-d9aca8d7107f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "130050ef-1842-4a00-832f-6d039c75936e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a43eeb3-79e7-4ac9-874e-4ce38c0c477a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a11b6e65-96f2-4963-8870-00f85fe622c3"
            }
          }
        ]
      },
      {
        "id": "153e90f3-2be5-4cea-973c-d54cad65b17f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "defc02cd-bcf0-4665-937b-8a2ae905934b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dea0f0e9-733e-474c-a378-9f84b59806f8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1693e6c0-0468-4c47-9000-c54641e4dca8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c77a53a-2375-4858-b1fd-fd840861b08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd48ee7-4100-48b6-9819-afa3475dd5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d266aeb1-58b8-4b6b-87ac-878cc5e5c9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e24236d-3efe-4c67-b9d3-b711209e8563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31332f87-40d1-4313-adb8-728c6bbc06d4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f7bdb1-6821-42c8-b196-4c4ee1db98aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0407dd03-8cea-47c8-8d7f-3d0ac71a9447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c576167-4ee4-4ea4-b318-ec5ba367d17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af569aa0-15d2-444d-a8e1-c5d0d3fdcb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a86b9a3-9493-4f0e-a07b-bc3dba4ea2d1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7b7bba-ea3b-44cd-a98d-281bc9ebed99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8562d40d-8bf8-465a-9ef6-4e7b0557d387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1fd2f3-b56a-41f7-8956-de88a1e6771d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "964ccb22-ee4a-49b0-88be-5a6487636f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a65abd8-3b8b-4688-a7e9-f42e363211aa",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe69e0f-896b-46ee-af39-598ba6a14124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ad9423-ad38-452c-98e3-fe700ce61567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41822bae-48a9-4397-9f2a-625f8531d94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3219e8b8-fc3e-4d33-87b6-1aab2a3e986a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e963012-6c6d-4da4-8b2f-a915315c32fd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5be61ee-bd88-43e4-87d4-a6a40163151f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2b4a9d-6fd6-4b84-918f-1fd7c7f52130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dead58ba-c01b-4611-83e5-7f543065fc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b5f1c30-f49d-433f-94d8-cced46240a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67518c77-a6dd-4b8d-9761-88de8f4b49b8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8253705e-8cb0-4e08-b5e9-b33a4d867286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4faf5e83-29b3-499d-860f-2fef726c29c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48df6a0-258d-4c9b-89d3-16282b77072e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da14d619-5298-4843-b98d-f291262bb8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c271a65-b8aa-4715-bdab-4848a13f41bd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2feff0b-b6b4-429a-82d0-0298ec980108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f95cdb2-ee52-467d-83c9-90f970860aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144c1605-133d-4a21-9734-8d2b18a8bc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6761824e-cdf9-4f3b-8f5f-c77a6a7658e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff410da2-5874-408f-befe-52b7b43a298f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07c13dc-06dd-4522-9037-d23f5dbe6dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c7bb36-3424-4ff5-99eb-a3eca3555127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8032a712-24e7-4e3f-9891-8a37d156e90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf712b6c-0322-4aa1-92b4-68eb7b4a8fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8986a17e-5120-4dba-bae9-f32700680f14",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3efaad-1c95-41ba-b647-84f988e08ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "811caa96-19ed-4690-8602-db5e7b2d42f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32800811-7a02-425a-a9d4-185e36ee3f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bb70f99-3c04-432f-bc88-74db64c25aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8c533b-afb1-4731-88df-d7d29957b925",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c6c28f-b19d-484a-8f9b-2f61ece69140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b34fe2-5fae-4c22-a64a-acb6c815c101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606d81b0-186c-44f1-94f9-ee235ce8f623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5bd06bf-be67-4ecd-84d6-55330e3c5d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b9103b-f8e2-4abf-b873-4f3333daad91",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef41273-30cf-451f-9e51-b95d99c693a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931b735a-edb9-4999-b180-829dda7b16b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad800906-4dcf-4550-a03b-ff9b234a6935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d4ab78d-2c08-42de-b197-67ac30e52aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe6be31-145e-492e-b7f5-7ef4aa771952",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11aa6019-f5f7-46ac-bcf7-fdbb8496d155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8486fe1c-fbba-4a5e-b105-6efcaf5f159f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61adf800-1068-4e2c-afab-b5dfd9c18f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc28a836-5ba0-40c4-9389-84cc1f3e7dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cff4e2c-0be7-4187-a43d-514782426c43",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d588919e-0aee-4bbc-a0e4-11e4caa5f7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076ce76d-2fe5-4c75-9d8b-0c008d8a6622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd2335a-6c68-4ba3-a953-880db885644f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1e344be-a298-4833-b5da-f3dbb1b29578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d783c0-ef6b-4538-88cc-9b42cbb52ca3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8b09b8-d15b-4d75-89a0-9ad664886eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aedfe41b-1296-4f50-a0dc-c5f0a592712b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a544fd8-2110-4e46-b79a-2f59d9e0f4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4db7188-dc05-485f-9399-df6ec90c18fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba0edc6-bbba-47b4-9094-cd643188809a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb56e2ef-0d76-4e51-a84c-c757ad8cbcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6090afbf-70f8-4639-8c03-bad9a18bdf91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa68789d-d048-45b8-b425-5614986eb9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d89658e0-1213-4dd1-841f-f7493c435c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4ec9d7-47c0-4d21-ab2b-f9c418f5f202",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fbeab2-d3af-47fb-a485-2e07b364900e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50cc17bf-3789-44d0-89d1-b2d2082fdfd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6116e34a-d6b5-4176-ad82-3b24e5d2ca2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "388f085a-0ff6-4291-89fd-e6721b1f6ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0aa0c3e-c2c4-4353-a990-f8ae7743f7a5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0f1214-90d6-4f3b-89ff-b63925dc8272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315a4a3c-7aab-4e0c-8542-14c726984f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf78a39-1feb-40c3-a06e-f0a716b96fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9016fea5-e729-498a-9c42-4a0be56b97bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad05a5e-73f7-441a-a0c4-59d9a0c876f6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de54cad9-1821-4272-9a4e-099971f26eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58280d9-94ce-473d-b85c-ee6e9a94c0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ab441f-4d70-48d4-b596-22abd44ac3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ce73a4-ef39-4e97-93d0-a13bab06a963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217a414d-b59a-414d-bb5e-68bd26542151",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67190cda-9b34-40f4-bc46-380284b25882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c5d83c-cb08-4575-967d-1a9179e334a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13710704-1386-48c9-afb9-e0e501eddfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "443462bf-f106-4292-a2e1-8e04b3d9176d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f88558-ba5b-4d46-98fc-2ec4fa53c266",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da773d1-3614-4a70-ac6c-4c02cd18aee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5344ae22-855b-4f8a-b9a2-1a2a4971ee1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3277b3c8-831f-4586-a1a8-c98849ce55e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3b0442-476c-475c-b9c8-5c114dc87d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5836e24-3ad3-40e0-b101-bfa38dfefbc7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6be87a-0a2c-4a00-9b48-06b9aa76c8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1bcd1e5-6b4e-49e5-a1cc-b77c5db189e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7348508f-7e0d-47b5-87a4-badfa829ead3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5f88e5-9976-4aec-89b6-02087a48d73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eaa1b76-19fb-4ccf-b9d5-6d09e01ce7e9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5528de-c18e-4c45-a7bc-2ab5cdaa33ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad8a074-7c70-46e3-9f37-6aa1459eb414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfda7155-5f72-4f4f-90f8-8eee01b3e4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46d232b7-2fb9-45a1-8914-78b349ae0567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0d7eeb-eead-40c9-bf5d-e90146ed5a26",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3843396-fe2d-430a-b862-b3df68f5fe6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e52e27-990a-4515-8abd-3d1a3feaa86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30675e0f-f6d2-4087-81fc-1dc1d978d704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd9af56-8990-4f94-9019-8a1707789efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b132a095-4361-4a17-8067-c2d57b67849d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e06c916-3332-472d-b0d7-75fddcbb6b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abb7ca8-dd17-4953-adfb-a24ba9b6bb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0002beb-3746-4fe0-85ad-199d76a0c01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5b44b4-290f-4a8d-842f-e532532b3192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50e789a-af99-46be-88a6-dc812a1f1880",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bc0011-aa62-41f2-b11d-34420522c8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f93c56-249a-40f8-99dc-db2807a06f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de1e717-3040-4094-894b-965b31392b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70872e52-1873-40da-8e6c-ca305fb86d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e212e7a-2f88-453d-9147-df0c6eb8c240",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc62f612-10fc-48c4-8c2c-98ab2aecceee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba27531d-3985-47dd-9ea4-454186551fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e17193-cb9d-4d98-9cb0-76dcc4ed327b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae730551-f8a2-453b-a3c2-9284cb0a0fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95242530-a18c-4e51-8e05-c4835555cf47",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a268ca08-aae7-4185-a24f-5b9e6164188c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53bee97-0baf-450e-9a75-eeadd0f0584f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d9556a-b3aa-4129-ad2e-62a350e77f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "911d9525-252b-46f8-9584-69d39bbb1314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41c1b54-b10b-4138-8944-d9d552de8829",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0c8486-54cc-45ab-86d6-7f1a9d5aaef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d208e1-9020-47d8-9d01-8003b0708ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6b261d-30e6-47fd-8cea-a7a14d55e33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "496159c1-6ec7-4989-9c9c-b6964fbfebcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba17bb77-7e2d-4b8a-b45f-d0cd8a9311a9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c08221-9033-4474-ba9a-0da67608b6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d649013-4b21-4127-bdb8-8016e462ceb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbdc354-bf00-4615-950d-0b8a61bf8a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "624ee7b1-d432-4ccb-b4ac-8d059cab2130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f047d7aa-8c87-44e1-a01d-d7af461e500c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ba6ea0-b8b7-4550-bb20-241213b3c741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d67700c-bfad-4e47-9a74-7932e1d8f8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1a0c61-0e3c-4db3-85e2-f126945506a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "614f2331-9d41-4ca5-a3c7-707132ccb1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237fcd02-118e-4131-910e-15af4d58824a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9a3a8b-ff27-4221-8bf6-68595ad8ff53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619d89a1-3c7f-420c-95b6-a97d33d40aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b46b44-c405-4a83-8bc9-da09b8d497fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f108d22b-82da-426c-a0bc-20e50b00c2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e6691a-03e8-40e4-b4c0-e603e4328700",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad64da62-c371-42e6-bd2a-76ea02da7c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e841b66-8861-4de4-a7c8-9219f0ed175b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a83e2a4-93fd-44df-ac74-2a60065a5544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0182a21-719b-490a-ad82-f85500d9b2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd61ee1-b636-432c-a833-2ef9ab611005",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e42539-d77e-44f6-85cd-e5f379dcef35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e724c44-a641-4bd5-85e2-df9ed66bf88c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b093fcf3-4ba1-48ea-b75c-21b767e7808d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b80cc093-eb26-40c6-94c8-37f07b64a570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e019c20a-c9e0-4d12-9a90-db254029371a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357c4d4d-80ed-49ac-96e5-a381cc086e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b710a9db-41a1-4701-991d-dd853690ff4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0f8b58-6ee6-4e03-bc00-c3b431375999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e02fd946-dcbb-4e8e-8f23-1d5db17f00fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82fbd06-aba1-47b6-bacd-6a50fc8cc503",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ebcc23-8599-4e15-8bf5-04664b8529ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537fde26-11ad-4623-b637-ef63c709f4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc6a3e0-ec1c-459c-aa3e-e92c6257f48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9ffb0d81-68bc-4469-ac21-f096d1c3a13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06b91ab-b9ae-4ee4-84f9-fb633c6a39b9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03aa3bb3-0779-4770-bcc2-20a8285b927c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d39960b-6a15-46d1-bc74-88b62c4b143e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d1701e-a9a2-49f7-a444-8c4b32bf2343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9518da-4ba4-4934-9348-022dcc5d44b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c038857d-032b-44f2-bb47-5e17bc900f96",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4684830-0a41-45b8-b179-87fb4cca4470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3bac878-d23d-46e5-bca3-14f891879094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1069a2b6-91bb-48e4-84e9-79ca0137b0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e020cfa0-fdca-4eda-9327-d7a6df21d66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26179d3b-5920-4e0a-b4ce-d273d2677d36",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50670140-7876-4270-9d62-e42edb1a2712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b6ffbc-4b2b-453d-90cf-f16b868a0ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4e0338-df44-4f9a-9e1f-f866851f83a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c8657d-53d1-4c2b-b34a-49b63d3fb29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215200ed-b82c-4a84-ae62-03719117ac8b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3660184e-acbc-4b96-8720-016f3a3ffdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bbadfe-21c9-475e-a18b-89bd2d66184e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113e5658-688f-43eb-90a2-30b442f0458c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "32e3f813-71f7-45bb-9ff8-1d1f3eda2dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9334ef87-0775-40d0-85fe-ccc53f3cb9c1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6074620-895f-4651-835d-8c4db078a0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67388653-0a0e-4eb7-a173-80a813e3f171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d385653e-74a3-4ad9-9b62-7e2fabb36cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e345cd5-4c9c-44c7-9d9f-2e3ab373b6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565ce1d3-d095-41ab-9f1b-cddc122aeee7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7271ca97-43f3-489e-9aca-e71c9d30bff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54f085b-b069-4d8c-b373-fddb0a71b8f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cf06fe-d62e-460a-b1be-f2a92dfc383d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d76c69b2-fa30-4d55-a499-393de24c04d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b04a58-8aca-4642-b2ef-13c12023a6ea",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db15f693-12db-4526-bc07-2d016f1ac9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86d5fae-e73f-4096-b181-7a5d4604ac3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a855574b-b32d-4729-9349-1b58f0e97084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d2086c79-2dc3-44c2-a863-4fb051450fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bc30d7-a204-448c-8cb0-aa790742c5eb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964c9db4-089a-4c8f-8931-ea321e40c111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05c41dc-4d14-4eaa-b0b0-77b6b2dd67d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32718c04-5b98-48df-8cac-41071d4ad558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc1fdf3-40e8-431a-acc9-38b4d88504d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1bd40c-fab9-4cf7-bf65-163b1f9b802b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01bdd3a-823d-4e16-a3f2-fd697d334ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b68e9f0-88d5-4a11-a319-655ec3d8cb7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e50ebd-8cfc-4cc5-82ea-e3a95427b94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "749ba9c0-83e8-444e-b410-7b6745b81b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7750aa-784e-41b5-8c3e-e6694706a4f8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449b36dd-6549-4fb7-b283-369b31f7daca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3024fc-56b8-46a5-be7d-d712f6cfe83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2511b730-f46d-40a6-aa90-56bcb7490654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "93a3e78c-1986-4f87-929f-8446653bb889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0155c1-7b21-4992-9eac-59d5e0934aff",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca0347b-7bd3-4ce0-83d3-cc3f03ab5589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90691ec4-9314-4bad-98b2-089f7b190fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4286779-ab69-449f-b8af-09030955d9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13899eb7-01d3-4753-924b-e00d51a9b5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66ee874-ae82-4655-9a77-81379b918632",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3dc5a9b-1f1a-4bd5-b33e-6e078aa855eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465e3c42-d85c-4a0f-b0d7-90a97e887744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab77585-2262-4ffb-88cf-9b5805302f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b79c629b-fc37-45c9-9218-1c2009a2c798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074f8e54-0f07-464c-a35a-790db12ba5ba",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e58843a-5275-45d8-bd33-2d825c739a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c24403-7eb5-44a0-ae06-42a03b52f582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee81e3c4-9cb2-4dfb-964e-075dde0f4e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2819058-5f77-45cf-a788-cbb25c8a4897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ec3c19-fce7-4310-83d4-0319b45d08d2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008501c9-719f-4496-9119-7baaf95d8a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45286e7c-aca0-40dd-90c3-fccee82e4939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2d6eca-4265-4529-a73f-a0296e45aa1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccae2a5e-6ca9-432c-992b-e118ac7a3214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b2564b-8557-4301-9097-987e775f181b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436b0fb5-b6b4-40b4-9e07-bdaa99c41bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473872ec-0645-4803-af57-c51cbc2fd71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03b750d-3eea-49dd-9cf9-7604f6ff6f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78dfb8e5-c3eb-4c51-ba63-0c1a7f1a6e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ea8b57-e881-41ac-946b-7b04c1025d80",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3885488f-384b-4701-8389-adb600916e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a6b96d-5f6a-4fe1-b58c-0032a306be81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea803448-486f-4c93-ab7b-a8600aa4c10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f95529c0-92de-422f-aee3-339804424b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46129daa-52c6-495b-87ed-1c7b29845938",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98969041-4581-41c0-8ff6-7a30e7339435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18193aa1-6eb8-4f33-812f-82b9801e246a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be41c908-03fe-43f7-8d72-d376221a18e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd5d974-f91d-4211-91e2-fb5531c14da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee19f61-2db3-4395-b5bd-2f2682273e72",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6ab77b-8fa0-495f-bff8-4d6a3f872b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce399ac4-abc3-4d73-93dd-c6c329a34841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5a5f40-b6f4-4550-a3a7-192a9c2e145f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e86c6b6-363d-4043-ae32-a16c451c080f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1321a6a-6e0f-4882-800b-053a8b2fd53b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea9d2fc-c48a-4b21-9398-780532a0ff0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3fa594-4ab8-495b-b9c7-df69f8f378d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1037dd-998d-457d-8854-fd1664baf541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d06c4a-a372-4d53-a4d2-2a705458af31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6354eb6-5e8b-44dc-97d8-79dd02425e28",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9967b5d5-0441-4134-a0be-957e1aed17d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75321fbd-e1a3-4776-8efa-54b80d9f9c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de792032-7d7f-4ba4-9151-960a1060fb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c94dc19-469b-4bb1-9ab0-e58147b393ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65af02b-2fde-4162-bb60-df419ad67a3b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c0cd24-6df8-4655-81c1-8ed9ac759380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a852a3-47fe-4268-8ca1-1f56f5fc7a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7193b57e-71d8-4e9a-9ab3-b0bd24b5a2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa9f1ab-5aad-42da-806f-9611f1c8f4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf918223-52f7-4c7f-b187-b78b76adb785",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67929690-c6ab-4a7e-a0f8-b4c37ee90ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781f44ca-57ee-413a-8567-4a6d0f351077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85cdc39-f7a2-4f61-a912-29159df07769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "931cc69a-564a-4360-b40b-a167dfea39bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9d2c8a-07f9-430f-9e8d-fe7cb40d7e86",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c782a9-6471-4b6e-8917-3672e9ac890a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2033a42f-b7dc-4712-9717-e041a4534848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6176c840-01f5-45b5-9339-61ccc7f1ed08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "123e2339-844b-46e9-b167-99030a4e23f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75491685-62ff-4774-b7ad-7c5bafb58e73",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee8d56e-834d-47ab-a349-3694a3cd7951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2813dac7-6c6a-43c0-b3d2-f51b7430614a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bec5fe-281a-4755-851b-a47f29bc94d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "88496509-2a63-40ff-a171-dd7a31396767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5483faff-845c-413f-af61-d9a42a3fdfdf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d9da59-5c1b-4b54-88ff-faa9ce241665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b68bb6-10eb-4792-bf42-7be36eb56f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d0a197-94c4-447f-a554-406662ad2b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a8f43f-9adf-44b2-94c3-ba1d4577e2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ca6a74-b0a1-4368-ae1c-9af57bd018d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89bb286-ca21-4358-a620-46fb23827747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183db1d4-51a8-443c-b552-71bd902b1ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25171a7-8bd0-40f4-8fe9-25a3e07cb759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e48dc15-843b-4a04-809f-137edb432e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e59e71-eee0-4c99-8b89-663a87d17aa7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6caf8a-88b6-4a19-b453-5bb4107ab375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8d6e4b-3d70-4101-824b-bdd0f68f99da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9afd736-afa3-4529-9240-d54a9fb81f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "946a8db5-423c-4678-ad19-1c09218d2682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a5c911-e8cd-4858-ae95-3a44e2bcd47c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8d7b94-7f0b-4b91-a0ca-ea0c7d9be2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3694be31-d95e-4147-ab31-45c250e770f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1573e932-c098-4226-9f13-e38e56238c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8d6828-cdd3-40f6-b540-d8416afd6d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf2f030-dc19-4ea7-abe4-646235085d0b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e61b62-6af2-4ccc-a7f5-f78e53cf762f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef95245d-1679-4492-85aa-c746f312ae4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c417851-bf3c-4ec7-a4ca-0f1d71982065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f5c0bf-5ab7-4c5b-9065-9ca5c7dae2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e7e5dc-8138-4c52-bfc9-8d1f49a8ecb8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2eb3a4-1aee-46a0-bea3-6205954b0c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11462a12-3316-4bc1-8cfd-3487f54a7ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78e379b-b718-47fd-8a03-f56592a6b10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bab0444a-8eda-488e-bade-078acc829f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca259d7-6752-4a67-8d42-424c5e57428e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31f648e-509f-407f-bb2b-8dc4ab820393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6c004c-55df-4c62-8642-61a0f8310b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfe59c2-3daa-4c6a-9f86-62e181c37827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a71c9b3-dcb8-4657-ac1b-bb51820d4871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c83576e-51e9-45a1-a28d-179a873e378b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8d3404-1095-4032-81e0-8d573cf9e10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06735cf4-eab3-4ea3-97ce-5fd6d150197d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b47ea8-a3b4-47c9-a73c-4c1aed12535e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a52fc03b-96f4-42bf-8cd3-7f8a64f68c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ad1a3f-9343-4f5d-af2b-5025879cd57f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a312dfd-e67e-4e22-9a70-6cb84d202b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda6d4b7-fd3b-4c07-9ef5-2877cd111881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d107f63e-e244-4353-a027-a7ed5faca67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "223df1d6-926b-4f98-926f-956c3c4748d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3002e540-8b4c-42cd-ad8c-f302ae3bf21d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3fcc1e-79dd-4a0b-b06e-fa2c210bdfe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1d1288-0079-4eb2-963f-eb5b89588d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53969ab8-d7c1-4076-aef9-e6138ee3e4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ea506e-fa6e-46dd-a3d7-08e0cd0a6bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a91bcf1-bf48-41b6-b3c0-4e9a481bcbfe",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0d3461-88d1-492a-aab9-9060e07cb4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f71017-d63f-42df-a76f-7ad3f95ce023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26299934-663b-41f7-bcca-da1645f4fd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37208905-3a9d-4231-9955-19b460d904c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f2717f-d3b9-4381-908d-5ccc6c39aa8e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f22f6c-baaf-43bd-9fc0-415976f73c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb3e2930-cce7-432b-a20d-d3be969d2d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a126f6e-bee3-45ba-840d-91b6447d7d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e17ffd57-86af-4090-8c65-9562ccb5656e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a3add1-4e46-4d2e-86fb-6edae1ee92d0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e929d39-2067-4feb-96eb-91e400951b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9f1636-53d6-47c6-994c-79c56a985462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990ae7e6-5579-49f4-8910-53f1b3cd6368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02441803-ea50-4416-ba52-5f39a524a774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4600a1ae-2857-4f30-8419-9f8c08824d7f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c58a558-62e4-4029-859b-281466418f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833061ab-cb35-4fa8-ad7a-e21699c36485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa19195-666f-4d3e-9208-19b5e05eddd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2cad61-32f4-46c9-9fef-a5767841a79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e989356-2a20-43fa-b7fe-6f48bc1220e0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9a2259-88b3-43fb-b7a5-1d63d5290a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d680b74a-2fba-4a39-a78c-3a139924cc9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff50b7f1-96c1-4377-baba-71dd35423764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c392b34-4a50-42cc-9476-4e9e539fd2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9271f3db-e698-463f-9c48-cb83a76d4a08",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef8e8ba-a6ba-43cb-b146-5975333b4862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d456214-743f-4ecd-903e-76ab43946cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a7d30c-b502-4768-a879-4a7d97f60675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "60e11eac-c542-4ad4-936c-7dd31fa843cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde1e4d5-e39c-4f3c-836c-467571ad0268",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e3fcae-ad1a-4146-aeeb-2b61c0b50eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5df256-83b9-48a9-b873-e14eb210efa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5baa02-ab70-4824-a1a3-7d3be50a47e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "744c5fcf-3b54-420d-adda-43f7582e60d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1849059-ab97-4af9-a92b-da99f4b6ba69",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eedc8a8-2669-4e12-9b72-096feebcd3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e432e519-bf84-4308-9e89-13bf5e980575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc8b25a-be0a-4274-8a2d-518690c2d1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "271e0c76-4d3a-48ef-b6e5-0f2c07a3f16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902e5107-1c5d-4b5c-b7bd-ec705bcde2f7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba8120e-4d0c-4411-bbf8-ecba143cf2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59352354-b4a2-4395-ae0f-c1e3fa545e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a18664b-92a9-44ea-ad1a-ff92d40d503e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50424657-94d6-4a89-80da-51be31bcbfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74002d97-c2c3-4bfe-8db9-795756180111",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e564b9e-65dd-4b88-b83d-b72f28316a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a5da9d-b7a5-48c5-b62c-497a5c7c1ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b3884f-9fc1-40dd-ad17-fa770a3586cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "706b5a62-372c-4e21-a7ed-2c8ae2c5fb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5ff4e0-9c40-46ad-8cfa-2de34e566ef6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f61ceb6-d8e3-48a8-b722-2437de5cccaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b5ea5d-3545-49b0-b1c2-5123f3c2ae42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657d7562-67f0-4a3c-af0c-274bd657c116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3bd673b-f9d1-4e43-a13b-14d6ff1f3da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c53211-5d5c-4777-9fd6-82fe8af997c0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fbe359-3525-4a65-86b6-d02187557061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ec6ce6-f7b1-4264-86e2-d8f1fd14f434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a10aa3-c1ab-4a49-9540-964ad4ad8b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a227db1-069d-47e5-8413-648d42785c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fb38d0-91d1-4eeb-86b1-05626900dd40",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52382a5-ca77-4e2e-86d9-5cfccf5f8c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ce8d04-9215-4773-b119-1fb367a44295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14684d74-cbd3-4533-91f2-df3268a698ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4d3ebb5-acd6-4ba4-9b94-256fb9929549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9790a792-1181-4aba-900c-4952339bfe54",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98da114-4b2d-4331-b1b2-df59a06f2d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44332508-5ccf-45b0-aa45-5bdeeee55d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654db3f9-0b82-4af9-8266-1f67f0fa0a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c921c472-bd9d-4e02-a113-86b065482bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f840f9c2-89e8-4fdc-bc02-b24bf080eabb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b084adf-7b0b-4701-9336-bb086c368bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52bb9b2-3eeb-4810-a783-a9d32c3cbf18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ae52d3-490a-42c0-8a6f-cde11e4ffa8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d733e303-8e28-4c0f-9bd3-5210eefd372a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e2ca05-1fe3-4241-a79f-7e5d2ecc1f2a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16138e94-fadb-4b29-8033-13f8eea55333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ca2f39-7531-4431-94e1-637a3c0503fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719ae873-0bdb-4bc3-bf8c-7a866eb9cbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd9b5a2-f2fc-4f65-82a6-9a48c8d33890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6168a1-37fe-4617-b434-6f1003592c4e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52f2479-67a1-4581-a036-8b474a988758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1e7e44-7887-418b-9a1c-871b89aedc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3795fc6b-b695-4127-90ab-7f9a4dca6074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5158277-9371-44cc-bf03-f9ec26743876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46808cb-94a0-4fd6-837a-dbd07344138b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3dfed2-2931-4980-b88a-eaf7a673ba57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b329d6-d1f3-467e-8738-461b838157d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f746428-8d11-4713-aac5-f1ff6b4cba5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5767d6cb-3aa0-4852-847d-4c8cba00289e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be138bd-e618-409b-b5b5-149c95c7d74e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc14b7e3-418b-4a80-874c-32e457a0d7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4866f62b-8495-4f2c-acdd-0dd7e7d97422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5558257f-f164-4b99-a346-faf7afe31697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bcd43eb-6ed2-4687-915b-b5338ca5434e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89147c1a-ab85-424b-94aa-f5c924cab5ef",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d294acb1-840f-4f3b-83dc-854ab0ccd5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4093f6-5ce6-4a65-9af4-f9890471dedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2e5eb1-5ab8-4658-a746-a4729602697f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "991a0f1f-39a8-4daf-a701-c24c622825b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cf16e0-ebb2-41f0-96bd-1fc578810077",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056e64b6-db6f-4ed3-9dc9-03f1748693c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac5e178-d962-4e81-ace6-dcd16abcbcdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b3dc1a-e3cf-4d39-9f6d-d90446ce2848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f89c2d-8031-4468-b734-4ee4390e6113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbad24e-3410-4e60-8a1b-673e3c0190c2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1332b82-b73e-429f-80f1-91a2fd36c24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba2420e-f197-4b04-9f47-c3e53aeb0f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8030a08b-5ab5-49fa-a348-1f8e9bada9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f379fdf-12be-4fea-b61f-139e18e10f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dca6ae-71eb-41fc-8669-274ab8dccfb2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3331067-c2b1-4d4d-bb2e-016e30a2e2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4165ab50-942a-4822-ba0a-199f83c54d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc41ac4b-dd9c-4fc0-a9cf-66fb8b244964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5257cd7-2c2b-4de9-88db-2c7898765e17"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ddc69dc0-a1bf-4ddc-8a4a-ad5a3f7d2f15",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31db6b68-bf6f-450b-b242-6887e18ac06e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69e9186-bdf4-4e02-aaea-4c7f7222f0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1d4ace3-fdb2-4ac3-9429-3d017f32bc28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8e0733-9ba3-450a-a985-8ed203463ce3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c33800ac-9d0e-4d20-b8c8-bb1a9504e98e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59dbf1a5-6c5b-4882-adea-6b5441511276",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcdef2e2-78f8-4a34-b314-10865d1cce19"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7aebc0f-c395-49bb-9765-50a2ad6ea5ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c1e7131-d8ac-43c7-92e9-062ddfd1af21"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c080ea84-844b-4efe-9742-c8b8570a2494",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1296b676-88dc-4903-86b3-a79741dafc50"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "372d72bc-8474-4a50-806d-40ad50ec9adc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d07a135f-105e-4ce4-bf70-a313afd54032"
                }
              }
            ]
          },
          {
            "id": "eb3e9a44-67d0-4ae2-9bda-1e5f324eb16a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9e7f4dbe-a71e-4038-9496-1442bb652024",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9c34d55a-2525-4601-99e1-9e14cba2afd8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f355e268-c6a3-4c2b-91c0-0867f1facb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0eb8d620-3699-42eb-a258-39960fdb64c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c90c8ad-dbfc-43f5-af1e-e050888694a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848b85cc-aa0a-487c-b162-da5992690115"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "158fcd31-5c36-4525-a45b-35249ab2cf5a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "745cb909-384e-4e8a-9742-130b2946b564",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28073d1a-6289-4017-8a35-1ace348d29c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35db8f28-ae4f-4b6c-bae2-e476bd8763b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f15ee011-f7ac-4da7-9ab5-e8de95e3f8dd"
                    }
                  }
                ]
              },
              {
                "id": "9334f5db-274f-43a2-ade5-24b8d3b9ffb3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98e6feff-8549-4e0e-b351-41ed64ec4461",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bd506a2-464c-4e3f-9d2e-ff02ae856bb9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29e16f24-d410-4a9b-9da5-afb9d6f30235",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5818c0c4-58d6-4c17-bb26-e3849eda6657"
                    }
                  }
                ]
              },
              {
                "id": "dafa8455-c515-41df-be68-480560374b31",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80af6c73-18b9-4537-84a2-5bc2162a5fd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37f8e22c-490f-44cd-8b73-e6f81fb18849"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70331994-d7ff-4d6a-bcfd-3764ce0d26be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95a4d9d7-c20d-46f7-8398-7bf4a4e15710"
                    }
                  }
                ]
              },
              {
                "id": "3aa19707-ff56-4333-9c8f-f1768019b3d7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "338e4d2a-ac3d-4e26-9339-60459c3a2f71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b64d73d7-cbfe-4383-acdc-2dd9439afcf4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "710c235c-8254-4343-8fca-cbc2394bbf7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "688a14b7-f699-4170-879b-93c474298d7f"
                    }
                  }
                ]
              },
              {
                "id": "8ed2b814-64a4-4c69-8888-983b8987a650",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8e88f8f-2c85-4a8d-a69c-4422939ed38b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85ceb234-476b-42ba-9592-9795956ea7ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fad36930-903e-404e-a2b2-f131c9bcc5bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "eddde0bf-63f7-4a02-bddf-8b55e6a8a39e"
                    }
                  }
                ]
              },
              {
                "id": "e0b58ed4-5daf-4b86-b661-e1169f6d3f7b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f7d82dc-975f-45d0-96d6-d14c38e083f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89b22232-b144-40f8-8142-430d7eb21cc3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "062f8e5b-c264-4931-9301-e42db1abd8e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ef289d66-1acb-4407-b51a-b373e8a821a4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80cff682-de43-45ac-9a3e-1daf2f01bc5a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a5067857-6212-4a04-9c30-b4bde338aa5c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9f3d0431-3871-4c5b-ab25-3757db4fbe17",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e8890c9-21e4-472d-848d-e17feacd7671"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ddb8be5-af9e-4641-ae3a-e9052c7378c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2e25f0c2-fdaf-41f1-a539-e85c427473a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "829050cb-4fcd-4bbd-b4d8-88bbd96dd6ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d328419-48da-4ade-a396-ec4a5ae4c954"
            }
          }
        ]
      },
      {
        "id": "05dc2942-f52a-4073-ae84-ba152e87ac94",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "68a2766a-b8f8-4524-9d14-66e9eb8fbed6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52f9c6c0-7685-4b95-8f21-534a036dfcfa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a61be137-ebcd-4cbd-a798-012dcc5a92a5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb9b771-2f3f-484e-b024-d13ffb99aa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99fa977c-5a2a-4ec4-86be-1052d7fd0f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a752dc63-4f56-459e-9808-a3aefd3c2c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f58e1f4a-7595-405f-8038-8eb99bb80a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff8184e-c067-4245-a269-b1bda3fae24d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a97abf-8766-46ce-9102-29016b1a98ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f674f641-e4e5-4ae1-9147-dd8687a2d491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4093e1-407b-4dfa-aad7-85e4a7c986a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee608c4-d19d-4c7c-bf49-64696e12af88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682e6ea2-8a1d-4032-9fc7-c88676d80d7b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13bc1f6-b5cf-4816-bb4b-118dcabecfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e416a3f-a08e-4fe2-a58d-57fbd055118c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2fcd73-799b-4dc2-978e-e0033b94aaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "992079df-8862-461c-ad4f-99ddba0a242c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ad75b6-98ff-4eb5-9e4d-0ed1a4942656",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4869ab86-139f-4f74-93fd-9a39b76611eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2e8976-4d3a-4764-b9ad-ca848fe6b3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6830f95-2939-4394-9f6a-e9f961bb97bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43be5d99-c49f-4168-a926-1ad536d1d95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cec849f-a0ad-4656-89f4-4cae13a2cc35",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1218a13b-14fa-4b54-ad2b-bebc818121b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f28b23-2d49-4475-8d73-9f5e65cd57e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ea2905-7f22-4e65-8dc5-f23e0b7b17ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "844c0eb6-532c-479d-92f3-6fafac8c43a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31078339-6440-4993-81c0-cb7c66ca7510",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29341ba9-2f37-456d-a960-b0e9271f30a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5811f4d4-82ad-4533-8a29-5f474c5cdaad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1108b1-d6f6-4add-91c3-eb798289d219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "787a8135-0732-40f3-992b-e140312404bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9f01fc-c119-4e4b-982c-642cc7f5b8ad",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4accdc76-a138-444d-bf4c-e6a5eea103ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab699e9-876d-4058-a064-773276269b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12e87d0-6381-44f0-b43b-1409c1ca7ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2201a26c-1751-4146-8479-7aedc125d275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec2f80d-3481-48ca-80fc-5d8581eba197",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6dfa88-9a6e-4eb6-a8dd-25a9cfc6be1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a29385b-2af1-4887-be00-c7e16a1497ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01d397f-4dc2-4420-bf10-34e7be612e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "319698ea-dd18-4e06-9952-f34f989d9e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ac4e0a-7e3b-43c4-ac87-c79de31973e8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12c0782-8a56-4294-995a-643099d7e510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67448a3-0154-4634-9922-037612b5e14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c725211e-ad2f-4068-9512-12be90c6c59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c379b251-d325-46ab-bfeb-d4066fd91b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bd103c-cf88-4ab5-a976-017752090ede",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb8d317-8e54-4dc2-a7b6-771a04a85c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e77c50-7305-4fd7-bf89-669970b34fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191e674b-d973-4640-9245-8378ba0847ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b6c326-556c-419c-a851-41d43f6bbabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a70dc00-8ff6-47ee-a3f5-083d5b9c35ee",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280ba4cb-3ae8-4e25-a1fa-00c5ef2409b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a711116d-9463-4300-999e-d0e2ddd171a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413fe966-398e-4bd7-aec7-5b4d9e53366a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ecd06d-91ef-499c-b9bd-0888b5380724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1675391f-c9c5-411c-bc2b-d0859b48899f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539e60a8-44df-412c-b175-453d519c5d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d017470-9a74-4f86-9dfb-a5fee6d19247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4ce133-e371-497d-a128-cecf48f164c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0faf496e-a525-44ac-ae82-9805eb1e14b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ae8090-4814-47ab-aace-4f70efcf6051",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47591fe7-89e1-446a-a968-a8c42a58ad30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466b9d20-a82e-4b27-ab91-91671392d865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f6a517-50a5-4c17-b41d-554a27aa55e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "07e1e043-b0e1-4914-8907-fd806bc18a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3436fc0c-26a9-4414-ad79-a435d308acd0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7fc526-7bbe-4b22-9db1-89f037e70ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80523ef-0701-4615-b1fa-ffb0ee7ffc0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922fd40a-df9c-463f-82b8-1ec1809c24f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d28db0c-93db-44bf-aeb2-99863be7c697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564d5b25-cc9a-4279-b53c-7d3637247abb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92371a32-e8a5-4fb8-a386-de9e2d5af445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3c3f30-1094-4e77-b00e-8b99abe57a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f189a3-3a86-40b0-be3e-a15bf05d5196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb35634-954a-429b-8a3a-2687650ace28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d0860c-f28f-4add-9c45-600041dbe018",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b91f27-01d3-4d44-8f4b-ed1556a8a616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1452f1cb-de72-4cf6-9788-8f3e39c79ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f267f744-5c31-4944-8ca2-d313ecc653e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb9f280-4c47-4446-a86a-1c834a64f628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bdd1c8-c52f-4a82-8198-de3ee3a40143",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0917a9-44cd-4015-9549-44e6ec1b7375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4dc45b-01bc-45a8-9172-d61cd719ea26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4486e22b-2601-4c75-b59f-ed568279201c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f519d5bd-4391-42c8-8fd1-64a151fafc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b202484-63eb-466f-896f-ccc8b4d1b7eb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98813b0-aed7-401f-93d9-5901ccf06b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac44f66-944e-4755-b328-032b58759981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18138fcd-e53b-4d85-8c2f-489fcf3720da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc67b88-3447-4e21-a979-d2df70902b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f7cb72-fc2b-48e7-948d-71568cd53f03",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994710b3-372e-4801-bc6c-4d17a2e6cfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e370dc-8cf7-48c0-b217-3e4e060936d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20dfb41c-35a1-4c3f-8d08-c0b96004dbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1be9aa9-0235-41d1-8d28-7cb7f2452c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f281a345-d959-4b62-8c05-fc23045ea548",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5810e87-8ca1-41ea-b333-5713990f4490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5917e5f9-a61c-4452-b1b1-b41d7232af80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd3f36a-aefc-4426-9e60-416dc1fe7cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d638f27f-0c2e-4cd3-a943-f93d9ea0f16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b328dbd-3d6e-48f4-9e65-1bb927e719bb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef5d127-56a2-44f2-a379-33298a9782f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4095a92-029b-4644-a713-93ccdee797ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad9b735-d0ff-470b-ae16-c7897d639ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57173dfc-0a09-4c59-810a-ef7e8a1b421d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ae3b8f-f195-4b38-a2af-ff4d404b5cdb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96dfdbcc-a1c6-4bc9-adcf-f919fc7a19b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88369e2-b1b1-4a9e-8d04-b62b3c975d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3712fe45-5708-4457-b66c-30a7037f54ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e234a13-c1e6-43f0-8fd6-8ac259046d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a710a3c-fb01-4815-811b-4f613693d7bc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471354aa-0080-4740-9a2f-94feeae23276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0879c655-5ab1-4752-8b64-7bb8a07d0473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b0f5b0-2869-49c9-b239-24c4de4b8975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40104914-3065-48dd-9788-b7dfaccf8586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e40ad79-9776-4a63-a83b-496a50077ed1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fd35e6-d7d9-4520-b57e-6647ae272539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b7bf8b-0f1c-4f32-904a-c8d39dfb47a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a401650-6852-4554-9183-3847e6a90daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1955a4d8-cbd0-4710-b8de-3c8006849025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98698c2-aceb-4933-a087-65a0b5e0260f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff66853-01be-438f-a08c-cc805e9d889b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c9c3ec-5de3-4965-9aef-c312544ef154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdba12a-459f-4b21-9a93-3476d44a1819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38f39f65-04f4-4c49-9a0f-bc0cae272954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18578a11-9cd9-41ef-904a-337f5152bb56",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0f7417-d9d6-4806-9f32-17d57a1fcf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b99ca6-d798-4634-9513-9038d7cffa79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d933d6-d022-4499-b82f-775a0dbb7862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "801b5f25-cb86-4add-8ca9-b49dd6dae887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9a2822-7404-4cec-a74a-f9687053feaf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e16797-29cd-4a0c-80f0-085caaf36cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0dde06-a0a3-4d62-9d44-1e43d92ea9b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ec05e0-866e-4c73-bd96-41d6a7efb823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e48336c9-87bf-441c-9b62-bdb414adcc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f607fe0b-c4f6-44cf-bbc0-37180795f7e6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b11773c-9b7b-45ec-b943-b970a981a945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a6884a-3cb1-408f-9629-8433749c887b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c185d29-38ba-4448-b4d7-4cd3596dc274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef0c90c-98ad-4c75-8535-f145be917937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f9407b-16ba-4036-9295-11907ed0a048",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341adb4c-6298-469a-af1f-4b02fa0f97c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21143843-a144-4960-9926-9b92f822747a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7e5d5c-2f69-4328-8d66-0c38677a3545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88c3797c-02b6-4b4b-8541-bf0691af6642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b69d23-c241-4d91-b727-b7806a367bd6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073b0c4a-ee3f-42af-ab03-f433c7a59834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df97ce76-8cc1-452e-82fe-b02814d141e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405d0633-5a5c-4341-81b8-d2f0ec200b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e46b724e-a05f-41a7-9f96-3fc86924f623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8240c1-2764-4464-b754-e70e16012b6e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df0e91a-c644-434e-8120-4f8730fa2cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d58be6-96f5-4c0c-8400-c1557ca372e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c77054-0ef9-4fb4-9e93-12a87e464997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b2643b-e1ce-405f-9b83-5608acb1cb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7216b4-1b7d-4310-b72c-c82d09213d45",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f53dea-9e7a-4b0a-84dd-eabad96aade0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d08101-206d-4cbc-b515-3a5c2616ffb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdd9b15-cbf9-413c-92fb-d0811fa80561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "124860d6-f3d0-4349-834a-712990bb9c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e088075-c2a4-48f8-a421-e8f43ae38f84",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6cacf0-e190-4e2a-b01d-b87c69927e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5833e1da-7e97-4b92-99dd-1cb20bd6546a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ea999b-6787-4106-ab01-1131a250b387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27fe90c1-b143-4d58-9ba6-1e1d17e81880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550d1e11-741d-44a7-83ac-2bf2b36fe3b8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816f5474-aa62-419c-8e78-36e7d9d1c3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347c1505-b081-4567-8a5b-01d937f6f3a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831ba2ab-fd1b-48e3-8382-067e41c64143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e65517df-fdc3-4f94-b06e-c43b191e9eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6473176c-163e-4b94-8146-94d3727de41f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e481c2d0-47b5-4b77-a105-f6c27aaeef5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cec713-1820-4bd9-b7d1-2005ef99e544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c63190-bf80-4a25-9003-4c546fb4ba43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ebcd5d0-5fef-4693-9f80-705590acebed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db37068a-5d7f-4fbc-aa18-386a002056c5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de03a783-1736-4702-9dc4-22516fef668b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90af7dfd-c5f7-4937-b439-fe8e5ab64078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4101aff9-df1e-46d3-80b8-fc2f917f833f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a09b7d55-8f53-4af1-88f8-ed795cd3d4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1105d004-e322-4201-a353-4e64db5a0ade",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbb7ead-f475-42bb-848f-37e17ad49115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0ff612-d2f8-4005-b04c-d92f9aaa19ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3af734-58d5-4a82-9205-73d03a6c5b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c496d395-db6c-4471-8d24-5c976b398381"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1fb1218b-2424-4c99-8357-10a181bb70bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15402798-676c-4672-9579-3007422db9e0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576d5166-0250-4af5-bada-9a8b8e53233c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "071a57a9-8aee-4dc2-95fc-a128e0150740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1618bb1-ccd4-4b0e-9334-cfa8de5ffa69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2af32ec1-17b8-4c9d-9cd5-40dfd79142ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45d60ab0-16be-4b1c-83f0-4a408daaac2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "442bdf9e-ae63-49e7-aba2-e74ee612662d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "343b9fa5-613a-47e1-92ef-7bd64ab3f66b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4593ef21-ec6f-4ab1-af67-bab3a0963e33"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a25dcf4-6966-4dfc-be99-6366393e730b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7c4592a7-15e9-4b32-af87-f3335e3c1958"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b87da6ac-2f17-41ef-abce-d23bce2f40bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20f34263-d5d5-4f53-8995-a768e28c7772"
            }
          }
        ]
      },
      {
        "id": "52016948-42ac-40aa-b89e-1da80773e84a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1283b676-786d-48c7-b917-b8301f93b9dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7604d55-199c-4bdb-968e-663a7d49b1b8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5f2f395d-ce8c-4feb-8b32-2f86cca5d5a1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a62ff1-fa11-4d31-af6c-c4214f70b539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c63cca-e831-4dec-bf2b-147c115e70f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09e06e7-a145-4cd4-9e12-c12411247cfe",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0022d596-b8c4-4fda-b843-d5c71a72b9a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2b7df7-1ced-4d74-96eb-75efd45c704b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be8c08d-3cd0-4113-ae18-22124d86bd3d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666b28cd-589c-4569-8624-73c497969d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f7041b-3f11-4c7c-9777-c7883a088678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f450f9-fb66-4308-8bfa-6d5dae087dd5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc90418c-0064-4db8-89ae-723c12bd8a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c76ebb4-4854-41ff-b832-3fa6f1190a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2649baf9-11ca-4c3b-a619-6f2d9b391882",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8180fc3e-3e92-4323-b30e-cddc2e96acc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7993f742-61c3-4491-96b3-1f9f3d4672cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba340dd-9139-48c0-a433-ae4c8597e3dd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0d7c7c-2bc5-41dd-93a3-aca5465e1ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96aa86e5-d4bc-412c-b183-41eb38ee0cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1e1036-80b0-4495-b4f4-a0a59e7b0336",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076fb0b3-0680-4769-992b-a4440f73c08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "befe65da-b85d-49d6-8ff6-375d37c62c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c15563-0ac1-4ad4-ad29-b27ef5624294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765444a3-696b-45c1-83f5-528931df8460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942daf0e-f7ba-4c04-9ea0-e5ae29cf8d0f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b16ffa0-b08e-4161-b81b-989386256813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e4e5e5d-b964-4231-b414-1b90ce9b1415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7629466-04d2-4b8b-aa01-22aadbfdf15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22158cd-e538-426f-8b89-0fe678843920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02767be-3f5e-476a-bc88-0286c958416c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978b3c9d-5275-40c6-b494-f83c0bc0e596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73e85851-8a94-4fd5-8670-af906aef8b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543394a0-954b-48bf-bcc4-f662569ae0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b83251-1f2a-4b29-b3f0-5f77cfe8b992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da198dae-6fa8-4375-86df-01c523544a8a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a91ef58-2d8d-4e3e-9d8f-7031f6766f6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54c9d142-f890-4e9b-8e4e-7078403a9e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb27531-2c67-4565-a2fb-74cf93b60e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67af2ee5-fbfd-48ab-bd02-49142b944e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ba7137-b4d1-4d6e-bd13-5dd9be2a9aee",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4789ae03-bf1c-4762-95dd-11f8d699c5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa862bdc-aeae-4c38-bea5-358338497b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9d7192-51d1-42c5-a197-e367acd78865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381ef08b-7459-4ac1-8cc9-1b161876eca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b22ec3-52a6-41aa-b54a-2de5f2223258",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49da5859-5936-40a0-9fb3-6b84eb5ce8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb4d786-55a8-4209-9d42-b6bebd63de4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fbcadb-e671-4b23-b07c-7763cc7a9aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738c1874-aaa4-4ed2-afea-2bb473576a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fcd148-e29b-4207-b662-3406d77a4663",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82da39d-4c03-4a51-a820-e7e0c1ed3757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0663a0be-5b50-4890-8192-1de888355870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2bbb52-6a77-446f-82d9-22e356c7ca76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d83590e-f8b2-4089-be38-313e3d79187f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c5cbf1-a0c8-4654-aaa7-f54b72288e6a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3425219e-1fef-499d-a32d-e21598e9f31e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca419145-7fe4-4cc7-bf60-932047bb7ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315b98fc-5503-4fae-afd9-71908ed528de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be7cddd-3d10-4241-93b4-21f33d170a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879166c0-e768-417a-a5ba-9646bf6883d0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1d4855-af3c-40ab-97ba-531c8d4b54a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab34940-ebcf-47bd-ad35-b0b00b1128ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fe489c-5097-4171-a376-1a6c23f8fb95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c1b3cc-3b63-442d-ac08-8785286381e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59a76fd-e384-4450-96a1-9c820008a5a5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccc0cda-fc21-4d11-b8a1-d42498369f80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3efb0805-3f77-47b3-83c1-3f30b9ebf01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d039470a-c702-4569-96d4-4b5718c40c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ad49dc-cbd8-462e-b828-4849d497af03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c3014b-7ed4-4817-b2bb-e9ed8326c283",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b79a75b-fecd-496d-9551-afbae820ee07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233160b5-6e83-4900-b90f-40a37d362e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56402118-af66-4e9f-8d8f-af3c384946d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0edfe461-d60b-43da-b6ed-f68467c40cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f6c4d0-15ad-49c3-8a0b-29dad9c2fd84",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df273cc-87ef-40db-927f-ccd706ceab08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8865019-5bf4-4f28-82db-21ec6a90e1fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4750c2d-22a8-40da-b63f-0f816879d78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2e00df-60b7-4c40-8f7e-89dbfd571cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77afae9f-2e32-48a4-857a-1f0e4007567e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9944dc64-76a5-4f9a-92a5-e3d4b17f8801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d828a500-d02e-4a04-9184-eef2e7f29898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae0416d-6626-4a27-8cd1-068531500ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4db2f4-35fa-42d9-a1ed-584dbe314ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c6fc94-9785-423c-9a15-a7b15ace8d96",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5345a99d-b208-4505-98d9-6d50b050c700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b893bdf-7c80-4d6d-846d-867195acb0df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c06693-d828-466c-b5de-07c919a353c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5e7fa0-27a2-4cb5-b7d3-b8b0251ee016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e31a85-9233-49d5-a8e4-a1f317234155",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106b7c2d-51f6-499a-93c8-dd04e592b65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7425a70-cd6e-43e9-b571-80544827dfa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60111dd5-1e27-426a-bbed-d0d0136cc772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a3b83d-8db2-40f5-9e72-b15403932126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383376c8-6a99-4e3e-8f22-332e9a14b6dc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6636ed38-1571-468f-b80c-20ce6a30ce59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700e1fe4-1984-404a-b2f1-ef9fe6ad13b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8401ef-5885-41e0-a7da-19c24c54fafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fddb17c-363c-4829-b85f-f2669315ebdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f21b748-d900-4861-ab66-8ac40395ffa2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a50091c-8391-495e-aee4-2fc4a302f45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62026dfe-1e58-4c8a-a357-4ef1130863e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f698cfb-9a5b-43e3-87f6-8d0d2ae7f401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2499bb-709a-409e-b80a-81f373d649a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001acfa7-dc04-4f3c-8b18-09413e5872b1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c735eee1-b845-4f23-b662-6696941b777d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75214431-e047-43c4-b788-1c97e6a3dd30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44996c1e-3b61-4093-8028-87ffd91f9b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea81a11-3b2d-4217-83f8-e3311b935dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5dbfa2-5e3d-4784-9ada-4a50ec8a30ce",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f4e151-507c-4954-b173-d118d1514442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd31ebe7-a2cb-4893-b7bd-d6e1aa3c6318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713835dd-85fc-46a7-9823-5ec020664513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2ce590-c33b-4e55-8788-b2f1db72a50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e5c87a-24f4-4baa-8c7d-60075aefc0fd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d5016b-0a19-4614-88ed-2380255977f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "872e7d04-dda2-4a7f-81ac-3b4d6e631c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5584e00-b9d2-49f1-bbcd-396d399754a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b3101f-cfca-4d97-a502-df723ef785d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2e63be-9847-4196-b903-6d4b0a889ce5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a435a42-1573-4937-bd8d-c976fe4da301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "226198e8-d6ed-4bb4-a123-f3c1c47ff90f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1923bfb-5b13-4f58-905a-85af31e0286c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd98eda6-1d2c-4f39-bb7c-01bfbac8fb79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd19ce7b-0c86-4d5b-b67e-ec34028b0383",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde081ab-b2ca-4d4e-9fca-8a3967b6d179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c73a96-024b-48ce-a331-c3d63bbbae94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46d8b5d-074c-4375-953c-66d64ed1efc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382e8939-f3b6-409d-9173-a78228cb6b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010c8b45-d609-4037-950e-4d8d9774efee",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7542c31-6504-4a04-bc72-b70d57125196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2d23b10-1f99-4d87-ae55-540f3e55e2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cea6cc9-edb5-40e8-8680-0462d269c66d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06aab2cf-cc9b-4a2b-acb0-cb1b9b22f6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837aceec-13ac-492c-ba82-c67f7e5714ae",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449b30b4-9685-4778-98fa-6abb488d728b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72b116a0-3a83-4ec6-99df-9a464fe89c74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e2b39a-a62d-431f-8312-15a5180b9689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90110afc-d182-4e6c-a5da-1a78122b40a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f61de1d-d49d-47b2-8b3c-e3c6471b95d9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c795e30-df31-4752-a092-c9c186ba89b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f12b243-a4a2-48fc-8b30-d3dc1d967e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafbfb1e-13fa-40dd-9359-c843a6d65f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b79740-3738-4d32-af43-7de5460eb36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befe1558-23ee-4d9c-a1b2-bbf9f17d0874",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c496132f-f746-4085-8bae-352437385def",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08d92418-78ea-4f79-a711-391926e0f100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50aef407-801d-4831-84a2-0bea2f24e0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc826037-246f-4b91-9a1c-df375a8a0601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705b25a1-8817-456c-a5a9-33807890b836",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1eab166-ea31-4514-9b92-5179da447c32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab704e0c-93d7-4d7f-aaee-7895bfb4959c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273811d5-ed8b-4dc1-9b55-a04ca49b0cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c349024-cadb-4728-97e7-7953ab089316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b10c37-1017-40e5-a53e-836100612aef",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8740c4f3-22af-4410-9514-39e9d9244773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de2ec639-7259-4a64-80a0-0709edf64309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77d2622-d343-4d46-ab91-e1c800a3bbb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cfa7ae4-eb76-47e1-89e9-ab0237a82eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76ec3cc-a930-4420-ad0a-e8d322ab6e9f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf803fc8-eb8d-4619-a59a-7e60def5ef64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308fca5e-c29d-4f81-9e6a-1f6cb798653c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd3c71a-7461-47bb-96c1-afe34141b335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0a6511-fbb4-4065-8846-19c3de1b3913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30daad6f-5e5a-45cd-b414-dc43ca551e28",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02dd9c0-e6f1-4e53-9ee5-5ff0bcc3da59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62826523-c0c2-4fc2-af90-2e9412f4002e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc0d7e1-fd64-4528-812d-c5b69af5a15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61db0aeb-5722-4181-a898-d7bbfbfd3102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e86d1fb-3efb-4f1f-b5c8-6aadcb28a8ea",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947a4433-db87-4acb-bdf7-a279e3f52e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05a55e0-b6be-4ece-af91-73aea0d008f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07a519c-350f-4795-aa80-20ecf9cb7e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c977d63-deb4-470b-af57-151a938db4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13509999-b56e-464c-b6c4-a4d844ed0e0a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28beb4ce-0f0c-4f8b-875f-6af4f92c3709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6d787c-b018-438f-bd46-9ec6cdc7fb4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b738a7b1-7d37-403b-909e-a166e4821fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7205bacf-e9a3-44fa-8aae-5871e13a7ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e18559-9e20-43e3-8c56-bd3b4f0ccc9f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bcfd20-ab5d-4a04-9d8f-8f71135aef63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67647b29-16e4-4a40-80b8-d45a8069ee5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9af413-67e9-444b-b0e0-f89db477e44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b2f2b0-9a0b-4c44-bb75-025d12ccdac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc90241f-3332-4b97-a509-a5ddfa396b11",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a1afee-7564-4cd0-a60d-491b2d7b2455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64efe33a-1417-43ef-b558-088443491f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bca8db-bbb4-4bdb-b682-b6ec4d6185d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b726f076-734f-4231-98a8-1f50cf41c713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53b927d-f2df-4fac-ad31-26dcfb0448d4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ddd475-01b1-4eb3-a477-5011bf57cd4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a0033d-50e5-4039-8b3a-57f8e2a74b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541c38b2-55b7-4842-a106-a701bcaf9b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af2dcea-f61b-4e3e-9137-81fbabfe5558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1e0068-ed0e-48c5-8b2a-43a35123625d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ff7c5a-3cec-459e-8acd-bc9e0ee766e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24621fd5-b4b7-4d42-a6c0-dfc502c27b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd992f6-6c6d-4c9b-942f-c0a549d34311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c09923-3102-4b75-9c1a-8524292ee515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d4a3b5-474f-4efe-984e-b98ca97d311a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0831b343-5a14-44fa-8471-724cbcc1eeea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724844f6-ab63-4a9e-8fc9-5f2a9a835a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5558a812-9abb-4493-8a21-d8c9cbe213c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e720b15-3e49-4b79-9bd4-ae263ba1fdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3c252d-e4d0-4f46-ac77-d25dbe065a4a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e23f93-89ee-4af3-a5af-3c6d5e36e54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2e8b20-5c65-4af2-b46d-ee7444b6944a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a3e054-f61a-4d9b-b084-57fba9681e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158ba351-8edf-419a-9bb8-555cd2b23c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88814b5c-6064-456e-81ab-d19b8a19d1f2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd27af06-9315-41b8-85a4-3e6c6e22292b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db92bf1-1754-4d3b-b71c-a167af2cbb41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda71cbf-8753-4ce2-9bad-b443c0176c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fadd17a-4a9a-495b-bef2-6c979fd1222c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0eb9949-ae6b-452f-a7df-3b90bc831e36",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ffb29a-c53a-47e5-a913-8ce024014c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc721e0-ca50-456d-8242-3e306f89f773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe427ea-e158-4503-b6a2-761a281101cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d011206e-9142-4d0c-8ab2-b2a8d843dd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76715c54-0e23-40ca-870c-9c221a7edf61",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373940ee-5092-4c8a-8bf3-8e1e001dd114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff08850b-2932-47f3-b5f0-71c5331f1cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2306dd41-b48e-4c7f-a518-9228728d27d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83784122-2195-4d56-a319-1e99ebc6ee31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be48ef85-b568-42f7-8556-7d26b977ced9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447bdd03-b6ba-4f28-9e94-68396a25a71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5cf84d-0f5b-4e6e-a100-b1605182e9f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8d14c2-5ad8-4556-87f1-6c10e9689b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c8efd6-063c-4590-8c73-638ee625dba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e04c036-4412-40a8-9eb4-3595f244c4be",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d54c9a-9f61-4788-840a-5ad6a8f292db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65ccca7-fe40-4152-b5e5-ee42b351b3a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6be972-738c-4546-927b-7a73e18d1270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359f0d95-6d4c-4830-a551-7d284500b5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79dc27cc-0b52-4220-8a44-1dfbeaeb58b4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54fdc6f-fac1-45ad-9b02-757c1cc55c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f7d589-04af-48c4-aad3-8faa65cbd533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ab9e92-bf37-4919-bc04-e634b5fe06d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ad11ce-987f-430c-9916-2a655935eb85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d7ba84-ab92-43d2-8d0d-f59245176cff",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44af6b6a-fb35-48c2-a9c8-c9bd7769991f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ba0913-074e-42ce-be55-036e42746b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2037930-80d2-45dc-bd8e-6a508754713e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2013f1b8-dad7-40a8-9f3f-b09321d7d3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3983eb-80b4-489f-86f3-bcb6eee719dd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec8aac0-29b6-41c4-8074-cf6b6ea43323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f45068-0c9c-4f54-b567-175501281f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8f6bf4-6dab-485b-b64a-200d6c98cbc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e50e18-30b3-40ff-a1b9-078109142383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d95e78-993c-431b-af5b-646a86997e71",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de8319f-85f0-4750-a167-dd119038238c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f51898-31fd-4d2f-8c92-40201b645727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0049f01-20fc-4994-8c66-e53caa1fee7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15979968-8cbb-4641-af4f-f4d2971c2334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e60ffa-eb1e-45b5-9549-2ae2ef9e7fa1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e791f8-ca7b-4b43-89a6-aae2e19c05e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efb97bf-4793-473d-9d79-ab1fc554581e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a6c3ee-e9fe-47e9-972e-557a3f38d28d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851509e0-0b74-458e-b075-0e9855d2e605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b69f8ee-d08e-44e0-9410-f0a35ac7e660",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70d49d5-d1e3-47f1-bf7e-5b9f46042f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5288cd-5b31-4bb6-8779-e643e2aef672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881262ba-af79-41c5-b717-3dd7c5618d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d431dfb9-9cf4-4d82-a431-a895493d95f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd75451e-69d5-47a4-a0a2-609d77cda538",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c10ad2-a8d1-4111-b40d-73197c412ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c359b94-6bbe-4152-9cc4-31c0902076e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0642ce7-b4a9-4c51-ba85-663c8339e6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae644f0a-70df-43e0-bcc0-3816664cb998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0360906-5f8a-4a4f-906d-2b4f0c9bfe69",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91629a72-7e4d-4ee7-a12a-98445dd69015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9370dbb4-d8d5-4aa4-9f5e-ac21d2532c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd99651-1132-4901-8348-bb0b787626ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376bf230-631c-4f2e-95b8-98f163a73b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25407df3-6eb3-4b21-bce2-e96c64173b1f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec817e45-7422-4839-a092-ad516457948c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ebceaa-2192-475c-ad3f-77d8f4d2d19f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68315115-ecbf-42ee-be50-ff6c66e0b895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6039a0a3-36c4-4d65-8eb9-e538fef5f728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0262f198-35e1-49dc-a44b-b7e0063f6007",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea63fe9-dc03-495c-b463-993faf52e598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66a3130-fb32-44ee-8a2b-3dfa45e6c95b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f217426f-bfe7-4710-91f6-d8784173af16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea78623-f6ca-49ed-9866-fdae75e0e58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa750573-0fe2-4d2e-a949-98be7c700535",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6790ab2c-2f92-4b10-885b-776e967f40e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83422c43-bd87-42cc-b82c-9fb6d8a6afd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb73e201-1e96-4f00-9735-6b4db5c6b004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ba9454-2809-49b7-b32e-44a8c9e2707e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9c830f-485b-4842-8b7d-cea671ad4924",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17db14e8-6b58-4c50-9a72-a3ccec215052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bba12e0-35a8-4502-ba6e-6069319bf636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54091ee6-6ddf-49c7-b902-403b4d7199c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1e9b1c-b1e9-4b24-b9c7-92e1acccf22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211dfc07-e429-40bd-b6f3-07c9ba724f54",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a60135-79d9-4d93-8c65-1bfc3c1e8d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0398ab0b-6791-4e4f-8b29-21aa956bafd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aef70e9-f667-46f9-ab0f-c3e980ecaccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c249c64-a31b-4f24-9e2d-14efde364dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45f50d2-5c8d-4d08-b187-1028eea63b2a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca6e3d5-cbef-4f38-b757-f9b0035f6abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c260af-d914-42cd-a6bb-7802c062fc16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb63a1a7-c38c-425b-80f5-7b65c922412a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b940b6d0-3520-4abe-a8fe-d4bb1f3b00a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4a345b-4c3a-470b-87ed-74dad31fec41",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfc70f8-16eb-463f-9385-19344ceda20e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "516dd659-e450-430b-be24-8eb2ca6de228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0510c1d-dc39-42b0-b1e2-276336ed69ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08eaed8f-75fe-44b0-9706-c8aa40548a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437c4124-f9bc-43c2-9790-14db4c1b9319",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7e6899-b6d8-4e58-980b-b315611217de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d923ebf-3468-4344-adc0-b71eea3bc411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c44bff2-93d8-4eff-94a1-c3256e72bc04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6b5c7f-4c1f-4d82-bdb7-922f4c5e4fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aae5c1e-1423-4bd8-99ac-85eaa50b03fe",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d80754d-99b7-47b3-9498-ce70ddfaa5e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47ea967c-e4a8-4523-a1d1-45f3fd077e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa050a09-7269-44a3-baab-bf070cd9058c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fce94f-7a97-45a0-9905-d398809e7d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8c6e1c-9de5-4998-bf93-7a92ce8ec56c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ee428c-64a3-4875-a930-fe57a694a099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2160cf0f-3a38-405d-8e20-1e3063a8f1c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4719fc74-2bdc-4330-a2d4-b3da83a29fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d178868a-f734-412e-803e-91181654443c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91d9e40-fd71-4adc-94ba-2c753724e409",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675807f9-bef0-40df-a939-dc0635d865b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9edb85a-dada-41ca-a51c-281905878ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba00453-b621-4747-9d5d-33847d26b953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6d4e84-10e0-4e67-ad10-82adfab8afc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe8d8f9-9a66-48e1-91b4-7e8ceca1b57a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e8baab-5e45-4c83-9975-2ab0c9c73960",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0098c4d1-4cea-4fa3-af9b-bf025a16b673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca2b9b3-8ae6-4ed7-988b-9f0ed0e1816c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794c4bec-c10c-4b67-bb63-fcd114a93edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1809ff67-6631-4657-b408-af59e6f1f67e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dac7e5-33c6-48e6-b2a4-d03877486baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c57c8ad9-22af-4d22-8101-849e6a541ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde9f5e8-e934-4ac9-be75-5dc245c83e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed79c12-6ba2-4df4-8f6d-654c22bb10c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60945b22-9d3e-42c3-b569-b7fdd6717033",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cfe882-4a22-4238-aa92-972464c1f9b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06bf6d41-3066-4fdc-8706-16b8305e01fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197d29c8-68fb-4f53-87bd-ee6483238aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0196c9d-53bc-4d42-8157-2c6195b2ffb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1b1489-79ec-4535-b74a-58a63701b702",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bbc010-d8ea-4cde-a960-4a94be89cb15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4633335-b58a-48fd-a7b7-0a308cee63ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adca640d-7b38-4371-a37a-40363965ceaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d04bfe-72f3-44f7-8bcd-af6489660e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0a6172-c037-4989-b32e-2e53e0aeb736",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501032d7-34d9-4bbd-b731-f1449a2a8bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eb79a29-a718-4e41-b526-02a02d110beb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e82cf8-5d9a-48a4-a82b-ea4e9bba5017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044d56d6-8737-409e-8492-fd82e747f48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0313ba-b5ea-4143-8505-0de4afcd25be",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd237bdb-c89e-46cd-acc1-763f2fa57fa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db13d649-cb23-40b3-b69d-a6179a0147ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebdb228-e8ac-4b35-801b-35f395bcefc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c5e62a-8f30-40d2-b67d-ee2fdf335e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64997109-d1fd-4f26-95b5-222badad3ecc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a40525-982f-4756-a0d8-a12120a46364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "840fac32-1b34-4581-a1d7-296c89c0f696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e3b799-0680-4867-9e58-b1f51777fe2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c694a299-1518-4ee6-a0d1-af9312339a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3354793-8a1e-489a-a871-46114a81bc59",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a620f94-e0c1-4031-96b2-5d0f2c4794f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f5a5a9b-d369-49fb-ac18-57762afc5554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37870d1c-f585-4849-bdc1-7ebca99455b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9989b0d3-c242-450d-be7c-902e102917bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe30334-78ab-4c86-a8db-f98d9f75d249",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec087354-e5e8-4f82-9339-464380bfce71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae258bc0-2140-44dd-9560-66310038820f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b6daf3-c6bf-4dbb-95f0-7c1ab2fbab36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ee5159-1d99-4303-8527-3aee01e57de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754a122e-aa30-475f-9c7c-998696cae9d7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21700b54-3a49-44ab-a4d9-705f3d89c1fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35ab9fff-354b-45e8-ac56-9bcc4d3dd613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19df3c3-b97c-4177-94d2-c6981023a273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398b2101-c6bb-4c75-938e-d170c50e458a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8a390c-2de7-47fd-8d45-97b7286f68ac",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557d5b9c-c30a-4c63-bb51-289c75e4cdbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2babfd4f-29b7-4ef4-b830-50f443797cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f76fda-fc88-4dd5-8e29-8eb9167c3f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38620d31-3785-4358-9452-7c417c8334bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5924d6ab-37f6-40cf-8c23-1a408da4007b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7653508-3c66-48b6-9de7-df0e3c6395c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b331fd0a-5c6e-4616-a0e1-f83324e15427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a41354-63b6-49b1-952d-91c63bd2596a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2cae92c-dc97-4d7c-b315-db924f62138a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325d06c4-c0e9-41ba-a8f5-013ae61e2f6b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b067ae9a-24a2-454b-a976-75f311d99576",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c961d48-c9e5-4bfe-98e0-a6e324ac5dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9980f746-13f5-4f80-93b7-bada368f19cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c3f730-6e48-4aa1-8285-93c27b45f2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4650d9-73c6-47bb-b7d7-a9fcf8e8b2eb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fabd41-66ac-4acc-be5a-ce7e1e0e52e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75e1c27d-090d-4f78-84ff-6b2d05a1ef58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fed5a4-b4f5-45bf-b607-9e66e2dda7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857fb3e5-24dc-4c1b-b188-3e131f2ce848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574f86ae-915c-46c9-a390-a17df6f45e16",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04d2d0f-93a1-42e2-9e50-28d719d2f965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a0c1f1b-2450-4646-bf6b-dcebc90a09e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c380e67-cbca-42e1-befe-03d864f52e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457d237a-57da-47e0-9138-85b87b347fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c88074-e87b-4eec-9284-3ac784ec5454",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59f000d-588d-4b4a-bd43-0d44295d9593",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b11421c-0365-4d82-9509-f9906d685f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c91a8d-6005-4038-b8e7-138d06107485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21d2b51-569f-49e7-b43e-7cff9143c955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5175dc4f-31be-402f-b4b6-62800be0190d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2213f8d-1dce-4779-9c24-8c0902692bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f7a8b9e-c845-4fb7-90df-1802a5c3dffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c017b7-c04c-41e4-9c33-8977fb2039b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2806f50-80a8-4f3c-892b-4698c954b08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cec92e5-9bac-4b59-b6b0-6e455e1a42c7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1ae086-ff83-4a16-9b3b-f3e75fa96e35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8adfd9f-c4a2-4703-ba35-cb1a4ca3b0ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a80b9f7-403c-420c-8dab-47385e6e01e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c94442-0c4f-482c-9519-3506eef0ab33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc489681-9656-4d52-ac78-cbc32b7dde01",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132a9b90-2c06-4a62-b49d-2a91a7f016fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e207a220-3955-40f7-bad9-5f335b4fb254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dd6f19-942d-4cf8-a7c1-f542aa9225e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328f496e-2a56-496d-b2e8-a836de07335e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a948109-6cec-48d5-9d5f-bd4d862c2e81",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcd5647-8785-4df0-ba86-8a14d0983652",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02fc5094-c578-4199-898d-3c7f9adcc77f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c5c846-411e-4894-899a-ddd22edf7bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c55fb2-0b78-4ca2-b536-4c87a8dc51ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fd1747-b219-41ea-8004-91de2a42e632",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc81fdd-9c98-4770-afb9-3a928009259a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "230e42d5-3f58-4d6b-b6af-abe6bf4b802a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "217e550b-4e36-4735-b215-a62f0345a3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93632731-b676-48aa-ba6b-bdea40e8dd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bf850b-84ee-4cae-8223-b5126425ae9d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0f64f3-03d7-468b-9f0b-a8f66f50e842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7225a4c-a0ec-483f-b7d9-169d72714c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbac382-51a8-4429-b6f5-c2c8f19599c0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb046d56-34f8-48af-b26b-aa3c854d4411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f853fd86-5f96-44de-b179-380881cd0435",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c849ccff-f9e4-4aee-883f-a9f68679e08b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db3df6b7-ed83-4a62-9ab7-af8388e19e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08724e46-aaea-4a1c-b2f5-ec3c708772c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5baff6-e3dd-4cf8-8c27-bb41b2210a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1319254d-ba00-4214-9594-3e79315c6e7e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c80eb6a-5e54-48f7-bf79-e83d4d8f574a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f97143a4-3358-41b8-88c9-a5d751b9502a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e5bfca-a4eb-4abd-b12c-af6f0d2394c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286b1dd2-cbeb-4e27-b6a1-dc838927bac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2edae9-cb5f-4f8c-ab5d-11e1cc88a923",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d105a7-1cb2-43d8-8281-cef8c1ef1752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cce9b3dd-51a0-41ff-a45b-0ae0823c1e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b64e56-6565-4573-9270-ca1de6597f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d733d464-5bed-423b-b88e-ebba9ed1815a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28783c7b-8245-46c4-ab73-6f0ab574b11a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d11593-a711-4dc2-85c0-4b9b4f0f2ab1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0227cdf4-7490-410b-b76a-c6955fceb61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d68da48-7696-4403-8e1f-70e1aa3354b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ccfdde7-ce8d-428f-9ecb-b87a53e89631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b799f5a9-79a7-459f-81b8-4bc2765d14fd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a640ca-0f40-4867-b8ac-cf46144f0fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c369919d-d016-40df-a941-663081769861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e15304-8ac9-4197-94e6-a8fe0cdbc1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ce6697-27b5-4d8b-9287-369c01b101c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5db9a85-d2d8-41b7-96b5-b0e9f7a1dce1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e38eb9-ce91-41e4-87b4-c1a3c1a35fbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "134d2493-0fe5-4a55-9068-94dc13217dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d152504-5f7f-4423-9815-bca1864a23fb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ba23aa-8f5d-4b8b-9d16-6d4e39c91015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38853ed-99e9-4fb2-a798-20711a2a65f0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a825dfe-c6d7-45aa-9586-c64014a0efd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44772021-b4b2-4eef-9f96-af008770a07e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9693f037-7fce-4140-985f-5f2de8aebe11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da328790-62ae-4c61-9f82-0bfbba2c0f98"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea16fa62-0856-40a7-81af-811a32a395ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a9090a6-bec0-4df1-a80c-eae4064d47f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "666d9ef9-a2c0-4ab3-8c07-a9f0f4713e46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4151aeb-264b-4939-a7d8-54753d14ba19"
                    }
                  }
                ]
              },
              {
                "id": "24196aa7-89c0-4aca-a0a5-7d93fd030ac5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed76b3e7-1ec6-4bf4-92fc-908537356e84",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae90363-34ab-43b8-a645-ea8fa42eeee3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c6b274fd-7186-4ea4-a542-eeaca7632517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582d675e-1202-4665-9f9c-12408b7f959f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e25ca7b-5993-4a85-9427-93dd05e4e7dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08a227f9-ff02-4bd2-8793-d465261afe60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c86d76a3-3194-485c-9b99-ec3480325bde"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c844ed1d-3c2c-4eaf-a6fa-ee7de7479491",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e5215cc-bb31-4d7d-8cad-47d404473f9f"
                    }
                  }
                ]
              },
              {
                "id": "f8ee8cea-df52-47b8-ab8d-56b88f19281e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "70471610-5e87-4988-aaf3-563490b5b283",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c869ef7-27b0-417b-931a-90e450dfd4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3b697b8e-35ce-4ee0-82f6-b89267beae00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b096a91e-f27b-4f21-ad4a-7f9aaf875b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d72ee0ab-d522-462e-aa3c-205b8667bca4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "30d3fb40-5ff1-4368-ab01-8a52bf24a446",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d8f2c567-6300-4fc1-892a-c944d0e1f1b8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b157d538-bc07-4aa8-9037-3527acd0149c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9732dc62-786e-4953-b244-821f8d4ef21b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbdfc10c-2aed-4e7b-bd39-82b3c39c725e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48cf68a8-632b-4ea2-bef5-3616d119a0b8"
                    }
                  }
                ]
              },
              {
                "id": "eacb8f82-c059-4f4c-9821-6ebe6ccb6304",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d814112d-cdca-41f0-a56c-5d095ced4905",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "510d5adc-bb43-4b06-a85b-d92e3c3cbc21"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89d47f2c-a8b6-46e0-892c-efe16499e288",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fc189a7-794b-4077-8485-0a228bddb547"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a439ab1-850c-42ba-917f-4cf5080895ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "26c6c651-041a-4904-88c8-a5e3af8cef87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df8d272e-6f6a-44e8-872d-c2a9309d6321",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "219aaf55-9d23-45f6-b428-6e61a7d60db9"
            }
          }
        ]
      },
      {
        "id": "3cb36982-0408-4609-a0f6-83a545fe7ae8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2c323541-9698-42a2-9278-c1c5a10b8047",
            "name": "Negative Testing",
            "item": [
              {
                "id": "384d0488-6ca7-4f15-9014-a080c8e166bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60e1dca5-1ab8-4604-bf77-26afa4bb0db0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f042e7bb-b468-48ab-bd1e-bdcd190f596e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3b8d9f83-c193-4a0d-b3c6-5979f2d714be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec8e13e-901c-41e4-bed2-a05baf0ceb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26859584-452e-42ca-8e1b-e668e572bd7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7ff06ca-2982-45fb-9205-f802675da6a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f8e76d7-c1a1-4d0a-b527-4ed3dd88fca4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f93466e3-4596-4746-bba4-5cbdd1bc6855",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62c38df4-0601-40d4-93e7-e6c241b8defa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fc6a710-46a0-4bb4-a6f7-710f470156d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "53a5ab80-3d8a-4755-b523-841f68164d92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a61252c-30da-4bbd-b12d-a4aefc55284d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3175810-34f6-4559-8876-f258eea1af47"
            }
          }
        ]
      },
      {
        "id": "3b167142-2a84-46bc-8677-83ef910519b4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c6f3f5f0-83f7-4990-bed9-198c8649b603",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8e2b446-5c79-41d9-89f5-0884c8c5dab1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64145ab8-219f-4e0a-85a4-56fa4d6d0444",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08f1cda-34bf-4877-bbab-63432abf97d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19d4903b-b3ad-437b-9b6f-fd8db395d615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8d9b99-679e-467c-b459-dce9a7679f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "574aaea9-bb0b-414a-8c66-6f02ca3d64fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c917f748-7ad4-44b1-b6ff-875a0c02eabe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0a3077e-6015-43ff-98f2-33b5b5dad908"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a559c2e9-8571-4a44-834b-8269da1e2106",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe80d7aa-517b-4c23-b8a6-d636056735af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d546008c-76eb-4562-8467-813ed180d7c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f7ddbb15-cba5-499f-ba93-8e3454730f91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdd48d82-28e2-458b-a290-b47b61d91517",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3aa8725d-7d11-450a-ad22-face1d9657d7"
            }
          }
        ]
      },
      {
        "id": "f206b238-68fe-42cc-a230-8826291cf093",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a80ccb43-9969-440d-804e-c42523130115",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b37f868-9a37-4830-9649-5f7f51b5c320",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7dfac96-3a0c-42af-a85f-fea3bf3069c5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d265f25-1d08-4770-960f-02d20b863b18",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87b615f8-41c5-404f-8f73-77c15036b92f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fa011e-e3db-442c-94a8-461ede9b725c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fbe676f-799f-4e7b-8e0d-7352d448fea9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c24ed53-7019-4ad0-ba49-b5e7f9896585",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d57c9223-79b0-40ad-99d3-e574f7463ac5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6abcbdd7-e4c8-4b6e-be6b-62758b5153d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c13f19f5-01d7-4afd-b691-e6a29fa7bcc4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3cbfced-aa78-4200-9a4a-35c0caaa6c7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee9a5714-7457-4014-bcf7-f87555063947"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b84216b3-5ea3-4860-a90c-da8cd9bfa7b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d30a85a-c049-4eb4-9caf-cf12cede00d8"
            }
          }
        ]
      },
      {
        "id": "ff3709c8-d0df-4216-bc91-457599290acc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da7dfe1a-a342-45ea-b946-327856b97763",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33d29c2b-6512-40d1-805e-9274b7544ac1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b8f706c0-17ad-4b1c-afa8-38c07f5bfcde",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "219723b8-d577-4af2-9b6b-2cb431bdba13",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53ced32b-0e6a-4537-9c22-790e0f9b2bc9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 142.69047619047626,
      "responseMin": 6,
      "responseMax": 11408,
      "responseSd": 751.1148588459279,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721781653218,
      "completed": 1721781697487
    },
    "executions": [
      {
        "id": "6b2d5e5e-121c-475f-afd1-061cf77fd8fc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "059540c8-358a-4edb-9f96-a08bbdd0b652",
          "httpRequestId": "f8b9a96d-9d22-4703-aec2-0b2fa8de616a"
        },
        "item": {
          "id": "6b2d5e5e-121c-475f-afd1-061cf77fd8fc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fa77f9df-59ad-4927-9b1d-2d4a724b896a",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "15829c01-63ba-4c98-8562-33ffb6ec8638",
        "cursor": {
          "ref": "5d999316-0820-45d3-af70-a5b532857a03",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "61b70ee8-3a33-47be-8969-f85a4a3079ec"
        },
        "item": {
          "id": "15829c01-63ba-4c98-8562-33ffb6ec8638",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a88a9e69-00cf-4164-a4f3-825a15cf5b50",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "cec17210-b788-485e-a524-8aa2cd90cd9e",
        "cursor": {
          "ref": "48a4e51f-c71f-4fc0-9ee8-9362192b32c9",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ec723c82-c08e-4402-9f22-35aa6c77138d"
        },
        "item": {
          "id": "cec17210-b788-485e-a524-8aa2cd90cd9e",
          "name": "did_json"
        },
        "response": {
          "id": "6c985243-9a7b-4e5d-bd86-f78b959853de",
          "status": "OK",
          "code": 200,
          "responseTime": 413,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92de6cfa-0f50-48dd-9cca-bbfd3699c22e",
        "cursor": {
          "ref": "b72fc3b8-c814-408e-bf79-3e07b34c9cc1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a1ac9748-df96-4ea2-af8c-2797d5d59f5d"
        },
        "item": {
          "id": "92de6cfa-0f50-48dd-9cca-bbfd3699c22e",
          "name": "did:invalid"
        },
        "response": {
          "id": "9a1d181c-4ee9-47e5-82a7-ea19dab1f965",
          "status": "Not Found",
          "code": 404,
          "responseTime": 390,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92de6cfa-0f50-48dd-9cca-bbfd3699c22e",
        "cursor": {
          "ref": "b72fc3b8-c814-408e-bf79-3e07b34c9cc1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a1ac9748-df96-4ea2-af8c-2797d5d59f5d"
        },
        "item": {
          "id": "92de6cfa-0f50-48dd-9cca-bbfd3699c22e",
          "name": "did:invalid"
        },
        "response": {
          "id": "9a1d181c-4ee9-47e5-82a7-ea19dab1f965",
          "status": "Not Found",
          "code": 404,
          "responseTime": 390,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fcec90-1a3b-48f5-827e-74c531870bd0",
        "cursor": {
          "ref": "eaf63eae-da8b-4cad-8981-0a03d8c32892",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1c546e86-8d4c-4c89-9ae1-85c088ff0c62"
        },
        "item": {
          "id": "58fcec90-1a3b-48f5-827e-74c531870bd0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ec68123e-846f-4bc1-a004-957fe2ab4b2d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fb34d9-cc26-4b85-8180-1932a93484d7",
        "cursor": {
          "ref": "d7984b19-2eb5-435b-b751-6f2e010d0b86",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "945c28b5-783e-4bac-bdb1-9fe21b7026d5"
        },
        "item": {
          "id": "50fb34d9-cc26-4b85-8180-1932a93484d7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "602a1481-c65b-42c1-be85-79434fcce810",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345503a9-4438-4277-991b-ea0f47216056",
        "cursor": {
          "ref": "63692de1-7e4f-4f87-b965-1339c038ecb1",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "02e42dc9-72d3-4e7a-9e70-fc83848398e2"
        },
        "item": {
          "id": "345503a9-4438-4277-991b-ea0f47216056",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8541ac6d-32c5-4977-b130-904c3d06179d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 106,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e61beae-d178-4116-a84d-7aac6d350b88",
        "cursor": {
          "ref": "eb71922f-45e7-4ef5-9d19-30b1e3e4d3d7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "327f654e-977c-4977-b84f-18b23a1c9d20"
        },
        "item": {
          "id": "0e61beae-d178-4116-a84d-7aac6d350b88",
          "name": "identifiers"
        },
        "response": {
          "id": "1e71a4e8-87d3-43fb-8899-ed0bbb25045e",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1693e6c0-0468-4c47-9000-c54641e4dca8",
        "cursor": {
          "ref": "b250b419-6f55-41bb-98fc-ba952d9f85eb",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3db1c879-4f40-4466-badc-daec9751a287"
        },
        "item": {
          "id": "1693e6c0-0468-4c47-9000-c54641e4dca8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "275ccf86-86b3-468e-9441-28ac466a6b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31332f87-40d1-4313-adb8-728c6bbc06d4",
        "cursor": {
          "ref": "c0725c74-94e3-4575-bbc4-2072e4eacd96",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "87f5089e-1c5e-4a67-8dfb-f159818ecce6"
        },
        "item": {
          "id": "31332f87-40d1-4313-adb8-728c6bbc06d4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fc278a90-8957-4736-9e0b-4cf324b968f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a86b9a3-9493-4f0e-a07b-bc3dba4ea2d1",
        "cursor": {
          "ref": "6b8098a0-ef45-4afd-a184-0894cf255b1c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1577c038-86a2-40ae-8898-1535b473502c"
        },
        "item": {
          "id": "7a86b9a3-9493-4f0e-a07b-bc3dba4ea2d1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cdcbba84-de96-4e3f-a195-acd025264260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a65abd8-3b8b-4688-a7e9-f42e363211aa",
        "cursor": {
          "ref": "80f91621-5aca-4017-8038-cef3c1b1b8eb",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bd5767f6-ba7a-4f30-8ebd-7df4aa661d47"
        },
        "item": {
          "id": "5a65abd8-3b8b-4688-a7e9-f42e363211aa",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cdcdcff1-b5ef-43cc-b4e4-bc5b5ac383a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e963012-6c6d-4da4-8b2f-a915315c32fd",
        "cursor": {
          "ref": "6011602a-e441-40f4-b418-2b901b4a3c08",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1f531a2f-523d-49d2-aaae-a9dd2f7148fe"
        },
        "item": {
          "id": "6e963012-6c6d-4da4-8b2f-a915315c32fd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0fbd6bdb-9a94-412a-b606-c70dfecef09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67518c77-a6dd-4b8d-9761-88de8f4b49b8",
        "cursor": {
          "ref": "7dc87688-3f36-4e5a-9d50-aa28de0f8c4c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7fc21d3e-7d1d-4b60-92ac-6f35f83cbdec"
        },
        "item": {
          "id": "67518c77-a6dd-4b8d-9761-88de8f4b49b8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "db92583f-cf34-4b62-b7b4-05ad7625b075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c271a65-b8aa-4715-bdab-4848a13f41bd",
        "cursor": {
          "ref": "84066fa7-19fd-4c41-aa2a-86fe2ce9a290",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a660fb8c-08aa-4f56-85bf-cdefb03c6893"
        },
        "item": {
          "id": "9c271a65-b8aa-4715-bdab-4848a13f41bd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a43b695a-7b5e-4818-9a5c-b96ba211a16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff410da2-5874-408f-befe-52b7b43a298f",
        "cursor": {
          "ref": "a27b4021-8b81-4b16-92a6-d0d09a94a75a",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e6eca913-7652-4cf3-bfa7-034c299d5d60"
        },
        "item": {
          "id": "ff410da2-5874-408f-befe-52b7b43a298f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "18376163-2130-4459-afa2-4b89cc2e7c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8986a17e-5120-4dba-bae9-f32700680f14",
        "cursor": {
          "ref": "20324d22-96b9-439f-b4b4-dece6559bb69",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a7fab909-de63-4cf9-a74e-02c5da0bcbe8"
        },
        "item": {
          "id": "8986a17e-5120-4dba-bae9-f32700680f14",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "778b6c7c-a217-405e-89b3-56961e03d3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8c533b-afb1-4731-88df-d7d29957b925",
        "cursor": {
          "ref": "28b3ebe7-a31d-4fa2-b336-6342c30ac53b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3138472c-15f2-45a7-b0cc-7346ab06cdc4"
        },
        "item": {
          "id": "bb8c533b-afb1-4731-88df-d7d29957b925",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5b8553ec-f7da-48c0-bd7e-fd72672a0172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b9103b-f8e2-4abf-b873-4f3333daad91",
        "cursor": {
          "ref": "cf1c0cfe-7320-4dd7-86cb-7b5109641f43",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "be1888c8-9b7c-478b-bc89-2b3ddd45e606"
        },
        "item": {
          "id": "03b9103b-f8e2-4abf-b873-4f3333daad91",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5d337b00-da1d-472b-bd03-6a4e594fbecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe6be31-145e-492e-b7f5-7ef4aa771952",
        "cursor": {
          "ref": "5fd5f004-b0ff-4b09-ab17-f027ddc5e66e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7ded8cc5-9ffe-49ed-b0f4-343998a856a3"
        },
        "item": {
          "id": "dbe6be31-145e-492e-b7f5-7ef4aa771952",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ff64a675-5d1e-4540-b1ee-aa39f0fcf7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cff4e2c-0be7-4187-a43d-514782426c43",
        "cursor": {
          "ref": "d7add3e0-e707-432f-ac64-ef99fe008b84",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c90b074c-4ac2-49a7-8d9c-2f1a3a5ed8b3"
        },
        "item": {
          "id": "6cff4e2c-0be7-4187-a43d-514782426c43",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f9afcc2c-ef22-42b8-a3d2-83a5b80cc989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d783c0-ef6b-4538-88cc-9b42cbb52ca3",
        "cursor": {
          "ref": "39038316-344d-4e7e-a479-62e2c2cc9c00",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a63cb3bc-8d66-4d70-aa93-ef86cf145470"
        },
        "item": {
          "id": "e2d783c0-ef6b-4538-88cc-9b42cbb52ca3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cbf012fe-a3ae-4ce3-92bd-e483faba5498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba0edc6-bbba-47b4-9094-cd643188809a",
        "cursor": {
          "ref": "5e254ff6-f3c8-4627-a09b-f30103a639f3",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dbfc1605-9852-4def-a728-c5b483af744b"
        },
        "item": {
          "id": "2ba0edc6-bbba-47b4-9094-cd643188809a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "51babcbc-fba9-4bb6-9b63-0a5f22a79568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4ec9d7-47c0-4d21-ab2b-f9c418f5f202",
        "cursor": {
          "ref": "a0a647a0-3f59-4b52-8412-690d296581a3",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "11a18e32-bdf3-4316-87fd-0dc6e90bb9c5"
        },
        "item": {
          "id": "5e4ec9d7-47c0-4d21-ab2b-f9c418f5f202",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "da8ec545-e1bf-45dc-83d7-c5f45d6765cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0aa0c3e-c2c4-4353-a990-f8ae7743f7a5",
        "cursor": {
          "ref": "cbb70cd5-608d-45a0-8056-618b9da6c58a",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4367db93-9ee6-42f2-a19b-10c65943aab4"
        },
        "item": {
          "id": "b0aa0c3e-c2c4-4353-a990-f8ae7743f7a5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3577378e-e65e-4784-bf74-45e8113977d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad05a5e-73f7-441a-a0c4-59d9a0c876f6",
        "cursor": {
          "ref": "6971ba0e-c266-45a3-b055-72edee5a7a2f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f0c8ba45-7790-4015-831e-2aa79c80c599"
        },
        "item": {
          "id": "4ad05a5e-73f7-441a-a0c4-59d9a0c876f6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "98527259-01ea-4a46-867b-eb891df577d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217a414d-b59a-414d-bb5e-68bd26542151",
        "cursor": {
          "ref": "8c127159-b280-43d9-9405-676b6b6819d9",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "124b925f-4903-4114-a34e-27b6ebcc3de0"
        },
        "item": {
          "id": "217a414d-b59a-414d-bb5e-68bd26542151",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "973b48ed-2313-4691-817f-19e4916c4ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f88558-ba5b-4d46-98fc-2ec4fa53c266",
        "cursor": {
          "ref": "ab1c849a-fa6d-4e0e-baf4-5603747b7bdb",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e19fe2eb-530a-4187-ae9f-285d72197318"
        },
        "item": {
          "id": "a9f88558-ba5b-4d46-98fc-2ec4fa53c266",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "318d5e71-c29a-42ae-a297-a3146752ca6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5836e24-3ad3-40e0-b101-bfa38dfefbc7",
        "cursor": {
          "ref": "1faced4a-4f62-4a51-9d8b-760a49d6bc44",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e7790e51-7122-427a-99cd-6cee6379c30d"
        },
        "item": {
          "id": "e5836e24-3ad3-40e0-b101-bfa38dfefbc7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "71c0aae2-1499-425a-9ce4-239389065088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eaa1b76-19fb-4ccf-b9d5-6d09e01ce7e9",
        "cursor": {
          "ref": "173953a7-e18a-4d50-b564-e15b93d4243e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "371afaca-b353-48b4-ab44-14be49bce92d"
        },
        "item": {
          "id": "4eaa1b76-19fb-4ccf-b9d5-6d09e01ce7e9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ffbd0436-38c0-41c4-8894-c728ff8b8bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0d7eeb-eead-40c9-bf5d-e90146ed5a26",
        "cursor": {
          "ref": "b3ebab31-2126-4cce-8122-548d686a289c",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0c58a1a5-66fc-44f4-a4c2-cc5fcaac8959"
        },
        "item": {
          "id": "ae0d7eeb-eead-40c9-bf5d-e90146ed5a26",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "89970d9d-4311-4530-8fa7-9b969165f3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b132a095-4361-4a17-8067-c2d57b67849d",
        "cursor": {
          "ref": "f2293cc3-ec80-4210-b63c-80b7dab04611",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f5473697-5878-40f3-9d35-e56a5b368149"
        },
        "item": {
          "id": "b132a095-4361-4a17-8067-c2d57b67849d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6e508d66-abf0-4a34-a6d9-0f4b16c2ca60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50e789a-af99-46be-88a6-dc812a1f1880",
        "cursor": {
          "ref": "652f371b-6ad5-4cf2-a407-0fa65d5017b5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "127a2650-a654-454e-a6fb-b34342564d3c"
        },
        "item": {
          "id": "c50e789a-af99-46be-88a6-dc812a1f1880",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "539503e2-11d1-42b3-b43b-1b3e2331417e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e212e7a-2f88-453d-9147-df0c6eb8c240",
        "cursor": {
          "ref": "95974cc8-7bb2-4769-b375-cf978830eacf",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3c5aa5b2-b391-4995-8c37-b91548e52fcb"
        },
        "item": {
          "id": "4e212e7a-2f88-453d-9147-df0c6eb8c240",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bb32cbc0-6700-4b28-80c1-ac8d7de1cc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95242530-a18c-4e51-8e05-c4835555cf47",
        "cursor": {
          "ref": "df5313aa-4a24-4d44-a67d-cbc8cf90c021",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "da74b26e-4fec-4288-8f90-1eead42db762"
        },
        "item": {
          "id": "95242530-a18c-4e51-8e05-c4835555cf47",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "46fd71b9-5cd8-43c9-9466-2231b244ce5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41c1b54-b10b-4138-8944-d9d552de8829",
        "cursor": {
          "ref": "519810bf-27ab-475d-ad18-33afdf0afdc4",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "df3f8a4c-f259-499a-a7f4-b1ff772180b3"
        },
        "item": {
          "id": "a41c1b54-b10b-4138-8944-d9d552de8829",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b15580b6-bba4-4571-9cb9-c9493ab8074c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba17bb77-7e2d-4b8a-b45f-d0cd8a9311a9",
        "cursor": {
          "ref": "6b7359bb-725f-4068-a969-a3523c615bbe",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d3b06182-c990-41d8-a180-dfadb0b9fe20"
        },
        "item": {
          "id": "ba17bb77-7e2d-4b8a-b45f-d0cd8a9311a9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8a70e988-d34f-441a-a5ad-2a67a695418b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f047d7aa-8c87-44e1-a01d-d7af461e500c",
        "cursor": {
          "ref": "de6a0ccf-781e-47cf-9c67-0358588180ba",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2c6ce7a7-7149-4deb-af81-a64211f97899"
        },
        "item": {
          "id": "f047d7aa-8c87-44e1-a01d-d7af461e500c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "532a86fb-67e5-45c4-b19c-69f463f1b8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237fcd02-118e-4131-910e-15af4d58824a",
        "cursor": {
          "ref": "fc14b275-5242-4b77-8f06-f1a51dd81d84",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "37dacf00-c8d6-4925-99da-3a5e7ddc06d1"
        },
        "item": {
          "id": "237fcd02-118e-4131-910e-15af4d58824a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7780c837-2fc8-400e-86f6-bd8a947ea08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e6691a-03e8-40e4-b4c0-e603e4328700",
        "cursor": {
          "ref": "c2457496-4f56-4067-b940-4315ac44b06c",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "912ed1de-4c83-461e-ad83-6cf092f1c496"
        },
        "item": {
          "id": "e7e6691a-03e8-40e4-b4c0-e603e4328700",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a82665af-ebf5-4021-b3e7-b309c811e1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd61ee1-b636-432c-a833-2ef9ab611005",
        "cursor": {
          "ref": "f20994a2-77a6-4211-a294-11e5d290e741",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9244621a-472e-4558-b422-bfe7947e9f86"
        },
        "item": {
          "id": "9fd61ee1-b636-432c-a833-2ef9ab611005",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b5efa520-6592-479e-bc34-5fe18093900f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e019c20a-c9e0-4d12-9a90-db254029371a",
        "cursor": {
          "ref": "975b2132-f4f3-4da1-9b94-4d0a6073b471",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ee8deda1-3cc4-4bb0-9ed0-443357760bf9"
        },
        "item": {
          "id": "e019c20a-c9e0-4d12-9a90-db254029371a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b6188c60-1c3e-40e0-bc64-888e9dbdd6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82fbd06-aba1-47b6-bacd-6a50fc8cc503",
        "cursor": {
          "ref": "40afa0c0-56fc-4b27-ba1d-0aaf7e93b380",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dc807d17-6a76-41b4-907d-265f8f95f03b"
        },
        "item": {
          "id": "c82fbd06-aba1-47b6-bacd-6a50fc8cc503",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "721a6363-7378-497f-af60-bce43cb3b9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06b91ab-b9ae-4ee4-84f9-fb633c6a39b9",
        "cursor": {
          "ref": "338077b4-6b87-4006-a456-dcff271cccc3",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b4204794-69d2-4f6b-8b2d-814ba6742090"
        },
        "item": {
          "id": "d06b91ab-b9ae-4ee4-84f9-fb633c6a39b9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "83e9018d-545c-4582-839b-0c7c6288d2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c038857d-032b-44f2-bb47-5e17bc900f96",
        "cursor": {
          "ref": "ea129e6a-5ebb-4266-bda9-28e6462148c5",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a49b3f94-e34d-43d8-9be7-6be1548f154c"
        },
        "item": {
          "id": "c038857d-032b-44f2-bb47-5e17bc900f96",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "01ec77c9-06d7-401e-866f-c5e8371c13eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26179d3b-5920-4e0a-b4ce-d273d2677d36",
        "cursor": {
          "ref": "7f9f1985-1c57-4b8c-b643-cd0d2525f002",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "482a0899-4922-4610-b68b-bf61e12ca3f7"
        },
        "item": {
          "id": "26179d3b-5920-4e0a-b4ce-d273d2677d36",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a7b282f7-0c40-4c55-8761-52ebc1dca952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215200ed-b82c-4a84-ae62-03719117ac8b",
        "cursor": {
          "ref": "d1e52210-9b26-4a08-ac5f-1e2b449949da",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "23cdf6be-3d21-4efd-a4f9-245bb99f2499"
        },
        "item": {
          "id": "215200ed-b82c-4a84-ae62-03719117ac8b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d249da7f-63a0-4564-9422-8e20e70adb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9334ef87-0775-40d0-85fe-ccc53f3cb9c1",
        "cursor": {
          "ref": "0b2a6849-7468-4b6d-80f6-05464affe628",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3588237d-750f-47ec-8585-dcd846a708f3"
        },
        "item": {
          "id": "9334ef87-0775-40d0-85fe-ccc53f3cb9c1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f760feb4-8a02-40f6-bcc5-96b38c6b67e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565ce1d3-d095-41ab-9f1b-cddc122aeee7",
        "cursor": {
          "ref": "9c62539c-2404-48cb-ad39-40f0801d7313",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "34ea6c5b-5533-4a9f-a9b6-86fc73884f4e"
        },
        "item": {
          "id": "565ce1d3-d095-41ab-9f1b-cddc122aeee7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d2aca893-5db3-4564-9740-4805f29a71d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b04a58-8aca-4642-b2ef-13c12023a6ea",
        "cursor": {
          "ref": "1cba2adb-2711-4fd2-9100-a5e3fafac7e0",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "43e0268c-e47d-46a6-82f9-79b549f550e1"
        },
        "item": {
          "id": "f4b04a58-8aca-4642-b2ef-13c12023a6ea",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "415d1655-2069-4d1b-80d2-6f4ce222804e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bc30d7-a204-448c-8cb0-aa790742c5eb",
        "cursor": {
          "ref": "b5f1f175-3c44-4ade-9368-e5adc6a965f2",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a0117fc8-44f0-4460-8c87-9f9138afee12"
        },
        "item": {
          "id": "63bc30d7-a204-448c-8cb0-aa790742c5eb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "088fbcee-a5a9-4f6c-bc49-11b84e331557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1bd40c-fab9-4cf7-bf65-163b1f9b802b",
        "cursor": {
          "ref": "8e1124bc-9019-4862-a6b6-80ccc4256cfe",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d9a55d05-6509-47eb-8a01-5bd34f781a40"
        },
        "item": {
          "id": "2c1bd40c-fab9-4cf7-bf65-163b1f9b802b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6221a8f4-a596-421a-9679-56b0ac27d06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7750aa-784e-41b5-8c3e-e6694706a4f8",
        "cursor": {
          "ref": "95f37952-c4d8-42a8-8faa-13c5fc77f0b9",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "647abd84-7c52-4e84-9cd0-e7f0fd1975a1"
        },
        "item": {
          "id": "ce7750aa-784e-41b5-8c3e-e6694706a4f8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d8b713d1-aafd-464b-854d-a0e56c61e3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0155c1-7b21-4992-9eac-59d5e0934aff",
        "cursor": {
          "ref": "91da7ce6-098e-4a8e-8422-f5eb4200286a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "17a20b6d-0521-41b3-8b1a-7b4e28d4ab4d"
        },
        "item": {
          "id": "fe0155c1-7b21-4992-9eac-59d5e0934aff",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "33354a2a-1930-472e-9851-d0ed3c44dafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66ee874-ae82-4655-9a77-81379b918632",
        "cursor": {
          "ref": "038cdbd5-782d-4fd4-9a67-ee7f146922bd",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "202c8aa7-99d7-4062-ba9c-639d3b815cd2"
        },
        "item": {
          "id": "d66ee874-ae82-4655-9a77-81379b918632",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e29716a5-6b24-45ac-bfba-984e37189c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074f8e54-0f07-464c-a35a-790db12ba5ba",
        "cursor": {
          "ref": "c8aed0e2-970e-4375-8ca4-c5aef456df60",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "92d32a36-d1bd-4534-bbae-dbf99a6a7bf7"
        },
        "item": {
          "id": "074f8e54-0f07-464c-a35a-790db12ba5ba",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c923135a-2891-4634-a9c5-2cdd798940bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ec3c19-fce7-4310-83d4-0319b45d08d2",
        "cursor": {
          "ref": "e7fe8a9c-6128-4c43-a7af-159c5ce16bfb",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e67518cb-bf37-47e5-a941-0d340f5c6501"
        },
        "item": {
          "id": "b6ec3c19-fce7-4310-83d4-0319b45d08d2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5e1a1896-8018-4d32-82ec-3a7585726b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b2564b-8557-4301-9097-987e775f181b",
        "cursor": {
          "ref": "e3217fe4-2b4a-44ef-8d8d-bcc44ea12c85",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a124980a-97b6-473f-8491-ae48f9755c38"
        },
        "item": {
          "id": "05b2564b-8557-4301-9097-987e775f181b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3f07b7fa-b3db-4d0a-8d4c-fe6d452a85f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ea8b57-e881-41ac-946b-7b04c1025d80",
        "cursor": {
          "ref": "5c31d0ba-3af4-4d37-832b-bfb93979df18",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bf537cb6-5152-4392-9a34-15542bcde04f"
        },
        "item": {
          "id": "a9ea8b57-e881-41ac-946b-7b04c1025d80",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ae24d455-b37f-4cbc-b84d-eb6799d73459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46129daa-52c6-495b-87ed-1c7b29845938",
        "cursor": {
          "ref": "7f045ca2-8b01-431c-8531-c4bc35f2b457",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "095af53a-3ce0-48a5-95d5-388e5ad17525"
        },
        "item": {
          "id": "46129daa-52c6-495b-87ed-1c7b29845938",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fc51d16a-99c7-4979-b2c9-b405736a1fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee19f61-2db3-4395-b5bd-2f2682273e72",
        "cursor": {
          "ref": "86662a2c-5084-4341-a467-49ee06917955",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8904ddf9-0fe8-4091-b5cc-5eedce0dbf57"
        },
        "item": {
          "id": "1ee19f61-2db3-4395-b5bd-2f2682273e72",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "343288c6-bf07-4657-afd9-51633364b708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1321a6a-6e0f-4882-800b-053a8b2fd53b",
        "cursor": {
          "ref": "c4d857a2-cb49-4aba-b4f4-1d592b7229da",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9d480dac-46fb-4c3a-8d7d-8cdc8043c832"
        },
        "item": {
          "id": "f1321a6a-6e0f-4882-800b-053a8b2fd53b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "84aa3b33-61d5-49f0-851e-99fe475578a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6354eb6-5e8b-44dc-97d8-79dd02425e28",
        "cursor": {
          "ref": "02200b8b-4de4-4a90-830f-19e59dd2eda9",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ac069269-4b6f-420f-aa9e-dc15a4343831"
        },
        "item": {
          "id": "a6354eb6-5e8b-44dc-97d8-79dd02425e28",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0843bea5-c2fc-4ec0-ac22-4516ee9003eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65af02b-2fde-4162-bb60-df419ad67a3b",
        "cursor": {
          "ref": "fb1bd5dd-f1f8-4075-ae3d-b431b9e59ec7",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c326a68c-e7a8-42f6-96aa-55ae28cb630f"
        },
        "item": {
          "id": "e65af02b-2fde-4162-bb60-df419ad67a3b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fa18ab31-25e8-4470-9115-71f114bf248b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf918223-52f7-4c7f-b187-b78b76adb785",
        "cursor": {
          "ref": "3d6d1ba4-7e77-4c1b-b663-5e933f2127f2",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a8857cb7-3387-4a55-9570-ab28ee40a056"
        },
        "item": {
          "id": "bf918223-52f7-4c7f-b187-b78b76adb785",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1935fd40-a421-492f-9680-9b85b7f31b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9d2c8a-07f9-430f-9e8d-fe7cb40d7e86",
        "cursor": {
          "ref": "2a418984-0d3c-42aa-bfff-800839af344d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3bcd38bb-56d0-429a-a734-7ad7008fd384"
        },
        "item": {
          "id": "ed9d2c8a-07f9-430f-9e8d-fe7cb40d7e86",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "16682909-0423-4d4e-897f-c987f6370775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75491685-62ff-4774-b7ad-7c5bafb58e73",
        "cursor": {
          "ref": "18c09f52-bf94-4fc8-8154-dcc5a7a4c1bc",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "83b9bc77-b39b-46bb-9edd-0749ec67a846"
        },
        "item": {
          "id": "75491685-62ff-4774-b7ad-7c5bafb58e73",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3d8c9ef9-cbd2-4a9b-b89c-41abbb938bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5483faff-845c-413f-af61-d9a42a3fdfdf",
        "cursor": {
          "ref": "e67d7cc3-4b87-4e5e-bd3e-8c53a9799992",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "70d18f58-739a-4656-b78a-34c7ed8e2557"
        },
        "item": {
          "id": "5483faff-845c-413f-af61-d9a42a3fdfdf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "daef8bf5-2b6b-4092-ad95-5a55800c04da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ca6a74-b0a1-4368-ae1c-9af57bd018d5",
        "cursor": {
          "ref": "eeec5b99-bab2-4251-8b40-5c6ccec10c9b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4bfd0496-1a57-45dd-8fb9-e04110e12c9b"
        },
        "item": {
          "id": "f3ca6a74-b0a1-4368-ae1c-9af57bd018d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7c09f668-0e3d-49ba-91b4-ff2196188af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e59e71-eee0-4c99-8b89-663a87d17aa7",
        "cursor": {
          "ref": "853c2b0c-aff9-410a-81b7-5e86bbe1a8d3",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ed40507c-26ab-49b8-ba2b-45b609976af7"
        },
        "item": {
          "id": "b2e59e71-eee0-4c99-8b89-663a87d17aa7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5c034e24-05bf-47e2-9081-f897f6ae56eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a5c911-e8cd-4858-ae95-3a44e2bcd47c",
        "cursor": {
          "ref": "f7506d10-e81a-45a6-9ffa-036088391c65",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5102c3aa-4165-4e9f-84b6-4e727de1d05a"
        },
        "item": {
          "id": "a4a5c911-e8cd-4858-ae95-3a44e2bcd47c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c31e1a0c-ff24-4d79-a6e5-9aa399463e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf2f030-dc19-4ea7-abe4-646235085d0b",
        "cursor": {
          "ref": "10fc1897-ab4d-4b3e-aa6e-0f41a7ed12a6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4ef2182a-972d-4ba1-949b-d80688fea8f5"
        },
        "item": {
          "id": "caf2f030-dc19-4ea7-abe4-646235085d0b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3ae2e30e-7c62-4ec6-877e-3932dc2d9073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e7e5dc-8138-4c52-bfc9-8d1f49a8ecb8",
        "cursor": {
          "ref": "3076b3ca-d981-4378-b46d-30cdfe8f73aa",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d306f656-ad04-438a-9e90-c2dcee31cd56"
        },
        "item": {
          "id": "96e7e5dc-8138-4c52-bfc9-8d1f49a8ecb8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e57822dd-83c8-4995-8114-53f584f4010f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca259d7-6752-4a67-8d42-424c5e57428e",
        "cursor": {
          "ref": "2cfaa484-929b-40fb-be4e-127d491a5e7b",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d5eb903a-c340-41dd-9451-13aa2e46388c"
        },
        "item": {
          "id": "fca259d7-6752-4a67-8d42-424c5e57428e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fd338af6-26a4-40b2-ab08-11d15914f143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c83576e-51e9-45a1-a28d-179a873e378b",
        "cursor": {
          "ref": "72856e3d-0511-402c-aad7-6f4bf5f265d6",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1c97c99d-e8da-4750-a354-25d4e3451898"
        },
        "item": {
          "id": "3c83576e-51e9-45a1-a28d-179a873e378b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c7b5924d-1e03-4365-87f5-d2e29868d414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ad1a3f-9343-4f5d-af2b-5025879cd57f",
        "cursor": {
          "ref": "8d5b41e7-4d46-4421-8e87-925a8a8aeda4",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5828b6a0-787e-4607-a5b4-c4ade92478d5"
        },
        "item": {
          "id": "72ad1a3f-9343-4f5d-af2b-5025879cd57f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "721cf059-c0b6-4930-88e9-9f695031dcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3002e540-8b4c-42cd-ad8c-f302ae3bf21d",
        "cursor": {
          "ref": "f8d1db71-3e9b-4faf-a57a-f07c9ba411f5",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "307504c4-b036-45fa-9703-9f2fcaa2d2f1"
        },
        "item": {
          "id": "3002e540-8b4c-42cd-ad8c-f302ae3bf21d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2118a769-f671-4e60-ae8b-f6474fd24a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a91bcf1-bf48-41b6-b3c0-4e9a481bcbfe",
        "cursor": {
          "ref": "21d4e144-ab35-47d1-b2f6-f3505f3fcd5c",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "aacb1a13-4a38-4ea5-8ed5-48eeba1c1d75"
        },
        "item": {
          "id": "4a91bcf1-bf48-41b6-b3c0-4e9a481bcbfe",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "64ec46c0-2938-4249-a582-c556e4fcfe20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f2717f-d3b9-4381-908d-5ccc6c39aa8e",
        "cursor": {
          "ref": "9eae5510-9672-4527-be64-11d5dbfea3f6",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "92018e11-a5f1-4214-b706-5e15c781118b"
        },
        "item": {
          "id": "e8f2717f-d3b9-4381-908d-5ccc6c39aa8e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "98ff564c-27ed-419a-979e-4379b397426b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a3add1-4e46-4d2e-86fb-6edae1ee92d0",
        "cursor": {
          "ref": "1c186a1f-ed0d-49ba-8f21-715fbf784f38",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "caea275e-322c-4160-8495-5d75a3d90d78"
        },
        "item": {
          "id": "06a3add1-4e46-4d2e-86fb-6edae1ee92d0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "70b8d833-311b-4322-ba0a-f103d4e6cd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4600a1ae-2857-4f30-8419-9f8c08824d7f",
        "cursor": {
          "ref": "9bff035b-84b9-405c-b020-6e454a3e692e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5eeeebda-41d1-49d6-b935-148fcaa8400b"
        },
        "item": {
          "id": "4600a1ae-2857-4f30-8419-9f8c08824d7f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "210995fa-1f6a-4559-a2d5-624c60b37089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e989356-2a20-43fa-b7fe-6f48bc1220e0",
        "cursor": {
          "ref": "3fff8388-dd51-470f-858c-36203353fc8d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "16ccd340-68d9-4038-98ab-b3fc96d9f0bd"
        },
        "item": {
          "id": "9e989356-2a20-43fa-b7fe-6f48bc1220e0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d4f0242c-17f5-472a-a7c3-301a776e1abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9271f3db-e698-463f-9c48-cb83a76d4a08",
        "cursor": {
          "ref": "18dcc204-3443-4130-9732-44b918f87d13",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f6301f34-3731-41cd-8eed-a43f72352aa3"
        },
        "item": {
          "id": "9271f3db-e698-463f-9c48-cb83a76d4a08",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3de252ff-364c-40cd-b741-4501fedd7cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde1e4d5-e39c-4f3c-836c-467571ad0268",
        "cursor": {
          "ref": "434cfb85-7cb4-4c88-86a9-62d9b751c96d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5d071cd1-ab6e-4593-af67-2f036e4edf39"
        },
        "item": {
          "id": "bde1e4d5-e39c-4f3c-836c-467571ad0268",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8a7c2e67-b702-4b2d-949e-6d39e89133a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1849059-ab97-4af9-a92b-da99f4b6ba69",
        "cursor": {
          "ref": "2791ad54-e12b-4ada-844f-f704110cf9eb",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b82ccea8-1a86-46fb-aa0e-52e85c7241f9"
        },
        "item": {
          "id": "d1849059-ab97-4af9-a92b-da99f4b6ba69",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "158bb079-f548-4e53-9bca-da30c216b557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902e5107-1c5d-4b5c-b7bd-ec705bcde2f7",
        "cursor": {
          "ref": "514d6bef-1e61-4952-9ef4-fe41cfb12bf7",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "178ce8b4-7a45-4d4a-9b2e-b023ed40e0c2"
        },
        "item": {
          "id": "902e5107-1c5d-4b5c-b7bd-ec705bcde2f7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0f9ea183-bf45-46e3-8938-ecc08c087e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74002d97-c2c3-4bfe-8db9-795756180111",
        "cursor": {
          "ref": "a2e1918f-4552-4d5e-86eb-b9ba197f7b56",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "da4384b8-83d8-484e-96ba-235873e937e6"
        },
        "item": {
          "id": "74002d97-c2c3-4bfe-8db9-795756180111",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1ef3ee51-6dfd-49d9-aebe-92f76539a667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5ff4e0-9c40-46ad-8cfa-2de34e566ef6",
        "cursor": {
          "ref": "226308a4-6393-4f91-a771-55d1cbc911db",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "45905666-8e04-4600-9b70-2ae1853d6420"
        },
        "item": {
          "id": "1d5ff4e0-9c40-46ad-8cfa-2de34e566ef6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "798fac3d-d884-46c3-a9a7-1a65573653ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c53211-5d5c-4777-9fd6-82fe8af997c0",
        "cursor": {
          "ref": "acf50ff0-297f-456b-a2ff-b9476b963d3e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2fccb67c-b86e-4d0f-8e54-c1e99298a954"
        },
        "item": {
          "id": "f0c53211-5d5c-4777-9fd6-82fe8af997c0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "54788453-5386-450a-a983-0153c1000684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fb38d0-91d1-4eeb-86b1-05626900dd40",
        "cursor": {
          "ref": "b3c87ec1-c884-43d0-960e-28e44308959e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4a68b84b-be80-474c-99bd-821151f6b6ba"
        },
        "item": {
          "id": "c0fb38d0-91d1-4eeb-86b1-05626900dd40",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7259292b-8835-4266-abcc-a1d05c889eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9790a792-1181-4aba-900c-4952339bfe54",
        "cursor": {
          "ref": "eb5d446b-4f2b-4243-ae1d-be9c51f7a830",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "30d2fcc7-2a78-4342-b47c-7de750eb2316"
        },
        "item": {
          "id": "9790a792-1181-4aba-900c-4952339bfe54",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "badeb040-a576-4b91-89ac-c2ae4585ab07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f840f9c2-89e8-4fdc-bc02-b24bf080eabb",
        "cursor": {
          "ref": "0e3b75ae-bd4e-49bf-b188-f0060e4cc7ac",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4c439fc2-0260-4fe7-b2fc-384345ef1886"
        },
        "item": {
          "id": "f840f9c2-89e8-4fdc-bc02-b24bf080eabb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e9f51478-a5e2-4160-a0c1-417d83ebf562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e2ca05-1fe3-4241-a79f-7e5d2ecc1f2a",
        "cursor": {
          "ref": "83db2f70-d260-447a-a2d1-bb12a60a2782",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7ef8b30a-f988-4169-946f-6f30b7b83629"
        },
        "item": {
          "id": "f5e2ca05-1fe3-4241-a79f-7e5d2ecc1f2a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e1d338ac-bcd9-47ec-b356-404ede5bdb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6168a1-37fe-4617-b434-6f1003592c4e",
        "cursor": {
          "ref": "b4d7465b-d6cc-4827-963a-a8e3290bd359",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "84289de4-66e6-48ff-8782-e5c04396cebc"
        },
        "item": {
          "id": "3a6168a1-37fe-4617-b434-6f1003592c4e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "897986a5-2dc3-4fcc-8348-e1ae6165b5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46808cb-94a0-4fd6-837a-dbd07344138b",
        "cursor": {
          "ref": "5c1d2b9e-e052-445e-ad68-0deddd99c84e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "65772686-188d-4168-925c-0a9e3a05b4b9"
        },
        "item": {
          "id": "b46808cb-94a0-4fd6-837a-dbd07344138b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1ec4eff1-5bf8-47db-8e2f-7fa4ecde9585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be138bd-e618-409b-b5b5-149c95c7d74e",
        "cursor": {
          "ref": "5b0606d0-9d39-4d40-95fb-6f059ea5bbee",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f506030e-158c-4ead-b1ac-04f6b19be061"
        },
        "item": {
          "id": "5be138bd-e618-409b-b5b5-149c95c7d74e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cf2385df-315d-442c-b4a4-af675e7a6483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89147c1a-ab85-424b-94aa-f5c924cab5ef",
        "cursor": {
          "ref": "bfa933d8-07ba-4572-a7d6-6531f994ee7b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8c4b084f-c2d3-43c4-b3e8-10dc77c6cf82"
        },
        "item": {
          "id": "89147c1a-ab85-424b-94aa-f5c924cab5ef",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fa5f3c2b-ab96-42a9-ae82-34fb751a340a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cf16e0-ebb2-41f0-96bd-1fc578810077",
        "cursor": {
          "ref": "81ec40d1-750e-4640-a81e-f02f9ec97ec2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "03c9b8ad-1215-4ffa-a79e-6b996562f533"
        },
        "item": {
          "id": "d2cf16e0-ebb2-41f0-96bd-1fc578810077",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1d5b41e7-36b3-47a7-9adf-dc11296e1674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbad24e-3410-4e60-8a1b-673e3c0190c2",
        "cursor": {
          "ref": "c495abfe-540a-40aa-bb51-0d8e05606040",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "523c8fce-b4b4-49c6-82fe-defc2a41b114"
        },
        "item": {
          "id": "6bbad24e-3410-4e60-8a1b-673e3c0190c2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ce42c5fa-7195-44e0-8a2b-adbebafd4eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dca6ae-71eb-41fc-8669-274ab8dccfb2",
        "cursor": {
          "ref": "df4eb06f-8ac7-4847-ab9d-4660748af052",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "740d1d8a-61dc-49db-af96-ea90b72ade36"
        },
        "item": {
          "id": "f8dca6ae-71eb-41fc-8669-274ab8dccfb2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "07e00b38-1581-4147-997a-d6129a59ca0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31db6b68-bf6f-450b-b242-6887e18ac06e",
        "cursor": {
          "ref": "9a517684-5e9f-4d15-ab18-8d817423e43a",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9d227bff-500d-4bba-859b-b1dec2e7e46b"
        },
        "item": {
          "id": "31db6b68-bf6f-450b-b242-6887e18ac06e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "232865d7-459a-4f88-8692-383fcc166d64",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c34d55a-2525-4601-99e1-9e14cba2afd8",
        "cursor": {
          "ref": "e9b88e97-cb85-4632-88f5-e0186cc640b1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "81d863ac-d8e1-4c8c-9b1c-65cbd5e63867"
        },
        "item": {
          "id": "9c34d55a-2525-4601-99e1-9e14cba2afd8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1af4c1a8-258b-43ec-ae04-17a26601d33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "158fcd31-5c36-4525-a45b-35249ab2cf5a",
        "cursor": {
          "ref": "ae0d3ecf-aed5-4bb3-8089-de7e5f1ab6ce",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ba9983ad-9713-41fc-9560-379726796705"
        },
        "item": {
          "id": "158fcd31-5c36-4525-a45b-35249ab2cf5a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "14a46a03-49da-484b-9f86-5ddae681c1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9334f5db-274f-43a2-ade5-24b8d3b9ffb3",
        "cursor": {
          "ref": "2a626436-ff91-4b7a-af91-ede7e47c5a24",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "778c8001-2100-45c3-8391-c06724a0268e"
        },
        "item": {
          "id": "9334f5db-274f-43a2-ade5-24b8d3b9ffb3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "647265c8-bff1-4fba-a58a-605b6e664190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "dafa8455-c515-41df-be68-480560374b31",
        "cursor": {
          "ref": "8c78cd83-c5c7-4490-95e1-96379f6e8f59",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8f6c205c-eecb-4b1d-9ae3-d9ffbce1eda5"
        },
        "item": {
          "id": "dafa8455-c515-41df-be68-480560374b31",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2f6fee55-cd55-4131-9799-db92dc5aa970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "3aa19707-ff56-4333-9c8f-f1768019b3d7",
        "cursor": {
          "ref": "9b0158e7-0fb9-448b-97a4-9d36a5b3600b",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2a90760c-1217-46c8-bdf1-4d04a299639e"
        },
        "item": {
          "id": "3aa19707-ff56-4333-9c8f-f1768019b3d7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3db94b2e-128b-4736-b3f2-ac5cc99e4369",
          "status": "Created",
          "code": 201,
          "responseTime": 11408,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed2b814-64a4-4c69-8888-983b8987a650",
        "cursor": {
          "ref": "a76469c3-9d81-415e-ab90-0a509b816c79",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8afde0c8-cbe0-4f6b-a330-3fb6d948bd4c"
        },
        "item": {
          "id": "8ed2b814-64a4-4c69-8888-983b8987a650",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "71bd0610-dc00-4fe0-95a0-db3f63e1212b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e0b58ed4-5daf-4b86-b661-e1169f6d3f7b",
        "cursor": {
          "ref": "2313e6b4-3915-4d01-a1a3-59d049b813bb",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3f696ec2-8f5e-49b9-bf0b-69c9325c9463"
        },
        "item": {
          "id": "e0b58ed4-5daf-4b86-b661-e1169f6d3f7b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f60db7b7-c64c-4557-8892-62a306166acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a61be137-ebcd-4cbd-a798-012dcc5a92a5",
        "cursor": {
          "ref": "e6e51153-4952-46aa-8e16-b511aeac9b79",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7a827e80-6ac6-4b02-84ab-f66e4ea3c290"
        },
        "item": {
          "id": "a61be137-ebcd-4cbd-a798-012dcc5a92a5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "50a3a25f-2429-4bda-9ef7-bd1e04f19c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff8184e-c067-4245-a269-b1bda3fae24d",
        "cursor": {
          "ref": "5e7eb46e-054c-48ee-a430-f14c7c3db219",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0e11535a-bf53-46cf-ba01-2a0a6b1cb3ae"
        },
        "item": {
          "id": "5ff8184e-c067-4245-a269-b1bda3fae24d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a9a7e776-bcba-44da-9431-8063c7d6d908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682e6ea2-8a1d-4032-9fc7-c88676d80d7b",
        "cursor": {
          "ref": "8b5b7671-6d41-4334-b799-ce2b80b11ba3",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d027b44b-f04e-45c9-aa5c-8199adb4f2ac"
        },
        "item": {
          "id": "682e6ea2-8a1d-4032-9fc7-c88676d80d7b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9a8ee5ef-c153-4c9c-aa9b-a39a9e5642d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ad75b6-98ff-4eb5-9e4d-0ed1a4942656",
        "cursor": {
          "ref": "cf6135d3-d407-4b60-9caa-bcd4b2b245ae",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c92b50a1-0225-4a1d-8ddf-ae812f5b6b59"
        },
        "item": {
          "id": "c8ad75b6-98ff-4eb5-9e4d-0ed1a4942656",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "40fed197-675c-4725-8109-e5239d4aa4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cec849f-a0ad-4656-89f4-4cae13a2cc35",
        "cursor": {
          "ref": "59c68097-6f65-411a-bc4e-6c1496b55e5a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f7bdd0ac-3334-45ab-b363-15bb7dd6100a"
        },
        "item": {
          "id": "7cec849f-a0ad-4656-89f4-4cae13a2cc35",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4609b0e8-8de0-45d1-8500-f28c4aa2e642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31078339-6440-4993-81c0-cb7c66ca7510",
        "cursor": {
          "ref": "62b68486-ae9b-4e9d-ae3c-f8e9eb869248",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9e038923-5d93-4166-a976-52d93271cdd1"
        },
        "item": {
          "id": "31078339-6440-4993-81c0-cb7c66ca7510",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a5df50d0-6dd9-4b20-9000-13d7083da2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9f01fc-c119-4e4b-982c-642cc7f5b8ad",
        "cursor": {
          "ref": "19c81a20-712b-4dc3-a134-e479e407f991",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4c49c61d-0054-4074-aaf0-5a9182184f90"
        },
        "item": {
          "id": "4b9f01fc-c119-4e4b-982c-642cc7f5b8ad",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4603c184-1332-43fb-a666-d4a368f98ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec2f80d-3481-48ca-80fc-5d8581eba197",
        "cursor": {
          "ref": "b5d6082b-8851-424e-9998-5b33f15803b7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f741f46d-f901-4879-9b9f-972d002c384e"
        },
        "item": {
          "id": "eec2f80d-3481-48ca-80fc-5d8581eba197",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a83324d9-3f76-493d-b64b-4731c2bf68db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ac4e0a-7e3b-43c4-ac87-c79de31973e8",
        "cursor": {
          "ref": "c96e24da-6b44-4a30-83d8-1429814c2ee0",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d5f28563-45ae-4cd4-9f4f-fcca1e0b5b85"
        },
        "item": {
          "id": "51ac4e0a-7e3b-43c4-ac87-c79de31973e8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "72c1b289-e4a9-4643-ab78-c6082c2e0b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bd103c-cf88-4ab5-a976-017752090ede",
        "cursor": {
          "ref": "defd1a36-5993-4ee1-9693-c2bcabc7dbd0",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "544d5db4-9a18-4813-b206-53fd32172bdf"
        },
        "item": {
          "id": "66bd103c-cf88-4ab5-a976-017752090ede",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9a4e4be6-ebc8-4788-8514-2b28edb4b76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a70dc00-8ff6-47ee-a3f5-083d5b9c35ee",
        "cursor": {
          "ref": "b3e4370f-13d0-45c9-9492-4112d58ef2bf",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f5032ccb-cf3c-4a8a-9de5-fe80441ebcc7"
        },
        "item": {
          "id": "5a70dc00-8ff6-47ee-a3f5-083d5b9c35ee",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "84494a87-da31-41ee-973b-30f71c8d4c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1675391f-c9c5-411c-bc2b-d0859b48899f",
        "cursor": {
          "ref": "afb93ebc-2c52-4151-ab2b-a8187a9987b3",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cd8f6e8a-8019-44bf-ac32-ccf4a69f5375"
        },
        "item": {
          "id": "1675391f-c9c5-411c-bc2b-d0859b48899f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2c6db74a-3cd9-4df4-9ff5-25f8eb2289f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ae8090-4814-47ab-aace-4f70efcf6051",
        "cursor": {
          "ref": "8c1fe422-9ed9-42ee-805e-74440e501e1d",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c4669384-7274-44e5-abb8-17c3ef9cd463"
        },
        "item": {
          "id": "d7ae8090-4814-47ab-aace-4f70efcf6051",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1aee1641-73da-4756-ba67-e4910142acec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3436fc0c-26a9-4414-ad79-a435d308acd0",
        "cursor": {
          "ref": "a13c41aa-5cf5-43bc-bd75-407e11856d67",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ba5da059-a0cb-49e5-b83c-c1367ffce970"
        },
        "item": {
          "id": "3436fc0c-26a9-4414-ad79-a435d308acd0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "39a78f7a-3390-450f-a34d-68f87c19dce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564d5b25-cc9a-4279-b53c-7d3637247abb",
        "cursor": {
          "ref": "5d4706a2-7b40-46df-aac1-bbed502f1dae",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "306ccbed-a8a6-4522-82f0-1759b5af4bca"
        },
        "item": {
          "id": "564d5b25-cc9a-4279-b53c-7d3637247abb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "86cf7302-ba6c-4745-87de-4d2467d0f154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d0860c-f28f-4add-9c45-600041dbe018",
        "cursor": {
          "ref": "fb7241ae-b494-452d-b8c8-16b5dda6ca0a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "23c65afb-e4c7-44fe-96cd-3875102644a0"
        },
        "item": {
          "id": "25d0860c-f28f-4add-9c45-600041dbe018",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bdfc5221-59dd-44fd-a944-fd652ae8b207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bdd1c8-c52f-4a82-8198-de3ee3a40143",
        "cursor": {
          "ref": "62239b3f-19c3-454d-862a-d16cf5b59f0b",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "808ea994-4bf0-41f1-867a-5d148fd8ac61"
        },
        "item": {
          "id": "25bdd1c8-c52f-4a82-8198-de3ee3a40143",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "07f34ca8-f7e9-41b4-9a42-e9b17176b8a6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "9b202484-63eb-466f-896f-ccc8b4d1b7eb",
        "cursor": {
          "ref": "89167247-9678-42ad-a2d5-2258b7ba4a18",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4a60881e-f9af-4a97-98cd-b6a4189aee7f"
        },
        "item": {
          "id": "9b202484-63eb-466f-896f-ccc8b4d1b7eb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0424d473-0c96-4970-92b5-9c12560d3896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f7cb72-fc2b-48e7-948d-71568cd53f03",
        "cursor": {
          "ref": "f9453601-55d9-4caa-9a89-818157612bdb",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cb0dce3a-8302-4e40-96d7-2f75946d7e88"
        },
        "item": {
          "id": "01f7cb72-fc2b-48e7-948d-71568cd53f03",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6d532b7e-b1ce-4a9e-ad93-52bba7f1e493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f281a345-d959-4b62-8c05-fc23045ea548",
        "cursor": {
          "ref": "f6c8c17a-1c9e-41bc-8a83-b1bbb8c92165",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e98ef903-2c28-444c-8ae3-88276284d381"
        },
        "item": {
          "id": "f281a345-d959-4b62-8c05-fc23045ea548",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c9ca70d5-3110-45a3-969b-24b4f65f66e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b328dbd-3d6e-48f4-9e65-1bb927e719bb",
        "cursor": {
          "ref": "135b9854-1877-4817-ad83-4c0c5d92055f",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a67a30b7-d801-4b9a-9aed-1fe929ae6d2a"
        },
        "item": {
          "id": "4b328dbd-3d6e-48f4-9e65-1bb927e719bb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b3f8ca87-7cd2-4ee5-8c5d-e98e0ece8d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ae3b8f-f195-4b38-a2af-ff4d404b5cdb",
        "cursor": {
          "ref": "e9b0f116-c069-4782-97ff-5d44eff05f5f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8366e055-04c8-4cd1-b994-613d083c33dc"
        },
        "item": {
          "id": "68ae3b8f-f195-4b38-a2af-ff4d404b5cdb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "db47b7ad-bda7-4935-b1b3-3891606d7c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a710a3c-fb01-4815-811b-4f613693d7bc",
        "cursor": {
          "ref": "b64a74f0-f3d7-43d3-8f24-7cdda936434f",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "924c0a0f-da00-4bf0-9c88-13a52238592c"
        },
        "item": {
          "id": "2a710a3c-fb01-4815-811b-4f613693d7bc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fc27ab5e-2156-4293-9158-91f84d784345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e40ad79-9776-4a63-a83b-496a50077ed1",
        "cursor": {
          "ref": "8a035edb-fc22-43b3-8908-e2a654f321e9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2ac570bd-c40b-470c-b1d4-984e534fdea6"
        },
        "item": {
          "id": "5e40ad79-9776-4a63-a83b-496a50077ed1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7e88f054-1510-4379-b7b7-891df3043a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98698c2-aceb-4933-a087-65a0b5e0260f",
        "cursor": {
          "ref": "afc9cef8-847a-4aab-af01-ec866463977c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8161878a-cbd6-459a-81b3-599914817bdd"
        },
        "item": {
          "id": "e98698c2-aceb-4933-a087-65a0b5e0260f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "01fb1d7a-adb5-439a-80d8-f06cb109cd06",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "18578a11-9cd9-41ef-904a-337f5152bb56",
        "cursor": {
          "ref": "3da4ee77-08b2-4bbf-b0ae-af02cc6a55ce",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ffc36163-c67c-4896-9c88-4837797dbeb1"
        },
        "item": {
          "id": "18578a11-9cd9-41ef-904a-337f5152bb56",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6fb95d40-f3b1-4b31-b8ef-63daf968d896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9a2822-7404-4cec-a74a-f9687053feaf",
        "cursor": {
          "ref": "75739b28-750f-4413-8735-09bddd31825e",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f9fc019f-6007-4071-b712-04dc3b28cddb"
        },
        "item": {
          "id": "5a9a2822-7404-4cec-a74a-f9687053feaf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "68f6f870-1dfc-4ef8-a18d-b3d150f0a964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f607fe0b-c4f6-44cf-bbc0-37180795f7e6",
        "cursor": {
          "ref": "682ec002-a162-4c3a-ad26-6e6200a7ef72",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6f2ea0be-14a0-4cd5-a988-3d8e11078a37"
        },
        "item": {
          "id": "f607fe0b-c4f6-44cf-bbc0-37180795f7e6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "42b5b8f4-42c6-4bf1-af1e-5442175302fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f9407b-16ba-4036-9295-11907ed0a048",
        "cursor": {
          "ref": "874369cc-634b-4436-8c27-78755a7e9fe1",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "512a9485-11b2-45f3-bc25-1d07f8eb6814"
        },
        "item": {
          "id": "a4f9407b-16ba-4036-9295-11907ed0a048",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "56e22f22-0a7d-4fa9-ab67-b38c0d5c636f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b69d23-c241-4d91-b727-b7806a367bd6",
        "cursor": {
          "ref": "b773c171-f813-4387-af67-440f21496701",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "65e3e09e-3208-46cd-87b3-fb1336f9cfc5"
        },
        "item": {
          "id": "e0b69d23-c241-4d91-b727-b7806a367bd6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "15bd6e6e-0782-4085-9c04-b523dfece185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8240c1-2764-4464-b754-e70e16012b6e",
        "cursor": {
          "ref": "57cae197-7c0d-443d-9d6f-f8b2d842c195",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "697b4025-66d5-4e28-b5a0-0e7d4060dd07"
        },
        "item": {
          "id": "ac8240c1-2764-4464-b754-e70e16012b6e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "40ec5c94-0c80-403e-9c2e-5015357c87f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7216b4-1b7d-4310-b72c-c82d09213d45",
        "cursor": {
          "ref": "0f92f3ed-71d9-492d-a6aa-ebdc37fe1b4b",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "50e9949e-0037-499e-8029-5bf51c5a4be5"
        },
        "item": {
          "id": "db7216b4-1b7d-4310-b72c-c82d09213d45",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "56ad8443-1483-4a28-a3c2-85a1acc1d592",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "2e088075-c2a4-48f8-a421-e8f43ae38f84",
        "cursor": {
          "ref": "3e27ccd4-5463-4b42-91a7-4f2a06808f81",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7d564097-8662-42d6-b8b4-43cf023dbd30"
        },
        "item": {
          "id": "2e088075-c2a4-48f8-a421-e8f43ae38f84",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d0ffd74e-908e-4dd3-a14e-47751ff943ef",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "550d1e11-741d-44a7-83ac-2bf2b36fe3b8",
        "cursor": {
          "ref": "e19570d1-7c79-46b2-bea0-d26a2168692a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6390ac5f-6ebc-4449-86cc-f2fecd672dba"
        },
        "item": {
          "id": "550d1e11-741d-44a7-83ac-2bf2b36fe3b8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "97bd2244-2a72-4598-9065-ca7667bea606",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 79,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "6473176c-163e-4b94-8146-94d3727de41f",
        "cursor": {
          "ref": "72ca4a06-f322-473e-a7ec-e4139b826a8e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "130423b2-9f07-4225-9e47-68d320752000"
        },
        "item": {
          "id": "6473176c-163e-4b94-8146-94d3727de41f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "87d75ca3-46ec-47ad-8c6a-e879cacdc766",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "db37068a-5d7f-4fbc-aa18-386a002056c5",
        "cursor": {
          "ref": "ece7e9de-7ffc-4b6d-96fa-fdd499b148f5",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0f8d789a-e1f7-425e-b6cc-ea220c099fbe"
        },
        "item": {
          "id": "db37068a-5d7f-4fbc-aa18-386a002056c5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "04e4d662-f669-41c5-98b1-629a9da004e4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "1105d004-e322-4201-a353-4e64db5a0ade",
        "cursor": {
          "ref": "149e780f-d377-4703-bc8b-37edc276e4ea",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "aa8d88d9-b6b4-41f0-83e7-8f4758ffd63d"
        },
        "item": {
          "id": "1105d004-e322-4201-a353-4e64db5a0ade",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "344f37b4-0efb-4a80-9356-cfa0db67d0da",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "15402798-676c-4672-9579-3007422db9e0",
        "cursor": {
          "ref": "1a1d5899-9675-4a6b-adf9-d759d688fba6",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "063b5aee-b2fe-4ac7-8878-a5ea37587912"
        },
        "item": {
          "id": "15402798-676c-4672-9579-3007422db9e0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "873dc3ac-3cb5-4099-95e6-f557a3f78c74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2f395d-ce8c-4feb-8b32-2f86cca5d5a1",
        "cursor": {
          "ref": "7cab8e30-f539-4567-b0f4-d6c1347c6329",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "74564a62-4115-4ad1-a15f-b6b185b23321"
        },
        "item": {
          "id": "5f2f395d-ce8c-4feb-8b32-2f86cca5d5a1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2c2cf034-f06c-4239-b069-5e0234b9dfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09e06e7-a145-4cd4-9e12-c12411247cfe",
        "cursor": {
          "ref": "35e09d60-6220-48ca-be78-e78e21a6a3d4",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3b505ee9-e5ae-4acd-be8d-c30d81284a39"
        },
        "item": {
          "id": "c09e06e7-a145-4cd4-9e12-c12411247cfe",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "713e1bde-fedf-4194-93a0-2f9565b20630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be8c08d-3cd0-4113-ae18-22124d86bd3d",
        "cursor": {
          "ref": "00b4e8bf-f928-476b-b4af-a59c1a1cd8be",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "041b11fa-0ef8-4162-b783-df351f9473da"
        },
        "item": {
          "id": "4be8c08d-3cd0-4113-ae18-22124d86bd3d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "91c9b974-54be-458a-9efe-6575dd333a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f450f9-fb66-4308-8bfa-6d5dae087dd5",
        "cursor": {
          "ref": "71835fe4-d404-45cf-b598-96f53f5e6380",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bf6335f0-3287-4f87-a173-f4cf15bb799a"
        },
        "item": {
          "id": "40f450f9-fb66-4308-8bfa-6d5dae087dd5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2e1be151-c36f-4d86-9190-d180365ce033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2649baf9-11ca-4c3b-a619-6f2d9b391882",
        "cursor": {
          "ref": "4f51070a-665c-40de-bb0c-03e69d36fad4",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fe89a8a3-5d87-444f-a992-c55670984542"
        },
        "item": {
          "id": "2649baf9-11ca-4c3b-a619-6f2d9b391882",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "99bd87d9-6b76-461c-923c-de2f2e5774b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba340dd-9139-48c0-a433-ae4c8597e3dd",
        "cursor": {
          "ref": "f78ad232-4031-4d41-9ba1-d91be013ee5e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "baed114f-a8ff-4e74-84eb-f1f0c139dfde"
        },
        "item": {
          "id": "8ba340dd-9139-48c0-a433-ae4c8597e3dd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "69735464-0dbd-4a3e-9044-611089efba25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1e1036-80b0-4495-b4f4-a0a59e7b0336",
        "cursor": {
          "ref": "bc0369b0-1ee2-4f4a-a500-24a6d3757857",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1e04f02a-6772-4826-9203-d50236cafadc"
        },
        "item": {
          "id": "0e1e1036-80b0-4495-b4f4-a0a59e7b0336",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "27a82c3f-d86b-422a-b99f-485494a7d1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942daf0e-f7ba-4c04-9ea0-e5ae29cf8d0f",
        "cursor": {
          "ref": "2db646aa-77be-47c8-ad1f-994f088be37a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3c25ff67-cf0e-475e-8a5a-918742c24873"
        },
        "item": {
          "id": "942daf0e-f7ba-4c04-9ea0-e5ae29cf8d0f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fa116f07-efb7-47fe-8fb0-c2ed36f0aa2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02767be-3f5e-476a-bc88-0286c958416c",
        "cursor": {
          "ref": "95c18524-c848-4a5f-80db-4bf784ce27eb",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0906c23b-2798-44c9-af4a-3f19cce02c9d"
        },
        "item": {
          "id": "c02767be-3f5e-476a-bc88-0286c958416c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2ea6d015-0ca5-40f0-b419-764ac5f0c5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da198dae-6fa8-4375-86df-01c523544a8a",
        "cursor": {
          "ref": "98e9570d-1d7e-451f-98c9-67827fa85fa3",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "656053f0-8115-48bd-bf53-3b0031dc82d5"
        },
        "item": {
          "id": "da198dae-6fa8-4375-86df-01c523544a8a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "abc5e597-215f-48c5-ab6c-d10c8855d2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ba7137-b4d1-4d6e-bd13-5dd9be2a9aee",
        "cursor": {
          "ref": "2d7892ce-4a5e-421a-9344-51f597b1fdd1",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8087a877-8c9b-4ecd-bfca-2e597538872b"
        },
        "item": {
          "id": "58ba7137-b4d1-4d6e-bd13-5dd9be2a9aee",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2dc6a8ea-9508-4330-9729-8ad918ec210f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b22ec3-52a6-41aa-b54a-2de5f2223258",
        "cursor": {
          "ref": "a26c360a-ced1-4cd4-a8d9-3778c548f5ea",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "190fe0d4-f91e-4e7f-bea0-e760866f4a54"
        },
        "item": {
          "id": "06b22ec3-52a6-41aa-b54a-2de5f2223258",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e0b639fb-6e25-4c43-869a-b336dc788034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fcd148-e29b-4207-b662-3406d77a4663",
        "cursor": {
          "ref": "9f73222c-70bd-4732-ac98-df3e6690814d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "78b6d86d-2fa4-4df0-a753-1e1bdafee36e"
        },
        "item": {
          "id": "75fcd148-e29b-4207-b662-3406d77a4663",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fe503463-d587-4f74-8b78-40cd2ef2179a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c5cbf1-a0c8-4654-aaa7-f54b72288e6a",
        "cursor": {
          "ref": "9765a54d-b25c-415f-a6f1-d662872fc1c4",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f5296e8d-7e00-4a9b-ae8a-50825b93aea7"
        },
        "item": {
          "id": "10c5cbf1-a0c8-4654-aaa7-f54b72288e6a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7cd67ef2-39a2-494a-970d-8ebc86d21191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879166c0-e768-417a-a5ba-9646bf6883d0",
        "cursor": {
          "ref": "d795d0fd-2583-4047-887f-732738cb2e1c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "30d69162-862a-4b87-9df1-a0f69c94d900"
        },
        "item": {
          "id": "879166c0-e768-417a-a5ba-9646bf6883d0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a5d60de1-8f8a-40c9-88f0-e23f95c4ddc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59a76fd-e384-4450-96a1-9c820008a5a5",
        "cursor": {
          "ref": "cffc235c-0f04-4687-9e65-adba29af834b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7d1510aa-b205-4c8a-b2ea-5d674fbac895"
        },
        "item": {
          "id": "e59a76fd-e384-4450-96a1-9c820008a5a5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b920e990-f273-448d-94f2-616f1a4715e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c3014b-7ed4-4817-b2bb-e9ed8326c283",
        "cursor": {
          "ref": "d1a59e7a-e7c3-412e-86c8-a14f35c46b14",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ae97cf89-9473-4db8-aed1-74f2a6a859e0"
        },
        "item": {
          "id": "86c3014b-7ed4-4817-b2bb-e9ed8326c283",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9315adf5-95d6-423b-a855-277da9900f80",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "b9f6c4d0-15ad-49c3-8a0b-29dad9c2fd84",
        "cursor": {
          "ref": "91c77d63-f7ec-4b66-b46b-79bfda8dcb2d",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "55c0c6c7-0170-48dd-88b9-6597db06fa2d"
        },
        "item": {
          "id": "b9f6c4d0-15ad-49c3-8a0b-29dad9c2fd84",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "92637270-10a6-4383-9f0e-c719d09b0fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77afae9f-2e32-48a4-857a-1f0e4007567e",
        "cursor": {
          "ref": "a56de06a-c7f2-471c-ba79-ba930ddf81c6",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7dfb28ab-b92e-497d-a589-021c99ff48db"
        },
        "item": {
          "id": "77afae9f-2e32-48a4-857a-1f0e4007567e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1f4254c9-18cb-4a49-9a38-73243451f0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c6fc94-9785-423c-9a15-a7b15ace8d96",
        "cursor": {
          "ref": "5b9761fa-f502-4087-b432-1981e0023b37",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8acb1b7b-3ae4-408b-bdf3-b80d34665d4a"
        },
        "item": {
          "id": "b8c6fc94-9785-423c-9a15-a7b15ace8d96",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b7f42cb5-cea1-42d1-a9d4-8c53fbfda3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e31a85-9233-49d5-a8e4-a1f317234155",
        "cursor": {
          "ref": "0fa21e62-2422-4993-b01c-5feda1ba82cb",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fcb31339-4358-442a-a72d-840206a951cb"
        },
        "item": {
          "id": "71e31a85-9233-49d5-a8e4-a1f317234155",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e555b91b-427a-4995-ba7e-1ee00d3e7bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383376c8-6a99-4e3e-8f22-332e9a14b6dc",
        "cursor": {
          "ref": "e6768149-4901-4d5f-b2f5-a1236c6ce641",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7c097eed-ff08-445d-8a65-d67b44a1998f"
        },
        "item": {
          "id": "383376c8-6a99-4e3e-8f22-332e9a14b6dc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "502020fd-3bf6-4f01-b321-5430ce43b6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f21b748-d900-4861-ab66-8ac40395ffa2",
        "cursor": {
          "ref": "7f6a8d04-85f0-463c-a4c6-fb6ef27c3b80",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9336594c-9227-479f-a8a6-13d3eeb4efa9"
        },
        "item": {
          "id": "8f21b748-d900-4861-ab66-8ac40395ffa2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "abbf3122-52c6-44b7-9375-24b622b975fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001acfa7-dc04-4f3c-8b18-09413e5872b1",
        "cursor": {
          "ref": "01ede7a4-aaf3-42ad-9313-c5e3c4145e6b",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3012ef7a-83b5-48d1-8e7b-2c9c60ed7289"
        },
        "item": {
          "id": "001acfa7-dc04-4f3c-8b18-09413e5872b1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7d7b35cf-6c18-4bdd-9734-13011611f58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5dbfa2-5e3d-4784-9ada-4a50ec8a30ce",
        "cursor": {
          "ref": "1f56407c-2a3b-4a37-a329-7eefae64113c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a34c7754-0fee-4410-832e-8882f4add6c8"
        },
        "item": {
          "id": "6d5dbfa2-5e3d-4784-9ada-4a50ec8a30ce",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c181a7fa-27e8-4746-8a49-2cea285ac542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e5c87a-24f4-4baa-8c7d-60075aefc0fd",
        "cursor": {
          "ref": "632d0b6b-f966-40b6-9ef1-d0691cc4ac41",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5ffc4ae6-a70e-4775-a4b3-6138dedc55cc"
        },
        "item": {
          "id": "d5e5c87a-24f4-4baa-8c7d-60075aefc0fd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6fd44992-2586-4959-99a5-e53b23d1d0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2e63be-9847-4196-b903-6d4b0a889ce5",
        "cursor": {
          "ref": "129ed4d0-42e0-43c0-b107-370ef2014661",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "486dd23e-cbe0-4b92-90f0-44ced9a572e2"
        },
        "item": {
          "id": "fb2e63be-9847-4196-b903-6d4b0a889ce5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0b368c67-fefe-4d6d-affd-cfb84954c923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd19ce7b-0c86-4d5b-b67e-ec34028b0383",
        "cursor": {
          "ref": "f0f0ab6e-ce88-4ec1-8ac1-39a159c5eaa1",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cbebde40-3113-4e7e-a5ef-8183aad125bc"
        },
        "item": {
          "id": "bd19ce7b-0c86-4d5b-b67e-ec34028b0383",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "28fbdbbc-e87e-40ac-96cd-1c44eecd9467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010c8b45-d609-4037-950e-4d8d9774efee",
        "cursor": {
          "ref": "fe76a54e-90fd-4bc0-adca-a66b136cead1",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4c612993-2c50-4e07-a156-5e8cda5a2337"
        },
        "item": {
          "id": "010c8b45-d609-4037-950e-4d8d9774efee",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1af07b56-0973-42d5-bf43-693ee7d6cd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837aceec-13ac-492c-ba82-c67f7e5714ae",
        "cursor": {
          "ref": "94accc46-c562-4a37-9c0a-0fe74a8b233d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "07ad74c3-c532-45e2-a953-46d8fd6017fa"
        },
        "item": {
          "id": "837aceec-13ac-492c-ba82-c67f7e5714ae",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9a2ed53c-721e-4963-a163-c3606a8fcad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f61de1d-d49d-47b2-8b3c-e3c6471b95d9",
        "cursor": {
          "ref": "f37777a7-1bd4-4eea-b76e-3cbd812da2e5",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b44c000e-8159-4b18-a851-7972ed619e54"
        },
        "item": {
          "id": "1f61de1d-d49d-47b2-8b3c-e3c6471b95d9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f2e60f76-bc6f-409d-bfaa-ed43ae6e5950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befe1558-23ee-4d9c-a1b2-bbf9f17d0874",
        "cursor": {
          "ref": "d768b47b-6638-498b-9a25-152e90fb8d5c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1eeff651-2540-4342-8f3a-a90802aa750f"
        },
        "item": {
          "id": "befe1558-23ee-4d9c-a1b2-bbf9f17d0874",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "db40ac85-0378-4eab-af20-b2544ae64897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705b25a1-8817-456c-a5a9-33807890b836",
        "cursor": {
          "ref": "4bd99fb8-ef61-4e22-be24-73860bff715b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d51e1848-1f50-4039-8e5d-133d50c855b2"
        },
        "item": {
          "id": "705b25a1-8817-456c-a5a9-33807890b836",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f4dcf370-5486-4824-9e8f-00761bad28e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1114,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b10c37-1017-40e5-a53e-836100612aef",
        "cursor": {
          "ref": "a5ff9ef1-a912-46f0-9682-3f64511e9bea",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c0f03020-5a0c-4227-81f0-ea816ec7431a"
        },
        "item": {
          "id": "c3b10c37-1017-40e5-a53e-836100612aef",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3b8a591d-d219-4dba-b069-78bc9f05317f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76ec3cc-a930-4420-ad0a-e8d322ab6e9f",
        "cursor": {
          "ref": "72ecedfc-5c87-4402-afaa-98a47415c240",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a3b94f84-a9ce-46c0-b38c-6a38524f1adf"
        },
        "item": {
          "id": "b76ec3cc-a930-4420-ad0a-e8d322ab6e9f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e3ca9244-a08c-4ff8-a983-12050387b226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30daad6f-5e5a-45cd-b414-dc43ca551e28",
        "cursor": {
          "ref": "e6d91f15-e7da-40e7-a3f4-91642b3823b8",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7194a9f6-624d-4da4-8045-293de6559ead"
        },
        "item": {
          "id": "30daad6f-5e5a-45cd-b414-dc43ca551e28",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b567bb40-d7fd-41a2-a5fa-8b687ab9ede7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e86d1fb-3efb-4f1f-b5c8-6aadcb28a8ea",
        "cursor": {
          "ref": "88f9bd6e-e8fb-4a18-9382-a3f23a64710d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f4792f2b-956e-4904-b1ec-e968d7f3d894"
        },
        "item": {
          "id": "4e86d1fb-3efb-4f1f-b5c8-6aadcb28a8ea",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "31df2177-4c82-485f-85b1-996d3a8b5331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13509999-b56e-464c-b6c4-a4d844ed0e0a",
        "cursor": {
          "ref": "eefba78b-3a12-44f0-b488-b14334c7c6cf",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0a0a216c-7848-4437-8cce-b1d572560776"
        },
        "item": {
          "id": "13509999-b56e-464c-b6c4-a4d844ed0e0a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b3d6dc6a-02f8-4025-9b0f-505fed4f156f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e18559-9e20-43e3-8c56-bd3b4f0ccc9f",
        "cursor": {
          "ref": "f087e17d-70c4-42b1-b689-40fa6b82ed15",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "943649f6-bd84-47d0-83a9-3687aa1c532a"
        },
        "item": {
          "id": "d8e18559-9e20-43e3-8c56-bd3b4f0ccc9f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bd62aaa1-746a-405c-a09c-fed5d0ba005c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc90241f-3332-4b97-a509-a5ddfa396b11",
        "cursor": {
          "ref": "0d6c2d71-6ef9-413b-afa8-7018980e42fe",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0cd70ca7-a242-450f-85cb-385f5771f4f5"
        },
        "item": {
          "id": "bc90241f-3332-4b97-a509-a5ddfa396b11",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "48022c81-6edb-484c-b004-e479937df19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53b927d-f2df-4fac-ad31-26dcfb0448d4",
        "cursor": {
          "ref": "1f46dab1-f54b-446e-9961-709aa379944b",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a2c0076b-a910-40e0-8553-20597c56bfe9"
        },
        "item": {
          "id": "c53b927d-f2df-4fac-ad31-26dcfb0448d4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "97f394bc-46b0-450b-b814-3eeec47f25dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1e0068-ed0e-48c5-8b2a-43a35123625d",
        "cursor": {
          "ref": "12d33625-2e28-47d3-9a97-0cdcdf26f932",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ed8d8bbd-c6d0-4c93-af36-e025d8bb5fd5"
        },
        "item": {
          "id": "df1e0068-ed0e-48c5-8b2a-43a35123625d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "778411d0-72cb-4a28-94f2-eb1f7c23551e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d4a3b5-474f-4efe-984e-b98ca97d311a",
        "cursor": {
          "ref": "46b9cc09-c8d4-4c42-9f4c-a700c0d300ca",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "803d18d0-a020-4f2a-9a58-c2d18ce5a415"
        },
        "item": {
          "id": "d0d4a3b5-474f-4efe-984e-b98ca97d311a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8d119b40-7c0b-4110-882d-18819fc65bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3c252d-e4d0-4f46-ac77-d25dbe065a4a",
        "cursor": {
          "ref": "38475e40-6061-46b1-82c4-023006ca1af8",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d432ee4e-64c3-4c80-9fb8-326e025fe030"
        },
        "item": {
          "id": "eb3c252d-e4d0-4f46-ac77-d25dbe065a4a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bb825053-c59c-4ca5-9f88-a5c8250ff3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88814b5c-6064-456e-81ab-d19b8a19d1f2",
        "cursor": {
          "ref": "85da8917-bd69-427d-8d37-3965ca3b6839",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4053f3ef-f89f-4633-b15f-6f3031b1023a"
        },
        "item": {
          "id": "88814b5c-6064-456e-81ab-d19b8a19d1f2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8e99dd3d-0ec4-4721-9e51-a973f7ae992a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0eb9949-ae6b-452f-a7df-3b90bc831e36",
        "cursor": {
          "ref": "e97afeaa-9df2-4eb7-91c1-64fc2784f48e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "434b9972-2983-4271-90fa-e6a7a426cd11"
        },
        "item": {
          "id": "b0eb9949-ae6b-452f-a7df-3b90bc831e36",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "77cf5ec5-1e07-4a25-bc69-8ad2881da706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76715c54-0e23-40ca-870c-9c221a7edf61",
        "cursor": {
          "ref": "d699362c-7144-42ad-8fdb-a903d28c250e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "df69379e-d2d2-4ccc-9e47-fdc93dea369c"
        },
        "item": {
          "id": "76715c54-0e23-40ca-870c-9c221a7edf61",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d05242ba-7664-4301-b9d0-5b1aa53d2549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be48ef85-b568-42f7-8556-7d26b977ced9",
        "cursor": {
          "ref": "7666e702-662d-4e49-aaa5-0fcc6403e0a4",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "847a8b74-62be-4dd4-92d0-33dca2909c40"
        },
        "item": {
          "id": "be48ef85-b568-42f7-8556-7d26b977ced9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6bf49364-fbad-47b6-b7f4-b61ab59a7cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e04c036-4412-40a8-9eb4-3595f244c4be",
        "cursor": {
          "ref": "7cbc4be4-07bb-412e-9a86-b44e64bc8c55",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6bc8fe28-52f1-40ef-a79a-8d5dfc491d77"
        },
        "item": {
          "id": "8e04c036-4412-40a8-9eb4-3595f244c4be",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "561ee941-7d61-456b-a9a3-b3c88a9f6c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79dc27cc-0b52-4220-8a44-1dfbeaeb58b4",
        "cursor": {
          "ref": "c55b13ed-4200-482d-b2d0-dcfe04ed8207",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "815fa787-e2db-44f4-ac51-ab38bc158eb9"
        },
        "item": {
          "id": "79dc27cc-0b52-4220-8a44-1dfbeaeb58b4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "abbc34b5-9bdc-4b28-b735-5b1230c6ef9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d7ba84-ab92-43d2-8d0d-f59245176cff",
        "cursor": {
          "ref": "f5945d20-bec8-49f7-b293-6a12aee0e9bd",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ca5ed116-37ea-44e9-aaa1-5249880a950b"
        },
        "item": {
          "id": "79d7ba84-ab92-43d2-8d0d-f59245176cff",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e5a4fb83-4c58-4f94-b906-f04c0261155e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3983eb-80b4-489f-86f3-bcb6eee719dd",
        "cursor": {
          "ref": "bb12ead6-4f79-42b1-b03c-96a234e295ed",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3118d794-7c83-499e-a767-962f18b75935"
        },
        "item": {
          "id": "2f3983eb-80b4-489f-86f3-bcb6eee719dd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "64740d5d-24cd-4a20-819e-451a42bc1980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d95e78-993c-431b-af5b-646a86997e71",
        "cursor": {
          "ref": "3575966a-1965-4f5f-9870-da7c5d6e1cc2",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "465f7151-6e79-4175-8d80-e2b1ed9a8ca3"
        },
        "item": {
          "id": "60d95e78-993c-431b-af5b-646a86997e71",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3b7aebd7-f406-4a5d-ae50-176941cc74ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e60ffa-eb1e-45b5-9549-2ae2ef9e7fa1",
        "cursor": {
          "ref": "11942ffc-5b59-4009-a165-5f1200c33e50",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ccc24d20-a0ed-4af3-a787-6355b55819d2"
        },
        "item": {
          "id": "d2e60ffa-eb1e-45b5-9549-2ae2ef9e7fa1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "58c238bb-a60d-4c07-8767-e56e23459a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b69f8ee-d08e-44e0-9410-f0a35ac7e660",
        "cursor": {
          "ref": "eace290d-b331-4fef-b2d2-5203eac1e244",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1f99a3bb-c7a1-48d3-9269-864c232fc169"
        },
        "item": {
          "id": "1b69f8ee-d08e-44e0-9410-f0a35ac7e660",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "23d5fe24-36fd-4656-a617-24042059ed74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd75451e-69d5-47a4-a0a2-609d77cda538",
        "cursor": {
          "ref": "b296dcb7-38a6-4dbc-b3c5-4c384578cbea",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dbf14204-ab13-484c-895c-ffe36efc3fb2"
        },
        "item": {
          "id": "bd75451e-69d5-47a4-a0a2-609d77cda538",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a25cb644-a999-4486-9f79-ffe0e381e499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0360906-5f8a-4a4f-906d-2b4f0c9bfe69",
        "cursor": {
          "ref": "d9f6d4d2-7285-4798-a0a3-cdb06a9624d7",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "791f8a14-9db3-4939-b779-09f4886f02a2"
        },
        "item": {
          "id": "a0360906-5f8a-4a4f-906d-2b4f0c9bfe69",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "675f6667-96bf-4633-9e8b-3519420f4eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25407df3-6eb3-4b21-bce2-e96c64173b1f",
        "cursor": {
          "ref": "f54ebbb9-f69f-404d-b8f9-5e19a2657035",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c5b9d8ce-a16f-425d-8577-c512f381c32e"
        },
        "item": {
          "id": "25407df3-6eb3-4b21-bce2-e96c64173b1f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "56f81c46-923c-46cd-9c45-21bca472c19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0262f198-35e1-49dc-a44b-b7e0063f6007",
        "cursor": {
          "ref": "c446e9b9-e865-43e5-870c-8f8e52e6fe10",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "60b09acd-a8c7-41ec-a010-1d1c5819ca7d"
        },
        "item": {
          "id": "0262f198-35e1-49dc-a44b-b7e0063f6007",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cf1e48f9-4078-40bd-9265-aec11b62b929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa750573-0fe2-4d2e-a949-98be7c700535",
        "cursor": {
          "ref": "beb25c65-67fd-461f-8a12-f1b4b52fc096",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1ececd2f-c774-483a-a5a7-305c23a7ef8e"
        },
        "item": {
          "id": "aa750573-0fe2-4d2e-a949-98be7c700535",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "128d5185-4653-4cdd-b8c0-e5a6e3456d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9c830f-485b-4842-8b7d-cea671ad4924",
        "cursor": {
          "ref": "eda2782d-82d6-47bc-a1d2-c5a8615d6690",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f0dbb3ea-6fb7-4520-8feb-0a53b19c5691"
        },
        "item": {
          "id": "9e9c830f-485b-4842-8b7d-cea671ad4924",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "341d2352-ac63-4931-9913-c8ea9f223934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211dfc07-e429-40bd-b6f3-07c9ba724f54",
        "cursor": {
          "ref": "eb5f66f5-ff13-4627-a941-70565234c532",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ae603eba-7c60-47b8-9b72-76b3730bd4e4"
        },
        "item": {
          "id": "211dfc07-e429-40bd-b6f3-07c9ba724f54",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e70e9928-75bc-4862-9e2f-332fca97d64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45f50d2-5c8d-4d08-b187-1028eea63b2a",
        "cursor": {
          "ref": "1e4d869c-3a11-4df1-bd5a-a84df2be91e1",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "285dae6e-7cbb-4ea5-8983-352742f781de"
        },
        "item": {
          "id": "c45f50d2-5c8d-4d08-b187-1028eea63b2a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "819d7492-015f-4385-9e11-872ace88e495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4a345b-4c3a-470b-87ed-74dad31fec41",
        "cursor": {
          "ref": "dc756deb-7a27-444e-bf94-d38622592f34",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1cc529dc-d7ca-48b7-8038-c67a3a83498a"
        },
        "item": {
          "id": "4d4a345b-4c3a-470b-87ed-74dad31fec41",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "629d82c0-993b-4865-8f5b-909c11e5006c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437c4124-f9bc-43c2-9790-14db4c1b9319",
        "cursor": {
          "ref": "5315aa8c-0dfd-497a-8718-dc6e70f1d341",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e3f87be5-e916-4f04-900c-ca9571d11a6e"
        },
        "item": {
          "id": "437c4124-f9bc-43c2-9790-14db4c1b9319",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8984ca99-a1f0-44d8-9a12-ca32adcc45c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aae5c1e-1423-4bd8-99ac-85eaa50b03fe",
        "cursor": {
          "ref": "e2b321c4-5e64-4c38-9e9f-4ac661d3b625",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "905b4ffd-b6c7-4b83-b208-c6859c72a340"
        },
        "item": {
          "id": "4aae5c1e-1423-4bd8-99ac-85eaa50b03fe",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5bb9aec8-a169-403e-9286-84da4376c540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8c6e1c-9de5-4998-bf93-7a92ce8ec56c",
        "cursor": {
          "ref": "36d0348b-1813-4746-84cf-f006ffb1ced5",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "63239723-f5af-4e01-8cc7-876f5ebc0bec"
        },
        "item": {
          "id": "8a8c6e1c-9de5-4998-bf93-7a92ce8ec56c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3ae48f1a-3165-4646-b495-d6e7a4f468e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91d9e40-fd71-4adc-94ba-2c753724e409",
        "cursor": {
          "ref": "8805c40b-cd91-4348-9ce2-754fac2854a2",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8b00448e-19a0-4895-916c-bdea4b822b01"
        },
        "item": {
          "id": "c91d9e40-fd71-4adc-94ba-2c753724e409",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "dd192008-7745-46b5-a4a2-4da343511444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe8d8f9-9a66-48e1-91b4-7e8ceca1b57a",
        "cursor": {
          "ref": "8c83121d-cb16-4f36-aef0-5eed160f55eb",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ef632c08-b204-49f5-a29c-2592eb63cb35"
        },
        "item": {
          "id": "1fe8d8f9-9a66-48e1-91b4-7e8ceca1b57a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ae136248-b8bc-4cc6-a2ee-3841cd1d252d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1809ff67-6631-4657-b408-af59e6f1f67e",
        "cursor": {
          "ref": "b0d12b8e-105f-4c2e-99f1-cec24c3452da",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "54093553-1a04-4996-9426-dec122fb9c98"
        },
        "item": {
          "id": "1809ff67-6631-4657-b408-af59e6f1f67e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3e621c79-a438-481d-ae6b-8d2b5dfda3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60945b22-9d3e-42c3-b569-b7fdd6717033",
        "cursor": {
          "ref": "b4f90b4c-62ea-42cf-a53d-f1bb7b8d9fd7",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5f27c57c-4813-4d41-9483-59fc1d82e731"
        },
        "item": {
          "id": "60945b22-9d3e-42c3-b569-b7fdd6717033",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d5d98a5c-3ebc-41f1-a6ea-1c1777781e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1b1489-79ec-4535-b74a-58a63701b702",
        "cursor": {
          "ref": "b790ea7e-46c3-4abd-b3ef-b310e0eef6d8",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9c1b9560-bada-4161-b1cd-e0bd2e7d1f54"
        },
        "item": {
          "id": "ea1b1489-79ec-4535-b74a-58a63701b702",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ca427811-541d-46cc-b130-1f2ce076f407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0a6172-c037-4989-b32e-2e53e0aeb736",
        "cursor": {
          "ref": "ca6d8d17-e12c-4351-b681-dd88e9480b88",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ad8555e4-63fa-42a5-bf13-8cfb798aab31"
        },
        "item": {
          "id": "aa0a6172-c037-4989-b32e-2e53e0aeb736",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "350f73ce-aef0-4b7f-823f-e5091cdc706c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0313ba-b5ea-4143-8505-0de4afcd25be",
        "cursor": {
          "ref": "f1816cd2-dfb3-4e15-91a0-b402e2872a25",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7b4fdc87-a508-4347-a05c-2e6d7ec18886"
        },
        "item": {
          "id": "9a0313ba-b5ea-4143-8505-0de4afcd25be",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "363cb91b-b8bf-4681-ade6-3448a97db5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64997109-d1fd-4f26-95b5-222badad3ecc",
        "cursor": {
          "ref": "b69c3114-455f-4573-97e6-7009ea229bc1",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "12a646a8-1577-4d78-a536-aa5d224bbba8"
        },
        "item": {
          "id": "64997109-d1fd-4f26-95b5-222badad3ecc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3d47aba8-6586-44cd-851c-c1a564e3d819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3354793-8a1e-489a-a871-46114a81bc59",
        "cursor": {
          "ref": "d2e35303-027c-4426-a3a6-8d002cdeef83",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b6a077fa-992e-4b08-ba91-91e295b3e2c5"
        },
        "item": {
          "id": "d3354793-8a1e-489a-a871-46114a81bc59",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bdd8f56d-9cad-41b6-9616-cf1ce9ea5f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe30334-78ab-4c86-a8db-f98d9f75d249",
        "cursor": {
          "ref": "e4e984c5-962d-4cc0-9353-51bca79b67ec",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "900a8e8e-54be-4960-9c44-4cf9d0292229"
        },
        "item": {
          "id": "8fe30334-78ab-4c86-a8db-f98d9f75d249",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "92373cb3-dae9-46db-883a-dab269f87ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754a122e-aa30-475f-9c7c-998696cae9d7",
        "cursor": {
          "ref": "cf49049c-5aff-432a-90dc-94e91d33e849",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d8bb3667-9fac-44e6-bc74-ce756e0fa78b"
        },
        "item": {
          "id": "754a122e-aa30-475f-9c7c-998696cae9d7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0e748d90-90c4-4ba1-8469-eabd1c13b0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8a390c-2de7-47fd-8d45-97b7286f68ac",
        "cursor": {
          "ref": "778956a5-4051-428d-b7d6-1890dfe2d087",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9adabe9a-7fae-425a-a279-97614e3cf1f8"
        },
        "item": {
          "id": "4a8a390c-2de7-47fd-8d45-97b7286f68ac",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f0a93f49-11bd-4e68-bde6-1f6cb0094765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5924d6ab-37f6-40cf-8c23-1a408da4007b",
        "cursor": {
          "ref": "6bf84359-2a88-492f-87a8-43b98511a40a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f9c81eb6-fe7b-43ee-9ffe-338505d0ca5d"
        },
        "item": {
          "id": "5924d6ab-37f6-40cf-8c23-1a408da4007b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "628ca310-2c32-4a04-a851-f2ce6450f061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325d06c4-c0e9-41ba-a8f5-013ae61e2f6b",
        "cursor": {
          "ref": "384adbca-4036-421a-966e-627f1159c4e8",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0682e29d-d0dd-4a89-b895-1c1d34f53795"
        },
        "item": {
          "id": "325d06c4-c0e9-41ba-a8f5-013ae61e2f6b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8727daf0-098d-4a22-aa36-0308655defa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4650d9-73c6-47bb-b7d7-a9fcf8e8b2eb",
        "cursor": {
          "ref": "8ec46f4e-ac38-4cf9-8f30-015ef0b55b8c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "100ec24e-1e88-4e97-a4a9-7df5f4cae98a"
        },
        "item": {
          "id": "3b4650d9-73c6-47bb-b7d7-a9fcf8e8b2eb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4d33eeb8-6506-4f13-b20c-3b9c6d2070ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574f86ae-915c-46c9-a390-a17df6f45e16",
        "cursor": {
          "ref": "ae46220a-961b-4c4b-82e9-182850ec61b9",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9fa515d1-71c6-47e4-a49c-3c74e093b584"
        },
        "item": {
          "id": "574f86ae-915c-46c9-a390-a17df6f45e16",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "82497266-6ecb-4da4-8a1a-12c85c6bd6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c88074-e87b-4eec-9284-3ac784ec5454",
        "cursor": {
          "ref": "35cf5bcb-fc3b-4e47-a42a-961243314c88",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7d6e52c4-dafa-4d60-a5ef-059f161f31fd"
        },
        "item": {
          "id": "48c88074-e87b-4eec-9284-3ac784ec5454",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f6a76d2f-3c9d-493f-846e-a7ec60527a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5175dc4f-31be-402f-b4b6-62800be0190d",
        "cursor": {
          "ref": "dbc9813c-affe-4309-b437-ca3bde1b39d8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "245ad3a9-9198-4e8a-8318-b37b4bdd9a18"
        },
        "item": {
          "id": "5175dc4f-31be-402f-b4b6-62800be0190d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c2ba6404-c2a6-42f7-a46c-59850b5034ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cec92e5-9bac-4b59-b6b0-6e455e1a42c7",
        "cursor": {
          "ref": "f8d50f51-a84e-4978-89f1-c5fcd279a56c",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "46ea7e61-20f6-446c-982f-b535ebcbd22e"
        },
        "item": {
          "id": "4cec92e5-9bac-4b59-b6b0-6e455e1a42c7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5d185373-c579-4bb1-8750-09e434bbf467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc489681-9656-4d52-ac78-cbc32b7dde01",
        "cursor": {
          "ref": "cc209b02-2cb5-4d21-ae35-dda42b50d808",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2e570258-c456-4322-bf91-28dcca5423cd"
        },
        "item": {
          "id": "fc489681-9656-4d52-ac78-cbc32b7dde01",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "401da180-163f-4022-bc00-0f040e48da83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a948109-6cec-48d5-9d5f-bd4d862c2e81",
        "cursor": {
          "ref": "27bf4202-b123-41b6-97c5-333e0b25a13d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3a4413ce-4af0-44c9-bb95-30db3c3865d1"
        },
        "item": {
          "id": "0a948109-6cec-48d5-9d5f-bd4d862c2e81",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "701fa9ca-f794-4756-9239-f0c9383e4c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fd1747-b219-41ea-8004-91de2a42e632",
        "cursor": {
          "ref": "78248cc4-7e03-4707-af6c-2839f086b91c",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e20997b0-f682-4d6b-938b-8e815e331b46"
        },
        "item": {
          "id": "04fd1747-b219-41ea-8004-91de2a42e632",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c3ec64b0-e8fe-49e1-97bb-676558870847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bf850b-84ee-4cae-8223-b5126425ae9d",
        "cursor": {
          "ref": "0017e749-447e-45db-8b3d-3b312b20f446",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bf0ded9c-52dd-4145-8e91-7c46d80041c3"
        },
        "item": {
          "id": "c5bf850b-84ee-4cae-8223-b5126425ae9d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "689f8135-1e30-4b84-8578-15b229d808e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f853fd86-5f96-44de-b179-380881cd0435",
        "cursor": {
          "ref": "dc7da89c-0f69-48a8-81ab-8ad596bb1856",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "49117f48-33bf-4cf5-8b60-4ce98546e029"
        },
        "item": {
          "id": "f853fd86-5f96-44de-b179-380881cd0435",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2735309b-632e-41b1-9b2e-1939d581f40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1319254d-ba00-4214-9594-3e79315c6e7e",
        "cursor": {
          "ref": "0f3d9b1d-f960-4bab-af30-dcb009ad48d5",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "643b8e25-834c-4a82-a456-4ec76d3fde40"
        },
        "item": {
          "id": "1319254d-ba00-4214-9594-3e79315c6e7e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "407dd505-bc05-4c26-817d-cdd5587f2aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2edae9-cb5f-4f8c-ab5d-11e1cc88a923",
        "cursor": {
          "ref": "4a08e6bb-21c6-4e21-afdd-a87cf2328cf6",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "099d0a27-60e5-4b23-b68e-902fb82cc86f"
        },
        "item": {
          "id": "ad2edae9-cb5f-4f8c-ab5d-11e1cc88a923",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "570360b5-709a-47c2-b60c-0f4b2f8c5186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28783c7b-8245-46c4-ab73-6f0ab574b11a",
        "cursor": {
          "ref": "2a69d345-7bc9-42e5-b1f6-67f0454b8a72",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8a0884a7-f7ee-4e82-ac47-e53f5d2daf77"
        },
        "item": {
          "id": "28783c7b-8245-46c4-ab73-6f0ab574b11a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0ecd2914-2aca-4d91-9de7-c9409ce10955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b799f5a9-79a7-459f-81b8-4bc2765d14fd",
        "cursor": {
          "ref": "09f445d4-bdcb-485c-8aed-d7f95b056faf",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c50f6555-783c-4cdc-a9e0-f8d52e2518ad"
        },
        "item": {
          "id": "b799f5a9-79a7-459f-81b8-4bc2765d14fd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1eab46b1-1a78-4ffe-b3a7-469f96dde259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5db9a85-d2d8-41b7-96b5-b0e9f7a1dce1",
        "cursor": {
          "ref": "a1a10c2a-4101-46d5-b15b-fbd2df990be1",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "21b75a8e-be2a-40e5-acca-0bf84b4f3070"
        },
        "item": {
          "id": "e5db9a85-d2d8-41b7-96b5-b0e9f7a1dce1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c5e632e4-c99e-4105-ad75-446966ffee60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38853ed-99e9-4fb2-a798-20711a2a65f0",
        "cursor": {
          "ref": "828bb642-8d58-46da-8ae4-2192354acf31",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0c791fb2-d256-434f-9bbb-19228396485b"
        },
        "item": {
          "id": "f38853ed-99e9-4fb2-a798-20711a2a65f0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8a763724-1aac-4aa1-8425-19414442afd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed76b3e7-1ec6-4bf4-92fc-908537356e84",
        "cursor": {
          "ref": "82a54b95-873a-42c4-b2a6-69bf662cd526",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bd91596d-4920-4bd1-81a9-45816ce9592d"
        },
        "item": {
          "id": "ed76b3e7-1ec6-4bf4-92fc-908537356e84",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ae2ca3cf-0b77-4786-a232-1ed59355b83e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70471610-5e87-4988-aaf3-563490b5b283",
        "cursor": {
          "ref": "c59d8521-c4de-490f-93cc-68ba145d7837",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "45724da4-f978-4bea-b87e-fa27fb281106"
        },
        "item": {
          "id": "70471610-5e87-4988-aaf3-563490b5b283",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a0fba7d8-1c4d-4d76-94a6-3e29a0b5f6ba",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f2c567-6300-4fc1-892a-c944d0e1f1b8",
        "cursor": {
          "ref": "5acde3fa-81a8-456e-b68f-da3482a78f39",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ec5cbaae-4e28-4718-8d56-9dfd43e2960e"
        },
        "item": {
          "id": "d8f2c567-6300-4fc1-892a-c944d0e1f1b8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8e4c2297-11ea-47fb-8703-c3f94533ef39",
          "status": "OK",
          "code": 200,
          "responseTime": 2369,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacb8f82-c059-4f4c-9821-6ebe6ccb6304",
        "cursor": {
          "ref": "d526f018-2887-4e68-ad20-408cbfa43e05",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "29955ab2-f99a-45dd-9470-8796324af8c6"
        },
        "item": {
          "id": "eacb8f82-c059-4f4c-9821-6ebe6ccb6304",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1f2ea383-4a1c-4cae-bcf3-950621c1551a",
          "status": "OK",
          "code": 200,
          "responseTime": 2761,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e1dca5-1ab8-4604-bf77-26afa4bb0db0",
        "cursor": {
          "ref": "3e63cc26-1a2e-452a-bd42-5165f3abcf2a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4691cd0c-248e-432e-901c-4b41d6465bb5"
        },
        "item": {
          "id": "60e1dca5-1ab8-4604-bf77-26afa4bb0db0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "57fad6ca-7539-41e1-b103-1bc602206612",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e1dca5-1ab8-4604-bf77-26afa4bb0db0",
        "cursor": {
          "ref": "3e63cc26-1a2e-452a-bd42-5165f3abcf2a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4691cd0c-248e-432e-901c-4b41d6465bb5"
        },
        "item": {
          "id": "60e1dca5-1ab8-4604-bf77-26afa4bb0db0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "57fad6ca-7539-41e1-b103-1bc602206612",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64145ab8-219f-4e0a-85a4-56fa4d6d0444",
        "cursor": {
          "ref": "5b4676b7-0eaf-41fc-9dd7-7d7a5c1c55b4",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1b1c3ed2-aae1-4220-bbcf-16a68b1916dc"
        },
        "item": {
          "id": "64145ab8-219f-4e0a-85a4-56fa4d6d0444",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a9bb5ec0-ab68-49ae-9487-cd04d5b10767",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7dfac96-3a0c-42af-a85f-fea3bf3069c5",
        "cursor": {
          "ref": "14468c0c-7739-4777-8b56-276facc872b1",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2bd1e6a8-d5b2-460f-9ba2-f9d27f454df8"
        },
        "item": {
          "id": "e7dfac96-3a0c-42af-a85f-fea3bf3069c5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "27cde155-856a-4a54-92c2-201f0ae3bc46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}