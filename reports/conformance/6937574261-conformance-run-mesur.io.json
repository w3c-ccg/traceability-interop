{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "03683f9e-927b-4f3c-bfa9-8ba69b3e06fb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "606e8cb4-f65d-4833-976a-fa5c392f8695",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "726fe98b-6e09-439e-b937-86d047f2f9a2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "59eec892-20e5-4ff3-874c-02dcd425e6de"
                }
              }
            ]
          },
          {
            "id": "75eb8a87-dd3e-4f09-b948-408ea4a82246",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf9ab78b-4c17-4640-a846-092e30976438",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5f79177d-d473-4a00-8c42-76c3da42a279"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a61ec180-ed40-4b79-867b-e76587b44d28",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e2e6e421-012f-4ec6-917f-f980f50f50e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7197cc99-4c8b-43d6-b455-9c73ee60c46c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98e900f4-097f-4a1e-a006-99ead63645de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ed87d14-2970-43ef-8f76-b9bcbd3b0947"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c5ca909-cf1a-40db-89de-266c1b9b3a78",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "840bb2d2-f09b-424a-9509-2b2ba6b5cd95"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0bba2e99-2dae-492d-9aa4-03deb75694eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "389b86fd-1e3e-4939-a6be-a06a1c7f2a37"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e24eb8d-7384-48c4-ba5a-e4eed30ac152",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ba17ebe9-9ee4-4512-80df-96fcbb198a64"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c0d1b3c-88a6-4458-bf87-c1bf1222ae10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65a334a4-0eae-49c5-82cb-550108235230"
            }
          }
        ]
      },
      {
        "id": "bc366fde-39ca-4896-801c-28106d85b800",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "11a6d30d-63a5-4de1-880e-cb733441b8d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa228f0f-5d70-4cd3-9428-dbad087261a9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c8e74e79-662a-4311-9118-928e31cd961e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2e48a4-2676-461a-976c-4b8302079e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7261d823-1009-4bc5-8ecd-4754ba1ea705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d37c3cc-79af-457b-a2d4-1b153f2388a2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0754384-12e9-467b-9157-7c6273fcb823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71988f8c-2805-448a-b156-14fb68102593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0481c02c-3185-464a-b5ca-b60d79fe0a6a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2b1514-d81f-44e4-b5c6-9032778ac9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cd70abf-3f1a-4b5a-b93c-4c27295c9497"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ca73015-764f-4b22-ab49-010174cdd679",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d717a712-3302-43b6-aacd-a1ccde7d0029",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f04666-d21c-4b28-86dd-c765a6083c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a55f76aa-8744-417c-bdf3-4c15d316329c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f7f628-21c1-4c9d-ae65-6f877f97807c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd5b309-3cae-4d55-9315-137d2e82333c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "80900d12-e394-4b48-a79f-5c1a9ad71e1f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "658d4210-3a38-4c64-865f-3c50be6b3ef4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0184c2c1-0ab9-48c1-a498-1125325a0b0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f133ec0b-01f1-4fa8-8163-7b5118a2bab7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "847c4383-5d35-4c64-80ac-45d1eda03568",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4cf54298-f1d3-49f5-a019-94d78d55db1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d66d5e8-eed2-4905-8515-763df52f94b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3d9d8cd-86c8-4b3a-99bf-76edd85ce4b1"
            }
          }
        ]
      },
      {
        "id": "74f907f6-e14d-474c-adda-9f9c97f46acd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5b3db95a-0247-4558-88e5-bfdab210ede9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a042af97-7616-48df-b888-0eeba9f1562b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ac3eb518-f498-45a6-ac46-508309de9928",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc214d1c-2754-4574-bd57-63fbfa1e21d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672678da-06cb-41c9-91a1-04520daa49f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8747a7f-fda0-43d8-9415-96e087677a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efbfe30f-2266-4663-bef7-bf474b250526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c84d94-6264-4924-bcbe-39a2095d60d1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5377340e-6854-497e-93dd-fb797481ae88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868ee5ec-1a77-40d1-b044-bea53be4ee0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab78da4-d86b-47f8-96fa-2aca01971b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c79bdd2f-3fd4-4022-943a-c738e8879157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5a564f-fecb-4a92-9aa2-72ce0e102067",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c04f25-91d1-4630-b396-7d8be86284ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da25961-ab39-4ad2-b3be-ec003aaf149b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49df61a-f0b3-4622-a929-3045c92601df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9789240e-4e1a-496f-b911-8651c5ffc5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4827778-ce7a-4055-94d3-e10c7d243958",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6371f127-d76f-471d-859a-de1579287a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ced4ba-c4da-4fd9-a794-4f04457389c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f7aef5-a658-4dd9-995d-b647fec502a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9780bdbf-b03a-4a76-9901-e8c831038078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2beb800-66f5-49bc-bcdb-74a76e9d2227",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685b1bce-5e52-4921-8d70-85fcb96dc584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70086912-3152-4f61-934a-9eacb93eac5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa9d329-4bf3-43ad-a1ee-c6d8dc68c40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2272349a-2f61-4956-b606-42443d0ceb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b467fb-3029-4008-94b7-acd9a1e43ca4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe93598c-14cc-440d-bd9f-6700fc55cf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5edb58b-457d-4a25-acb0-04a596a9b782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72dfde1c-aaae-4386-8e4f-50c3e0453e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa350782-5d1b-44a8-9a5f-64dd28f4038f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8ef3be-e10f-4e3a-8e89-0bdfc43a7ec1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5a3032-2f11-487b-b2cf-e9d73e5c9f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c7f692-8ffd-41fa-ac7c-b874e69ba1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9810f7-2636-4e42-9b05-18b3c88f917e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4810451-8b9c-4e41-9038-e8f8aa5f9548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f16bb8-1301-49a9-addf-ec1462cc51b3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c172c6-3202-47b4-83fd-aba59c7ec431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95ed496-6775-4cb7-a20d-0dbe0e6b522f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d955b1e-0949-4ddf-b86c-83ccb844d0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f209c846-c6fa-454d-b381-cc29cc6f049c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765b1148-146c-4ec2-b171-bdb29fad1bdb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2de6c2-a5f1-4b6e-90c2-3bb7e8bd0807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b15b73a-df7a-48f3-a613-cc5c473ff941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c83c16-e3b7-4276-aed3-7f334f7b6c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fa0cdad-96d5-4797-bee2-86bb710e24dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c67dc0-2e69-4402-a43a-c1f50258f3fe",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0453493b-daac-4af9-9172-f970033f714a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50096634-8646-4108-b5a5-86a9a559e0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4762b9-5123-4c11-a8b4-e9f9c8618c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34481cbd-023e-4374-9df3-b68e38c2f230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d49d6f-19eb-41ea-8e5b-3de4b2c2e5dc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a432da03-34c9-404d-af9c-3c037514e6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78762d91-9756-4feb-8767-093557c75ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e226344-3786-4582-ad2f-100cc0b7e181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21895be3-7baf-407e-87de-cf2b8e52ed51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9699b87-7ef8-4ec1-8c73-ff43a83e50da",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692ae9c2-2102-43b9-95b4-f2f113624bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dda938b-f28b-4396-b35b-38921874d0c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cdf8e1-0f7e-416b-9114-3254b661f7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3d49921-e7de-4a77-af17-eab4876fafcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5385a59a-10e8-4367-9b6f-1e9c01fce57a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48ef662-7586-4adc-a25b-7fc6657f681c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4400ae37-0d60-4f7a-b779-f4f3d30a2537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed8ebb5-8eaa-4984-9fc9-fef2f2c45bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ed19102-b953-4b60-9a74-90404b855e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ddb3aa-39ff-4e57-9c5d-301ed1a37e05",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9f8f82-5a78-482b-9ace-6aa6234fc6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e09965b-2eb6-417a-89db-7c873d2edbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55182fae-e4d1-43ad-83ce-7708fce8fb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "617cfc10-3240-42ae-9534-5d7f994f8ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce30d5f-0fde-4b0c-b811-523eb0d09541",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d603dc6-6096-4981-add4-40b66b253bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b170dc23-3443-4a27-8d7e-0004e1c0cbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b457d7c3-30ad-4703-87d9-e3fc2d47b4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4114a02-149f-42c4-a7c2-080b5e6e73c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3b7be8-f04e-458c-a93a-babc190cbb28",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0298170-724b-4a51-87d6-4099241fcb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbae3917-c4b5-462e-93dc-9b5c0092e197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129c8459-20b0-42cb-bbf5-ae2a5ae63b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8322c12-8931-4902-9add-47a8b2f339a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01268b02-01be-4e00-8ac9-724135c4f60b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da61157-b634-4529-b007-6ee2e4c5b848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc9130e-1978-481d-b21b-e8aa04994de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a73277-d055-4f0a-b28c-9f472237f8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bdfe277-cc94-492c-b713-97acc9c3ffa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d6e42b-c0ce-4e47-b629-00374c827f79",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca3feea-0b1d-4a73-9423-4b78bbf2ed8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49dc7529-affd-4691-b4f0-bd0090b3bf9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d088ffaf-c098-44a6-861f-9d414d60dbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "34bc2d39-8330-4f35-a28f-a25763e05fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7968db9f-1f98-499e-a9b9-0430527a5f9c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdf0d8b-8d40-417b-905c-b1ca48f131f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8645b74-8554-4f5a-9912-562188027506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970634e8-fa79-47f3-81e8-35647624dca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4405bdb4-340c-44f3-b8fc-d1b7f28cfadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfda7fef-3903-4574-9649-1ca70cb34382",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0be0c9-0b76-44a5-b186-83e8937c6c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452d9426-4ba7-4027-9a66-014c8b6c26d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a22437-c594-4574-a5cd-252d7ecdca11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19fd4b21-c639-4a86-8298-aac11d81155f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e48ceb-3268-4736-b48b-cb2e94e236b1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141a99f6-fb8c-4d7f-98ea-8ad33800e57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee7c831-2350-4bb2-9b5e-04b02d58dd1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623c8771-1ed7-41d5-be4a-2925a2326fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a7bba3-be9b-4811-87bb-7777b54f8526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5da6dd-8050-4290-8c85-47ca429eaee6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40a0879-219d-4ccf-9d84-f8a8f3b4adde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2568e143-dd74-46ae-a65b-21fdb370d471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd819af-cf57-48a0-8445-6f39d1a3dc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6d259c-e819-477f-aa04-0d1029010a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649e8875-ca91-439f-91a7-41eca954ef6d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62d8d13-acbb-402d-b9ea-0dce0d02d907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73390b9f-072e-478c-bb09-43efc470adfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057a8728-74de-4040-9964-e7934c29a534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2237445f-2a19-4648-a979-1a1eb0744769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8da099-fcc3-4a1c-b1f5-2bcb7a1b3011",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8a2ec1-9ca2-4d34-bfc9-452413998774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c42c021-7abc-4467-98aa-142ee9bc7ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013d2461-820d-4947-91be-7caefdb31b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2fe409-7228-4b05-8a89-7fc16c27f1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d47fd50-0789-4650-a8c2-7006e8e6df69",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c390103-ddd6-4ee0-852b-201a77a9f052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27bae45-2320-4f5a-a54c-4ca121483c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cfbf71-3327-4f55-b172-548087e30447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41d66b5c-d64b-45b8-810b-399ee968e6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9202d695-7436-4a62-8250-2980a4634517",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1653745-4a87-41c6-8c20-585c9ae3d320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc1a1ba-4bb6-47c8-afa0-f2f78eca5e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf4f684-d654-44dc-8505-d62400e201eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "335f46a0-d0ce-444b-9ede-94e95b218b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94726949-2e4e-4f1e-b0f1-dfa4fd8b44ca",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff8068f-b8c5-4b9a-af4f-0a0762a9b3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d1e974-097b-4660-b896-4885ea0a894c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abab7624-c715-4ed8-9068-a8a13db185ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45b23313-9d1e-4ab2-838d-b9c373b72de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01363f5-7821-4dd7-a468-648a6faa22e4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9beae2a0-c978-4de5-b2fb-961c7a5225b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe878a7-94cc-4399-ac87-ea0d31201572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa66312-57cc-48bb-befd-3f68d2cfc067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4cc863-457a-4416-8e88-981157a9578e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9019b946-320b-4e53-bd2c-0fad9738d9cf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bcf912-2269-430f-8fb3-7ae82eabec80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93280c0-b131-45f9-9f2b-337da0055437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffaebe71-822d-4dad-908b-617481d16565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4a2604-bf6f-4591-8962-063b4c879ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87d1e0e-fb03-49b4-8160-2e781f9e8fba",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9813211f-a4ad-4d5e-b655-cf0b4d0d11f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97db222a-01ab-4339-9ad6-d6d42041a649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee670cb-a41f-4631-9d32-962f344ec683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "25cd299a-2e07-492c-81b7-e22b50caba12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddd1eac-20a9-4a4e-852f-b0a65308d6a6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f20a47-56de-493d-98c4-27f086b557b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7318dc0f-6916-40f2-9b80-9aa3336698f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702b0877-e1a2-44d5-9454-024b4e1b8de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f51556e-fe66-4d9f-9a9d-42f4dfdbfa20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb671e2-f609-4f9e-ba4e-31a0fdbb3668",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c2cd04-6c8c-478c-9ebc-9289b561a61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9a0713-7495-4098-a78a-df58b71b7844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc982219-61be-4719-a524-653a10942ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5d28a6-f3ad-4160-bf1c-51d91827086a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008fbe1e-5056-42aa-b311-86e0f6f95b1e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1819a185-85f8-4196-9b75-844e1cdd393a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233fa85c-930f-4123-ac17-cce76f65f665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27a68b9-da91-41e3-873e-24439c3d4dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5f5cde-549b-424b-8dfd-ac962cc906ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeba502a-1ff6-440d-91f0-cb1a120ec8a4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbba8ab-2d74-42e5-b37c-5e9db25d74dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51ea6cb-5631-43d1-a8ae-1a68b5d3d797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462d016f-3df9-4f6e-9edd-5a76b04404dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cecf292-4a73-4025-9c19-b4c417936540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249079f4-b58c-4af3-a732-5a0316514a3a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f36064-def5-4068-bb01-faf9966fb869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e986ebd-60e7-4f0e-998d-96798edd9ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1d8eab-4b95-434c-a1c1-30d4d921181e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "40aef1b3-e78b-4eff-a6c7-1c63e3d12c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2286f4-cc00-48fd-9eaf-85f9758ce8bc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4401ffa-2ccb-4364-8cc0-34bf93ef8758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0380a37e-2b52-438d-9979-af02763a367d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58128ef0-4222-486f-902b-d7af0450ddd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5757810-33ce-433d-aad6-fab4d599ad03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63a042f-a68d-4834-888e-c64466fb5ff0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe517245-8ac6-4541-a2a2-ed9979f61ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66345e95-951d-4756-bdcd-94af909936c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3cc229-b126-4b41-a566-3cb9765ac5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf301b27-b271-47c6-8c6a-874b28aab408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df4975d-1682-4652-be1d-7a3c27c8561c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f79f39d-d996-47f6-aea0-3f35ede958a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6048f6a7-d6c0-4922-865c-5ee8d38982c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf0f695-14dc-4385-bfcb-ec495a07ea8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd3a341-ddac-473c-9112-3498ecc11102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976c951d-cf69-4c41-a626-59b880859f67",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2506f15d-a118-4f1e-8600-318cb3771b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab0572a-558a-4afc-b221-31af395d7cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009cfd23-5dd7-42a0-a094-5eb4fc8df084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "61690545-ab56-4af1-98ad-fdf9f5b84999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bfd523-f21b-45bd-a368-ad11e5916aa6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37069eaf-cfdb-4f05-9e07-55089771751c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f606627c-2581-4203-8d52-7ef437c27183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a4e3ce-a91f-42e9-a87a-6047b006fff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebed48b9-95d1-4b73-9a3c-878d3b17c096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c158d85-0895-479e-bef9-1ecf230cde88",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c36cfa9-51ea-4534-928a-e4acc81a4df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ad9342-9a12-4241-935a-94a01e637b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243143dc-f263-429d-9b9e-93b5c2c28730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf312997-f07f-477c-b5d7-7f47bff19266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5a3379-0034-4c5a-b577-508c4b5a64c6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d9e4ad-6f65-4505-b9b0-2f8a6e4fa6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12b8191-316d-44b6-b6b6-fcf13dfb75ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20de2355-20e4-4720-abe1-d264b0fe99b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d685565f-5a59-4f88-ac26-e62c7626ad26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb5c799-2bef-4f96-af87-3e379d3418cc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b699601f-db3b-4f8c-ba0f-c27c3d7c3d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fb7eda-1753-456d-afb6-72f491c7e928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7aef07-5022-4be2-9332-6b8239a92b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "37e1a961-0d0e-4adf-ac5b-97cb2e58f6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364c4217-9014-4e93-a1a8-c17920aaf7e7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee02000a-3550-4079-8a06-dfb3f666a5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551a245d-fdf2-411e-bef4-1203ffd2fb77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4200619-c3f0-42d3-a737-6afc8933123c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f42fac42-ea5e-4f69-8b32-d6bf1bf4ba0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036fe20e-9f80-4f17-8905-e9a670e5c82d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66dd1d0-a234-46c8-beab-34e6589bb491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98783549-dde1-447d-91fb-11a1c8b27a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebe8286-9a2b-47f0-a8b1-87ac31cde839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "33001250-206c-4b6c-97ac-6336b14ab840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cfd4fb-5db0-4151-952f-9a93a8838fc2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9974fd4e-4efd-418d-b217-b846bfa9a72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f9b8a7-fa25-4569-8942-63d10d26bb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4836656-085c-4c7f-bc0e-25e754605d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91c0c9a9-f2c0-4812-ac16-d8b172a496d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db457e07-181c-45bf-b52e-2d54da12af74",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e9b91a-527e-4daf-8acb-5f504fef4317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15017e9-3a04-478d-b92e-705d1df10f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd487712-bae8-4ba7-9c0a-b6534d040ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4ff6d4-1837-4c45-92a7-a9a3dd91b079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabc4a92-0e6b-4890-9092-91b80fd633c2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6016a403-3105-49c3-82f9-6fbe8b2d6409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe1c561-c50d-476d-a6bc-b55212d7aa41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31596809-47f5-49a4-9f46-8f06f3f46f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab1111e-bb41-4938-9ea2-e94f2b2ef083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7baf801-8f8d-401c-8e1b-24cf2b910909",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ed6143-26ff-4044-bf1e-27526944fabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61cc528d-5b39-4e83-b1d3-9af41026944e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa0574e-4e64-4a0f-9438-ac595b45d9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a32a2a77-75b0-472d-b43d-fc93ab40d720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b407f2-18fd-4bf8-af51-894f04db5efe",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bfd411-d073-484a-a6bf-994f3dee4a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53947ec6-c7fc-4908-9ad0-8d3965d52e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21368a02-9643-4207-a7a6-5bfea41b2570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a53cf59-2c36-4fe7-9fae-7a6886bca741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbb4519-af4a-4b9c-aedd-576e948b338b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47a1782-8986-4aed-9759-1d4ca4945e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e5f901-02f5-4ebe-a13e-96796421828d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17bc325-7bc4-44bc-ab7b-d63a15f73d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c65334bb-3dc8-4c44-8de9-ab33b152b67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31558d8-be82-47c3-9b74-a8f753a2fd53",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1cf363-ba57-4101-b9e5-337c5aeaf389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4733d09a-ed39-42d1-aab3-e1efb7585535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a932dd73-0165-4a08-8f17-eb0ef85d7a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5b4cf9-8f08-4d9a-b5d3-0557ce233373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cae7ed-4d18-41b2-ae0e-afcb9dc5b90f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c1b897-b099-4efd-bc34-a0922307366d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be298f4-0ef6-454a-8d4a-42ac40501d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e66f83c-6e29-49cb-bb98-e2327171d7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "409b4587-2065-48c7-aa71-9a888463de55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ac46a9-9001-4aa1-aafd-52f3c38fc539",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee849db-3d0e-4b1c-a9a6-b026e26d192a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d26d9e-2b9d-46d7-a213-2f9a85b9d63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4c359d-7ba5-4946-b1ae-817c0f5e73af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4431563e-14a0-47c6-82da-a7cce1ff7ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e952832b-28b6-48cb-8c83-530f880d3348",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bf734b-0843-4ffa-9464-cb35748cf123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7bd32af-950c-4514-99c9-90202a3017c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f39f15-f223-4b61-bbcf-667964f9761f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f779060b-6e82-4f55-b15a-ad66d0fb9d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113dbcf6-b0b7-413d-a90f-e6694d71cd5d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8287168a-0bb6-4449-b94e-e853e0d1dab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0031f57a-c4a0-46d5-9b3c-3ec25347733c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a287a47-b988-40e1-8ba7-2d873ce203f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c70dcbd3-6a04-40d7-b54a-0c4f750d84fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8517de3c-2457-4b78-aa81-f41a260b56b1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6faf93-5c77-475e-812f-d12cccc1b356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81806eb-cbd9-4c0c-8857-3c51a7c719d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e602b921-c575-40a3-8c20-d4846ab7788c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39612744-f087-4ee9-94ce-8638bd351ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1eea68-2550-422c-9483-08719fdb0b71",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f12ac8-90e0-4cbe-836b-be752b668125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb21d72-def9-4f13-a2fc-bfede7c49ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6264f8-23d6-47c6-9d6b-8c66f4cd3a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d58aa45f-1362-4bf0-9f31-a971312ef189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e95bb12-9709-48c3-be15-320cc00e19e4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7abfac-4fc0-41e7-bad0-7aa821f7d561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c06515-320a-4707-bebe-5a4948046b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b197a250-5535-42b6-ba0e-f91eac85448e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a686be8f-944b-4b9e-8156-8bdb9ce33e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb411611-9d31-49b4-8a0c-8faff227e26d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62987c3-aff5-42f4-a9b6-c7ddc8e8c6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb60ce2-f5ba-4196-92e6-9ad7079ef5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a27effd-9aad-41c7-8388-1c766d7b20be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e216c5b-6bd8-4ad0-8392-043e1aa0dc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3d69a5-cb02-40de-b869-8048062e4f2d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5242b0-1a82-475b-9515-941d6a8bea05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0dbde1-bed5-4cb1-b184-7d1af0d5348e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ba49c0-b602-462b-b407-fcda564561e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "22536eb9-e4a1-4df0-a872-e550ee44f25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0ce0da-62f0-43d7-a6ea-1a841a9ca926",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b4915e-c092-4ad7-9b53-8fe1dbe797db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0992f9ac-24a0-4a55-82ff-3fa2f01d112a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64a44c1-5426-4b26-9d6c-7811c4afa903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4c23b5-ab88-44f1-8126-b5f916203312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5094bff5-8234-417e-90f1-34e8577890d4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e6d74f-a3fa-4377-abfc-09f2d54f7bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8011936-cf18-4b28-8f75-f477a4958c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef23b52d-0005-4b5c-9651-ddea71ad076d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc01ac06-043e-467b-810f-efaf94d6370e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce05b9fc-656d-4abb-b016-94c5f81d1320",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f0a5c5-056d-4fe0-83ad-76b79d3d69eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c8b51d-5e76-479c-974e-53a8b77e9b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b6cde9-8a0d-483d-9719-0e47df97dd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72b10699-cfb8-4350-baab-3736e491fa6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7794545-1e37-4b62-96ae-074e52a3c636",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e23a25-59aa-4120-88d6-e2ae950505f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada72086-3c10-4c02-b1f9-c46ecda3006f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc73a50-b4b9-4435-add1-fedfb89af9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83966831-874c-448e-bfe8-f941ae87538d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b5160d-78b3-4023-b45e-b70224ddaa4d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db8ff7f-9e73-490b-ae8b-d2a31219921d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3f279d-48ff-4b2b-9379-d2a952f3316a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38de728d-746b-4396-a654-781c2348e495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9310f0-6b60-4337-9fbd-be9060f436e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b96b1e4-44fa-4ab9-ac31-d77bc83c044f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5599a9-7137-4eb1-9ea6-999f0c015e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc75c294-4abf-4c4d-832c-7e1adf928145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9f0f25-fc42-4ff7-9c2b-e182a9d9eddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d832a063-e4c6-440e-8ae3-0601b464f14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56d61f0-68bb-41a8-9826-83ea44a1fcff",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2710a2-2ee5-4b6d-ae31-4dc25683227c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699530c2-d014-4347-8d9f-0d49393adfe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9806e10c-01d0-477a-8367-a6c3800ba114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8887a58-de54-41fb-9012-2bb39dad551d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fd52fa-ad4b-4872-b9dc-706319b5455c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fc1989-f7ab-4293-a2b5-3313a6ddd93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ee96b8-eca7-419c-ac45-878118b666c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac4101f-1902-440e-90aa-311f2d5bd32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1c491f-bd31-4263-b7b8-5c10d0bffbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af98969-035e-48a9-906c-8a8dcd05b39d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0192f7f0-a346-4147-b1d0-4d453a46de8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9dbf381-45ea-4099-ac99-c797ad3d63f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28d904f-3625-4885-a614-bd1a5b3107a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "390b6781-f1c5-49e9-af6f-c3507eef36ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a97fb6-f112-4f99-b9f5-83dfb2aa596f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a1113d-1221-41e7-bb8f-962b4cbb1863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b82991e-83cf-4bbd-876c-d34d7a6b2484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e3379a-cc81-4744-b367-33ca8aa672ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a98531d-8f76-4d5c-82eb-64edfdd47ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ca56ee-3069-4676-9d8a-15ab2c4216cd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd733b0a-4768-4800-9e9e-7ed0023beabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74bf9b2-f4c3-4ee1-8b47-c1e21919ccc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199059a4-022d-4b4f-bc65-aaf5d03408db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5730009b-595d-4206-9d09-fb4a7724b695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31fe1ce-1e70-4944-9177-1152ef08ed07",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee141977-620d-4ca2-8a6d-075298fe8a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459958e6-c8e0-48c8-bbee-8fb5ccc5cdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6be9970-1e6c-47be-879c-824698fb40a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3d0b29-cb94-421f-b944-f62ee569a116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefcd9af-05e9-4d0d-a488-987b17a6cb7d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8d1d9f-c1b3-4a0a-9ccd-9eaa44581832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2f3301-f72c-4212-a91f-b0944fb46994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d112ea-dfd9-41b9-bb81-08a8773c6d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19e4a9ee-8531-437d-8613-564f7a065ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8445dabc-af09-4984-8b8b-a21a66b2b636",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82eb21de-abf1-42fa-9100-e940272872f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49002c2d-bca9-4ef2-b803-a100455af62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7483b12-1703-4a08-99a6-974b1551a18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b19e43a-283c-47a7-8044-5c7e57170a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec256e24-c408-41d4-a01c-81e42a683c0d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2d5a6b-8ae3-4db2-894e-2b5d17ad40b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e67e44-10fe-4100-8e0d-e0e9731cc715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834dcfb3-0783-4925-8abf-3f96152d6281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a60c4484-964d-4234-be33-4b4f6d9b123f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15382b6b-7512-4c2b-bf4d-64facb3537b5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31be8ab3-ef29-4559-9bcc-8818be330977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c306c2bb-b91b-4224-b1c3-93ff560dbc44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323e8c3b-7b1a-4ec9-a6de-e4ab9cb5aa33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b007300b-6030-4d24-be3a-5d80d7296767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010089d0-6a9d-426b-848d-918ffe08268d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352b4709-c4c6-471b-968b-9c0f661dc6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889ee85f-e450-4d34-8fc9-0d53dddd9890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e3970f-f1b9-44f4-908d-1b7d6c0fe836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b80e13-3812-44e9-b1be-33b95d76e112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250a7664-56c8-4903-9396-f49711d7a913",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0923dd-8ccf-4772-b4ba-caf69072afae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdfb3eb-7604-45cf-9721-4d6bdae320e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805e81e8-b672-42c0-8e9e-65cdad2bd695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92c204b5-5683-46cc-8d72-b934f17e8d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54ef0b1-a64d-4ca0-9ce9-4891e698a80b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1410e902-9de8-4b6c-b3d6-7a6484729c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f2c7a4-ff3a-41ca-987d-30694644b32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1354670-50f9-4f3c-8338-625adbf9a9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb71ba8a-d317-4848-99d3-0d2bc3c21328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63448454-73c3-4f3c-a9d5-62ee9e981936",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6ff906-4540-4b9f-b8df-90b41898b0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19331a14-8a5c-4c3b-bfbf-9dfd58287c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77efa84-ff9d-4a73-b909-08e70da89087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5362e220-7403-4e86-8121-4c8aa360bb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60aa90a1-3cd7-400f-b3cb-da06591beae1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2794ffcc-31ed-4cf6-91cc-e7e719f82b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316d6b63-2d8a-4024-a06f-95c79bd56e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd8769a-86f1-427b-8793-2ea172bef034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11757e2a-788c-40ca-a521-8ef7e1ca2480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a6d574-2c30-49a3-aded-a7722e79d363",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cf9e6d-4122-4db7-bd73-10966baef8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6c8ba1-039a-4456-ba45-5f3a8610c367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6ab998-216d-48a1-9277-39f6e69cca41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20e1ef66-8912-4f1b-8e59-27637b5e0327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27545262-df8e-42b5-bb20-0232555f3b2d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98eda01-cea4-49b5-a1da-633c5b482acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97a1023-556c-476f-b574-0350cb2cc498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140dd055-0c79-4a36-8ff6-301028377656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e26d540-3bf8-4478-8b3a-b3423dbccd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c753f92c-e748-44e7-a00c-2f3f4fea4b5a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae0a831-9b01-4557-b9b7-fa4bf37b3bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c9c13b-3d89-400a-a857-08f19b698b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbc0f15-5aab-46cd-954c-338b8f18481b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "319e1301-2f1a-4092-baf6-1b81211516fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcfa3b7-e857-43d3-822c-1a50cdeac0da",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ed8589-1c35-47c4-b75d-6020a1785892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa2a161-8dfc-4ad8-a15e-25237c933bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3766e18c-56a3-49a4-9744-c174d7bb1a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc6e600-ee0d-45a0-a0ff-348361ec5b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a7c89b-55b9-440a-9c09-32314e8c8d28",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87dbd5d-9e53-4806-927c-3716d300df4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d55de2-f0c6-455b-ab55-0bdf66af3235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f538d0-2893-4931-8192-e4960d13f0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7554e734-e01d-4d04-aa99-801931cee18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ef6aa9-9af2-49a8-9cc1-f59b118f012f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b81e14-2872-43a8-9114-e9ece38c555c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8eee722-12df-4533-9e7e-c37f3d6dd7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4782a1-a4ae-49cf-9fb7-276710168a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf398f14-2930-4847-b630-687a065f632a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc8389b-1418-4f41-95d0-4c0dd9eb00d0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8bcd86-9aa2-42c7-be98-cf0c46bddcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59078c7-22dd-465d-aa28-a32adafd59f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21de76d8-19a4-4229-b2ad-7ed1b44515eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "55f7f890-ef40-41bf-a3ea-b6358f1d4b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd79582-0c0a-4a9c-ab5e-1c49c8829193",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5c836e-2afb-4c66-b2b6-6be556651bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77a9354-f443-4d22-8d61-4e1c063fdd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deda056c-3b57-4161-b765-f164429eb105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c450e6-cc69-4628-91b1-b734d4d794de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db50975-81ca-43fb-b0f4-d0723ea6a7ba",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b3cb52-db84-4ca3-88e1-6572a4a4df5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec31a05-5129-42c1-88bb-dfb60ffc1af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a74b3a0-6d39-4aaf-99d5-c7b3300d55e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4157a11-2f89-4a53-8498-7e49cbef3645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b00edf1-cd51-4208-bcf8-73f7c37bd1d8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7532afbe-1859-4ee5-aee4-bc2c2f4636a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "126e6a37-98e9-4ed4-ba19-656c6d53cf21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5286126-2604-44e8-8d1e-9957a686ed0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "128ef6eb-a6c8-4102-bee6-5f5c54faa0e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "107369cf-0b09-4113-8ea8-e842f5f37060",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ffe7c32-a0db-413f-a528-dbc7c1370b4c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5065d3f6-96e6-4cad-9aa1-ea430e59632e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cddef630-daf3-434e-ad38-8bb8db154d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9f587e-f039-4dac-af42-ce324b03cfdb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb416b9d-12a3-4e4b-8520-0565d86fe86f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f27e1be-6106-4386-bea6-6fbbef17ece6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cff2690c-6ef9-4adc-b9a9-cb5e94091e10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4afbdfa-6232-49bc-a106-628c0ee38f08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b5e9fb6-cb06-4527-b682-69e019a7c2ce"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ef3f2b3-cc9a-4a67-a66e-8cea12bbb5cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d4b1db4-93cc-448e-90d7-6ae7d4f6249c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "58bc9dd9-9312-4bdd-bb92-41950c4ee89f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e2676e51-7238-44ee-b9fb-2324641d9a7f"
                }
              }
            ]
          },
          {
            "id": "ce8e8285-7a50-4cbb-b9f1-4860475a7787",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9a0b2626-7e3c-4282-87db-46e78d8f975d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b022a066-dc37-4626-88ce-da941acbeb73",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d5ea7d-d761-4d95-9294-ccc1e4d4dbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8686dd14-c900-4d24-8918-6e20dcfc9675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ddb8e3-00e3-4ade-9bf9-1811b0e9ce9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323dd9ff-ca84-4693-a4e3-8d38d3f3e4d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "74069470-d368-47a3-955b-ae77f4c24ab6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2011ce03-d00d-4b8b-b0a8-73270ee54ac7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c7f137b-f74a-4f8e-a3ba-577806c31af9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61ab4927-eb43-4692-818a-7d2484c73aac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ee5cbcf-1aba-4e60-910d-869b6c639341"
                    }
                  }
                ]
              },
              {
                "id": "d0814429-8894-4d65-a756-8b6ef9183924",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c462fd3d-8e73-4372-9af2-765e9b050d8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e65e7f00-6f9b-4fa3-ac01-2cd162dc88de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0dcbdb5-10b3-41bb-b5f4-d08f1d415caa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e4b41a5d-1985-4f62-b43d-e2cf19c3411d"
                    }
                  }
                ]
              },
              {
                "id": "327d5121-78f6-4dae-8f0a-51cf26902780",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf984ecf-4b39-456a-8c08-9ea0dfc4ac2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97483271-44d2-4093-be70-ec7c74252865"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "735df2a4-c91d-4e01-b1a7-5470692fe0a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6f46566b-e680-4f53-9eb4-88249e1e6a2c"
                    }
                  }
                ]
              },
              {
                "id": "37e07b83-2b5e-41a2-bbe9-3a854318e5b5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "854e6621-92b1-4069-bf4d-036e653dc3f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3f31d04-fda3-433b-a65d-3f09c87c1add"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af24f67a-5fea-44c0-bd87-e553915ef32f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ff37628d-84af-45d2-bc7d-03df923dc746"
                    }
                  }
                ]
              },
              {
                "id": "f643944a-9d2a-4de9-b7fd-daf83799ae11",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67b44636-01b9-49d0-ac5b-ca8d09e746f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc59be54-3d96-4a76-86ea-91ca6200a057"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0321b64-6552-40cc-b5e3-afb1193013ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6fd90994-272e-4633-8726-31b52939f329"
                    }
                  }
                ]
              },
              {
                "id": "5fb11996-f79c-47f7-99a0-d94849169d5b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37c8acbf-7fd6-46df-aae6-bc8cc82d7a67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0060d1b-20b0-4d6e-8be5-13c30d77ad7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e25ec2a9-e6ca-44c0-be2f-22fa9f1f7de9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "53a8c263-2b93-4acd-aa88-d122eae42634"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3af8a53-daa3-4f95-b0da-d13d6a799311",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6efbaa9d-89ee-434d-98b1-06ff5169db1e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f584e1bc-56c6-44d1-956d-80f28f1d17e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b6f6723-eb21-472a-a297-c3eefed948d4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04877fee-fce8-4075-b801-d52eb85dbd1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "701c6788-b262-42a9-9427-f592a97ee9f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00c360d7-cc4a-4d31-9d80-29cd942b73a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a99c873-644b-467b-8593-f252d2abec2f"
            }
          }
        ]
      },
      {
        "id": "5ef916d2-8ed5-4629-bc77-5ce5adc6693b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "42798543-49d3-436b-80fa-8239959e8607",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89f442f2-dd9c-45f2-b705-408aa20269bd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c64d689-abb5-408e-9a88-b72897b01821",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00143d66-4464-437a-925a-5658a24c998a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec6a620-2528-4061-8133-272e10492962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc61a696-fe78-4c17-bd36-500dc065e3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a818fa-e144-4277-92bf-d401e6ca0d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447e0861-7fdf-4c02-b39c-6fd1e9419ea9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea49f036-577d-4b84-bc53-098be992cb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438ef618-a8b9-4a00-bae0-debfdf832a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a353294-a850-4694-8a20-8ed4f087d8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d6b885-21a1-4100-9574-2dffc4e4c493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde967cc-a10a-44d7-84e3-df09a5b03d37",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055da405-8598-41bf-a2a1-bf2cc442942d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b24f63-73a1-4f19-8286-b7454db2eb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea92417-225b-47c8-9fed-d2987a373cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38625df0-98cd-4e2b-9204-502158e75d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbbee18-668f-44e2-8664-bacf4d3324aa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca96a31-ca32-40c2-b5ef-58feb8abde32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f8b5f5-41ff-4aeb-a685-1d384bda4169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dff668c-0c5b-47c2-9991-75bd2e5aad4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "443346dd-18e4-4cae-9e88-7c7b6d4eb3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ca01f0-7183-47df-8d29-1d522b118d62",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8addc06-783b-479b-862b-3ce9b1d843c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6947a32c-1b64-44eb-809f-d43f619b4ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669339c5-75fb-4c2e-b2b3-50003bbb4742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3539d91-0dbc-4b64-8456-a997aef81a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082412d2-c1ed-4382-af50-80366f993d3f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bad659-1221-40eb-a02b-cd686a5eebff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ca93ca-40df-42fb-9ed8-d89575f85f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d382e91c-4d0d-428b-a41f-9ff90cf69538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b93bce2-2fb8-4261-87a0-59790d946ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b045f76-2b4f-427e-a8bd-9246eb06b513",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63da9249-9f56-48ff-a665-509904f49e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c80f2e-68b8-4819-8a1f-53c73e914c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0c666e-dc28-4ed0-bc5e-5c40b3d92e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c9eb6ed-1b82-4736-b4f6-a019bf682f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d098f1c-cd0a-4f4c-af96-1d76790b0ec9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb7fdb8-76f5-43ac-81be-78c73d7e1180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b1fb90-02a5-4526-a276-78c515ebfdfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b156c4e-ec9c-41ea-aabe-bbff29831ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c6107a-23d0-4915-860c-ce050f12ee47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9d2a0e-bf20-4888-9d0c-7e8ef5c2585d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ec31f8-a846-4aca-8611-a004d5d1fd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e67c474-00a0-479e-8563-f7bbc7dc6504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375921a5-604a-4f83-a9af-f8b65c1fcb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58a0aede-ea09-4bcc-b0df-f04f9d75e724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99787e25-902e-4d52-9995-f76dbe5969df",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf727766-8479-45d1-a924-7d038559c0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c28cc2f-14ef-4440-8419-b2de7e1538f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bdb35d-e065-4925-9c1e-87fe08007d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9cb5d7d-0003-4e35-b0f9-0944547ec88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9014e992-6b77-4f55-a6a2-ff133d2b1493",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df063689-89d7-41f9-a294-32dc5684887d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5085c78a-dd0d-4ae8-8e9d-3010cc9eaa29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53cd5aa-661d-44bc-bd3e-e39ad2f972e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "96d51e3f-08db-4cdb-b1c8-e1800efc8354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec11b24e-cc87-483f-a500-85b0971fb89f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c228e7-42ed-4fc5-ba7a-4c1b1b84dc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b45e391-82dd-47b9-a88e-b4b98c3421c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd15754a-aae8-40fd-8898-a1f4db4b4843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25e6e33b-8676-486c-9b20-d95a63e52c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537d1bad-e3d2-4823-b6d6-55cfbf6b8e18",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ddeaee-1631-4a0f-9a91-8e34d7bf7fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518bd644-f048-4442-a0e0-a62aefc69ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd33022-750f-4082-b91b-2e5ae81f737b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9e4c42-f03f-42ce-aaf8-be7791d40642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d70494-587b-4a81-a6f5-71cd7c6639d3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06a752b-7a78-42ee-8390-23d366961799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32aa94c9-e519-4dab-b560-fdf29a56d312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcd37a8-dc7e-48ab-b525-871e87ac07cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c06b155-7838-4b57-9d9d-6cb64b9d6465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d486a689-e82c-493b-86be-29cf876df839",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844032be-8a78-4bd1-83c3-0e47943961b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e6d0f9-27e4-4f36-9dde-bce50b75d9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81cb7ca-1822-45db-80c9-fb0fb0b8c7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e96f68fd-df89-4c8a-8465-6c53550a1b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ced57ee-77ee-4216-87cd-909ddf8a4fa5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bd1b32-c8d1-4feb-8b05-3baa0724af9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03fcab5-79bc-4af6-a7df-12ab93d51e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462dfc2f-53f9-4bd2-9cd3-c656a0812a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "48b51a28-650e-450b-8ee8-d3050cc048e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71859ccf-8afd-4ab3-9b17-3a8bf1a55755",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181dadd7-31d4-4ee1-8d7a-98c16f666671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59162eda-d438-415c-aaea-5f65c33766ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbdaccf-2d50-46fa-b0e7-095775bcf580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f436012-75e6-40f1-bf9c-3c7bf6a1e8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4dc793-af08-4a99-b245-a0b9d1e3950c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf5e127-3124-4cfa-8519-cdf02773b702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03a2ef9-bcc6-4ece-ad8e-bfa19641e163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799909d0-a4a8-4821-9d14-2e5c0b7a0ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dad3baa3-8732-4461-ab0d-6a9ec273f795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e82790-97ca-4606-9112-beb22d2f76a9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe69ff6-dddf-4402-837b-008f13f5bdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76a1929-cde8-4853-a40e-7c4dc6ad0350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dba849-a5fd-4eb9-82ba-f82ee36ff107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c84aa3-8a56-4a19-a829-35037b661b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec88d87-4599-4505-bda2-4ed4c273b5f9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a438bba-54ad-44bd-a51b-94e4dd5c6163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e481658-25c4-4a72-986e-287e1eba5b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7119a8d5-3213-4322-9a49-8afc7a2928ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aec9e55-c81c-46b2-85de-29df23ce387a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601c0a8c-3f83-45d9-92e2-44c3a55deac2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb23cd27-fd1b-48c1-a932-48e017baf758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b6e075-7c95-4a46-bc78-3c30eddab1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b35e6b-633e-4749-87a0-6c08a56738e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5cedafb-42df-4d4a-a3de-c7ee2363f34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f7aeae-3d2d-40be-b0bc-dc99e70eb421",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a7b9de-d070-4cf9-bba6-8246766c7c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a7b526-e80c-4618-a3ac-3b4ab9f3427d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eafd86-10c2-4f3d-93a2-c13a73866e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "622a16aa-c1e8-48fb-a67d-8d75428e16db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9a9c81-630b-4b42-9e0a-1668fbd7be6d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bdca8c-fa3b-45d8-9290-366988d3903b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faddc900-d827-4f3e-a061-c8900172f0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21df8162-b441-4b74-8642-a08489b2ffe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3e67a5-30ef-4f2b-9f17-03695e107132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9b2d5a-6420-4bbc-a873-1c9b00bcf98b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a2adbf-5280-4324-8c15-cf173fc9be0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e5d6a0-39f9-403a-9c8f-a367eb988288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658434f6-622a-46e2-9a06-d1199a534ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7618e313-4032-495b-8490-0095a85fea09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdbcfca-e5d8-40e6-8c18-bb788188976e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0b4a40-09e9-45b4-a2ee-dc4c6ff1458f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0284973e-9d2b-4099-8b05-b9fe65155980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bf6ae5-0332-4e72-8511-b204c411f149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb577812-c2b6-47e2-b80c-a88018f7e4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8aa46a3-579e-4c05-a53b-f6cb15d3a1b0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a7f132-5568-400a-a5fe-d8f08e902b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d66903f-cbc9-4b93-ba49-ed62e96b0361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29f2f23-5614-429a-92f3-4f6ce5300f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd4e410-736c-475b-833a-c4fc17f8e176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149f3cb0-ea78-4a3d-acfe-c92675c4993f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd58d4b-4111-41a3-806a-14413ad87248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38904fc-4ddf-404b-be8c-c5263b19d5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b367f9a7-dade-479f-8367-f6c6a4c98440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d583ca1-d8b6-48b4-bc94-8faec126e1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21952fe1-5bac-450e-bf81-5ca566b9ccf1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "babf9c4d-2c38-41e2-83ff-cd9e3032dce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741e7951-9d28-4256-a376-228ed02f4996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d087e800-36f7-40d4-a268-46d1437cb2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1375aa-83ac-4224-9bf6-17313b41b28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6926f59-ce78-4dee-aad3-65927cbe697d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6153723c-0929-4e5a-ad6a-4b08cca44d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11c1556-5067-48e6-aaf7-5f8fd1f91a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e247a55-700b-4b13-a023-a3b9398df702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac237498-6b63-439d-9848-399efb4df935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ab9779-f4ca-4f43-98be-2497182aaa13",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13d73a6-6b7a-41ad-bcf8-9c53bb86af7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96a15c0-17e9-41a5-abfa-40817415f727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb25d1c-f9b4-4917-8073-6b854b603232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0fad6b-8137-4f20-a0a1-5b118d74eaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8818917e-9d3c-4213-b33e-59f31eadb953",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daca1217-1206-4f26-b2c0-19595733b047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65a59eb-9233-4c6b-8193-c3509e6f5956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25ca91e-1eb9-494d-a034-3affedd7e8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d533dfbd-e0b2-429d-a92b-4fea9f2b326d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98aa7ee6-998b-4c29-8880-d3247bf702be",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec6a303-8054-4f8d-a0f9-2b89116f715c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ff84cb-a715-431c-af57-5cf96c807cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fcbefb-c382-47e7-b249-96771be81c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5605dfe5-0efc-46dd-a0f9-ae9c57f9f9e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4532f991-1364-4989-99db-0c4c9c6cf6c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "011b7170-3170-4140-bb6d-16763c9bd91f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042abffc-a5d3-4394-a02c-ec201f8e74c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b09bce10-c8e2-4a71-a66d-1f56f3938282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14af598d-641c-4c87-85fd-372e7cb36510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4675a752-4c8d-4db5-a7b0-10778a46015c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd8a0866-6838-4336-9af4-439c3f044167",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09bbde91-0b87-44a2-91a8-b899da3df726"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc6b5001-90a5-407d-90c2-24d76e7c3636",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "026c2cfe-cc45-41d0-8a67-5431f074861f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12323589-c920-439d-8c5b-45433bfe7b14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a6e8f58d-bd5c-4989-a617-ff3e13c2acdd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa18596f-16c6-4b4a-a34c-f2ba08c882c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eaa0a4b1-0978-4217-8ee4-1a77e2039e9a"
            }
          }
        ]
      },
      {
        "id": "9e16980a-b471-4443-a066-ee07311a9a18",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f3ade02d-f9ee-4cd5-a216-db79c94272ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67771709-5a48-4d9e-9fcf-a3aee2785213",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab490faa-3c13-4fa3-9376-642090830022",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46550718-6861-42e4-aef7-020e7ea441b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f348750-a1fb-4aac-89cb-aefebd5d2097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d1525e-9e54-4c18-8d0d-70071a53605f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "505aee00-018c-43d9-a430-376643385585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348fcb30-e79f-45cc-b6d4-c4e89fe216df",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6944a920-bf83-4a6e-b2e9-7313ef3c1192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769567fd-084c-47df-826c-d2fd304ac9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2be0ad6-ced3-4d84-89ac-98558d19b968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d38b0ae-a28c-4f48-8194-2de112cb2134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa53862-5e90-4ea8-aa8b-c6273fd2510a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710b8328-0989-4c27-94e6-bd5ea5f36c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d040a254-c100-426a-b4f9-7f1cbda12822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1faae4-b1ed-4c5c-b47c-2f4309ff6103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a814c86-76a1-4b04-bea4-9e42aac6afa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1ef881-54e8-4a6e-8fa5-111130cedc8e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58fdf60-851a-4088-8f65-e5cef2d95e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc44b41-54de-4a90-9426-68bcc6a9f2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7f8892-18a0-4688-9b95-8c969ccbb9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88d083cc-014d-4c18-953e-77e77572ba03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50372c16-ce96-44a0-838b-229f72e2afc0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa625017-dc88-43ef-8c02-21cb7a251e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbebceb-3385-4d6c-934f-3ecbbaa2af30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cb563c-e39e-47ba-ba68-62f382355914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59348bb4-5fb3-4763-92f8-4cb0e3a40e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac32a86c-11d2-43e7-8c14-dbc0cb1f751b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdd6699-6fd9-4ae5-91cc-ecaf72fdcb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e90280-91b6-45ac-9aa5-0dfb7dea0680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322b03a7-e40f-40a8-8cd6-c43b6764ed62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fac14e39-b45a-4ce0-8dc6-0d3f2e6bf2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee1e218-1237-4577-9a10-20ad3864403c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca08cc7-5a24-4939-b58f-feb718cac483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11856464-4ddc-4c47-93bd-fe79e0f0f877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ea11dd-ebd7-4bc2-ac67-9df0fd445df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "997c32e1-e11a-4f10-b51e-0a5e6213b8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d812697-3436-467d-9a71-568749fdc367",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47304ec3-252f-4e4b-ad92-d4242fe1893a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769af531-b372-4840-ab62-d84a695e42ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807c642e-7a8f-4cb1-844f-8076eda10248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e91c866-393d-48fe-9dc7-e44eacc0e38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3640aa70-179c-4029-8d49-a58284aeb288",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5cbe5f-d253-4b9b-814a-8847ddfb6c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15be7be-0d7d-4520-bbcb-1bda664df75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04cbafa-28bb-4bcc-a185-2113c7a41592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39a5ea68-96fc-4e5f-9119-26944858d6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4b9983-049e-44d6-8fb6-83b3cf065f7e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce053915-c302-4b13-ad01-c86eef06b273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb98f39b-06da-4682-8b82-7a9db6383670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b67728-7e80-4860-a7f2-42c6e6ae08b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0862d3-d878-4140-80aa-6af82df73edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0b1ea7-02e0-406d-a3b7-dd90009c91dc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad72e4d-e709-4cb1-a5ad-8cbdc0bc127d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abab0c4d-d2a6-4617-8b4d-d9bfc2b3627b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97880e43-0d58-4b62-9916-e8d6570c4eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ed5f8729-72df-45b5-a2df-b74fd806719a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2979d1-0a02-43f8-9d4a-b3ef7c8ce0c4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90444b0-d813-4fe0-8f56-a38e28967764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373b064f-58df-470b-ae92-5a1aab9c5ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d195ca-9e80-450b-aedd-0fa376809c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "717bf348-ec0d-4181-9b05-3bae1b02949f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3eb225-5aac-40c1-8ab2-5d20c897ab77",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9be18eb-68b7-4a69-beae-4aff0c943c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e396107-bf38-497d-8d11-583a97cda302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f091555f-7a8f-4e12-aebe-5b425d12d980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5067046a-7ed1-4adf-900a-9f16a2e27957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4f7462-005c-4ff7-b5c8-92f4a4b6d282",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a842823-ccea-44ee-b51a-eaab5eed1055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65adb4e-5cd7-465c-9c3b-01695e1291a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94af014e-0596-432e-9070-7333d77b9b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8301ca80-c3b6-4ea9-99f1-62d6d8439f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6c777c-c6c6-48af-9ab2-651f227c919f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ee58ff-e62a-448a-b47b-128d36d2419d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ad9c8e-c92a-41f2-a4b9-8b91164093ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654ce0f6-62c1-4a2d-bbe8-065fa505ef53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b726eb0d-ca37-4e4b-96e9-e54e90254b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1ae55e-172c-4de6-9317-ac72e0f6ab31",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6563ec25-2210-4761-9860-3ab9b95457ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8654d592-7f6f-4821-9d50-990e1b9f5c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eaf2e9d-3e06-412f-a13a-24a82c1fec59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4119c04-33a3-484c-a442-ef2e51fb5e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f3f13e-57aa-4251-8b4f-e92bc32c057f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ec181c-b1ae-440a-b69a-d5589dd73256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeaa78eb-da35-4e16-a30b-948eea5fdc00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0929157d-8dab-4cd1-a302-1cd215f0123e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a7445a6-6b4f-4abc-846c-50b9734eb2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa3487c-2a55-46fa-bb5f-1412fca927e5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18dac48e-6194-450c-a256-9b6476012915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3768733-50d1-4057-928c-b797d3a3970f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1161d1f0-fd10-442e-8763-7e43f8ea7cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f03e22f7-c450-4750-bff0-d9f5a730acc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328dcddf-cf3a-44ad-b528-4bdd886facb5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a251a5-1cca-45b2-bf42-435acd5e3507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07a0f01-35d2-4673-aff2-2bc0822adf32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df28e3d-3c72-4e44-8dbe-a32a8d42c553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9a8d9d-9ff5-4dd8-96f8-1202427903a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2deb547e-3308-4876-bc59-e0e73e3982f9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6e6267-f9dd-40e9-9ddf-feb4a811f983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b50cbf0a-ea05-424e-8e15-cc1abd1b61b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e20aea-3cd2-46ab-95b6-8bf45827ceaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a638c483-5618-4e4a-b849-0b0835dfc9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15cf751-e2c1-455c-ba4d-ac2e8af58a63",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77826a8-fbd5-4821-977e-9e56d490e9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1bed63-27ae-4739-979f-ac9a67c8169d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499f80d7-e2de-4541-84ce-24088f9fc6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d93b2d9-8386-4119-90ff-b83b9b9629a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e657b5de-72ea-48fd-8ca7-0dbaab1b856b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf03c62-efca-4ae0-b2f9-96b529a6c3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9862bf40-980f-4b11-9d82-1562082c3e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0329c6-fb51-46a5-806c-9f96a6ce2fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e178a0-4a07-45ec-8d5a-65b36afc9cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7bfc00-7513-4e6e-b0f9-e7e0b84b2376",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8507160-3db9-4aa6-a64a-ac9ee8756c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a4dfaf-d2d1-4a32-9100-9713657941b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873b6bee-4dd6-41b4-b0b0-35498fcf63f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3a8c3e-8c19-4d63-9225-37522a6cd330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179917d0-88d0-49bb-b25b-0ae0a5ba64f3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f1c530-3298-4b75-ad86-f17b355e7719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6f2c97-d00d-4522-986b-55f20bf9404d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3526b2-10e7-4785-8925-d54fe40a6bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6457223-6675-4f7b-9f03-b054812a5f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf304f1-01a2-431c-81ad-6f7c76cddc07",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191efdab-bbcc-401d-8176-21d080a7a6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f406ca4f-bcae-4035-b454-32c3a74dc817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fea3f4-034a-43f3-828d-89c5bb77f386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5707e99-35c2-4fd9-97f0-f8cd4053e0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c847035-796c-468a-8c71-cb86c6a1e4b8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb90db8-d4b1-4b8b-8b95-000cdcf040d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6d90b6-89f0-49fa-bafd-852e7b9073e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d544c8-cad5-462a-ac0d-5ee836dc5c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3230d7da-2a1d-408c-b65b-c4857e57cd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab24907-667b-4da7-8145-a1cdc8298260",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cd6433-2974-4c72-aff3-0dc5d05aad3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47fc7249-8285-4d12-b01d-f9fd6a681c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d217c7-2292-418e-aedc-5fead0c2b0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beea8855-2e51-4a85-baa8-b9672a10293e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58fd1fd-dfb9-4a26-9b8a-7a2d68fd8026",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e05d2c-5b4d-49c0-9357-a416489ecb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e49c98b-5282-4f87-a6c1-8299b0da0129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfe4323-712f-489c-bff7-7c54183b9b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee021ef0-9eb9-4683-9e26-3fc94143d422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6680b5-224a-462e-a9c0-9f5104641927",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52052a3d-152e-4098-b673-88d57981c470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738e9915-0aa6-4a3e-9122-1843ccb0e58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ab9b92-4ce3-4c2e-959c-25984a63654b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1541a59-cf71-4781-a70d-9cf073f6f47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313724fc-98e1-48b1-84d8-3181cd217ce2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc62d47-fcfe-4e6c-ab96-76ee1c9a13f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef877d82-2c2a-43b7-93a0-cb2746bae870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e2bfbc-ba6c-444e-bc93-5874e01a995b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7a51e2-7636-4035-87b6-e2f3f8d26bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3149ff38-7693-4054-b54d-f6b335cffdbb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9dd15f-aaee-473d-891b-07b5809a121e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bd56a8-4a39-459a-9471-5cfbfed14d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b8f6ed-216c-4cdb-9866-dca0ec88c1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1bd95d-f534-47f5-b2b7-5bfba2911612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb181e2a-26fe-428a-89cb-115c437d8f60",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97dbec78-5ac8-4f60-a3b2-9898c0178ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4197a5-67ee-4729-9860-25d1da4f5f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3b1175-c1fb-4d64-94e1-331ec438ebbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3155fbdd-a637-40bf-ba5c-8d25736188f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe616599-b5ed-43c9-9633-2a815d80100c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1e4b85-68b9-4576-9a83-9a50db370983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2223bd2-ae0f-40eb-af15-256c528c4872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15376e77-a470-4bbd-a7db-f276e5b584d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd72df62-5eb9-4589-8009-d5b3d0eb196c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18f4e77-bfb6-417e-979d-e500e5dfb059",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d7505c-2a9f-4241-843c-3c4a960e5390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76d63c8-b47e-4ddd-a631-d77d59431b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434d5f2d-3f54-475c-aa3e-5fd2ad00c695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7cdfbd-a3e1-4f59-b7b3-2a0db370991f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492e8a1e-47d9-4ea5-8ac7-52d4eed749b2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6432643f-b7b1-4665-8f00-40aa9bfa58e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4a9e80-ecb7-45c9-b141-90e457225a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e9d6d4-d5f0-4269-ab06-01f91486f698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff12f7af-f276-405f-914e-b0bfc4cc65f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71dbcd0d-a786-45b1-9fe8-93467ddd9f4b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6085fde-8d59-4467-bc71-46c96f44f1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd039afb-2fda-4776-a676-2bf5458700f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423a3a4b-ece5-4d81-bb18-8492b31c24b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a896fe20-3bad-40c4-a0bf-9546f55796ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce8ea98-a77c-4674-b1ac-583088baa578",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89323b5-36b8-4531-859b-82ef4e0feb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827dfa9e-8181-43ce-b789-8f47566003b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f7f344-77a4-4016-a5e2-4f4f1f75f1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6aae874-0a1f-4495-9ebc-8036931764ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cf12e892-46ad-4fdf-8899-f6a5a02b5e27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44007537-1b25-4bcf-b5a0-c8db700f8f6e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c4acd1-82b1-4964-be30-a0aa245167b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e011e8e8-8cad-487e-ad19-711c78ee4698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f6d3dc-f115-4ae5-b828-f23df804885e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7bae120-e7c2-4dfd-9790-58491a3865a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb00dbf2-b2a2-4116-b854-0c29d7bfd882",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06670fac-a543-47a8-abb1-b2518ac8a065"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e9a977f-9ac6-4bb6-b2de-7386acfd2015",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a49daf79-0c1f-4aa5-9a55-2529759fe680"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ba0a9f2-37ef-4e3d-99df-c33fd93659cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "46c755be-e360-4d37-a5f6-f160d21aaf5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c71d8844-0881-4a04-8e9c-183520288666",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "166c368a-81ea-425e-9320-bd0dbf9c23dd"
            }
          }
        ]
      },
      {
        "id": "e5a1f75e-0b0a-4b5b-ae87-34813235ba23",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d16a9bed-ead9-4584-abff-6ac2730384b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b84763c3-9ff0-4ab4-93f9-5010a4165dce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3964fd46-75ab-4407-b9fa-05dffdc7c920",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c82a910-55dc-466f-9e79-f57784ec5a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec830cfe-9975-4746-bf26-6d704137cebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df592c66-74d0-459c-8931-edf647623cfc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2702c3c3-3985-4e44-b0ac-a2810eada500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20aeafc0-d17f-45ab-be28-251854a2a2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611a68ac-261f-4a97-a386-e1cb2706b5d4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75f59a0-7b57-40b4-a4a5-3e14a2af9c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e501644-7cd3-48a4-bf30-3e13e7d8c333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c967a2aa-42b6-4a04-bc4e-004a9bb62e1c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559a2633-085e-4f86-9ed6-2b72d12f8e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8ef1a8-d644-466e-9548-1e374bce1689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5deb8afe-38b5-4289-89f7-341fb4851ca2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40564da-0f55-4306-9c46-89c083618f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24d0458-f7ad-4016-8d3b-5a24b694ce1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8897490e-4fa2-4cad-9092-f5e0b708995f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcf4348-90c7-4006-8995-e0b9621e2791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390634ff-23e9-481d-b99e-ae709d8c1e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d6c2ff-b7ab-4373-8ceb-eb640ead1324",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8192df81-07c4-4a75-9128-e9f0b3f64fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbb09ea-9710-44af-9ed3-4425c14c1dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7297f1e9-68f5-4f9f-826d-92b97ff48e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecce6d4-8168-4acb-b7b5-14549072c0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636d505a-3759-43fd-acf2-bdf810ee41bd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b5607b-9527-4741-9fbe-e9b6b302a44a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecf25785-03e1-46a1-b195-2c3ea3e5a1c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a50e7ad-9abe-4d87-94c4-4689762a9c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90550f27-064f-4cbf-9be9-0490396e5b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44dac61-4406-495c-82dc-6e74092e8a8d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acda50a-b63e-4e3e-a2f3-1a7cfbdfab57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ec933a-5449-4e3d-9b13-c50765c67b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25c93a9-899c-416c-9ee7-e3484e564f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe185bc-82ba-481b-aeb2-00b4e58e9b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae23ec1f-313e-4ee3-a6a2-f1fef7b0012a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce89efd0-0850-491f-a506-76b41c1e06ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a40db306-3347-48b7-9312-839bab0b45df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16099e63-83d2-442c-a1d7-3d783d784a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f33e5cf-fd20-487b-94e9-9064728d2229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37099b3e-fa05-4399-b6d2-03d5412797eb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbab8347-f560-420e-ab39-a4b44ef0728e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58746c4-ffd6-4b1a-be8e-ec49d70842ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "032614c1-3238-480b-b5d0-7eb7e254ff16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd16ff51-830e-41ec-a204-4c87a449f4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87bb5b5-aed5-4e2f-872f-379c7ae9af43",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09a50af-7741-42d2-941d-2179e38ca429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0ba1ad-1063-4abf-b11a-e3c95d421950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf57cf0-2255-4b4f-aacf-6bdc63ccb5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22d59d4-1a11-447d-bd8e-aba7eea9653a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0b87dd-c7b7-45d2-b220-bb44be659b9e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab9f4a5-0840-4e6a-9016-50f55613d743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8c1a231-d854-4a8b-b78b-390a9a27cba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d3d230-8950-4a85-82e1-ef98ec1b0013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113eaa95-4287-44eb-a5be-e9924756f50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7702c44d-05c0-406a-872b-f6224eff08b8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffbc917-19b3-45c7-9933-7f0a14ae8842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e510ff01-949d-4acc-bc75-8cfd81d0e480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12be196a-ef69-4127-a381-23682b45bb57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64ce50f-78ed-4f19-bdea-f8e4f1e9d952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a273f339-39dd-4a1a-8626-e04f5d14dbe5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a796c92d-6da3-49e6-9aed-55a8214a57ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7490b77a-aa26-4637-8e72-d62661369ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "443f5362-0ff6-4576-b9de-fa1993f46d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d363173a-f78e-43d1-b80a-59f15ea767e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9f732a-1265-49ef-8f9b-aee05dd6f218",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e57908-475f-4fc0-9e9f-8f8c7e30eb81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2118c603-d2db-4fde-8333-b4b312c30f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7832cc-daef-4944-88fe-860cab663dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003d7eaf-3912-424e-be69-a8b794d1f0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd52d877-e3b7-478a-8b61-194183cbeb7c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f14dd04-7c4c-4cae-a7bb-22edc99f0c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44711840-6732-4bc3-940e-b708178b1da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4193f358-2ebe-4a96-8f5e-c2f9a7d6cda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6f3990-39ac-484a-bfd8-903634b9b0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a20239-fc9c-4061-a0b0-5ffc1f387b08",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb19247-c78a-406c-aae9-f8825742195b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e0ba44-d2df-404b-bb5b-a1a188d9ea29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54f0c53-cc68-4af8-b395-f06ef46f36fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c50bd2-f801-40a7-a9d1-9d2d04e622aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55a350b-82ff-4a00-8c57-18964b164dd8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae524ac-ae03-4933-ab54-a3d2e4bd6b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ffd3840-ae1c-4444-9f90-1a65d9d25686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b059e11-fd1e-4a5a-84a2-0754a9f0a824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b492fd6-140a-459d-ba41-e30ad0c75a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051e6652-9db0-4cc2-a2ce-dc40117bf8e5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10eaad8e-d2d5-499f-b8d6-ec6db727f972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a4d519-1c54-4d77-a3c9-f9d94036ac02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0867842-72b1-4023-80c6-a3f0388247a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580c60ce-5a73-448e-8c4b-9a7880b47509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66b389d-9c56-45ca-bb32-d46e99babd64",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccd5840-4580-4773-b734-2ccb49f9f221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeee297d-f95a-40d7-861b-99f5e193b0c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6e81b0-7624-405b-9d25-709d92c26f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ccf35ee-9fa1-46ba-a2cd-82c413ae4db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a87b5e-4a61-4452-917c-2989885dd537",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33342c51-4e5b-4a7a-b08c-494d4ce6c3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c76e55-4e6d-4879-a95c-c076cfcf27d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bc98a2-f6fb-460c-8eaf-0aba77c9e7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e63cc7-1eb7-4c96-b328-b83044e60cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbfade3-f1b5-40a9-923a-9c4df4fb2b12",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3d6c4a-8c26-4052-b920-0f7681ee0c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf30a94-6d79-457e-bec4-44f787579e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55791f4-7aaf-42f5-bca3-2023b8d8a022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec46398-24f4-41a3-8e1b-1186ef6dc4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd67e40-2408-4db7-81b2-4f3da7f1a72f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b036baae-3526-44a7-bc26-6f7e9b09affd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "332dadfc-4347-4136-bd8b-b826c3e713bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1651678a-c70b-4df1-b414-3ef4781db13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99cd4a90-3111-4ec3-a3e8-37f9228ca7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a655153a-29d3-484a-834f-eb2f9379b04e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825e6db1-89f4-4647-84bd-446e50a4c954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "130979ad-0ffd-470e-8952-fa19b8bb3423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7945ae7-dffa-4bf5-9434-12af970e615f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2407615-78b6-41f0-8d82-077eb29b704e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18d1541-87b6-4319-a090-ddeaf3032f05",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4555936-98e1-40ed-8d7d-bacfc30a5bae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f521a130-ace1-4480-97d4-323ad5724710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "341550d0-12f5-41da-ba7d-8c4c9d974a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd46982-abf8-47ae-aa5d-b8114377a17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab61256-e13d-48c7-8991-b6f1353b41ad",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf0ad9c-d924-43a4-b7d3-44287c1baeb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8c06395-f868-4aab-baf1-273d5e5115ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c3c97e-aae7-493a-b3b1-a67d7077da4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62654471-adb6-4ae3-99aa-1ec2686a92e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f633d39-1d77-4568-844f-70cd83a13a44",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938173cb-53c1-4032-a213-6fffc8464b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd118feb-f9e4-4720-b13b-1e85cd3f0b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddf2bce-b71f-4adb-9f8e-b1b11cfc7970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed974c84-c8f5-45ad-bcfc-84feac8a17e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002b053b-edad-4019-ab4e-de2aada87bff",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f420c6b-96f5-4335-b03e-1ad936c448a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1bf42f9-ea11-4702-a7b4-26d7aa9e5086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f703a25-215c-4f90-8a94-a2d08494ac0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaaa5a33-cfb1-446a-bda5-75c178dd25ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05138db9-2f37-4908-9937-eab16851ac39",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3613a3-dc7d-4823-ac83-999348892bdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a95cdeab-392e-45a0-b815-dcfa4eff4b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fddeba-16f8-492a-a270-259dfe4f3866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a630062b-713a-4abd-a8a0-9126053148b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7fde1b-7722-411d-8bd8-3d8cf94ceb12",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e50b2a-b6c1-406c-94c7-7a18778c8574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f818a983-4c2a-4b90-a879-e1c5952303cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b686f57b-c965-4e84-84e4-5c27d4daf7d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c555d4-881a-48ac-9c06-807aeaa519c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c39ae86-1a36-4b66-81db-b3a3f63881c7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d27793-aa61-4ee6-8ab3-47461062b8c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c01cbf18-42a7-4bf8-a919-685472c0bffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4bfc61-92ba-410f-b98b-4cf21cf269b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819982b2-058e-48f1-8249-81bf6304d8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88e39a3-2f05-401c-aa02-ee3197c5695b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d864b22-63aa-441c-89ce-c6678db26ddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57e56c17-d46d-4140-8732-67ad85a653e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42017740-f6b1-48f4-9f18-a4e676767cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3fb936-d015-4824-8fb0-18d0d3f8d063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1423135-6620-4678-b1d5-cfb344320372",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdadc940-5a18-4cd8-b663-bb4b3c5b67c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40215638-e417-419e-98e5-8c001b071890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa0a39e-02ae-47f2-a080-b7d144bc4215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd2e7b1-fa2f-447c-8d3b-efaf348c873a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbf44ea-53f8-496a-a760-5d67107d1b88",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21339aaf-5a3d-4863-aaea-a63ced2e8d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13f6308-4de8-4a44-bb97-9977f8ae9c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab81d4b-e42f-4393-8bf1-8a541a385a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a671ffd-ebdb-4cd7-a3d6-2274bf4a9e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2302a27-646f-44a0-abbf-a87d14cc551a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1576c20d-c29d-45bb-b132-bb821397df7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d6029a-8f93-401e-b359-587b4c3960ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25700d6b-c745-4375-bf7c-e1fc04f47951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd936806-8bbc-4c3d-8f96-12ba03d8aefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5772fe-dd90-41f8-88e1-dce8ea26d67f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4947909a-3121-42a8-8033-c7b9b88cdb99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea32b820-2566-4c72-b6a4-2c0434d3fa29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadf6f1b-72fe-4756-aa3b-a74ac19d127b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cc15e9-2b9e-48a5-8bf3-4b985d92b656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01594eca-e848-4aca-a792-6ad727e22e8f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b04b8a-9411-42a9-85eb-025d71a9970e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a1a165-19ae-48f4-b18e-66be3c242d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffc0fcd-e429-4c86-bcf2-cd551db340c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d74e153-3189-497e-b61f-695cb2b59e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ec24f2-951f-40a9-9726-1e942ee07e6e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac97654-8094-4c22-9d42-7df5fd42d6b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8f073d-2660-4f56-8896-da77aebe7c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b087662-b6b0-48ea-b534-f82b8dfbdd16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc19814-1ec9-4aef-882b-90f6f44b31c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b366c17c-10ad-4ad4-8850-b70d88010042",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1848cbaf-e44b-4919-a598-7097810682d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835a4bc9-745d-461d-a39a-3d02ff48cef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4a2770-40e2-4256-8d35-71e9d47fb5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f318ab-12ea-4b06-b043-2d9e5c81751f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2090ee0-8120-4748-9ccc-87c55197f3e3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd61843-4dde-430a-bf42-bb54bbafa2e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6b473b-7e8e-4e7f-b6c8-84e1e8ce1c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047cbfa6-16fa-4285-8e19-796d70bd5b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b982ae5b-6c0c-4138-b413-f679df417e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92929e9a-98fc-4b56-a7f4-0a9610b23fb1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5569e1-5a2b-4724-a8cd-99aed36f852b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed26d984-34a4-4771-861e-7abeda7c9904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fa568a-24d4-41b3-8b9f-6af1d2c167b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e15480-447e-47ab-9ab1-650cdaef0828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ada7a02-1d21-4829-99cd-ecc334a233dd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbd38e5-7e65-4bbb-bef1-4d5c97206a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc09ddd6-b171-4faf-8a05-53a2fe4ca52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529d57ae-fd8c-4435-825a-dc142f02e163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cf1beb-752e-45e5-b59a-7bdbfd19a914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d49781-c0e2-427a-95b6-22b28f401c2d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb92c49-bcf5-4cea-aa81-75b76c942b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db046739-c4db-41f3-a5d6-fe8aec47577a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d85103-edd1-49f5-8a15-c1028716866c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665a059a-f9ff-42f2-96fb-56ba834ff042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2ee74b-73c4-4ab1-815f-7fb7a9e9a702",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44ac0aa-8d20-4384-bdb7-dae6d7f2de0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efe1ae8-6449-40e8-8a14-eb3188e8f5fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f936f6-d841-42ec-8144-5c9e863b2ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff1ea46-752c-443e-9a72-e2c69240068a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5faf4311-579f-4bdb-b20f-026c9532cf72",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7785653d-b996-415f-a66f-ef983fcf3cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9dbae7e-340b-444b-a4e4-6fbdf44027d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21aeac2-70c0-4c93-b700-cce1453e0b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521b630a-33eb-4bd2-8e7b-5a5acd492b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d553ab9-839b-45e2-914b-88ad660d8227",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a055f4f2-d7f5-49f9-bb15-f92ed72effc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fe861c-8067-48ea-be6b-0b0888371a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a0cc97-fa74-432e-8091-66a428e74947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d8e961-b3fd-40bf-9355-11b1834aeca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32f24b5-45d0-4242-8975-3fd76d4f7b22",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f5f805-70c2-47ef-b6c6-5552256b6be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf92df0-bcd2-49fa-8cf5-cb530fd51058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dcfc84-d01d-425e-a01c-cffcd98ee4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf60b58-90f1-48d3-96b7-6547d07e4fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebad2f3-f3ce-4684-a505-717da8eef4ca",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6113be03-b7c8-424a-b38a-3b929703b78d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2abdcd-09be-4bfa-bc59-b146a3748cce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019a8f34-d732-4d7c-85dd-3f23ac817426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289113c3-39f4-48cc-949f-b1da419a71e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5e1bc4-cac4-4608-84e3-43bc521f35a3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54310e8c-fd6b-4828-a6a0-1fc02f4a73d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144ddff2-17e5-4600-a1ed-3d9fe1dc4882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "033c8f4f-ad6e-49f3-9f88-14853c0a5e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5ac3e9-8f91-47c2-ba32-6124e8b30958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b6b446-6a4b-4b1e-a097-abff48b43bbc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f3c815-79c2-45dd-8dba-ee0d12ec7207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260b4884-1df1-4b67-bbdb-a3cffbd53c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0665d3-4d9c-4a01-a91a-c296cb2f40d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0cf78d-b35b-42e9-a5e5-40e85b2afee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fa19c9-fcf1-437c-8a9e-6280b93ef825",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961ebe37-d1e8-4d4a-8b12-d0a9e1c3d6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744e9d9e-6823-40c6-b112-1e3a5e5d44f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5e3cff-8d73-4e60-8474-eb875dd0fb27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9ea37d-2fe2-421b-bdfe-951f2dde4b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdb2f8f-3f31-4fbc-9d48-7483789ab2c7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bb2b92-5fa8-45f3-b50f-0bf2ad1e0412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a4831e-1958-4ed7-9a9f-e79107aed300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3a88c6-4c95-4d83-af6a-383612beae69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dcaf37b-3cba-4b3d-a7a3-d9ce4b5c0e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9dc181-3a3a-4b70-9764-b7c17fcad246",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb20210-388c-40a5-b473-3f8f3aaa8b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc8de3c-75c3-4e0b-8dad-27737688b5dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35ea9fd-bd7a-4174-934b-3619c79534ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4c368d-9e80-4d49-b9c8-1816c7f04528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d144a9-cc46-480d-87be-30ea684099ae",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2cfa6f-060e-4013-a95a-be4108cb3264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fe329a-0415-4daf-b911-fcf4daab037a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663f6217-2d00-4ef0-ae00-4068fa816e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09b76a2-2d8b-4f59-a6c1-a1e3f3d98d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437e2040-99ff-4def-96b4-196ca17e81a3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609fee98-d67d-4545-90fd-ba49f3728ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b252b0f-ceba-42d1-8fa0-0eb51658016f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "674dc570-e85c-496a-a7bd-371f420cc743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888a26b4-c98d-4c25-826f-5f2120a464e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9703ce13-9be0-4828-8617-e01722a05bfe",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95132a0b-1731-45b3-90db-242eb5bc2ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2105b3cd-a137-4c05-a4f3-e2944dba8c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6e78ac-e484-485a-8423-8963a8264f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dae5d15-37a2-4c0a-bde7-f4f54dbf48a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33ddc6e-05bd-4f9d-9731-a6fbd72d08b6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9e6a0c-bfff-42af-b1c1-b6a304b0cc05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6663a018-ffa1-41a9-8cd1-dd7ba7565fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3e6e0f-54c4-4c12-a49e-b46945b61858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6e2eba-a51e-4f4e-a803-20c663488449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df86ad1-5cad-406b-ad15-25ee9991f7e6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2325e0e-a71f-425e-9ab2-4bb582f50778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dbc7f5-1d48-4ea4-a470-034013713fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb03fcf0-9b01-4882-b803-2f766913bc79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "838b56fd-d286-4637-81cb-a9cde00ede63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07182c8f-0eb4-49e6-be29-be049b90cc9e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc8f445-9960-482b-a241-2ae108da642b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69003de-11d6-4458-aa39-95f3eb6e0dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45bca07-9212-4f48-b2c3-b604e593c997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03968cab-8a80-49ac-b980-5780d045cc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85809114-0cf2-4dec-a149-ce9f07477df9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf9b330-6290-4b42-8020-ca937197226a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052bb094-8a77-4502-bfdf-2efebea8ee69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de548f41-e692-43e4-8e07-2a4c938922ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4727c4b4-fe83-48b1-9756-45e6c5aad806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f395f8-7334-4534-b85f-7b328a1b25da",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ec8c30-96c0-4313-82b2-f246931d9dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a5d51b-4958-47b9-a2e6-bf3ad0dccc36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85454f17-6f18-494e-8711-cde344b74c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21227f42-414f-477c-ac74-659d793c38c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44da731-793d-430e-a729-3a4b972b4ae6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d43ff1-4bc6-462a-b586-5b6c5b6e6382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1751eb-5aa0-4fac-979a-363a9f756cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589c6e5b-3f61-41ee-8b81-50236b76e335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee4d7d2-3b87-445f-97ff-d5e65bf4cfeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb5710a-ed07-4d29-88af-e37ec25ce790",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65427b33-ba90-435c-a60b-48010111c7f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a03cb1-5f0b-4b15-afc3-440111571e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb31290-0734-4f43-9a71-bba9c0a10f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93205965-8e30-47b7-9828-2b82c85f56c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95175b8b-203e-4551-949d-d665377279e3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a540d17d-9cb7-45af-9a5b-0f56c08d8c71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9496b4d3-2fb5-40aa-9542-4cbfbd808f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d19dd6-51b8-4dab-ba15-f7215ecc1070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7c5309-1339-41ec-abb7-fcc399494395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95eef0c7-9f54-49a1-97d4-108e9d8bdec1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f12c27-64db-40b6-9e33-357e7b9c6a73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55881882-3148-41c1-893e-599f2220c38e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb45ddf9-df1a-4cb7-9919-857d4e980415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248cfe02-2533-46af-99fd-ba9a52e5bb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae81d483-5344-4758-a2ee-23c5b59fe916",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ffbe83-c79a-42de-9fa6-af3e125ff1fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e54c1d9-4070-4ff4-b89c-8f59c466b03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199b6511-a7a5-4ecb-ad89-0c229a71a582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85977a65-9687-4459-b552-9d518f0d6523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daaa2199-c385-4bef-a116-aabc7a10d543",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63da1b66-3840-47ed-9972-0b84abac63ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d95ec3a8-2e51-41aa-8fe2-ab0954e89e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db0913c-8f44-468f-a003-af20e2f5d015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381f738b-559d-4351-8d0c-915555b1c4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91998f43-95e7-4c3a-9e74-36468e7df849",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdfc31f-6997-42dd-8bf1-3ebc5f4d0832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9c9694f-99ef-4fe3-a399-39783af8af62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "701031f9-0aca-4960-bc89-f957ed8cfd03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a4b5ea-8275-4859-9e6c-aaeeedc0e8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2ecbd2-6c44-4624-aa51-28eb721fcb08",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd63b07-343b-4afb-af27-53ba617a099c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3a0f9de-a79d-445a-bf19-19a5b2ba0027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26436c82-d3f8-410c-bf68-6865f365f9bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983b1dfa-99d2-47df-8f8f-fce64c3342d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2118a70-6a39-4811-8fff-847a0a3117be",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2caadd2-ddd6-436c-b7a4-129dcaa0809c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2314513c-7bfa-4ca1-b0c3-d91450612985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b141c2c7-51a4-4dd5-be8f-95c2cb37d343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344ea1f6-6893-47a1-b730-f3ced6bc548d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d9e0ec-630d-42d0-b345-860e9eabd12f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902494b8-0a10-4a41-8a75-36bce8466c1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae8d9d58-7d02-4117-95e2-352dabeaf3d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1e5d8c-db1f-4247-be6c-96a858296324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc3b5dd-f93a-4727-873b-0a4f2eaefd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a54b0a-d46a-4225-a897-f51a4004a540",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ffaab6e-2ee3-42a3-b4ff-71b15824a03f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "223dffdd-a090-4db0-94ea-5c05fd686707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49315e87-ddff-4bb2-865e-044e1b846054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce43db4d-e8e0-47de-a4c8-827b5b2f9807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a4cbf4-6746-4057-8e58-1c96ed987d6b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d10f4f-a1ed-4fff-bf29-7f1298db6aa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "752a67f5-2ee7-4ed4-9d55-e121bb9b1d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fe9b46-fae3-4f18-94c3-27562c331162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038d2f61-edb4-47d6-91fb-5c75583cb303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0b3b26-00c4-499c-a30a-3e3407d3fce3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bedb644-d6f9-47d7-b35a-c399dda51b5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fafc274f-c493-4cd9-8804-badefb6a56ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2323a6-3c2f-42d9-8c79-502513308726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13b071b-795c-4c4c-8678-690fa93e3161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988a1cf5-a866-4bb4-82a8-ea6e1377074a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3213c34c-8f1f-4c35-a48e-0778905c4f44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c81a023-7fe8-4037-bfd4-d7d2e9e23579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7861183e-4008-42c3-b80d-006341244a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e71c8d-c896-4c5f-bdf8-610ce4b0f9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73583290-8234-4926-a8fa-d9db7ba6b21f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55128257-8301-4be0-a54b-3fa022543d21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed4a945f-25b7-4ae1-987f-8b63660d6384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be88a7b-40fe-448d-a334-050efa2a138c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f04a2e-fcba-4af3-afed-478de3eebaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83080de1-c62e-4919-b1e7-a281c7e448b7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475c11cd-5b72-477b-a294-c3de7092dde4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9ad0a7b-d6e5-4bf5-abb8-5595e4e5ae31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8b484b-e7c9-4e11-94e5-965e577d16fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52d5e05-239b-4437-8de9-f0dc9a21a838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc500d6-ff28-4189-b680-295049b900fd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fe8154-8544-4b60-a58c-7fd6ffc37157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "041563ba-d59a-4291-9242-0fea729b85e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df30246-917e-4c4d-9366-9d7715e8f185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3a8d98-e167-4c7f-a08d-ac3b05fcab21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a97f0af-b8d1-4bd1-8f13-d08d4bfbf11f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b437ae-d089-4d2f-891e-afdf1f148bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eee2854-8368-4da1-9a1e-46a2dc2b10b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb887de1-55b4-46b2-9ab3-ed39ad44cf8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e46c21-c620-4a62-92d9-5e2c672b8856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a969cb-6287-428f-b536-40640fe50fba",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb5f538-fa32-42b6-b5db-093741f14666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5afdecd6-7739-4da7-bb74-e3bf49413979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f93a541-e0fc-48d6-bb5b-19b42d5fd4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455232a0-a768-4232-908f-3ff10b954fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4ee04e-c477-4890-9db9-4e2f1ae00c6e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958ec77f-932e-4fc4-96a2-db51f959f351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d2123a1-045f-404a-9db9-962538d14fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e173348-8131-408e-8057-4b360920dd10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "027c1b0c-c10d-4625-be9a-16708d8b7013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacf5bce-fcf4-48f8-b729-a699cfb2a37d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea85993-1dfb-4469-b05c-03237c2ef8fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d16fc69-8481-4389-af55-7482b48dc590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50621c43-4a78-4746-931f-d2eef2bbb16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e18484-cde2-4779-ac6c-cfeeb4df8373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02e915f-8e83-4071-8e5a-cbc87e9c23ac",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b8b082-cc01-4914-bc6a-9c31451009d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a59061f1-146c-480d-a67f-39da0ac9ea30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096f16f2-0bd2-4b34-a2d3-26fb1184deb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad8f00a-3c28-41b7-9260-fdf6a7497330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f618d747-78df-42fd-af29-6a3ab6f9f5b7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c419017-7799-4314-86e5-0c2b10e09c6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a264236b-aae6-4b02-b5ca-98e8335e7770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d00d9a-c73c-4654-ab2d-a940f3cb80f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f710b5c-6216-4843-b17c-38e831859890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808a80b5-ae76-4893-9f39-67a427786973",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23771dc-f7d8-4e40-908c-2cfd878e955c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dcf72ce-f275-4be5-85f6-ce8ce75aff99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacc39fc-ebf0-4f46-843f-338d65693693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14e5aab-2d36-4475-9b19-6677147cde43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a04114c-a367-4ce2-98be-1dba0d18ef53",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15356c55-b747-4eb4-b764-c04b3a3bf20a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2529d68d-a193-4583-9a65-c9802912c4d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3701fb86-a763-4719-b76f-cfce2a5bc724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c148175-ca30-4f57-be4f-6407c332ca9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb2940b-c466-4048-bbb2-cc2f3df49315",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c291091-3a16-465e-8423-25f603d8f36d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6e661e7-ac88-4cba-8af2-90004b31be50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d36c64-8046-4a3f-b2e7-235b5736b5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80199e3-2920-413e-9883-5b3ca00ffc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ce37d7-9a45-4697-a9f2-d9bf1fa4c94b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cb03b4-fc0a-434b-8c6e-390f344dccf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f13dde1d-b7b6-4473-81d8-bcad2594446e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db91765-c7f3-47f5-a598-6cadfb391e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14d99b0-a111-4719-91cc-d10785a7e4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12175885-209a-442f-858c-ae9902608569",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122580e2-dcb4-4d4d-b281-57ab5d997588",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73a2a027-9c6f-4c43-9237-cddf3782d4e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482ce039-4afc-4bda-ba16-eced734c725e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebecfc5-2c45-4118-b4a5-36afe559bdb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023cd4ad-8f95-41f5-b532-3250059d78cd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5341c70-30b8-42b6-8c5a-f184c048ffa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27a3820f-6b9d-4ffc-ab24-cbb444f995b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766a0aba-7e72-4681-a1ce-9ff24e9a846c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf1fbe0-c973-4a31-b76e-2f8fe7f13974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac26898-6d26-4bdb-91a9-771920cbfdee",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741c5716-3b1b-4f33-8018-fdbc3c8d9f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c7bb7fb-d4a2-457f-ad91-8ddd58312f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545605ce-466e-411a-9ab1-6fd178a27893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8c8729-e652-4d30-baa3-fb270d9c608d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a4954b-a00d-423e-835d-c72ada45d461",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a641423-5854-4f31-9155-ead7e8cef972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73918819-9dcb-4f39-881c-3d4758fb771b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8ab84a-a81f-43cf-9a27-7b9ada12c1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fbf36c-fa44-4bf5-8895-a0a465946b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1171d1c-8211-4385-8302-041f9e14b92f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ac6847-f5b4-4e32-aab3-009a9e8d5b04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb98538b-1814-48ae-b577-b0efe1ddf043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1fed42-410e-4eaf-b246-cc1fab68f7b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49381b9c-fe93-437d-b0d3-1537252bc6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d950c9b-56bd-4e56-8b44-9f8c3183ead7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb59d22-0560-4dd0-af9b-5f7956ed6213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea92cc4f-2f61-4342-8a65-e2f686f8db63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a22e33-ab89-4a7e-a3b8-7cb749b84466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe8b5f9-4488-47ff-8e34-85d52f907727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62b7433-d994-42d0-8f9d-f6c8d283dd4d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1582dd05-0969-49ae-b75d-618601d589e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f028da1b-339d-4d44-81a7-7d89bbcef9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9499919e-aecf-4f2c-88b2-a396c56716ae",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24003d8-3880-4a76-a380-98f724e7f8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f161627-caff-4b81-96e6-e5fdb232f6b9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd69c2a-cc22-461a-bddb-8ce3fc1ad112",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81648ea7-1806-43dd-95b8-be7015147bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7223f5b8-e53c-4821-be52-ae17b40226af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6244a089-bb34-4417-b497-093603644a53"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f03eb283-e17e-4046-9d86-651ba46455db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc5dc97b-a588-42f9-b70a-a53c1e0cdb9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0f3fbe6-0fea-46ab-a4da-5d83f3141470",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2901497-599b-4390-98c1-9dc182661032"
                    }
                  }
                ]
              },
              {
                "id": "991a8286-5382-4c02-9720-7ee15b191e51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "017cf6a9-344f-42c6-acdb-dc5d5c8f5621",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625104ef-7fbf-424e-a470-618818b9a18b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9815534e-1000-426e-933b-200c203ef1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bef05f7-cbec-40cb-a4e4-7f293955e1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ebf2618-3c78-48f7-8675-71759e437945"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d62ae669-10f6-4813-b914-34906a60444c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf0d58e7-cebb-4879-a3b0-5939d8fba0b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ade9dd6-10c0-4321-a0c8-3e0f47ce175a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caa7d89d-8b5f-4b12-9145-4444869471d0"
                    }
                  }
                ]
              },
              {
                "id": "ee0b5990-f8c6-49aa-a0a6-d8f2bbde2e08",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "743e0866-0825-479d-adc5-1f863ea1a4af",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7969e95-f327-4b92-9590-8f17c6f4cc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "aa61c03c-a81c-4d20-b942-fdcf314d5fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4208745c-daef-4d41-a782-ecc368e5ce0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f61226-fdc2-4c6c-b73e-f826aacb2a5c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "52eef2ec-cb2a-4745-8ff6-eb13395cd4fb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "198ba6eb-0996-4bb4-9712-e59e69637289",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1191d8df-4209-4e35-9855-92b156263290",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "77e2bce5-5bb5-4e95-a2c9-98a92a78abcf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff179101-e37f-4a38-a5cb-d8699d42aca6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6eabb54-538f-4ec0-8d6a-fb1772a69646"
                    }
                  }
                ]
              },
              {
                "id": "bb3c0ad5-6595-4d27-b858-ebd1c9836883",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5fae7fa-f453-44c8-b8bb-09a93210f4df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b9a54fb8-995f-4d10-a4e1-dbac3ae38ea4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2024def-ac11-4dbf-9c04-fff6426da269",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e08383b8-3004-4eaf-8315-820f5ccd63a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45b1768e-200d-40fa-8bf9-e5b8bd571c1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "eb0717f7-22c9-41b0-8be1-9ced4c31c951"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6a9bf21-8dc8-4066-a454-790cfba228fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f7d6f49-afa3-4818-b0a3-e870f6c9e4a2"
            }
          }
        ]
      },
      {
        "id": "1ec7582c-892a-4d5a-9cbf-a24c23d79285",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4c78fb92-76dd-4ae3-816e-c9facaf0987c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26cd8081-eb36-4c43-bb78-6fdfbc5e65b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b051ec40-add9-4fe1-a812-75810ef6b0b4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296bb0bf-3203-49c7-b65b-769a05d677cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "db571b11-4756-49b1-b25a-3131390b308f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94abc36c-5ead-4481-b857-785d061b3b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd3183e2-b28f-4a0e-94b1-458b96daaf2d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "219d506e-5951-40d4-b680-e40405a878d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "768dda1a-8c72-4b5e-9cea-1bf368fde990"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b00fad9d-09c9-4cef-9ffd-eacac829c6df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce247878-55ae-4c1a-aa7a-942ec29c9644"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee4d5382-7da8-43c6-9aae-3b1941a22763",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e949e210-2fee-42ae-a90f-5f13d5a70ee7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21fa6e1c-ad0d-473e-b62c-1d65352c02db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe5acd27-9f99-45d3-ac60-c2a5d03f5392"
            }
          }
        ]
      },
      {
        "id": "d724bb00-b087-4383-8fae-b9e26b8fa511",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "71e89d4b-8e74-4d0a-be90-11ca926eb167",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b365c9f8-e894-4fcf-9073-12c2a10f0d17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "393b9124-c187-40ec-948a-985659e70bc4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f8899e-09c3-48ba-a182-064cc069446a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb54c492-cee7-47d8-9851-81b61768841e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb563522-0136-4067-bd1c-cbfbab3e3d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5472081c-84b9-47fd-8b95-97eda9b4ca61"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12cabfe8-51b0-413e-a72c-8f2bc5d5c556",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bdf4b8f-3cb8-4baa-bea1-de34988f0943"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36ec5347-3c28-4d26-9790-36f4c647b293",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b55db14-7bae-4e59-ae10-9fbd9b0fa348"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba5477c0-ce5b-4afb-9544-98e248562ad3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd049704-3c6d-4cba-ab0a-9f4d4707f0a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "843b90b3-5b88-4476-a575-7587a7085ffc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86fea2a1-5b16-46fb-9df7-f7eed84699d2"
            }
          }
        ]
      },
      {
        "id": "1b8627d1-c094-4e8a-acef-9c58eaacb493",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fbc54d8a-4461-46c8-8c99-8c7c0e170e9e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5429aa02-0e20-4d10-8bce-9e73f978433a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05df8a74-74ca-4c58-adad-7b16a87a09b6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3e5131-494e-49e6-bd52-61a654f771a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9000ffb8-c39f-4ea6-9d0d-55c85377cb62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12713464-9822-43f3-833d-8b485ccc247c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "253a4609-fb95-4e90-b47c-ab5a88098624"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91355229-f70b-4b16-a3e1-10eb28b5272f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9406242-efd5-4398-bb9b-d31c7c89caf1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32d46d0f-66a4-4733-af86-45b334c4df62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0357ba80-82d7-4f03-bda0-3a4114e35259"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "191ddbd1-a31a-4bbf-8f0b-f58d3b6f4d5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "407b2c5f-1d67-4f81-8903-1b99229b3290"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd0b22fe-47b4-49c9-bcba-28eea06af5c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87c39e38-ba82-490b-b2e6-105c46fb4fe9"
            }
          }
        ]
      },
      {
        "id": "22111c89-9326-4da4-98af-03596af944de",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c1829e2-f1b8-4866-8422-ab4df9bcdbcc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f574dc79-ff51-4500-9655-9c83d2b31639",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "46f0fccd-a116-4d9b-b066-8450956418be",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66be864d-73e1-452a-ad2b-c48e040d9c3e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fbb23e2-53e2-46e7-a488-fc4bd7a04d92",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 9.410526315789477,
      "responseMin": 2,
      "responseMax": 277,
      "responseSd": 29.61051072401528,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700526974601,
      "completed": 1700526986582
    },
    "executions": [
      {
        "id": "606e8cb4-f65d-4833-976a-fa5c392f8695",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7d4b0f13-efd8-4420-986d-e1f35945dfec",
          "httpRequestId": "8fb32ab6-eda1-4999-8469-e50552a4502d"
        },
        "item": {
          "id": "606e8cb4-f65d-4833-976a-fa5c392f8695",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8725ac3c-bb62-451c-99df-8d0b793b8a49",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "75eb8a87-dd3e-4f09-b948-408ea4a82246",
        "cursor": {
          "ref": "7333c548-89c6-4521-8f7a-93cc556ae0fb",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "48d18abd-20b5-4b91-9794-2f88e59d8426"
        },
        "item": {
          "id": "75eb8a87-dd3e-4f09-b948-408ea4a82246",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7b750d0e-024a-4d5c-838a-e72996a6cbfe",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "7197cc99-4c8b-43d6-b455-9c73ee60c46c",
        "cursor": {
          "ref": "45ddf7be-a2a5-4b32-a97f-a142b6129221",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cfca0867-806b-4d52-a09a-c280f57f0397"
        },
        "item": {
          "id": "7197cc99-4c8b-43d6-b455-9c73ee60c46c",
          "name": "did_json"
        },
        "response": {
          "id": "0b13cd23-525c-4b38-b35a-dfa3e3afcfbd",
          "status": "OK",
          "code": 200,
          "responseTime": 210,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e74e79-662a-4311-9118-928e31cd961e",
        "cursor": {
          "ref": "f731fc2d-4e94-4f2e-be1c-677234f64f9c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c01e1c19-8841-49aa-877a-6b3455fdce9d"
        },
        "item": {
          "id": "c8e74e79-662a-4311-9118-928e31cd961e",
          "name": "did:invalid"
        },
        "response": {
          "id": "507777a2-8485-4a74-a4d9-230c02a99277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e74e79-662a-4311-9118-928e31cd961e",
        "cursor": {
          "ref": "f731fc2d-4e94-4f2e-be1c-677234f64f9c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c01e1c19-8841-49aa-877a-6b3455fdce9d"
        },
        "item": {
          "id": "c8e74e79-662a-4311-9118-928e31cd961e",
          "name": "did:invalid"
        },
        "response": {
          "id": "507777a2-8485-4a74-a4d9-230c02a99277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d37c3cc-79af-457b-a2d4-1b153f2388a2",
        "cursor": {
          "ref": "6bff1948-1430-443e-95b9-cff22a79b5b8",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a911d008-1032-485b-9766-62130883e443"
        },
        "item": {
          "id": "9d37c3cc-79af-457b-a2d4-1b153f2388a2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6b7ee4d6-9016-4aab-81a0-73497ed9dced",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0481c02c-3185-464a-b5ca-b60d79fe0a6a",
        "cursor": {
          "ref": "8d5a4593-45d9-43fe-b7eb-423a435bd08d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "98c2578e-dc51-4c18-97f0-754fd4e002b8"
        },
        "item": {
          "id": "0481c02c-3185-464a-b5ca-b60d79fe0a6a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "175ebce0-6620-40c0-8b73-c9772b4345f6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d717a712-3302-43b6-aacd-a1ccde7d0029",
        "cursor": {
          "ref": "2c306be9-c17f-437e-9514-958a237be3d9",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9d9882b4-08f9-4b97-bbd8-3f626e9ee3a3"
        },
        "item": {
          "id": "d717a712-3302-43b6-aacd-a1ccde7d0029",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "064a4237-7664-445f-a8e1-4fc49c4944cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658d4210-3a38-4c64-865f-3c50be6b3ef4",
        "cursor": {
          "ref": "2f8c6fc2-8535-4206-a9f5-7148cc8194ac",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f20a5f7e-efa8-409e-b9e0-64aefda32ecb"
        },
        "item": {
          "id": "658d4210-3a38-4c64-865f-3c50be6b3ef4",
          "name": "identifiers"
        },
        "response": {
          "id": "cd0e69b9-7d0c-4df9-924d-fbce902beca2",
          "status": "OK",
          "code": 200,
          "responseTime": 151,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3eb518-f498-45a6-ac46-508309de9928",
        "cursor": {
          "ref": "b0902c49-71f6-4647-a0c8-9608cc283d9d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "28991890-e4af-4c3f-b9f1-e3e9d1dce9eb"
        },
        "item": {
          "id": "ac3eb518-f498-45a6-ac46-508309de9928",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "46af1c6c-8546-45db-88da-19a9ad56eb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c84d94-6264-4924-bcbe-39a2095d60d1",
        "cursor": {
          "ref": "41bfdc86-a945-4c3c-bbca-9e47e4f991d3",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1c969649-a573-45fe-a5f3-8e39ad12c7d7"
        },
        "item": {
          "id": "57c84d94-6264-4924-bcbe-39a2095d60d1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "aade651a-ddf9-4c53-9192-a1c360ea305e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5a564f-fecb-4a92-9aa2-72ce0e102067",
        "cursor": {
          "ref": "ec12316c-cb81-4cb1-8ee7-0c8ba25e32f5",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "943758fd-88f6-4f33-8aef-9db3ac23e1f4"
        },
        "item": {
          "id": "0c5a564f-fecb-4a92-9aa2-72ce0e102067",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5d9bddeb-8282-456d-9d18-cdddcad6f304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4827778-ce7a-4055-94d3-e10c7d243958",
        "cursor": {
          "ref": "4d3961a9-0921-4def-a437-146b3699caf3",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "218d9d2a-508a-4f69-97e5-8c4f155b2881"
        },
        "item": {
          "id": "c4827778-ce7a-4055-94d3-e10c7d243958",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9f5b2a07-79a6-46b5-950b-8ed21a4275fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2beb800-66f5-49bc-bcdb-74a76e9d2227",
        "cursor": {
          "ref": "b596967f-89ff-4cbf-8925-068f8328ea85",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d83548a6-b73a-41ef-9461-47ebe193ab6e"
        },
        "item": {
          "id": "d2beb800-66f5-49bc-bcdb-74a76e9d2227",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "22ecaf0b-7ad3-4367-8ada-1609964eb431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b467fb-3029-4008-94b7-acd9a1e43ca4",
        "cursor": {
          "ref": "2b15aea0-f718-401e-b2ec-afa7ddde3725",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "49b4187e-7362-42ab-90cd-3e853dbfbb6d"
        },
        "item": {
          "id": "33b467fb-3029-4008-94b7-acd9a1e43ca4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e80f5705-67c0-431b-96da-4c53825fbb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8ef3be-e10f-4e3a-8e89-0bdfc43a7ec1",
        "cursor": {
          "ref": "4f46681e-94a3-470a-b562-cf9453dc8133",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "141336f3-add7-497a-a493-73b34334fe57"
        },
        "item": {
          "id": "9c8ef3be-e10f-4e3a-8e89-0bdfc43a7ec1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "552805ad-98a6-4847-85a5-9206a7746a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f16bb8-1301-49a9-addf-ec1462cc51b3",
        "cursor": {
          "ref": "6c226f9d-b2ef-4d88-a8d6-25582aa35f82",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "78960c39-e679-466d-bc96-31b2b2fdbe14"
        },
        "item": {
          "id": "07f16bb8-1301-49a9-addf-ec1462cc51b3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8b26898c-106a-4222-8f47-a3b516365513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765b1148-146c-4ec2-b171-bdb29fad1bdb",
        "cursor": {
          "ref": "5e48e698-ad2e-448f-b8fb-3be291924356",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c8fe80b1-0126-4ce9-bba3-88047fc4ed81"
        },
        "item": {
          "id": "765b1148-146c-4ec2-b171-bdb29fad1bdb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2879dab6-bb3f-433b-8e20-ef3fad9c5d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c67dc0-2e69-4402-a43a-c1f50258f3fe",
        "cursor": {
          "ref": "95045949-08f2-467d-8f62-8b55d9e116eb",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3ccac105-e151-4f91-b22c-9e51dc916fcb"
        },
        "item": {
          "id": "48c67dc0-2e69-4402-a43a-c1f50258f3fe",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "92439934-c8f6-4a82-b808-0aa760a22ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d49d6f-19eb-41ea-8e5b-3de4b2c2e5dc",
        "cursor": {
          "ref": "c4758d55-f6a0-4ef7-a7db-b3dee5975eb6",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3d6fd78a-f88e-4d5f-8324-6cb2f4940b80"
        },
        "item": {
          "id": "88d49d6f-19eb-41ea-8e5b-3de4b2c2e5dc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5d1603cd-ce24-4acb-8613-26fd758b1f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9699b87-7ef8-4ec1-8c73-ff43a83e50da",
        "cursor": {
          "ref": "a48af257-bf80-4237-adae-9a2994a54308",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "be93ea33-ce8a-40ba-acef-3507cc73c3ea"
        },
        "item": {
          "id": "f9699b87-7ef8-4ec1-8c73-ff43a83e50da",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "476ee079-47e9-4fbd-b20d-98976903ce0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5385a59a-10e8-4367-9b6f-1e9c01fce57a",
        "cursor": {
          "ref": "03c0bdf3-8362-4358-97e1-5133bda90756",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9e890e73-2165-46fb-abb1-d8054a12fa74"
        },
        "item": {
          "id": "5385a59a-10e8-4367-9b6f-1e9c01fce57a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "17d49e97-f960-46b2-b7fb-290682a54146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ddb3aa-39ff-4e57-9c5d-301ed1a37e05",
        "cursor": {
          "ref": "d2c46e43-fdb9-4378-86ed-fcdb181acb70",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f9564649-fad1-4353-bba4-c19f539ba2d7"
        },
        "item": {
          "id": "39ddb3aa-39ff-4e57-9c5d-301ed1a37e05",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "237b1cf5-dff9-4693-8031-9f52cb0ae660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce30d5f-0fde-4b0c-b811-523eb0d09541",
        "cursor": {
          "ref": "5c75a08a-3fb1-44fb-9be9-d65b459ea657",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e1557d5b-1f94-4c36-aa32-e72cad1fd8ab"
        },
        "item": {
          "id": "9ce30d5f-0fde-4b0c-b811-523eb0d09541",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "94057361-9858-4eb2-9259-ebea0bc62f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3b7be8-f04e-458c-a93a-babc190cbb28",
        "cursor": {
          "ref": "ef148699-aade-48ea-b2c1-0b984f8e2d4d",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "86aa1a79-4847-44cd-b8f9-5f73fc937cc2"
        },
        "item": {
          "id": "ba3b7be8-f04e-458c-a93a-babc190cbb28",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "149b3bb7-dac9-4d1d-8def-525f5e4c2040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01268b02-01be-4e00-8ac9-724135c4f60b",
        "cursor": {
          "ref": "007e21df-ae75-4860-84c6-d2102d48f461",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6b375f9e-d11e-4c01-ae1b-6b2d5ea0b378"
        },
        "item": {
          "id": "01268b02-01be-4e00-8ac9-724135c4f60b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a00961a5-ff8c-4479-9d8c-012df58ef996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d6e42b-c0ce-4e47-b629-00374c827f79",
        "cursor": {
          "ref": "b0342d3a-06c1-45a9-92e6-51590486d82a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "44315a4d-e4ce-42a2-a9ac-83c4dd4982de"
        },
        "item": {
          "id": "e8d6e42b-c0ce-4e47-b629-00374c827f79",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b05ba8b8-0f90-4c91-b475-1ac87c7a357b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7968db9f-1f98-499e-a9b9-0430527a5f9c",
        "cursor": {
          "ref": "e6aa8ed7-2b4f-4bea-b227-e1f3a17fa053",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3ac3665b-1472-4c3b-b89d-13fd978f3c40"
        },
        "item": {
          "id": "7968db9f-1f98-499e-a9b9-0430527a5f9c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "be77fc42-e324-4dc3-8f5a-fc786d9f1f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfda7fef-3903-4574-9649-1ca70cb34382",
        "cursor": {
          "ref": "b3ab08fa-2879-4f17-831f-15b99919ccf3",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3034e419-3a1e-4661-b7b2-eba4a43260b4"
        },
        "item": {
          "id": "cfda7fef-3903-4574-9649-1ca70cb34382",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "592877b2-6df0-4b71-9a0e-6e32a496ce72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e48ceb-3268-4736-b48b-cb2e94e236b1",
        "cursor": {
          "ref": "4726f622-18b1-4d78-8637-45651ab47955",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e225e656-795e-4d5d-82b8-fda0f26705ac"
        },
        "item": {
          "id": "f5e48ceb-3268-4736-b48b-cb2e94e236b1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "229a217b-4114-46a1-bd29-fa68925d8313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5da6dd-8050-4290-8c85-47ca429eaee6",
        "cursor": {
          "ref": "b0eba3ec-8427-4d97-a40c-83f43967721f",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f4b63316-e86d-4ed5-af2b-0024947e1383"
        },
        "item": {
          "id": "ce5da6dd-8050-4290-8c85-47ca429eaee6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "717e5b5a-e0a9-4ba0-9f1b-318a17da701e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649e8875-ca91-439f-91a7-41eca954ef6d",
        "cursor": {
          "ref": "d410c1c1-3245-4db5-b632-e6a816ec9714",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "70bcc492-d596-4b8c-a8bd-417820360f23"
        },
        "item": {
          "id": "649e8875-ca91-439f-91a7-41eca954ef6d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "78d4b3dd-1c2b-4e63-ad9b-3e229711fb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8da099-fcc3-4a1c-b1f5-2bcb7a1b3011",
        "cursor": {
          "ref": "b4c32494-f389-4bae-bb65-35d56c17281d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f9f07609-a828-471e-9a88-e1f34daae8bc"
        },
        "item": {
          "id": "cd8da099-fcc3-4a1c-b1f5-2bcb7a1b3011",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d67aa1e8-8a93-402e-9254-3c5681d14740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d47fd50-0789-4650-a8c2-7006e8e6df69",
        "cursor": {
          "ref": "e5451b6b-4a8b-4730-bec9-6e1f24c95437",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e1b14649-41b3-4a25-a9a1-a11f513cb95d"
        },
        "item": {
          "id": "5d47fd50-0789-4650-a8c2-7006e8e6df69",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4cd28e3f-41d3-4fe3-ae12-ee721b8a2a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9202d695-7436-4a62-8250-2980a4634517",
        "cursor": {
          "ref": "b6c46d87-8d74-4aae-8c82-7ab705bf2e6b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "901fd831-a231-40c2-b26e-0db598dae0db"
        },
        "item": {
          "id": "9202d695-7436-4a62-8250-2980a4634517",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "638ff9b9-03da-45c8-a00a-c1819cb399d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94726949-2e4e-4f1e-b0f1-dfa4fd8b44ca",
        "cursor": {
          "ref": "d6b06590-2ed3-49e4-9b73-bd761b2695ff",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6b84fd91-5b92-45d2-bc31-783b2a63f5cb"
        },
        "item": {
          "id": "94726949-2e4e-4f1e-b0f1-dfa4fd8b44ca",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c6a5dc38-e48b-401a-a92b-d1f11af0b3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01363f5-7821-4dd7-a468-648a6faa22e4",
        "cursor": {
          "ref": "493aba4c-b7dc-4a21-a12e-2c1825eb2ad1",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "913a9bb9-6e22-4bd4-8f7f-a77ad3de3690"
        },
        "item": {
          "id": "c01363f5-7821-4dd7-a468-648a6faa22e4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "62f8bf90-5b0e-43da-92b2-7a9051a36d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9019b946-320b-4e53-bd2c-0fad9738d9cf",
        "cursor": {
          "ref": "30fc35ec-38a5-4377-ba5c-d253a4a82888",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "094b05b0-73c3-46b8-b581-a8f3eff9d2a3"
        },
        "item": {
          "id": "9019b946-320b-4e53-bd2c-0fad9738d9cf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2825fceb-60c4-4fd7-92be-4f1a896ecd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87d1e0e-fb03-49b4-8160-2e781f9e8fba",
        "cursor": {
          "ref": "20299004-19a8-4bf1-a040-864c38b69828",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e8e10c67-e425-47bc-821d-759862e03288"
        },
        "item": {
          "id": "c87d1e0e-fb03-49b4-8160-2e781f9e8fba",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9ae2afe7-d9c0-4fc8-a944-cbaafc97d54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddd1eac-20a9-4a4e-852f-b0a65308d6a6",
        "cursor": {
          "ref": "0d2e415d-2327-47fc-ab76-25d1b9137b38",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f4923c29-9130-4e63-82dc-66c79425a4c7"
        },
        "item": {
          "id": "3ddd1eac-20a9-4a4e-852f-b0a65308d6a6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4906cde3-159e-48f5-bc13-a5d77d47f4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb671e2-f609-4f9e-ba4e-31a0fdbb3668",
        "cursor": {
          "ref": "c0998c7d-e01a-4fe9-88d3-7cf41df4c4c6",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "10ed9561-7ef3-45b1-a44b-ead49abb6b7c"
        },
        "item": {
          "id": "1fb671e2-f609-4f9e-ba4e-31a0fdbb3668",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cf1c1632-008a-4d15-94d5-d9a1808962bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008fbe1e-5056-42aa-b311-86e0f6f95b1e",
        "cursor": {
          "ref": "3bf56274-5f94-417d-afc7-c66982a67aad",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7ae49550-0b77-4129-95d3-48ae9b040d96"
        },
        "item": {
          "id": "008fbe1e-5056-42aa-b311-86e0f6f95b1e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "12bdded0-b655-4d06-bb0e-8cf46cb61827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeba502a-1ff6-440d-91f0-cb1a120ec8a4",
        "cursor": {
          "ref": "7a88c497-3d65-4c94-be84-b875c4fa7597",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5270a97c-1e14-455b-a26d-c1733e1cfc04"
        },
        "item": {
          "id": "aeba502a-1ff6-440d-91f0-cb1a120ec8a4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2f92095d-b8f8-438c-b44e-ecda0af33570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249079f4-b58c-4af3-a732-5a0316514a3a",
        "cursor": {
          "ref": "48805b49-5fe2-4f35-a00a-dea868d120f5",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b6a59261-8fb9-4c4c-9fff-5cf6f13276d9"
        },
        "item": {
          "id": "249079f4-b58c-4af3-a732-5a0316514a3a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "666bc7e4-0670-4ce9-99af-1a150ec5be11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2286f4-cc00-48fd-9eaf-85f9758ce8bc",
        "cursor": {
          "ref": "e0d1a0b2-4974-4abe-a0c7-b9d64704d36f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "17f253b9-6847-4285-85b0-8c58fc2c234a"
        },
        "item": {
          "id": "1d2286f4-cc00-48fd-9eaf-85f9758ce8bc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8822365c-0789-4c39-b035-7e2c777f5a86",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 29,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63a042f-a68d-4834-888e-c64466fb5ff0",
        "cursor": {
          "ref": "64028277-e3dd-408e-bd6d-4e0559b35184",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "75547fd5-560a-408c-b76b-1d8b29ef747d"
        },
        "item": {
          "id": "f63a042f-a68d-4834-888e-c64466fb5ff0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0a808bea-ebd7-4a3d-aab3-753e8db0b0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df4975d-1682-4652-be1d-7a3c27c8561c",
        "cursor": {
          "ref": "db49ee35-4b01-43ba-bd61-a0888b98a829",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1f5b6c7f-b97c-4ae6-99d6-f9f011e97a4f"
        },
        "item": {
          "id": "8df4975d-1682-4652-be1d-7a3c27c8561c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1121fda1-b226-4911-b99c-be7f15a8d699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976c951d-cf69-4c41-a626-59b880859f67",
        "cursor": {
          "ref": "aa4d5299-3547-49e8-90d6-6c73f439a8df",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c66a48f9-c2f6-42f7-a73f-dc8ea4080b63"
        },
        "item": {
          "id": "976c951d-cf69-4c41-a626-59b880859f67",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "027ded4d-b893-4748-9cb8-04243547e51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bfd523-f21b-45bd-a368-ad11e5916aa6",
        "cursor": {
          "ref": "a211b529-b130-4b9f-b41e-587c7959db88",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "acdf0049-57d2-4afc-a1df-921b97b542a8"
        },
        "item": {
          "id": "49bfd523-f21b-45bd-a368-ad11e5916aa6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "639b7c2e-42a1-4539-a5a9-b97ed58dd1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c158d85-0895-479e-bef9-1ecf230cde88",
        "cursor": {
          "ref": "ba666090-314d-490b-9f34-75d5b3497cb7",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dc0a762e-d5ca-4155-903b-9f80b9881992"
        },
        "item": {
          "id": "2c158d85-0895-479e-bef9-1ecf230cde88",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "597cb934-8bdb-4ab2-b82c-6c6155beb298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5a3379-0034-4c5a-b577-508c4b5a64c6",
        "cursor": {
          "ref": "ff5c37b1-ae0a-4b07-972f-117750fbfe7a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "10cbeee7-a80d-49ce-87f2-b35fbf847b25"
        },
        "item": {
          "id": "7e5a3379-0034-4c5a-b577-508c4b5a64c6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7d46cbed-0a19-4513-a690-361ddb6edba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb5c799-2bef-4f96-af87-3e379d3418cc",
        "cursor": {
          "ref": "08fd5546-c043-4bc8-b50d-48d76f1fd978",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6fd98c3a-9aba-4bc7-958d-6453a9f30144"
        },
        "item": {
          "id": "2bb5c799-2bef-4f96-af87-3e379d3418cc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b31eb300-149c-4b7e-aaf0-5d225fd3696e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 21,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364c4217-9014-4e93-a1a8-c17920aaf7e7",
        "cursor": {
          "ref": "462b2fc6-7c53-424a-83cb-d3ac1a5e0dc5",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d28e330f-581c-4b5a-9802-6adb34a58693"
        },
        "item": {
          "id": "364c4217-9014-4e93-a1a8-c17920aaf7e7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1608ee93-8737-4525-bd3c-8d514f6fa737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036fe20e-9f80-4f17-8905-e9a670e5c82d",
        "cursor": {
          "ref": "0f76147d-7629-450a-8cf1-0606d4619619",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3b132c6d-9190-44a4-beb6-e605295fcba1"
        },
        "item": {
          "id": "036fe20e-9f80-4f17-8905-e9a670e5c82d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d30999b6-4842-4f98-9b17-4cb59adeda6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cfd4fb-5db0-4151-952f-9a93a8838fc2",
        "cursor": {
          "ref": "7361ef9d-0d5c-4b80-beba-75327fc9843b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f2384701-6f99-4be5-ab37-20be484237fc"
        },
        "item": {
          "id": "94cfd4fb-5db0-4151-952f-9a93a8838fc2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c0a5f503-81cc-408f-ab55-957cd2ad2875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db457e07-181c-45bf-b52e-2d54da12af74",
        "cursor": {
          "ref": "c89b3801-7210-4bb0-ae2b-f0bf74e2af69",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9cd1f0d7-b074-4d2c-b671-49adefe00edc"
        },
        "item": {
          "id": "db457e07-181c-45bf-b52e-2d54da12af74",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cbb3ba41-4dc5-449f-b4ad-6f542acc72c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabc4a92-0e6b-4890-9092-91b80fd633c2",
        "cursor": {
          "ref": "575c569d-4618-45e4-b639-63946090352e",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8ad7b6de-976c-4588-b1a4-dba78826bc3e"
        },
        "item": {
          "id": "eabc4a92-0e6b-4890-9092-91b80fd633c2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f250972c-3bea-4ab4-a03a-7d9b348e8256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7baf801-8f8d-401c-8e1b-24cf2b910909",
        "cursor": {
          "ref": "c6236fbb-cdba-49f5-866a-9b0fb8897676",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5b5a8d77-27f3-448d-b024-0e7c1e80682c"
        },
        "item": {
          "id": "f7baf801-8f8d-401c-8e1b-24cf2b910909",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "07a3b52f-f35c-41b0-b148-4f3489987287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b407f2-18fd-4bf8-af51-894f04db5efe",
        "cursor": {
          "ref": "7131c6e4-14e9-4847-82e4-b26c3f44e880",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b09b6c05-7af9-4d18-b64b-529c64018c7e"
        },
        "item": {
          "id": "c6b407f2-18fd-4bf8-af51-894f04db5efe",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8b4f18ab-e26a-465b-9750-100cb4011515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbb4519-af4a-4b9c-aedd-576e948b338b",
        "cursor": {
          "ref": "cca37647-e08b-4f5c-a8d5-af26bc5a8349",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0f9278ab-7ae2-44f0-9fd1-df150745a888"
        },
        "item": {
          "id": "6cbb4519-af4a-4b9c-aedd-576e948b338b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "80870c6b-f706-415a-ba3f-3b683851b860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31558d8-be82-47c3-9b74-a8f753a2fd53",
        "cursor": {
          "ref": "c0e84d15-ccbe-481b-a2a5-9d025cdedb4b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d5d8dfb3-6161-412b-9a86-f240a4dcd980"
        },
        "item": {
          "id": "c31558d8-be82-47c3-9b74-a8f753a2fd53",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d0504f68-cb34-4a60-b167-b7379622f31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cae7ed-4d18-41b2-ae0e-afcb9dc5b90f",
        "cursor": {
          "ref": "0b69976f-72d5-4e07-8be3-b049ea31f94e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fa860020-a69f-49c2-8d80-348baca1a568"
        },
        "item": {
          "id": "a9cae7ed-4d18-41b2-ae0e-afcb9dc5b90f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a61521d2-7200-4d87-99b2-9ed820ae6468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ac46a9-9001-4aa1-aafd-52f3c38fc539",
        "cursor": {
          "ref": "ca0b953a-4117-4fdb-b601-435fa481f841",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "baad24d5-a531-4c46-9bf6-24bff5a7c0c8"
        },
        "item": {
          "id": "58ac46a9-9001-4aa1-aafd-52f3c38fc539",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cb39faca-9bbb-4c61-8419-d7cb4cbd1d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e952832b-28b6-48cb-8c83-530f880d3348",
        "cursor": {
          "ref": "fd8588c4-f005-4bf1-bd10-3dbb6af0bba7",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4b5641e3-b1ba-4570-bbce-b28115238ccd"
        },
        "item": {
          "id": "e952832b-28b6-48cb-8c83-530f880d3348",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8f427464-1e0a-477d-b7c8-95d61b88935c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113dbcf6-b0b7-413d-a90f-e6694d71cd5d",
        "cursor": {
          "ref": "0d2d2840-92b0-478b-b6f1-741f0c659ee7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e8f4ae2f-d78c-4cf0-9eb8-fe74da87f352"
        },
        "item": {
          "id": "113dbcf6-b0b7-413d-a90f-e6694d71cd5d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e29e44aa-f4f4-49a1-9959-e2301befc636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8517de3c-2457-4b78-aa81-f41a260b56b1",
        "cursor": {
          "ref": "78c63737-4a53-419f-93df-f48ea9dfa3e6",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1d6e4747-ad56-4e25-a092-5156e311d606"
        },
        "item": {
          "id": "8517de3c-2457-4b78-aa81-f41a260b56b1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "701e526b-6ddb-46c0-be38-35bc49208d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1eea68-2550-422c-9483-08719fdb0b71",
        "cursor": {
          "ref": "845bb9ce-71df-4672-98fa-b14bba114523",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9604bde3-6d56-4022-9ac5-c59a05a0a517"
        },
        "item": {
          "id": "6d1eea68-2550-422c-9483-08719fdb0b71",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cfe9a85c-8689-42a5-b9eb-bf3fc9745a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e95bb12-9709-48c3-be15-320cc00e19e4",
        "cursor": {
          "ref": "e276ad95-1b3b-4d69-8cff-8952377e85ef",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "33e39598-3606-46ab-9fc4-0f3a8e660166"
        },
        "item": {
          "id": "0e95bb12-9709-48c3-be15-320cc00e19e4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a563c63e-aec2-4168-8b36-6c6589524dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb411611-9d31-49b4-8a0c-8faff227e26d",
        "cursor": {
          "ref": "2178dd5d-8b70-4291-bdeb-15aeb3fe5074",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c66cce37-ed40-4b0c-b6ea-a75b61e1b5ef"
        },
        "item": {
          "id": "eb411611-9d31-49b4-8a0c-8faff227e26d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "30635900-45c1-4edb-9404-b894d300e2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3d69a5-cb02-40de-b869-8048062e4f2d",
        "cursor": {
          "ref": "90e752e1-1762-4897-947d-9b16635f4245",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ccc7461d-41cd-4931-9ad9-bc6d3207236f"
        },
        "item": {
          "id": "1a3d69a5-cb02-40de-b869-8048062e4f2d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "af9081c3-dd3a-4a8b-b518-4860d8ed3950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0ce0da-62f0-43d7-a6ea-1a841a9ca926",
        "cursor": {
          "ref": "21170fb0-f00e-4285-93c9-512f47359fe6",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d1f45d4f-3da1-460d-aa7d-93a937682679"
        },
        "item": {
          "id": "0c0ce0da-62f0-43d7-a6ea-1a841a9ca926",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bced6e38-8f2b-4602-960c-6e7d6394f801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5094bff5-8234-417e-90f1-34e8577890d4",
        "cursor": {
          "ref": "71044213-4676-4e64-8dca-9c4bdd8b6a4d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5aa00a9d-41f7-4d74-8703-e91d60e9aa79"
        },
        "item": {
          "id": "5094bff5-8234-417e-90f1-34e8577890d4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e2977f2d-9743-43a2-a906-3ff14aa8bd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce05b9fc-656d-4abb-b016-94c5f81d1320",
        "cursor": {
          "ref": "8ebc6a91-6c7b-418a-b835-53dfecf3ef17",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "488958e3-3f38-4985-9c0a-08875dd1af24"
        },
        "item": {
          "id": "ce05b9fc-656d-4abb-b016-94c5f81d1320",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1dfd16f3-2dff-4dee-8052-558ffe12d630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7794545-1e37-4b62-96ae-074e52a3c636",
        "cursor": {
          "ref": "f67b67da-c0c7-4ea3-a5eb-8ff27bbb90fd",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5994aa4b-9657-49cc-a12e-8b2e9eef35df"
        },
        "item": {
          "id": "e7794545-1e37-4b62-96ae-074e52a3c636",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "67e19af3-c4ce-47ee-9c85-3c0ab6206ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b5160d-78b3-4023-b45e-b70224ddaa4d",
        "cursor": {
          "ref": "8491b300-ff94-45d1-9d70-5cc54ccc213f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "231a090c-7e09-4d0a-bea1-605210fcf966"
        },
        "item": {
          "id": "71b5160d-78b3-4023-b45e-b70224ddaa4d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8c9065b4-34d2-4e75-b92a-59f146dd25c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b96b1e4-44fa-4ab9-ac31-d77bc83c044f",
        "cursor": {
          "ref": "344a2993-23c4-40e6-9610-5aaaa3a20a9a",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1d3687ce-a935-4ebf-ba28-343e4fcdc7c4"
        },
        "item": {
          "id": "6b96b1e4-44fa-4ab9-ac31-d77bc83c044f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9ce06ef0-31c1-41b2-91b5-f271cecee951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56d61f0-68bb-41a8-9826-83ea44a1fcff",
        "cursor": {
          "ref": "7281c61e-6d07-4da4-8421-bc68cabe6a29",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "929d501f-3677-4ba9-aec6-6b06665ebac3"
        },
        "item": {
          "id": "d56d61f0-68bb-41a8-9826-83ea44a1fcff",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "98cacfb4-41ee-4ae7-b479-ed11bc4727c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fd52fa-ad4b-4872-b9dc-706319b5455c",
        "cursor": {
          "ref": "823baaba-2731-48ad-9757-bc956f6f838b",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "779dd991-63e5-4e06-8bc1-a3bd2f63a60b"
        },
        "item": {
          "id": "15fd52fa-ad4b-4872-b9dc-706319b5455c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "af3fd063-e06e-460d-91ac-9b1892540837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af98969-035e-48a9-906c-8a8dcd05b39d",
        "cursor": {
          "ref": "075f554f-ba25-4f8d-bfb8-124228073246",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cf097fd5-9d75-4cc5-b881-67a8ef40912d"
        },
        "item": {
          "id": "3af98969-035e-48a9-906c-8a8dcd05b39d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "89e08691-8882-40c1-b10e-ea4be0bc9a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a97fb6-f112-4f99-b9f5-83dfb2aa596f",
        "cursor": {
          "ref": "2f2fb54e-c294-4ee2-b1b0-356fddfba2fd",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4d8d5e63-b8a9-46e3-8df8-eee249e027fa"
        },
        "item": {
          "id": "70a97fb6-f112-4f99-b9f5-83dfb2aa596f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0e4dfc36-c531-4722-ba45-c08e1ef3d2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ca56ee-3069-4676-9d8a-15ab2c4216cd",
        "cursor": {
          "ref": "bb74f25a-20f2-4f7d-a5c6-a37e2367471b",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ad722432-17c8-4387-bdd0-c7e07085c6c7"
        },
        "item": {
          "id": "03ca56ee-3069-4676-9d8a-15ab2c4216cd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2ce5ea1a-5c1f-4b33-85ae-49732bf9e998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31fe1ce-1e70-4944-9177-1152ef08ed07",
        "cursor": {
          "ref": "719905be-c660-4b28-8181-7f5503dfe88e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e9a66052-4679-45f8-900b-d0471cb3134d"
        },
        "item": {
          "id": "d31fe1ce-1e70-4944-9177-1152ef08ed07",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9d3f535c-1697-49e6-9acb-18e2b2f92d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefcd9af-05e9-4d0d-a488-987b17a6cb7d",
        "cursor": {
          "ref": "02e1e8ac-553c-4f07-a505-6019a7c9f825",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5bb22506-9ab8-468b-9c86-cee245ff5fc0"
        },
        "item": {
          "id": "aefcd9af-05e9-4d0d-a488-987b17a6cb7d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2d2d9600-2505-4739-8e46-8e8260475e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8445dabc-af09-4984-8b8b-a21a66b2b636",
        "cursor": {
          "ref": "bdc59957-2a72-4861-90a9-6d2933419cfd",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e689c603-f235-42c2-b4b1-aa9796b94a3f"
        },
        "item": {
          "id": "8445dabc-af09-4984-8b8b-a21a66b2b636",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "92087598-6b40-48ff-8bf8-9ecaf00a45d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec256e24-c408-41d4-a01c-81e42a683c0d",
        "cursor": {
          "ref": "d313da73-dbc9-4d21-8a8b-ee841f26100b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "22330c03-c569-4daf-9dd9-585a8cffcf83"
        },
        "item": {
          "id": "ec256e24-c408-41d4-a01c-81e42a683c0d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2fdfdd80-78fc-44a5-9c7a-6e71db84c38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15382b6b-7512-4c2b-bf4d-64facb3537b5",
        "cursor": {
          "ref": "dafaa7f6-8b7e-47d9-9a39-cf2dd3b3cdc0",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0c824af8-c0f0-4970-ae15-30f81b3ae189"
        },
        "item": {
          "id": "15382b6b-7512-4c2b-bf4d-64facb3537b5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "da00f229-60e8-4f92-b6b5-6d07bb24cacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010089d0-6a9d-426b-848d-918ffe08268d",
        "cursor": {
          "ref": "e162e5d3-4206-4c79-afc4-9664da6e7b15",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "963d9b25-11ce-4bbb-9ae9-9fa2a09f8e96"
        },
        "item": {
          "id": "010089d0-6a9d-426b-848d-918ffe08268d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9b5f0d66-5c53-454e-9f3f-02c3fc357340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250a7664-56c8-4903-9396-f49711d7a913",
        "cursor": {
          "ref": "7b6b89b9-bc26-49b5-9481-2daa166fa743",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "112ee947-59e5-4219-80ea-9945adaea728"
        },
        "item": {
          "id": "250a7664-56c8-4903-9396-f49711d7a913",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e1d06af5-f5fd-4d4c-ba93-23dd4de6c0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54ef0b1-a64d-4ca0-9ce9-4891e698a80b",
        "cursor": {
          "ref": "069dc8ed-4ca6-4c9e-95a0-0516d8661580",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c5eda337-b4f3-4194-a06f-868df1f2aac1"
        },
        "item": {
          "id": "e54ef0b1-a64d-4ca0-9ce9-4891e698a80b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "79c7c134-753c-48a7-9c33-b29f67c69a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63448454-73c3-4f3c-a9d5-62ee9e981936",
        "cursor": {
          "ref": "9172dd1b-8fc1-41be-912d-6fbaf912a679",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0dbd1109-c87c-4fb4-b225-1d00d3a44fb1"
        },
        "item": {
          "id": "63448454-73c3-4f3c-a9d5-62ee9e981936",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4f52b005-ad8e-4dff-aa1a-9141f14d7df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60aa90a1-3cd7-400f-b3cb-da06591beae1",
        "cursor": {
          "ref": "dc6d50f8-e81d-4faa-b8f7-d3fb6e24a00f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d80cb98a-89ac-459e-bb40-9f24261770bc"
        },
        "item": {
          "id": "60aa90a1-3cd7-400f-b3cb-da06591beae1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "61a20f6b-a248-4f47-8040-858abaf132ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a6d574-2c30-49a3-aded-a7722e79d363",
        "cursor": {
          "ref": "51a79821-2101-4b37-a87a-f0c2261ecd6a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0d557018-637c-46c0-8166-7cf3812de258"
        },
        "item": {
          "id": "18a6d574-2c30-49a3-aded-a7722e79d363",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0faec134-15bd-4ef4-8706-1b394a63a3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27545262-df8e-42b5-bb20-0232555f3b2d",
        "cursor": {
          "ref": "8aa1efaa-5bfd-4ac6-971c-07972b44ba94",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "49b439e6-d791-4bff-aa26-cfaf8a6f40a9"
        },
        "item": {
          "id": "27545262-df8e-42b5-bb20-0232555f3b2d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0d680742-69b3-41f3-9c1c-27da0e1102d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c753f92c-e748-44e7-a00c-2f3f4fea4b5a",
        "cursor": {
          "ref": "6e20476d-748f-4e8d-8004-2b3c968fd5f6",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0dd9bc46-390e-488f-bb29-cc4f3f561562"
        },
        "item": {
          "id": "c753f92c-e748-44e7-a00c-2f3f4fea4b5a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2db64885-e3a6-4d4e-9e14-d984c48393b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcfa3b7-e857-43d3-822c-1a50cdeac0da",
        "cursor": {
          "ref": "3e849187-5707-449f-9a37-a0498ef4dfd5",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0b8f8821-a16c-41a5-9143-5a166604dc88"
        },
        "item": {
          "id": "edcfa3b7-e857-43d3-822c-1a50cdeac0da",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "63a04cdb-c99f-4895-8690-13e6733db0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a7c89b-55b9-440a-9c09-32314e8c8d28",
        "cursor": {
          "ref": "746a014c-aec9-42e1-a852-e9252339ae2c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ad241b8e-3ca5-4805-90a1-80e602f56adf"
        },
        "item": {
          "id": "81a7c89b-55b9-440a-9c09-32314e8c8d28",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7f595015-cf82-4228-92e8-ea6172011022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ef6aa9-9af2-49a8-9cc1-f59b118f012f",
        "cursor": {
          "ref": "2371c96b-cc92-4a9f-833e-3ef90e09108b",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "599d7542-5e5a-4ae0-8c3f-3c7d8c120e1b"
        },
        "item": {
          "id": "a7ef6aa9-9af2-49a8-9cc1-f59b118f012f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8ca17461-f035-43df-b83e-4905305e9219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc8389b-1418-4f41-95d0-4c0dd9eb00d0",
        "cursor": {
          "ref": "91ef2b5d-8c7b-44ae-bdad-dd120e28e161",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "77b6a10a-b193-4eae-bb23-367bcb50d48a"
        },
        "item": {
          "id": "1dc8389b-1418-4f41-95d0-4c0dd9eb00d0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e45cba98-76fb-4d2d-976b-39a11f620424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd79582-0c0a-4a9c-ab5e-1c49c8829193",
        "cursor": {
          "ref": "f0c15e81-5519-4816-809e-73142597f69e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "763c78a3-87e4-4d1c-96c2-8209e8c7f816"
        },
        "item": {
          "id": "2fd79582-0c0a-4a9c-ab5e-1c49c8829193",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "abe158e5-be21-4313-b419-d606ff3cda98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db50975-81ca-43fb-b0f4-d0723ea6a7ba",
        "cursor": {
          "ref": "ae415066-90e1-45a3-b941-f68ce9ca83a7",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "802c4733-258b-4d3f-91ab-12bf15e1ea9a"
        },
        "item": {
          "id": "0db50975-81ca-43fb-b0f4-d0723ea6a7ba",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2c103ecf-9262-4ef6-9c79-d376045f577c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b00edf1-cd51-4208-bcf8-73f7c37bd1d8",
        "cursor": {
          "ref": "6a30680c-abaf-49f0-a3a9-c098aec235f5",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "081fa28c-5445-465d-85da-174a8fdd62e6"
        },
        "item": {
          "id": "3b00edf1-cd51-4208-bcf8-73f7c37bd1d8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "29f3eb82-abfc-4691-b26a-c6b8c1a102db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffe7c32-a0db-413f-a528-dbc7c1370b4c",
        "cursor": {
          "ref": "2cdb72c7-d383-4fd1-8631-18561055d375",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "23afcba0-5e25-4976-ba8b-439de6b3f55e"
        },
        "item": {
          "id": "5ffe7c32-a0db-413f-a528-dbc7c1370b4c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "30feb288-471c-4706-8b34-4c15700f1e80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b022a066-dc37-4626-88ce-da941acbeb73",
        "cursor": {
          "ref": "a5a13845-95f1-490a-a075-4317fa7501a8",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a95bde9a-93b3-40a2-bb73-6dd6d40acaf8"
        },
        "item": {
          "id": "b022a066-dc37-4626-88ce-da941acbeb73",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7aa469b8-101b-4582-a8db-2c4478e7ad4e",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74069470-d368-47a3-955b-ae77f4c24ab6",
        "cursor": {
          "ref": "6713cc4e-fc44-4b83-96e8-557ec7d0762c",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "118b0548-bd0f-4a5a-9fc2-a5458606c629"
        },
        "item": {
          "id": "74069470-d368-47a3-955b-ae77f4c24ab6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f10de7b2-b44b-47dd-aadd-a3eef1759afb",
          "status": "Created",
          "code": 201,
          "responseTime": 212,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0814429-8894-4d65-a756-8b6ef9183924",
        "cursor": {
          "ref": "a8b1e4d8-7ead-42e4-a3fa-62662b8dc5de",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1539f91b-f3b3-4d63-8d9a-7933315a91c0"
        },
        "item": {
          "id": "d0814429-8894-4d65-a756-8b6ef9183924",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7c8cb5c9-e466-41fe-988b-ee0ee9902818",
          "status": "Created",
          "code": 201,
          "responseTime": 184,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "327d5121-78f6-4dae-8f0a-51cf26902780",
        "cursor": {
          "ref": "fedc3617-6a45-48f7-8058-771697e40e87",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2a5c7df0-7be5-4a5a-a037-936e03eae3fd"
        },
        "item": {
          "id": "327d5121-78f6-4dae-8f0a-51cf26902780",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "eac1e56c-28e3-4713-8c79-b8982a791723",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e07b83-2b5e-41a2-bbe9-3a854318e5b5",
        "cursor": {
          "ref": "6da18a3c-993f-4308-8d31-8d9c799ee115",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "17ceffec-5e01-47ac-b16e-0793106090ff"
        },
        "item": {
          "id": "37e07b83-2b5e-41a2-bbe9-3a854318e5b5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "edd798db-a51f-4a73-9313-e4e2da88e6bd",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f643944a-9d2a-4de9-b7fd-daf83799ae11",
        "cursor": {
          "ref": "3961ef67-ad67-4bce-9932-ed30076051dc",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fb862ca6-6763-4409-98d1-0becf2ad589a"
        },
        "item": {
          "id": "f643944a-9d2a-4de9-b7fd-daf83799ae11",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7d22d09a-2cee-4fc3-954e-9b06ab06e267",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb11996-f79c-47f7-99a0-d94849169d5b",
        "cursor": {
          "ref": "5e97c7af-4eef-4093-bccb-0c82412f55c1",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cf0833ce-3b29-4b7d-bcb2-788395cb84ad"
        },
        "item": {
          "id": "5fb11996-f79c-47f7-99a0-d94849169d5b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ef359c48-24d4-4f0e-a1e4-c368c56ffb72",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c64d689-abb5-408e-9a88-b72897b01821",
        "cursor": {
          "ref": "c730d623-7d5d-4bcd-bec9-9f3249aea1da",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "90daba88-d875-4140-9e1e-a6e1405dd4da"
        },
        "item": {
          "id": "8c64d689-abb5-408e-9a88-b72897b01821",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "98578f25-e842-4967-a0f5-eedc0e336335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447e0861-7fdf-4c02-b39c-6fd1e9419ea9",
        "cursor": {
          "ref": "c2799263-a67b-431a-ae10-e8a359aeda50",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "22fce247-c12e-41a3-bea0-7cc43d75a243"
        },
        "item": {
          "id": "447e0861-7fdf-4c02-b39c-6fd1e9419ea9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "45aec12b-948b-4e89-b881-05af45a66786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde967cc-a10a-44d7-84e3-df09a5b03d37",
        "cursor": {
          "ref": "9fc6305b-31d4-4373-9c40-a401b1d93130",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "513a31a4-7e6a-455d-8377-c38db09c6906"
        },
        "item": {
          "id": "fde967cc-a10a-44d7-84e3-df09a5b03d37",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "71c95c13-e21c-497e-839e-f3f85e9c6c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbbee18-668f-44e2-8664-bacf4d3324aa",
        "cursor": {
          "ref": "07a1ef30-b87c-4a37-b504-a114dfb111ea",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "faeba20a-b3d3-4838-b3f0-3aee39356e39"
        },
        "item": {
          "id": "7fbbee18-668f-44e2-8664-bacf4d3324aa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1b003c83-7d4e-427f-a914-38d5ed329a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ca01f0-7183-47df-8d29-1d522b118d62",
        "cursor": {
          "ref": "0f0dc4d0-1ad7-4955-aa70-3b0e57f78fda",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "eb2ae845-48f8-4158-9985-06f7dbc2a7a8"
        },
        "item": {
          "id": "14ca01f0-7183-47df-8d29-1d522b118d62",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e72828af-18da-4e5f-a5a1-ad9083f6fb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082412d2-c1ed-4382-af50-80366f993d3f",
        "cursor": {
          "ref": "ad33fa24-311e-47a8-91fb-7237891080d1",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5364a83a-5dd2-4b46-b917-c8990a3ed861"
        },
        "item": {
          "id": "082412d2-c1ed-4382-af50-80366f993d3f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9484f439-eab1-4b19-a277-61ef8ca88355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b045f76-2b4f-427e-a8bd-9246eb06b513",
        "cursor": {
          "ref": "2c13088f-4292-4f07-998b-8552f75851f6",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c2f7787d-3396-44c3-8b71-828c55bdbeac"
        },
        "item": {
          "id": "9b045f76-2b4f-427e-a8bd-9246eb06b513",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "164ed78a-eaf2-4d00-b3df-22c63cf9b88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d098f1c-cd0a-4f4c-af96-1d76790b0ec9",
        "cursor": {
          "ref": "74e669ca-7709-4b8c-b906-4a8a2c70849f",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b91ff729-605a-4df7-a3ea-627a9c9f9d00"
        },
        "item": {
          "id": "2d098f1c-cd0a-4f4c-af96-1d76790b0ec9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7254ca8a-fe8b-4efd-8122-84f6e28f3581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9d2a0e-bf20-4888-9d0c-7e8ef5c2585d",
        "cursor": {
          "ref": "00f3cc95-db02-45fe-bb44-938fbbdd9e17",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "983a9562-6910-46c9-a968-7e58bf834c98"
        },
        "item": {
          "id": "dc9d2a0e-bf20-4888-9d0c-7e8ef5c2585d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f8bf7262-5a51-4063-85fe-6c3c1c0f1901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99787e25-902e-4d52-9995-f76dbe5969df",
        "cursor": {
          "ref": "10c55364-83a5-4e72-a3d3-6bd84541f943",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1ecfaab1-57c7-4ec4-9aa9-420e0f309e66"
        },
        "item": {
          "id": "99787e25-902e-4d52-9995-f76dbe5969df",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "aff09107-d09a-4ad5-aaca-d08e0c6568c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9014e992-6b77-4f55-a6a2-ff133d2b1493",
        "cursor": {
          "ref": "13a0da4b-59de-4b5b-8fff-f7de122f1cfc",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "424a80db-f2db-4e53-94bb-b1fe652c640d"
        },
        "item": {
          "id": "9014e992-6b77-4f55-a6a2-ff133d2b1493",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8f21028d-25b8-425f-800a-f97299622900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec11b24e-cc87-483f-a500-85b0971fb89f",
        "cursor": {
          "ref": "259d626f-b948-47ca-9426-2b3f060a6e2c",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5078ef5d-ceb6-413a-af32-d39d2c1a1b85"
        },
        "item": {
          "id": "ec11b24e-cc87-483f-a500-85b0971fb89f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "164cf36d-3fcd-452d-ab7c-6780a84e75e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537d1bad-e3d2-4823-b6d6-55cfbf6b8e18",
        "cursor": {
          "ref": "ff754213-a592-41b8-ad08-5caf3bcb0098",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4d372388-d32b-427c-8d42-d7706490c517"
        },
        "item": {
          "id": "537d1bad-e3d2-4823-b6d6-55cfbf6b8e18",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "266dec9e-f372-41b3-bae6-5f196ed47c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d70494-587b-4a81-a6f5-71cd7c6639d3",
        "cursor": {
          "ref": "de7bd365-7a0a-492b-b444-8e199a43f2ba",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2297fa71-2d11-46c9-8001-9acae70102e6"
        },
        "item": {
          "id": "b2d70494-587b-4a81-a6f5-71cd7c6639d3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "310e3bd4-a82d-4337-910c-f8ed535d4cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d486a689-e82c-493b-86be-29cf876df839",
        "cursor": {
          "ref": "c638e842-7c41-48d5-a118-3ac472800d44",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1f0a0d8d-5873-4ece-90b6-e7b58ee58c84"
        },
        "item": {
          "id": "d486a689-e82c-493b-86be-29cf876df839",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ee345f17-c505-4cce-895b-81019bc832c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ced57ee-77ee-4216-87cd-909ddf8a4fa5",
        "cursor": {
          "ref": "caa71d9a-d51a-45cb-8bbf-66377b0a2b0f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "27edcbf3-e349-4428-8ae7-d29defc1f101"
        },
        "item": {
          "id": "4ced57ee-77ee-4216-87cd-909ddf8a4fa5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dac9a20b-f2e4-42f0-8836-2a28aeb4cd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71859ccf-8afd-4ab3-9b17-3a8bf1a55755",
        "cursor": {
          "ref": "fbd6127f-fa91-4c0e-9055-be91e4f8e00f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "15bf0c12-97c1-4731-ad26-53b222e69093"
        },
        "item": {
          "id": "71859ccf-8afd-4ab3-9b17-3a8bf1a55755",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "365f5626-efda-4e0e-a44b-98fd0b778f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4dc793-af08-4a99-b245-a0b9d1e3950c",
        "cursor": {
          "ref": "6cc13ba3-e55d-4cd7-8cd5-3f9598e9fe12",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "536563ff-93a5-47a6-a468-2f421170e6ec"
        },
        "item": {
          "id": "1b4dc793-af08-4a99-b245-a0b9d1e3950c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "decf01b1-e5d5-4b67-981e-7e3f332e4208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e82790-97ca-4606-9112-beb22d2f76a9",
        "cursor": {
          "ref": "7454c024-afb7-45cd-8750-09c68197a8f4",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c3541461-9d2c-4df1-85bb-f8a917f4f806"
        },
        "item": {
          "id": "e0e82790-97ca-4606-9112-beb22d2f76a9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "21e26621-f3f3-4d9e-96da-0836c944ae3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec88d87-4599-4505-bda2-4ed4c273b5f9",
        "cursor": {
          "ref": "c634a6f1-233d-404d-990c-7de969590923",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fbed2713-9faf-4faa-8274-aabcfd4e6912"
        },
        "item": {
          "id": "2ec88d87-4599-4505-bda2-4ed4c273b5f9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fadd508f-eca7-492c-9c80-b4b57c2c8e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601c0a8c-3f83-45d9-92e2-44c3a55deac2",
        "cursor": {
          "ref": "39f303a4-0ea8-4a1f-97ef-983872e47482",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3ebd670d-5483-4319-9000-3ddc0b166afa"
        },
        "item": {
          "id": "601c0a8c-3f83-45d9-92e2-44c3a55deac2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a1711f16-3791-4e04-97fa-060c70cfc8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f7aeae-3d2d-40be-b0bc-dc99e70eb421",
        "cursor": {
          "ref": "18631305-631f-4262-83e3-ec5619ff9b82",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fae1179b-e6d6-422f-aea8-c9a5a1931ade"
        },
        "item": {
          "id": "84f7aeae-3d2d-40be-b0bc-dc99e70eb421",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "95603d6b-52c8-4203-8dc4-de9c3c82ddb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9a9c81-630b-4b42-9e0a-1668fbd7be6d",
        "cursor": {
          "ref": "fff0d9ff-6b54-4d43-8ae8-92d0122486c4",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8a3c06ba-f049-41d5-b4a1-611940fa0692"
        },
        "item": {
          "id": "8e9a9c81-630b-4b42-9e0a-1668fbd7be6d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1cf9ec1b-c975-4c72-9064-abcb579bfbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9b2d5a-6420-4bbc-a873-1c9b00bcf98b",
        "cursor": {
          "ref": "cfc140c8-a46f-407c-86ff-8bb8b63f401a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a2e049de-757e-44c8-ac9e-d715619776c2"
        },
        "item": {
          "id": "bf9b2d5a-6420-4bbc-a873-1c9b00bcf98b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8313da5d-896b-4385-8bd8-13883358a8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdbcfca-e5d8-40e6-8c18-bb788188976e",
        "cursor": {
          "ref": "70bcb8ab-bbfe-4efd-856d-049b393787d5",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8a018686-f6b5-45a9-a6f9-26b8f69d9ac4"
        },
        "item": {
          "id": "bfdbcfca-e5d8-40e6-8c18-bb788188976e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5493d1eb-bf44-444a-a01d-b3db5ac93082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8aa46a3-579e-4c05-a53b-f6cb15d3a1b0",
        "cursor": {
          "ref": "68c4b293-1639-4c05-b3fe-acaedbbe6950",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "08e5199a-9ff2-440b-acc9-42ce07e69e9e"
        },
        "item": {
          "id": "e8aa46a3-579e-4c05-a53b-f6cb15d3a1b0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a490c308-5505-45c7-b421-1fb50ce7d590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149f3cb0-ea78-4a3d-acfe-c92675c4993f",
        "cursor": {
          "ref": "15b4bacc-beb8-475d-ae67-4fc1d4bba8f5",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e1dafab0-f468-4edf-b352-d78226ccab81"
        },
        "item": {
          "id": "149f3cb0-ea78-4a3d-acfe-c92675c4993f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "49528d04-7237-46f7-a4bf-4af83cc5276b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21952fe1-5bac-450e-bf81-5ca566b9ccf1",
        "cursor": {
          "ref": "9d8ae5b3-ce48-479c-9c1c-6fe02b3581cf",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "583eb5cd-d059-4c5e-b85f-d01696851df8"
        },
        "item": {
          "id": "21952fe1-5bac-450e-bf81-5ca566b9ccf1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "742a40f2-4771-4a45-9a49-5082cb65fc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6926f59-ce78-4dee-aad3-65927cbe697d",
        "cursor": {
          "ref": "b4d15a5b-a7bd-4c5b-969e-1238d567b406",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9ec78ab1-12bf-4571-875f-768ea62dd87c"
        },
        "item": {
          "id": "b6926f59-ce78-4dee-aad3-65927cbe697d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c8079598-d562-4a55-be89-5d013e9681e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ab9779-f4ca-4f43-98be-2497182aaa13",
        "cursor": {
          "ref": "650310e8-bcd6-461a-b724-563772458200",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ee156828-ea5a-43a9-bd06-76760e5954de"
        },
        "item": {
          "id": "e6ab9779-f4ca-4f43-98be-2497182aaa13",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "13559918-6f45-4a99-a3b7-72504c972d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8818917e-9d3c-4213-b33e-59f31eadb953",
        "cursor": {
          "ref": "9b5b9de5-2828-499c-9ee1-d146ec639daf",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "94decd5c-2cbf-42c9-b50d-316fa0f26352"
        },
        "item": {
          "id": "8818917e-9d3c-4213-b33e-59f31eadb953",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0bb2fe11-3b08-4930-b50d-4f7d4a57c429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98aa7ee6-998b-4c29-8880-d3247bf702be",
        "cursor": {
          "ref": "736a6bcc-3b44-4657-9691-22c47579516c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "eea54ccd-6bd0-4995-82f0-0ebbebb43d68"
        },
        "item": {
          "id": "98aa7ee6-998b-4c29-8880-d3247bf702be",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "182ddb67-236b-4466-9f00-3916e64198b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011b7170-3170-4140-bb6d-16763c9bd91f",
        "cursor": {
          "ref": "39abdd2d-90a0-4f2a-8d2c-622e65fb43bc",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9491153c-8d04-4a04-91f3-0079cd7ba1dd"
        },
        "item": {
          "id": "011b7170-3170-4140-bb6d-16763c9bd91f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a95ab741-a725-43f4-bd80-f12016f91128",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab490faa-3c13-4fa3-9376-642090830022",
        "cursor": {
          "ref": "304a9eb7-f967-4bfd-8bb0-d8dda545fdc8",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "056bef69-e201-4c05-9739-a662e1d35c9d"
        },
        "item": {
          "id": "ab490faa-3c13-4fa3-9376-642090830022",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "04d40c37-095e-4970-a555-800094942e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348fcb30-e79f-45cc-b6d4-c4e89fe216df",
        "cursor": {
          "ref": "ab61f960-de28-4c99-855c-ec553ce8790e",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2ea62bb3-32fa-4047-8d8e-ca32050fba5b"
        },
        "item": {
          "id": "348fcb30-e79f-45cc-b6d4-c4e89fe216df",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d440cea7-272c-45db-861f-d7e33ddd60b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa53862-5e90-4ea8-aa8b-c6273fd2510a",
        "cursor": {
          "ref": "480b5906-cefc-455a-9fbf-3b834b6eb039",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "921eca67-7f09-458f-a0d8-3eee75efff11"
        },
        "item": {
          "id": "ffa53862-5e90-4ea8-aa8b-c6273fd2510a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1bae780b-1079-43f1-aae9-895568a3852d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1ef881-54e8-4a6e-8fa5-111130cedc8e",
        "cursor": {
          "ref": "9eda9289-367e-48ae-ab3a-cc67ef491ba0",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "74e09c81-fbdb-418d-ba9e-19b14f20caef"
        },
        "item": {
          "id": "5d1ef881-54e8-4a6e-8fa5-111130cedc8e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2ac0cf00-0ce9-4b8b-ae11-bd922ee75917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50372c16-ce96-44a0-838b-229f72e2afc0",
        "cursor": {
          "ref": "24bfad91-74b8-43b9-a733-f66b1f2328b3",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e465d491-2bf4-4039-8d80-0b40680936d8"
        },
        "item": {
          "id": "50372c16-ce96-44a0-838b-229f72e2afc0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "37f7eb87-2c6f-4b6c-b6b7-00e6b70be21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac32a86c-11d2-43e7-8c14-dbc0cb1f751b",
        "cursor": {
          "ref": "8fa99870-7811-45f2-a308-60594e16705a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "29c07d34-38db-497f-b109-b4ed4fcf8260"
        },
        "item": {
          "id": "ac32a86c-11d2-43e7-8c14-dbc0cb1f751b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a05b402b-140e-4716-bb85-558353fdc226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee1e218-1237-4577-9a10-20ad3864403c",
        "cursor": {
          "ref": "98c968de-89c3-408b-847d-8287717aa827",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "938b1ffd-fac8-4b86-8a09-6bf3f0e999cd"
        },
        "item": {
          "id": "cee1e218-1237-4577-9a10-20ad3864403c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a9d00a1a-f7ad-451e-adfd-165110513bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d812697-3436-467d-9a71-568749fdc367",
        "cursor": {
          "ref": "caa487b5-0c8d-4d96-87e4-0c9f118fb524",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "69688023-42cd-4f49-9ed6-fc57cefd60db"
        },
        "item": {
          "id": "7d812697-3436-467d-9a71-568749fdc367",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e40279b7-15e5-4d77-b9eb-59f913c1932b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3640aa70-179c-4029-8d49-a58284aeb288",
        "cursor": {
          "ref": "29127e6c-75ca-4235-9742-32e5545c8c34",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b0dab305-8006-4701-9359-d8e7580d7d4d"
        },
        "item": {
          "id": "3640aa70-179c-4029-8d49-a58284aeb288",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "efc80361-8951-4db0-a71e-6a8210373297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4b9983-049e-44d6-8fb6-83b3cf065f7e",
        "cursor": {
          "ref": "2897d10a-4517-48e7-9662-010e524a86b5",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "36962baf-66ba-48f5-90f5-5217b3d1501a"
        },
        "item": {
          "id": "fe4b9983-049e-44d6-8fb6-83b3cf065f7e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1d4a1e33-15a4-4146-970b-f32143fdcdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0b1ea7-02e0-406d-a3b7-dd90009c91dc",
        "cursor": {
          "ref": "e517c772-c898-4587-9445-78727c792b8e",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2a7cbc7b-ba57-40d1-82c4-1d5e94b516c6"
        },
        "item": {
          "id": "5c0b1ea7-02e0-406d-a3b7-dd90009c91dc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "379241d7-ec24-4612-b8f1-1061bba8b379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2979d1-0a02-43f8-9d4a-b3ef7c8ce0c4",
        "cursor": {
          "ref": "f8ca6497-a29e-4a08-8e3d-b69a2759f360",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ab686c20-41b5-4fe2-b3cb-a5a6ca5ca71a"
        },
        "item": {
          "id": "7e2979d1-0a02-43f8-9d4a-b3ef7c8ce0c4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "851ce9d4-4187-49cd-910d-d1ba47ece4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3eb225-5aac-40c1-8ab2-5d20c897ab77",
        "cursor": {
          "ref": "731102c5-5bb2-4eea-b817-09c8bbb0838d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9a0d45e7-1571-41bb-a5ed-1577fa26bde1"
        },
        "item": {
          "id": "1a3eb225-5aac-40c1-8ab2-5d20c897ab77",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "492a0443-837d-4c23-9a24-9ef9b5bdca70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4f7462-005c-4ff7-b5c8-92f4a4b6d282",
        "cursor": {
          "ref": "8981fb8d-0ad7-47fd-ac9e-b766608de9f8",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d1d562a5-311d-4c89-9a90-3622b2ec9b25"
        },
        "item": {
          "id": "fc4f7462-005c-4ff7-b5c8-92f4a4b6d282",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "585c1a59-0675-4e49-ab13-7da92e3a6ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6c777c-c6c6-48af-9ab2-651f227c919f",
        "cursor": {
          "ref": "a99cfc4c-6308-4a71-8b0a-7d13fd9df17e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ec78e303-69d8-491b-a507-152532b2ae41"
        },
        "item": {
          "id": "5e6c777c-c6c6-48af-9ab2-651f227c919f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ca8d2a59-c8ea-42a3-9d73-d581b6234308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1ae55e-172c-4de6-9317-ac72e0f6ab31",
        "cursor": {
          "ref": "f90ee7d3-e6f9-40e5-a11b-e9f13f0bae10",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "84e328e7-49cc-4b85-9fac-dbcbb93e6c09"
        },
        "item": {
          "id": "0b1ae55e-172c-4de6-9317-ac72e0f6ab31",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "13b50f29-ff8e-45bc-b67d-f952fc035963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f3f13e-57aa-4251-8b4f-e92bc32c057f",
        "cursor": {
          "ref": "2758818e-6f8c-45f0-80e2-9529e04e5487",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "121a0982-8242-4e5a-8852-6a4d0ef98c5d"
        },
        "item": {
          "id": "84f3f13e-57aa-4251-8b4f-e92bc32c057f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "95a390bb-07a2-4087-945a-e79d31ae91a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa3487c-2a55-46fa-bb5f-1412fca927e5",
        "cursor": {
          "ref": "16af0616-6bff-4f10-a405-20c5a38f7079",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "610f327d-2a22-46f5-90b5-8091947b23d3"
        },
        "item": {
          "id": "dfa3487c-2a55-46fa-bb5f-1412fca927e5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "20629a9f-597d-44c0-94ca-bbca5e2261ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328dcddf-cf3a-44ad-b528-4bdd886facb5",
        "cursor": {
          "ref": "382a86b8-f868-45ce-aa22-792306dca519",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "25ecc1c8-8772-4cb0-8955-6fdbd56cdb2e"
        },
        "item": {
          "id": "328dcddf-cf3a-44ad-b528-4bdd886facb5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5ee8c814-55fa-4441-a4e0-51f7805dbe35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2deb547e-3308-4876-bc59-e0e73e3982f9",
        "cursor": {
          "ref": "2f467b5c-d3d1-46fc-896f-24b56d5d262f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6d596911-dd0c-4eb4-a572-c20d79ad2c05"
        },
        "item": {
          "id": "2deb547e-3308-4876-bc59-e0e73e3982f9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "54ca8f72-edbe-473b-badb-5388f3c4305c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15cf751-e2c1-455c-ba4d-ac2e8af58a63",
        "cursor": {
          "ref": "18da9bdb-2841-4d0d-aaf6-f36ce7645f7a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d9dc8949-ae11-44d4-ad80-48bfd51851b5"
        },
        "item": {
          "id": "e15cf751-e2c1-455c-ba4d-ac2e8af58a63",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2297d50b-2c56-44bd-9350-7e4c77e38911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e657b5de-72ea-48fd-8ca7-0dbaab1b856b",
        "cursor": {
          "ref": "fe9d9746-e590-4d7e-96c5-b1953d00b17f",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3d64cf2b-9125-4c6a-8ec3-98b8df6cea17"
        },
        "item": {
          "id": "e657b5de-72ea-48fd-8ca7-0dbaab1b856b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3e957a85-4388-411a-8141-2edb90bd0aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7bfc00-7513-4e6e-b0f9-e7e0b84b2376",
        "cursor": {
          "ref": "050e1cfe-ae27-4c04-bb07-8c48647a96a5",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "93a223f2-601d-4edb-b1ac-2619c4c91888"
        },
        "item": {
          "id": "8b7bfc00-7513-4e6e-b0f9-e7e0b84b2376",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "af61a141-c2cd-44c3-b1ac-a3a3c60d3c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179917d0-88d0-49bb-b25b-0ae0a5ba64f3",
        "cursor": {
          "ref": "3dbf0daa-1886-424b-937d-6eb1fac23e31",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6f9ae93c-22b2-429e-9b48-97e5e14323fd"
        },
        "item": {
          "id": "179917d0-88d0-49bb-b25b-0ae0a5ba64f3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b72700be-c8d3-45dd-8c3f-c08685207067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf304f1-01a2-431c-81ad-6f7c76cddc07",
        "cursor": {
          "ref": "f4d50d4f-2601-4363-8c46-b12b1cb190b3",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bc3114bd-0735-4f00-beb8-3ad925cb025f"
        },
        "item": {
          "id": "acf304f1-01a2-431c-81ad-6f7c76cddc07",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d1dcf21e-c9f1-4ac4-a523-3dbac0b3be12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c847035-796c-468a-8c71-cb86c6a1e4b8",
        "cursor": {
          "ref": "da02b454-f164-4e1a-950b-6448a1c6155d",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "91bc57d8-8bed-471c-91dd-e95adf61672a"
        },
        "item": {
          "id": "3c847035-796c-468a-8c71-cb86c6a1e4b8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6435bccd-3808-445d-9278-72e97181ce60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab24907-667b-4da7-8145-a1cdc8298260",
        "cursor": {
          "ref": "14d95973-fb4b-4764-aee1-4f6b11f32dca",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "88992299-3db1-49fd-84d6-4c784b908a4c"
        },
        "item": {
          "id": "5ab24907-667b-4da7-8145-a1cdc8298260",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b3b84ee0-9e33-4644-a896-c6b6b7327c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58fd1fd-dfb9-4a26-9b8a-7a2d68fd8026",
        "cursor": {
          "ref": "f29853b8-4cd2-42f6-8996-5758d97efe0a",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b69c440f-15b1-46f4-84e7-856ba9dde736"
        },
        "item": {
          "id": "c58fd1fd-dfb9-4a26-9b8a-7a2d68fd8026",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fa8b854f-d410-46fc-bb2e-31c4bd3d35ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6680b5-224a-462e-a9c0-9f5104641927",
        "cursor": {
          "ref": "3e19bfe8-63f1-4dbb-8d7c-e8e22e17d6ec",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "24d5cfb2-c1c2-48d8-ad73-4bd70ad2325b"
        },
        "item": {
          "id": "9e6680b5-224a-462e-a9c0-9f5104641927",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b926c5e7-c6ee-4766-aba7-7cdc76fe61b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313724fc-98e1-48b1-84d8-3181cd217ce2",
        "cursor": {
          "ref": "e673581c-192e-42b5-84f9-c6e9de9c1fb4",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "873f3086-5917-4951-8520-282a8185c518"
        },
        "item": {
          "id": "313724fc-98e1-48b1-84d8-3181cd217ce2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5299b4fc-e16f-44a5-aece-2821cdd11826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3149ff38-7693-4054-b54d-f6b335cffdbb",
        "cursor": {
          "ref": "131d51ed-8b30-4475-8fb5-2dcf5e8f503d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "98ea7ab3-2532-4ddb-a403-8608b5b57082"
        },
        "item": {
          "id": "3149ff38-7693-4054-b54d-f6b335cffdbb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8a723fc9-9821-4171-bc9e-838a777973ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb181e2a-26fe-428a-89cb-115c437d8f60",
        "cursor": {
          "ref": "3aac64b0-091f-4a68-b060-a3f2dfb07b68",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "62b2b633-335c-4922-a573-0c4a6fcb6744"
        },
        "item": {
          "id": "eb181e2a-26fe-428a-89cb-115c437d8f60",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2d280b12-1bba-41f1-a75b-da6fc55d7e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe616599-b5ed-43c9-9633-2a815d80100c",
        "cursor": {
          "ref": "80492114-24a1-427e-8719-69ec59130fc4",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3a52380c-c539-4edf-879a-9b601cfe59f7"
        },
        "item": {
          "id": "fe616599-b5ed-43c9-9633-2a815d80100c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "04d0716b-d72f-4ca7-8856-e7f2e79baf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18f4e77-bfb6-417e-979d-e500e5dfb059",
        "cursor": {
          "ref": "9f155e3a-9701-4e66-91b8-918159d17a4e",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "16f033ed-756e-4ceb-ac21-dd8e52aa12f0"
        },
        "item": {
          "id": "b18f4e77-bfb6-417e-979d-e500e5dfb059",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ecbf32f4-4c79-4da8-89f3-f731e0c2274f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492e8a1e-47d9-4ea5-8ac7-52d4eed749b2",
        "cursor": {
          "ref": "95be35e0-4dfd-439e-8a06-dfe1e39ea939",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "269c3b85-e091-46a1-b4b4-3b00b6bbd2b1"
        },
        "item": {
          "id": "492e8a1e-47d9-4ea5-8ac7-52d4eed749b2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b9cea5fc-141b-4924-be7b-699bd0890fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71dbcd0d-a786-45b1-9fe8-93467ddd9f4b",
        "cursor": {
          "ref": "fc370202-7ead-4323-80d8-12e2bbb73149",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "060c4dfa-1ae8-4662-8c98-99e19cf49eb9"
        },
        "item": {
          "id": "71dbcd0d-a786-45b1-9fe8-93467ddd9f4b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "188398a2-5d70-4473-8084-473d16d2c9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce8ea98-a77c-4674-b1ac-583088baa578",
        "cursor": {
          "ref": "06bd74f8-db03-4a24-9a71-f80bfda8095b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "31664b4d-6fe0-472a-9285-8e30d92f6b74"
        },
        "item": {
          "id": "0ce8ea98-a77c-4674-b1ac-583088baa578",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7b3c7fc1-49db-4061-8e63-f20cc2334486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44007537-1b25-4bcf-b5a0-c8db700f8f6e",
        "cursor": {
          "ref": "ccb66d0d-3588-4a4f-b87a-526225687faa",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ab3bd46b-58c9-4b9e-a082-90aee9ef6916"
        },
        "item": {
          "id": "44007537-1b25-4bcf-b5a0-c8db700f8f6e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fdf52073-afc9-41e3-9eb0-041be972b727",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3964fd46-75ab-4407-b9fa-05dffdc7c920",
        "cursor": {
          "ref": "105291c7-0b50-4fe4-80dd-01a1a17db28b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d2bf6596-0da0-4766-9918-d6d6778aede0"
        },
        "item": {
          "id": "3964fd46-75ab-4407-b9fa-05dffdc7c920",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "afbe2347-61d4-4813-9cf0-5d8124a3ad3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df592c66-74d0-459c-8931-edf647623cfc",
        "cursor": {
          "ref": "5ea2a3b9-509b-49a2-8e9e-1c13cc0b6d86",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7af7ee74-af49-46ff-81aa-5c19da987df3"
        },
        "item": {
          "id": "df592c66-74d0-459c-8931-edf647623cfc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f577d198-0a80-4c12-9133-debbb4c8963d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611a68ac-261f-4a97-a386-e1cb2706b5d4",
        "cursor": {
          "ref": "ae5d7e16-b0f7-408d-a6bc-f00e265ebf57",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "793577e8-7ea9-445c-8aa6-69b888e0df36"
        },
        "item": {
          "id": "611a68ac-261f-4a97-a386-e1cb2706b5d4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e5215edc-275f-438b-81cc-0b64502480cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c967a2aa-42b6-4a04-bc4e-004a9bb62e1c",
        "cursor": {
          "ref": "64028e65-4fe9-46a3-a078-0806f0a89bf7",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "63a6c9c4-05cd-4c74-8374-83d8f3262ff4"
        },
        "item": {
          "id": "c967a2aa-42b6-4a04-bc4e-004a9bb62e1c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "81c861c6-50c0-4939-b343-61471764a299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5deb8afe-38b5-4289-89f7-341fb4851ca2",
        "cursor": {
          "ref": "21090275-a162-45a4-af57-09b209c03b12",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "31af5038-2d38-4346-a04c-407e2da36fe8"
        },
        "item": {
          "id": "5deb8afe-38b5-4289-89f7-341fb4851ca2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8bcedf23-a1e3-4491-8d85-a99ca32c5816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8897490e-4fa2-4cad-9092-f5e0b708995f",
        "cursor": {
          "ref": "e0bd2322-c32b-4292-aa23-c5a8318140c1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a5daaba5-9f68-45a5-bdd4-c2a0bd3275a5"
        },
        "item": {
          "id": "8897490e-4fa2-4cad-9092-f5e0b708995f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c0a94068-7c95-476c-9397-bf797667e3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d6c2ff-b7ab-4373-8ceb-eb640ead1324",
        "cursor": {
          "ref": "137d6f52-fbf7-429d-87ae-ed91d792366a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b72b3e2f-c822-448a-ae3b-df96d3169177"
        },
        "item": {
          "id": "49d6c2ff-b7ab-4373-8ceb-eb640ead1324",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cf3cb6b5-2188-4298-bf64-c99aded4d2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636d505a-3759-43fd-acf2-bdf810ee41bd",
        "cursor": {
          "ref": "0ed1e1a6-a170-409d-b49e-7bafd3e2fd8c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c08b08ad-78c3-4d85-8745-7b2d22dbbf1b"
        },
        "item": {
          "id": "636d505a-3759-43fd-acf2-bdf810ee41bd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "eeb4e0bf-c8e4-4119-b0ef-482ffcc595d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44dac61-4406-495c-82dc-6e74092e8a8d",
        "cursor": {
          "ref": "c894bd87-b2ff-4757-8036-89f2517e92dd",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8e61a9a5-314d-49f2-8a63-7b0803f611bc"
        },
        "item": {
          "id": "c44dac61-4406-495c-82dc-6e74092e8a8d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3c74f58a-d8d9-41c7-82fa-f11a6b78f1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae23ec1f-313e-4ee3-a6a2-f1fef7b0012a",
        "cursor": {
          "ref": "8c0f5069-a72b-467e-9469-3ed75f0ee520",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "661b5253-5277-4c79-be52-be0c056654cc"
        },
        "item": {
          "id": "ae23ec1f-313e-4ee3-a6a2-f1fef7b0012a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "68edab53-431a-45c9-a00f-dade8b4f1cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37099b3e-fa05-4399-b6d2-03d5412797eb",
        "cursor": {
          "ref": "d48a796b-3ae2-4e96-b608-80839be913d2",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9e647326-38de-4a9f-bd25-ff0dcf34eb34"
        },
        "item": {
          "id": "37099b3e-fa05-4399-b6d2-03d5412797eb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "614a53e3-b61c-4fbc-bfb5-55d869167d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87bb5b5-aed5-4e2f-872f-379c7ae9af43",
        "cursor": {
          "ref": "0146641f-b5e9-4ef2-a8a5-4c9d550dc9cd",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1f12719c-2054-41b9-be84-b42dbce343a8"
        },
        "item": {
          "id": "a87bb5b5-aed5-4e2f-872f-379c7ae9af43",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d946da34-91f8-469d-8498-4702efae1d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0b87dd-c7b7-45d2-b220-bb44be659b9e",
        "cursor": {
          "ref": "1544d6e7-db6c-4cc7-ae57-1a5887f01f68",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "27067222-7db9-46c4-b731-bb8fbcef0874"
        },
        "item": {
          "id": "ca0b87dd-c7b7-45d2-b220-bb44be659b9e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b7bde707-f0e7-411d-ad21-2d2a6810d171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7702c44d-05c0-406a-872b-f6224eff08b8",
        "cursor": {
          "ref": "b21f229f-4afb-4374-8d32-e5bb6586686a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "36982c2e-a193-482e-a00c-988e89d3078a"
        },
        "item": {
          "id": "7702c44d-05c0-406a-872b-f6224eff08b8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "40507174-cfe1-41dc-b4ef-a02649aadcdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a273f339-39dd-4a1a-8626-e04f5d14dbe5",
        "cursor": {
          "ref": "9ce76a7c-439d-43f4-bebd-0d22daedc311",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c46d8f39-ca77-4a65-af40-9b0ddf571fdc"
        },
        "item": {
          "id": "a273f339-39dd-4a1a-8626-e04f5d14dbe5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e4379c25-a25e-4f6c-b0e6-6b78834da9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9f732a-1265-49ef-8f9b-aee05dd6f218",
        "cursor": {
          "ref": "10aebfdf-ac39-4d57-aa22-49c86c307171",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1cc061c3-c952-482d-9432-ea7228114750"
        },
        "item": {
          "id": "7b9f732a-1265-49ef-8f9b-aee05dd6f218",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "74bd30c8-333a-45dc-90f7-577d605b406b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd52d877-e3b7-478a-8b61-194183cbeb7c",
        "cursor": {
          "ref": "ce885536-5480-47b2-817c-a87df79749a5",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e5017a45-7eff-4cde-bb8f-3ab9033633e4"
        },
        "item": {
          "id": "fd52d877-e3b7-478a-8b61-194183cbeb7c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fabf8c30-c7f1-4a2d-8e02-1d2665ddc6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a20239-fc9c-4061-a0b0-5ffc1f387b08",
        "cursor": {
          "ref": "81976b1e-8bc5-4500-8b44-2a35d84ef7c9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ff0ed2f6-ecb4-42df-97ea-5a8c0afb2a87"
        },
        "item": {
          "id": "62a20239-fc9c-4061-a0b0-5ffc1f387b08",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "38d2c8a1-8c40-4e85-8ff2-26a2bc8be88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55a350b-82ff-4a00-8c57-18964b164dd8",
        "cursor": {
          "ref": "5773e3e3-33a2-4a09-9e0c-c99113a43924",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f9fd5a22-3f6c-4cd4-bef8-caba90b579c6"
        },
        "item": {
          "id": "c55a350b-82ff-4a00-8c57-18964b164dd8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c3fc0830-af77-4a55-b986-b17ad884a414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051e6652-9db0-4cc2-a2ce-dc40117bf8e5",
        "cursor": {
          "ref": "26fc2720-4c4e-44f3-8991-2f6d1a11958e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5fcd8cb1-ef5e-4fd8-ae6f-f2a8e689b0f5"
        },
        "item": {
          "id": "051e6652-9db0-4cc2-a2ce-dc40117bf8e5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a47139a8-3621-4cdc-bac9-25b6c3d400ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66b389d-9c56-45ca-bb32-d46e99babd64",
        "cursor": {
          "ref": "a7e54fcb-e09a-40d8-a865-386af44cc7f3",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0548200c-4eba-4327-9648-3d1265f0dfe8"
        },
        "item": {
          "id": "c66b389d-9c56-45ca-bb32-d46e99babd64",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4623ee7b-b5a1-4749-825b-89c6287af554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a87b5e-4a61-4452-917c-2989885dd537",
        "cursor": {
          "ref": "35ff354d-65f1-4363-83ef-db0bd60c528e",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c7a0279b-53df-46ee-86f6-5cecfc2d63ff"
        },
        "item": {
          "id": "e2a87b5e-4a61-4452-917c-2989885dd537",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "863d9442-8ab3-45dd-874f-830d8e04482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbfade3-f1b5-40a9-923a-9c4df4fb2b12",
        "cursor": {
          "ref": "3ba7aabe-9ca2-45bc-9953-cb972b36ee8e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "25324805-41fe-4d09-ad1d-02c26d69efbd"
        },
        "item": {
          "id": "6fbfade3-f1b5-40a9-923a-9c4df4fb2b12",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6a4ac46e-b332-4358-8f43-1ccf39049b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd67e40-2408-4db7-81b2-4f3da7f1a72f",
        "cursor": {
          "ref": "e1efed58-3d10-49a3-9518-5ae5d78f0eb2",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "13c1cfbe-3b10-42f8-afdd-00bb5514ee4d"
        },
        "item": {
          "id": "bfd67e40-2408-4db7-81b2-4f3da7f1a72f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9f122a78-e5b8-4b48-826b-61a0f863badd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a655153a-29d3-484a-834f-eb2f9379b04e",
        "cursor": {
          "ref": "9572d1bc-8407-4363-a1fb-65eb8f48aa96",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fcf0d0a9-a79c-4698-b08d-00ffc3c71a24"
        },
        "item": {
          "id": "a655153a-29d3-484a-834f-eb2f9379b04e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7cd4f32e-d1f1-43df-8379-aee147413373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18d1541-87b6-4319-a090-ddeaf3032f05",
        "cursor": {
          "ref": "dd575111-12eb-4a14-b3f6-4f3def3c1119",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3e7a2d91-803b-40cf-b64a-ba2759e9227f"
        },
        "item": {
          "id": "a18d1541-87b6-4319-a090-ddeaf3032f05",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a228d547-2cac-42ee-8fea-60c2df21c2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab61256-e13d-48c7-8991-b6f1353b41ad",
        "cursor": {
          "ref": "ae47456b-0923-4bc4-a2d1-cfb86fd17023",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "78e999f2-56ef-49df-9332-9c3e67bcea9d"
        },
        "item": {
          "id": "aab61256-e13d-48c7-8991-b6f1353b41ad",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "10834e49-1ab6-4b04-83d3-acfe0af8e1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f633d39-1d77-4568-844f-70cd83a13a44",
        "cursor": {
          "ref": "2d59ce00-00a1-4fed-8690-32ceb7507713",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6b0114af-0912-41a5-b33b-4b311ccfdbe4"
        },
        "item": {
          "id": "9f633d39-1d77-4568-844f-70cd83a13a44",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f11195c0-371d-4b3f-839a-5b2e541b671e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002b053b-edad-4019-ab4e-de2aada87bff",
        "cursor": {
          "ref": "c0a909c2-f66c-4ba2-b681-f2a91265966c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cd5f6689-1822-4a99-8189-246bb11e5f2b"
        },
        "item": {
          "id": "002b053b-edad-4019-ab4e-de2aada87bff",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9a6733f2-ffc1-4d75-91c6-10c38800cc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05138db9-2f37-4908-9937-eab16851ac39",
        "cursor": {
          "ref": "50f863b0-b85d-46e5-87fb-f0b306d2a803",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7901060b-dc18-485f-a452-0deebe2136cc"
        },
        "item": {
          "id": "05138db9-2f37-4908-9937-eab16851ac39",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d6b36553-ab68-4843-84bf-b58fd9962cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7fde1b-7722-411d-8bd8-3d8cf94ceb12",
        "cursor": {
          "ref": "f86f1346-e001-453c-a1a6-b6c920b9773b",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ac688259-cc08-4417-83b4-d90a5fbbfe3a"
        },
        "item": {
          "id": "db7fde1b-7722-411d-8bd8-3d8cf94ceb12",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "05d16937-18ab-4dce-8b23-b4e9aadee4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c39ae86-1a36-4b66-81db-b3a3f63881c7",
        "cursor": {
          "ref": "8a716706-dd1e-4c73-9006-8db9166d8651",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0945eb93-8f1e-434c-bfdb-b9846e682319"
        },
        "item": {
          "id": "4c39ae86-1a36-4b66-81db-b3a3f63881c7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "35549fa4-6921-4e69-b749-fae77cc458f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88e39a3-2f05-401c-aa02-ee3197c5695b",
        "cursor": {
          "ref": "d0240736-91e1-46a6-b65c-b3a4203af58f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9e27cd08-9f94-4f1e-978f-5a1a0ff747e7"
        },
        "item": {
          "id": "f88e39a3-2f05-401c-aa02-ee3197c5695b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b92e5285-86b8-433b-8c2e-4716abf7efea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1423135-6620-4678-b1d5-cfb344320372",
        "cursor": {
          "ref": "2b737a63-160a-4265-9a4d-6622bb325846",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cbfcb5f0-3677-4c3d-b2c5-2d331f15ec34"
        },
        "item": {
          "id": "a1423135-6620-4678-b1d5-cfb344320372",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fa5c3350-270e-406e-9dd8-99a48e4c42d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbf44ea-53f8-496a-a760-5d67107d1b88",
        "cursor": {
          "ref": "a3b6285f-8a2d-44ba-b317-591210244c76",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "44b02d20-c7af-4c20-80cb-b24e2e37ca29"
        },
        "item": {
          "id": "5bbf44ea-53f8-496a-a760-5d67107d1b88",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d98b1267-8da0-4995-a282-09f2a03b343b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2302a27-646f-44a0-abbf-a87d14cc551a",
        "cursor": {
          "ref": "688d7170-45bc-45a8-9f94-27e184ec96fb",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7ca7ae21-7eb8-4204-a0d0-1e9ee828ff1f"
        },
        "item": {
          "id": "d2302a27-646f-44a0-abbf-a87d14cc551a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "94dd6045-64d1-4493-880f-782eac7e26f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5772fe-dd90-41f8-88e1-dce8ea26d67f",
        "cursor": {
          "ref": "28eab691-8f24-4863-a2bd-e0d5b558bccc",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "60ebef09-d0cc-44bc-a4b6-dd14ddfcd778"
        },
        "item": {
          "id": "8b5772fe-dd90-41f8-88e1-dce8ea26d67f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ee2e808f-aa2f-47f4-989b-c5b1a84b4ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01594eca-e848-4aca-a792-6ad727e22e8f",
        "cursor": {
          "ref": "70e18872-9c8b-45eb-9d3f-95061704210f",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "95b09a03-08a9-42f9-807a-ec4a3012b2b7"
        },
        "item": {
          "id": "01594eca-e848-4aca-a792-6ad727e22e8f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "202452cb-d5d2-4c6d-83a9-f6c19617220f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ec24f2-951f-40a9-9726-1e942ee07e6e",
        "cursor": {
          "ref": "02ea8a09-a1d7-471f-9d1f-4a3058eada64",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dd87f559-6b1a-4eac-abf5-1ccdec849811"
        },
        "item": {
          "id": "d8ec24f2-951f-40a9-9726-1e942ee07e6e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ad99b6b4-755d-4ea7-85b3-605ff6aaedd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b366c17c-10ad-4ad4-8850-b70d88010042",
        "cursor": {
          "ref": "ca336969-27ee-4882-8b3d-60a02fb1433e",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f6a0eb30-a0fc-41a1-9c11-b228813f5541"
        },
        "item": {
          "id": "b366c17c-10ad-4ad4-8850-b70d88010042",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7be37069-d744-47f9-bdbe-51781e4505c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2090ee0-8120-4748-9ccc-87c55197f3e3",
        "cursor": {
          "ref": "569279bc-c240-4024-b000-73ec4774edff",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2cccb30b-f180-49a5-992b-f42e8194bc90"
        },
        "item": {
          "id": "b2090ee0-8120-4748-9ccc-87c55197f3e3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b2ff5cd3-d5ea-458f-8b76-dee1af67bed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92929e9a-98fc-4b56-a7f4-0a9610b23fb1",
        "cursor": {
          "ref": "8285220b-89a3-49e4-a71b-bc5c9c61e441",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9dcde762-95b2-475b-ba0b-0caac8ad9daa"
        },
        "item": {
          "id": "92929e9a-98fc-4b56-a7f4-0a9610b23fb1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "76d38fe9-fb00-42d8-aa91-b16b4534f0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ada7a02-1d21-4829-99cd-ecc334a233dd",
        "cursor": {
          "ref": "fd248c13-5eab-49dd-8c86-eb2461cddb9e",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8b1284b0-c55d-4393-97ef-6a75374a7609"
        },
        "item": {
          "id": "3ada7a02-1d21-4829-99cd-ecc334a233dd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "af70a1b8-106f-4638-9f36-9c7b32778b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d49781-c0e2-427a-95b6-22b28f401c2d",
        "cursor": {
          "ref": "4b9ce4fa-4c9b-4e61-a9b9-e45f65cc9145",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ac30e3db-bbda-4b0d-a93f-140f1ea5f74b"
        },
        "item": {
          "id": "c0d49781-c0e2-427a-95b6-22b28f401c2d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e842dccf-8ba0-4cf0-b780-2480794fd055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2ee74b-73c4-4ab1-815f-7fb7a9e9a702",
        "cursor": {
          "ref": "ec4030fe-9219-4cac-952e-9a4c1a82aa06",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a4b0e85d-cc2b-430e-8b5a-816f6736c9d9"
        },
        "item": {
          "id": "fb2ee74b-73c4-4ab1-815f-7fb7a9e9a702",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ae4f8259-5bcf-4cb3-8fbe-023bf8be494b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5faf4311-579f-4bdb-b20f-026c9532cf72",
        "cursor": {
          "ref": "44c75b2b-a880-420b-a9cd-cae71602eee5",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6d7f2afd-51a6-43c3-8eee-93245c14476c"
        },
        "item": {
          "id": "5faf4311-579f-4bdb-b20f-026c9532cf72",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "51c3b964-c9f2-4150-8f20-552c3c7a422b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d553ab9-839b-45e2-914b-88ad660d8227",
        "cursor": {
          "ref": "0d4cd679-5c91-4577-912f-e90d1557a8ee",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f02a2758-6584-4fb7-a24d-7e188c8c356a"
        },
        "item": {
          "id": "6d553ab9-839b-45e2-914b-88ad660d8227",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "760ed125-67df-47ab-bb55-2772fe13c15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32f24b5-45d0-4242-8975-3fd76d4f7b22",
        "cursor": {
          "ref": "6ddffefa-363a-48c8-adf4-dcdb986f7a5c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ca57a36e-83e0-4276-9de8-ab8b9bd22e5a"
        },
        "item": {
          "id": "c32f24b5-45d0-4242-8975-3fd76d4f7b22",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f816fe4c-9c9b-4f5a-aeaf-ea8f7af3ace8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebad2f3-f3ce-4684-a505-717da8eef4ca",
        "cursor": {
          "ref": "65b62a20-728e-4d14-95fd-d8577b4d5bcd",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5cfe7eb5-de8d-4e33-aebe-f66ac1c4a791"
        },
        "item": {
          "id": "cebad2f3-f3ce-4684-a505-717da8eef4ca",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c83cd717-bb6d-4cf6-a1af-01e3ba6a928d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5e1bc4-cac4-4608-84e3-43bc521f35a3",
        "cursor": {
          "ref": "3141f368-3935-4511-98c6-fe02141df1ae",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f041153f-1f5f-4820-a045-ecc555c79755"
        },
        "item": {
          "id": "9a5e1bc4-cac4-4608-84e3-43bc521f35a3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f0e54f1d-933a-4e62-ad2d-5bdbf4fb034a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b6b446-6a4b-4b1e-a097-abff48b43bbc",
        "cursor": {
          "ref": "4f8f943f-119f-4661-9cbb-276966e098fe",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e52150ff-5b39-4ff7-8649-eb3897960a38"
        },
        "item": {
          "id": "d6b6b446-6a4b-4b1e-a097-abff48b43bbc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "74a6b02a-f63d-40c4-b559-8e3075e414ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fa19c9-fcf1-437c-8a9e-6280b93ef825",
        "cursor": {
          "ref": "6ebb3d6e-6a7d-4629-ab01-e69da7fd45b7",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cc2f0f63-6b97-4b78-8fea-be3521974739"
        },
        "item": {
          "id": "28fa19c9-fcf1-437c-8a9e-6280b93ef825",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9e36cd98-136b-4a6e-b8db-41eb65b85f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdb2f8f-3f31-4fbc-9d48-7483789ab2c7",
        "cursor": {
          "ref": "76da2d46-f12b-4fdf-9e79-c3897918e848",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3e2d9566-a3d2-400c-9afc-48c213068802"
        },
        "item": {
          "id": "9cdb2f8f-3f31-4fbc-9d48-7483789ab2c7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f5482d6c-dc2d-4514-9302-f64b99ead1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9dc181-3a3a-4b70-9764-b7c17fcad246",
        "cursor": {
          "ref": "9e9433ae-c0c5-488f-808f-3488a732991e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "be8a2488-a41d-4d3b-b411-59cffc4f3cc0"
        },
        "item": {
          "id": "ed9dc181-3a3a-4b70-9764-b7c17fcad246",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a7a236dc-ca6a-4663-bb4e-fb09d8dbcb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d144a9-cc46-480d-87be-30ea684099ae",
        "cursor": {
          "ref": "dc483398-eb90-41da-b854-3c605d410801",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cc80841b-7599-4e7e-b129-d28c6b5bcc0a"
        },
        "item": {
          "id": "59d144a9-cc46-480d-87be-30ea684099ae",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b8aa2d36-c534-459c-a327-3deb247279a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437e2040-99ff-4def-96b4-196ca17e81a3",
        "cursor": {
          "ref": "778246c7-8253-4738-8d89-d71595af14f7",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7fd30936-e49d-46c1-94f2-52c84f976ed0"
        },
        "item": {
          "id": "437e2040-99ff-4def-96b4-196ca17e81a3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b9c58b82-091b-45c9-808b-23d9d401a605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9703ce13-9be0-4828-8617-e01722a05bfe",
        "cursor": {
          "ref": "343de026-8fb0-430c-b213-e54b6040adc2",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f49d203a-ecd4-40ca-a688-c5d2d6ed1400"
        },
        "item": {
          "id": "9703ce13-9be0-4828-8617-e01722a05bfe",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3b0a08ca-0bca-43f8-850e-09c429e5c144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33ddc6e-05bd-4f9d-9731-a6fbd72d08b6",
        "cursor": {
          "ref": "4d9ec318-388b-48a7-8032-de8206d04922",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9ac0b3f6-aca4-4e82-9c48-ebd347d2101e"
        },
        "item": {
          "id": "b33ddc6e-05bd-4f9d-9731-a6fbd72d08b6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7a7a368c-0eeb-417c-8d5f-b2530e4ebe32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df86ad1-5cad-406b-ad15-25ee9991f7e6",
        "cursor": {
          "ref": "1cde6e5f-75ce-45a1-8083-951e565aed84",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8b08456b-fd7d-47ad-a6bc-4e4d197888c3"
        },
        "item": {
          "id": "1df86ad1-5cad-406b-ad15-25ee9991f7e6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "acbc6440-ceca-4e41-bed0-9f8cac6adc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07182c8f-0eb4-49e6-be29-be049b90cc9e",
        "cursor": {
          "ref": "47ffe737-ff91-449f-b782-9ee08e6c1f02",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "30ac1996-5086-4009-b461-6e9a34effd45"
        },
        "item": {
          "id": "07182c8f-0eb4-49e6-be29-be049b90cc9e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "28e6a65f-f687-4bbc-92ca-4ee6b415bf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85809114-0cf2-4dec-a149-ce9f07477df9",
        "cursor": {
          "ref": "ba4f3dd3-c56a-47af-9b0b-25852f4e4966",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "72622be3-6e09-4aa3-adcb-6234c7011f23"
        },
        "item": {
          "id": "85809114-0cf2-4dec-a149-ce9f07477df9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7f88c107-8155-4b22-b93a-f07ecb49c5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f395f8-7334-4534-b85f-7b328a1b25da",
        "cursor": {
          "ref": "1951847c-a456-44a7-be11-cb4f59d695de",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d1ff8271-4a2c-4015-a804-19562421937d"
        },
        "item": {
          "id": "d4f395f8-7334-4534-b85f-7b328a1b25da",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fe8c72da-2d62-4cfe-8cec-e2e2a75e2659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44da731-793d-430e-a729-3a4b972b4ae6",
        "cursor": {
          "ref": "7d993205-de1c-4287-814f-12be46e95109",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "73907379-3c8d-461f-abc5-f60967c7072c"
        },
        "item": {
          "id": "f44da731-793d-430e-a729-3a4b972b4ae6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "627a48cc-1b37-4f68-8084-aef5c175656e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb5710a-ed07-4d29-88af-e37ec25ce790",
        "cursor": {
          "ref": "f1f06595-f2fe-4ba8-a0c3-d628c8316d35",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e9fcd6b9-572d-4736-b85c-08b76a9c09c2"
        },
        "item": {
          "id": "0cb5710a-ed07-4d29-88af-e37ec25ce790",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "af817da6-c1c6-4ba8-92d0-80e67a05468b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95175b8b-203e-4551-949d-d665377279e3",
        "cursor": {
          "ref": "b91ee323-9dfa-4bb0-8f68-d64825cee23b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fbe2ff46-281c-4bee-b7d9-9dde89671446"
        },
        "item": {
          "id": "95175b8b-203e-4551-949d-d665377279e3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6da0d094-55b3-48bb-808b-b917ea3a3d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95eef0c7-9f54-49a1-97d4-108e9d8bdec1",
        "cursor": {
          "ref": "3b418bce-9761-46dd-92e8-5f02634cb36a",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f7b19860-8980-4d20-b71d-fa3a39709eee"
        },
        "item": {
          "id": "95eef0c7-9f54-49a1-97d4-108e9d8bdec1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0626a0af-e2e2-4e9f-aa07-d42a24869860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae81d483-5344-4758-a2ee-23c5b59fe916",
        "cursor": {
          "ref": "f72924d8-27d3-4d64-9814-edce8075a3b8",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a4b9e217-9294-48b5-8a5e-8e53cc297f24"
        },
        "item": {
          "id": "ae81d483-5344-4758-a2ee-23c5b59fe916",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7e6ea0e2-1689-45f9-9402-1d0b467f5dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaa2199-c385-4bef-a116-aabc7a10d543",
        "cursor": {
          "ref": "61cbf6f5-327a-4325-9ea5-9a6c09cde19d",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4db5b618-393a-430e-b145-8d4027ea7ba1"
        },
        "item": {
          "id": "daaa2199-c385-4bef-a116-aabc7a10d543",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "97b6303d-f3e0-4d76-85c4-112e8d2d564b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91998f43-95e7-4c3a-9e74-36468e7df849",
        "cursor": {
          "ref": "3fc8c9b8-a2c5-4185-a6e3-f11fabbd8be7",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "725795be-3a90-4dc5-b5bd-4371efa50f04"
        },
        "item": {
          "id": "91998f43-95e7-4c3a-9e74-36468e7df849",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f2823744-c429-4418-afbf-12a821283589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2ecbd2-6c44-4624-aa51-28eb721fcb08",
        "cursor": {
          "ref": "44ea9ac3-6f31-4694-ba06-b2fae94a2379",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2cced3b2-d34e-4175-ad9c-d56ddf71dbb8"
        },
        "item": {
          "id": "0d2ecbd2-6c44-4624-aa51-28eb721fcb08",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bf3fa41f-6320-4e8b-8b8a-0c0eb1cd15d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2118a70-6a39-4811-8fff-847a0a3117be",
        "cursor": {
          "ref": "796b5681-a90a-4c28-927e-f5ba14f609ee",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ec23160a-d1fd-4f94-b855-c40235812131"
        },
        "item": {
          "id": "e2118a70-6a39-4811-8fff-847a0a3117be",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0b4533e5-ca06-4626-8542-4b5c5140e276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d9e0ec-630d-42d0-b345-860e9eabd12f",
        "cursor": {
          "ref": "873cbfa3-3a2e-47cd-a0a1-f53f8fff5abf",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9c33770c-ac73-4208-b028-c3456ca54e92"
        },
        "item": {
          "id": "f1d9e0ec-630d-42d0-b345-860e9eabd12f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "56f6acc4-1535-41a2-a7a8-78c79dd49ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a54b0a-d46a-4225-a897-f51a4004a540",
        "cursor": {
          "ref": "4e4b267a-7ad1-45b1-8ac7-b1764ebd9a92",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8225f40b-71ad-451a-aba8-286314cfe301"
        },
        "item": {
          "id": "72a54b0a-d46a-4225-a897-f51a4004a540",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "39497e52-41bd-4948-bf5c-b76b83f98e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a4cbf4-6746-4057-8e58-1c96ed987d6b",
        "cursor": {
          "ref": "8b7a75ac-3a46-41a4-b560-a4967f8b7b57",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "22bf69ef-ddbc-40e4-89fc-8d043838007d"
        },
        "item": {
          "id": "86a4cbf4-6746-4057-8e58-1c96ed987d6b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6c138ab9-2f09-459a-9fe8-528abea1bad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0b3b26-00c4-499c-a30a-3e3407d3fce3",
        "cursor": {
          "ref": "68589053-ccaf-4fca-8d75-8cf58b5c28f5",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e0f2d9ba-1b4c-4df2-8524-cb48efbd46a2"
        },
        "item": {
          "id": "ad0b3b26-00c4-499c-a30a-3e3407d3fce3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "eda55655-91c7-4439-9422-f353eea7b7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988a1cf5-a866-4bb4-82a8-ea6e1377074a",
        "cursor": {
          "ref": "86fb3e64-58bc-489b-8418-f964b9d99154",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ccd5ef6c-3453-4c45-94fb-5c9160d106a0"
        },
        "item": {
          "id": "988a1cf5-a866-4bb4-82a8-ea6e1377074a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c7b99699-1172-4148-91df-1c7f613d793a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73583290-8234-4926-a8fa-d9db7ba6b21f",
        "cursor": {
          "ref": "63197603-d8e4-4bab-8e63-807043c1ff9c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a31a770b-641f-47a8-84c8-22d44354da79"
        },
        "item": {
          "id": "73583290-8234-4926-a8fa-d9db7ba6b21f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f51734b2-fbcb-4666-a4ad-61d99b275ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83080de1-c62e-4919-b1e7-a281c7e448b7",
        "cursor": {
          "ref": "57e86ce7-e05a-4d97-b82b-dd4ed743c1f3",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "040caa81-6d45-45e7-8c4a-7a294f27ee13"
        },
        "item": {
          "id": "83080de1-c62e-4919-b1e7-a281c7e448b7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "42d58aa8-9246-4cc7-94c9-f588d98a6763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc500d6-ff28-4189-b680-295049b900fd",
        "cursor": {
          "ref": "46d719ec-2460-41f9-bf72-19a189090207",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "28521eaa-9555-4622-8af5-475d4322703d"
        },
        "item": {
          "id": "afc500d6-ff28-4189-b680-295049b900fd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5ec2c8ec-c338-4b1d-b6f2-dc7990266bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a97f0af-b8d1-4bd1-8f13-d08d4bfbf11f",
        "cursor": {
          "ref": "f7240729-9785-4ff5-9efa-5f07b30b1bc7",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "812ddd38-3cb5-49c7-aca7-4f70416e04d0"
        },
        "item": {
          "id": "6a97f0af-b8d1-4bd1-8f13-d08d4bfbf11f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "43431cd5-26e7-4335-b2b1-3c893a245dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a969cb-6287-428f-b536-40640fe50fba",
        "cursor": {
          "ref": "16840b82-3e80-41d7-95b6-315cdb2be282",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "83a5f681-1ce8-4ec9-bec2-2351371b8e3d"
        },
        "item": {
          "id": "d3a969cb-6287-428f-b536-40640fe50fba",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "505a0b33-62a2-448d-a7d2-0a840bbf8647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4ee04e-c477-4890-9db9-4e2f1ae00c6e",
        "cursor": {
          "ref": "4339f056-1a77-4177-add7-0e355d0a7b45",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a05e4dec-51e9-4b1c-9371-1a0268e622fb"
        },
        "item": {
          "id": "fd4ee04e-c477-4890-9db9-4e2f1ae00c6e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5af27cb9-dd2d-4871-8741-96658b7d4ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacf5bce-fcf4-48f8-b729-a699cfb2a37d",
        "cursor": {
          "ref": "108cc19a-d983-4ce0-ab06-fdef14a6b62d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b3e7d4dc-2ee3-48f8-9d57-ff7c50908047"
        },
        "item": {
          "id": "cacf5bce-fcf4-48f8-b729-a699cfb2a37d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c5cf79a9-dd75-4fe1-8466-fcd77b1ed235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02e915f-8e83-4071-8e5a-cbc87e9c23ac",
        "cursor": {
          "ref": "1da78e9d-68e4-461b-9356-ca8b221fea8f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "26aeec60-5d1f-4a97-a9a3-0ab4c48c9a53"
        },
        "item": {
          "id": "c02e915f-8e83-4071-8e5a-cbc87e9c23ac",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4d805cf8-30d3-4278-af2e-1a40ecdad592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f618d747-78df-42fd-af29-6a3ab6f9f5b7",
        "cursor": {
          "ref": "576eaaa8-4ad0-4d33-b6fe-2e660c7d6c87",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0d18c2ca-6e00-45c5-b74f-60308c5f5235"
        },
        "item": {
          "id": "f618d747-78df-42fd-af29-6a3ab6f9f5b7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "69b43342-ac1b-4253-baac-abd32b999980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808a80b5-ae76-4893-9f39-67a427786973",
        "cursor": {
          "ref": "a3252425-fa69-42e9-b0e1-144b65d15c45",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "42e01315-59d1-4022-b049-3526ebc15450"
        },
        "item": {
          "id": "808a80b5-ae76-4893-9f39-67a427786973",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "04a5083c-12d6-46ea-a10b-9328a12e0034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a04114c-a367-4ce2-98be-1dba0d18ef53",
        "cursor": {
          "ref": "f40b3888-8efd-4ad3-8d63-74dfba9964db",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "20a1fd84-d9b3-4441-8ba5-cbf97a048a8e"
        },
        "item": {
          "id": "3a04114c-a367-4ce2-98be-1dba0d18ef53",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "82e0cbf1-8df0-452e-b381-33419db8ea26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb2940b-c466-4048-bbb2-cc2f3df49315",
        "cursor": {
          "ref": "7f776086-504d-493a-8050-7ae23dc72381",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1594f255-5619-4264-972e-cae2808cd141"
        },
        "item": {
          "id": "ebb2940b-c466-4048-bbb2-cc2f3df49315",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6433864f-159e-43af-a980-ea21ff5f8c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ce37d7-9a45-4697-a9f2-d9bf1fa4c94b",
        "cursor": {
          "ref": "a5a7d047-83c4-4e75-aec4-3860b5830e03",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d673de47-b014-4901-89c1-beb36a6600ac"
        },
        "item": {
          "id": "64ce37d7-9a45-4697-a9f2-d9bf1fa4c94b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "514cbc9d-74e6-4b80-b8ca-d578e4a28b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12175885-209a-442f-858c-ae9902608569",
        "cursor": {
          "ref": "dff842a5-e53e-413d-a37f-6e69b3cdeca4",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0bf2274b-f50f-404c-81bf-271be220dd5b"
        },
        "item": {
          "id": "12175885-209a-442f-858c-ae9902608569",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "254d71f7-d17d-4ab6-94bc-cb0401ce9885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023cd4ad-8f95-41f5-b532-3250059d78cd",
        "cursor": {
          "ref": "8b56d52e-55d8-418a-b7e5-31410f824045",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "cfb0883b-e3d9-4473-9d9d-41e96db6f4b4"
        },
        "item": {
          "id": "023cd4ad-8f95-41f5-b532-3250059d78cd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "170c5495-cde2-4611-8b1a-4c51682fdf65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac26898-6d26-4bdb-91a9-771920cbfdee",
        "cursor": {
          "ref": "0b2acfab-38c7-4c21-8d68-3eac790775b8",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4f819f94-9450-4ade-be51-88295f95f559"
        },
        "item": {
          "id": "aac26898-6d26-4bdb-91a9-771920cbfdee",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ff138124-3619-4048-9541-e75da208f755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a4954b-a00d-423e-835d-c72ada45d461",
        "cursor": {
          "ref": "8cf8848f-4fb6-4405-9c0c-dad74bf23e4b",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b5970f77-a68c-4f55-8dca-e76f56957c87"
        },
        "item": {
          "id": "a8a4954b-a00d-423e-835d-c72ada45d461",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "36228c62-7620-41e4-b5cf-2472ef67939e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1171d1c-8211-4385-8302-041f9e14b92f",
        "cursor": {
          "ref": "25b669ce-7ce1-4873-a5e8-4a567c887df3",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "00e3deea-92ed-49cb-9368-8ea6f7e0d922"
        },
        "item": {
          "id": "f1171d1c-8211-4385-8302-041f9e14b92f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "251d29ac-310e-41a4-b3f2-64edfe64bddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d950c9b-56bd-4e56-8b44-9f8c3183ead7",
        "cursor": {
          "ref": "6bb49bdf-b4ab-4103-9291-eb638f96b4a3",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0e608445-a580-4ba1-b14c-18818e50d08f"
        },
        "item": {
          "id": "7d950c9b-56bd-4e56-8b44-9f8c3183ead7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9299fdd9-e9b7-4441-9b20-97b036056692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62b7433-d994-42d0-8f9d-f6c8d283dd4d",
        "cursor": {
          "ref": "1f5c3f36-44cc-4b11-998c-1f6a1b556c60",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "12cd9565-18e9-473d-8f73-7793694a06c2"
        },
        "item": {
          "id": "f62b7433-d994-42d0-8f9d-f6c8d283dd4d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a539dd8b-7619-4ea7-adc2-766b8a3cf240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f161627-caff-4b81-96e6-e5fdb232f6b9",
        "cursor": {
          "ref": "1276e5cf-9273-4ff2-8b54-8a1bcc5fe7a8",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "95a79584-9f2d-49a9-a834-ab59e1835d57"
        },
        "item": {
          "id": "0f161627-caff-4b81-96e6-e5fdb232f6b9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "554d005a-dfb1-42f0-b48c-194f2ae6050a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017cf6a9-344f-42c6-acdb-dc5d5c8f5621",
        "cursor": {
          "ref": "ce5c93cf-1161-4dee-9fff-ed0d5b1c1112",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "44e53b1d-9d58-4ec0-bfad-335c70fd1cd6"
        },
        "item": {
          "id": "017cf6a9-344f-42c6-acdb-dc5d5c8f5621",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "97dacfc8-0aeb-4372-8025-34a07e990246",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743e0866-0825-479d-adc5-1f863ea1a4af",
        "cursor": {
          "ref": "988b076d-4f30-4e95-8bc7-ea26af791f11",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4c11e3fd-0a70-4c63-b354-43446ceb12d6"
        },
        "item": {
          "id": "743e0866-0825-479d-adc5-1f863ea1a4af",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0da4af5f-c3ab-416d-b3f8-7e8a51ed8078",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "198ba6eb-0996-4bb4-9712-e59e69637289",
        "cursor": {
          "ref": "9360ef49-eec3-471c-ac24-a7b28e3f60e6",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0c94d0f8-9bb0-4337-a82f-c583d502144e"
        },
        "item": {
          "id": "198ba6eb-0996-4bb4-9712-e59e69637289",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0be399e3-8dac-47f0-91e2-d25eb16ca221",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3c0ad5-6595-4d27-b858-ebd1c9836883",
        "cursor": {
          "ref": "1aeee2bc-2045-412b-8729-0d6fd5c6cde2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d6210ccf-7281-4629-a1ba-574a91fba74a"
        },
        "item": {
          "id": "bb3c0ad5-6595-4d27-b858-ebd1c9836883",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e2b32e50-f40b-4922-9b52-3be3aab38556",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b051ec40-add9-4fe1-a812-75810ef6b0b4",
        "cursor": {
          "ref": "1c0ffba9-55ec-47a2-8d35-b642cf16e871",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "257a41da-6f07-4ac3-a968-4684bfc828cb"
        },
        "item": {
          "id": "b051ec40-add9-4fe1-a812-75810ef6b0b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b07960af-5dfb-4a8d-862c-fa3dacd13e1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b051ec40-add9-4fe1-a812-75810ef6b0b4",
        "cursor": {
          "ref": "1c0ffba9-55ec-47a2-8d35-b642cf16e871",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "257a41da-6f07-4ac3-a968-4684bfc828cb"
        },
        "item": {
          "id": "b051ec40-add9-4fe1-a812-75810ef6b0b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b07960af-5dfb-4a8d-862c-fa3dacd13e1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393b9124-c187-40ec-948a-985659e70bc4",
        "cursor": {
          "ref": "e253a7c6-1654-42f3-bfaf-45131e3ebf68",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7066539c-6dfe-4f3d-924c-72a569622f0b"
        },
        "item": {
          "id": "393b9124-c187-40ec-948a-985659e70bc4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3692fd8f-a9b8-4d17-9d0d-6901d3c68890",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05df8a74-74ca-4c58-adad-7b16a87a09b6",
        "cursor": {
          "ref": "bda59e4c-3291-49f1-8ca1-3095b2c31387",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "3a57ff00-c082-424b-ba30-8e1b89d66d80"
        },
        "item": {
          "id": "05df8a74-74ca-4c58-adad-7b16a87a09b6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fee45a32-fcdc-4d77-b143-cdd5eb632c7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}