{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6ed7929f-dde3-4df4-aad7-fe4c461bcc96",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8a296f34-e2bd-4eb2-9b2e-49c7c5243428",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d1cd46b-f407-4ff5-92e4-2283e777045c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5372a2ec-2ff1-4e69-9109-8a6a7da68724"
                }
              }
            ]
          },
          {
            "id": "b440035a-e3d3-46d6-80ba-d9ca534934e2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9d9c686-3b51-4cdf-be3b-91d923ac6818",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8348e05e-b306-44ab-b744-300d0e6b5845"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f6f26a9d-4ced-4efb-9c52-52c9a4887d5c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4061972d-15a4-4174-8ba8-051beb680663",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73975626-d303-4d3a-a90a-e0ae3e5fb08f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "480aebf7-fcc8-4bd0-8dbc-e96bd292aef0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d98b8375-b7f5-49ca-96ec-c6d1027d41de"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "deef3128-7e7e-4517-9f2e-56fc30c99093",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5fb455c-6c57-4f48-85fe-984c072d884b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f22e2090-795f-416d-988c-1911a1f226ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "527ebec1-b275-4b7f-a500-88c230b008c8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39ab465a-ff8a-45ef-9388-65f90dd2a7ef",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6b76dc9c-a89a-430e-8897-19d0b1345889"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "297af4de-c1e6-4de6-b5d4-70822ed84de8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6dbf257-ead7-4da8-8dff-e8b51aae5df7"
            }
          }
        ]
      },
      {
        "id": "0008d8bd-2614-4956-961b-58f24ada065c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0ec48343-bb12-410e-8acc-e2e0fd43891b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d2cc248-55f3-4b4a-b25f-6b2437db7c11",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a0c32998-90b8-4e62-9ed3-b75fac58fe48",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c6bc6a-1098-4d2f-a595-9b9c8acea056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f8bcb3f-c21a-491e-bc28-0173bc8b927d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ba3475-59b3-468b-ad3c-fb9cf4f945af",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa74f46-6907-4b25-809e-fe9ccdfabd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a520a16-de61-4327-bf69-840d204512b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac92465-0806-440d-8eb3-578158dcad28",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc4a50d-0f90-456e-b41f-df59cac20a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5ddf757-b88c-4ff7-b9b2-5141e3d4f181"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8d08998c-114a-4b0e-859c-8ffaa5d5c93d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80eaaaf1-ee09-40a0-8d31-f8955b399dda",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4d0895-b93b-40ed-a396-3f993aee6833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62c67e59-7375-469e-871c-a0d438f11f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770d1a98-726f-4b4e-a4c5-ff3a578dafd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2121036c-b8ea-46a6-a3a9-004949b11bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0029146a-3dd1-498d-80b8-c86970446859",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde7468c-4147-4581-9114-b6074c72284d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f58a66b8-9187-4e60-a51c-d742c74fffca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1138760e-ae36-496e-8213-502f95321700",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a1126488-9151-4925-9fd0-754d53c45f86"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c7358404-c1ad-45db-a628-31cb45706d18",
            "name": "Positive Testing",
            "item": [
              {
                "id": "244c809d-d142-4258-acc9-9e6c61897d17",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "639c85ee-1e0a-4b96-99b9-9698fc200663",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e32e4d7e-3c23-4793-91cc-69d5d26dc9dc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec4987e2-1f20-4e8b-97f0-25e2f9e14ed9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "3ebfe3f8-aea4-4cfc-bccb-18fffd95b9fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "100a71a7-3b61-4261-9b99-750543a4d082",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ac0b2c3-cbb8-4d1a-be73-40c5c63b4d84"
            }
          }
        ]
      },
      {
        "id": "50b2fe6c-3661-413e-acd8-b1e54164ff3c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fb6c055f-f03d-4bd1-8292-de12317d721c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fcacbf0f-24b3-4051-9ce3-2a2d09e9d618",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f4cf89ba-1274-404b-9bc9-914dff1b1bf0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da244557-11fc-415f-ac83-254f7a104456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e302e71-5dec-4771-a883-1520deba8a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072af9b3-b53d-4041-a7cb-7e656ff5178b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7a14ba0-72af-42d6-a655-b13a7b8133e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ab95fd-7255-4220-9cf1-64f40e7cc6ff",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4e70c8-eabb-4434-bec7-8239f9caca94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183275a0-df17-4038-bd15-a406b0a2a759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddda165-0831-4650-b64f-88314379d35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f6a6520-d6aa-433a-830e-88b26345ae22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322f0773-205a-4b41-8a96-60690a008618",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8fb090-0ecb-403b-8ae4-7c4f1a0400a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3daf55-ab06-4ed3-abf8-ce7fe367d15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adf3e82-404b-4f30-9330-3e4d879976cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f95e8f8a-fe9f-4caa-8dae-202400b00639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d4dbfa-a5f8-45ce-8cac-1da5c3cc42c7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafa4c20-cdd3-4ffd-827c-8caadf4c620d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8ce748-86ae-4511-8ce9-69ce95381730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0775b1cd-dd71-4f31-90bd-df4fb67782e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc219bb1-9c7e-4624-b837-fff2d855fa58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b79445-3ff2-47ba-9642-2983cde271d5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8be3145-3d7f-4212-a7c9-9ba3d0c782c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afca7ba7-2148-4e68-b934-85e9c9cc55c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66a8c00-e28a-40dc-a308-69e7ef1457c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0c759c3-e4a7-4da2-aad7-01255d24db4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2231c538-2773-42ad-8f33-ecbc9b474f02",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7559415b-c096-4cd4-b63c-5c633239cf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8af3fc-d0f5-475d-a695-e7f302584bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dda78dc-fbf2-43bb-807a-eb2b59ddb799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15783f7e-6a33-4a43-b616-3cf3fc756289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7b678f-38bf-4571-997a-5e8b7f1a8ee8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76af86e7-0a04-462e-a7dc-95b4cc0b3b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c256e99e-f58c-4d74-9a09-c3c263fd15f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e938e91c-547c-44bd-b384-b890a5ad44e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0c6aaa2-e9bb-4859-b875-d57e8a1e627c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08dc50e-0d97-4856-9f65-11ae72465a88",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07e5cbd-7d28-4c28-8cc7-c1257ebc857c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91795ff2-2d8c-4c8f-93a7-8580357fa7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0274134-4baa-4166-bf63-96405a2e20fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3f8d5dd-fa14-4c57-9834-8b0ce2861fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137f6501-fcbe-4d06-87d8-e41d432824de",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcec36ae-05a7-478b-b0fd-8e439008d7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb38d559-bce1-4b89-b3dc-795655b467ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33b4343-0754-40ad-9c79-5b9680b959e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5245610-b436-4578-bb23-a2feeedf1dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75285917-2fe3-4b28-b78c-b04f92ee01e0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7730b352-7c90-4254-8ebe-3f51f4994b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b7ed6b-1e4d-41f2-b751-477ec181f9fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa140b5-7e6c-4a63-9bc5-46768eb2b9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3720ac3d-7276-4def-a27d-16dcabc25a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afba8b7a-5619-4704-9e50-9717d4ab1b4b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03da5b7f-8d5d-41be-9cd9-1127ce10cb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4999cbde-9caf-4ce3-9172-dec7604c20a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b58ec80-67d8-41e1-84bc-907adb46b46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bfff9c8-f634-4274-8721-d1a262052a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded51daa-3cae-46d5-bb80-db40a5b93d72",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee2c5b9-322e-452e-8ea4-665532f56fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03235b84-6849-48e1-b04d-7827a0d182d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a053de02-e630-441f-bcee-48fa5c9613ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c42c0d4-b7a5-487a-8f58-08a62d9d4d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154d678b-719f-4187-8871-965d71399a9d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4004bb89-ee27-426e-be93-658d84c70317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df869e17-9f22-4d53-a807-8e92616119db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d95cf13-3b71-43a4-95bf-629a577eb9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba06b280-de71-4db2-9c4a-24bb4229567c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906ee912-4ef4-4a90-b52c-d952afb6a484",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956d337a-11c4-4c23-be42-5b9f45422cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72271d1d-119b-493f-9188-feeff249f0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b59b03-d14b-4e96-a920-6dd30e6d72ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bc014b5-d52c-4cad-9ce1-2b1e9c843bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb3542b-d2b7-4168-8396-20627c235a92",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570f30ca-cb19-4bb3-bd5e-0cce405af29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0b367b-9ac0-4f9e-91f2-142dc465a297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f9e23d-2ff6-4baa-90f7-0804c0f69be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "912dae53-3695-480b-854a-889e231ff99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a002a9-42ff-4507-ab93-dd69b9060813",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939d78a4-1fc5-4f95-9c5b-e9746f5628d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd78dcf5-a343-40e8-bfbb-b740ad702a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010d0ad3-1542-4f3b-9c7f-3d5089680fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "162bc8ae-30f4-41f1-be46-d6c085c900df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afbd542-0e4c-4790-b7c3-d04a55127be0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202c35ac-fda8-4779-90d5-1734eb903bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7bad002-d6d8-4814-9ce6-4a1abc46003a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02398232-b0ad-46c1-9eb2-008957ffdc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a1d40fa-ec85-4db3-acb1-45f8dc2aa652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d753bdd0-fbb1-48fa-9ca4-abc3483c0b67",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740ef3fe-2aa7-4e45-89df-50474c450640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d708d8-0a2d-463d-bb82-4acd6ae3b9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143fa4f3-8fac-4591-986f-454d4b62e7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d91ac6-6a26-4484-afc2-8830a79bff93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e4d05e-7e89-4cbe-9002-9d7ff8f7295f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a7e62d-ffd8-4ce1-9dfd-35452b9e6885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad60cb3-8ba8-4876-a714-73d10541b595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b234f90-dad8-4236-9436-a1f6a47e232a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c017fac-e6fa-4c56-9a92-24e66d96fe03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8167e92c-2a45-4a2d-92e0-d0d33466edec",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9db15a0-760f-468c-821a-671475b7e70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b97bd0-9d16-49eb-bfbd-250149f22789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c0a37f-7dfe-4da4-bfef-180185b79ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6123f422-c189-4885-8811-1f8035907c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bc7214-ae9a-46f4-81da-9e453149526c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f00d76-e28e-4a88-8806-e72ed0ceb0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e4bd6b-9772-46c8-a654-0d0e1fd6d10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9627cad3-ecd1-4ab7-8e56-c4af043a543c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0fef33-2eb9-43ad-a607-09bd8dd7d94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20be50d1-3b3f-42ed-8d43-d103241dc293",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3433f2c-bd37-4eee-a489-7dcc47749cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28fa7985-fba9-4b50-9382-150bd4bbd86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85b3d0c-3c85-4572-8e5d-45af835faf34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18c9c704-343f-4274-8c67-8c696a78881f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5515789-dc7b-4a34-829a-93f39604f018",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdddc2f-34ff-4731-bbdb-8f552acfa254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5661e1e9-82fc-4e7c-81ab-2a62bc873e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b77835-5c05-4784-be00-1de43cd034aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10e31d92-8081-4ccc-afe1-818b78a42286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa44cd2-96ea-40b5-b9b9-533d948b31ee",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fb0bdc-ea4a-4aec-b4e3-ed54cb641034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f878bc-b399-49e4-b1c0-932470b0749d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1bb4a2-6c01-4434-a7df-289f3425d52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "24516138-a575-43f5-88fe-eb1039a967ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add7d836-b3d2-44a8-a9d2-0bf5f73788f7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ba5953-da00-48e4-9690-5439812528e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d190fb5-923f-41cb-965c-9ed4e17af2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd91baeb-c6fa-43f4-986a-4001b323ea3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "374db74a-b807-44d1-8347-3d1588547a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f4fdfb-5c73-41e2-9ad2-112a7e85b43b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e12c93-40ae-4b69-a328-43def45ef798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd897d91-a003-489c-b518-42a7ac009e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9685f8aa-f250-4028-a5dc-b991cfff6818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8375fab-16c9-41de-865f-fb3113239bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0393f6c-e1b0-40ef-9fa8-676b906cc30c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b79c28-0022-417b-ad01-c092d3c0eb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2ac859-0afa-40a9-94e6-f4e28f90e3f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42004222-163d-4668-943f-e40525bfeac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf5a38b-4929-4e60-a6de-e1d47dced029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85448881-3534-47de-a6d0-4f0fdd6f6526",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4077610-eae5-40b9-8c3c-f8073704989c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a84444-a22c-4102-aa27-9f21e190c6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e2ead3-fe0f-4952-a79e-c3800c7d60b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6669cda5-fa3c-4526-ba3b-30245775056b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8093e9b-1615-4d50-80f1-82268545faa0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0e66d5-cd70-41c3-b53e-ee32309dc2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a21aea-07b8-4601-a081-24e44fcf7878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0373d50-eb94-4fc2-8290-0a947ebba06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15a7ee5d-3489-42e2-a586-9a9eb08ad18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e5787f-3919-46c9-a560-7e03fcfec94d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ac5686-bf74-4360-88dc-41a3415392e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c053df-381a-4e6c-baf6-a621c49a6df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9e6200-88c4-4688-a013-febb2f0816c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9b2885-733a-4298-aea8-96da3f05b5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4107860a-6b01-47aa-9ee2-3ae3dbbea2f2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d78165d-271e-45eb-bf71-5cf1d1fcaac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7075ddce-e8b8-434d-999d-e46a4471f467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2216301d-3456-4cf7-b323-627ddce0c660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41e1a981-00d8-48ae-a5b5-86957e4dd568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828c1918-5262-4c5a-9527-97babb231645",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6c790b-13ff-4d4c-ac3b-55d327cef229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9d3e8f-ad57-4aec-8354-f1fc324a551f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e214adb-64e9-4c9f-9aff-8a088f19347c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "359a8717-0ed4-4052-bc5f-00bdaba7f1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47739869-a0fd-429d-82da-78581d83d8bb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e079b33-0073-4aa8-bbca-92eff250ac24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64acf2e-49f0-4206-a636-2edc5e727970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76ab053-1ab6-4350-bee3-ba4f295f000b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e10d569-2f95-45e1-a138-0aae27761072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5936d0-de78-4085-a4a4-b9ad6c602e2c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086cdc63-800c-41f8-bd77-c2844fb0356e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4adf47-c28f-4790-a756-1e599561fc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c410ff1-6946-4499-bc57-839a6565b5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "460d21af-3a18-49cb-9238-ac51e367f47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a759680-118e-439b-b857-68ae51d026a8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1400a2-4327-497e-9a16-2e20f8dfd759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249ecb4f-731c-460c-8aae-c93edff89b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6970bd6a-d257-4647-8113-78d4587d1b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "05461216-6904-439d-b988-186544cc50be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8c074b-7245-4e8d-8e7e-8f8b08434bc7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259db1e5-95fd-4c2d-8795-ebe4e7ebf657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1167ffb-ea07-413c-a8af-133c2bcbf1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c66cf3a-4ceb-4e97-b40e-69a450170cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2155ac35-6755-4341-bb86-5b096fbbc7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada03f64-3ab3-49fa-8b78-e38dfc05ece7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cef3852-923e-45aa-bc1b-fa554fc26283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f14e88-fbae-46ad-a673-c4bd7e0afbb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36a75a4-e138-4722-829c-9e1b8ecb680e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc9bb24-e273-4596-85e1-56c2b9c09944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6eb80d-9163-4cc6-ae01-32710185bb4d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9b9f43-2681-4aa1-9ca3-4530aa10ebfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b7a6e6-b366-4754-91c0-c6315230935b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3653d7-0b11-46fd-92ff-d9ffd2a145e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "acb8bc0d-e0d6-4ded-a2c4-2036015474a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7504d1e-6cf3-4354-af0c-49e946bb40f8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9bf16e-20c1-4e1c-ab0d-c59c8c6b1456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185cb714-843e-460b-b1b2-01c681a97ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bc7752-e495-46cd-85b2-31ee7456e7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9646f6f-a64f-4e4f-854b-2316ec375a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a49f786-255f-47c9-826f-9a1b76b71262",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b7df22-7307-46c8-93d3-4fabd9600c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb349b84-5089-4388-80a2-196aec591f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16fbe4b-0119-479a-a871-88bd0ec5d62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c55bbef2-72f2-4a6b-af7a-392c5c3f7074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e0a3c6-b519-4670-896d-b104be761eef",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac684107-6fa0-47f1-b439-98b318f6541c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe26d75-eca4-4029-8880-140b03fe34b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b25e7de-fb46-4857-bbbf-fcd1e93a544d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "50553880-2dac-4027-92f8-9287fdb9071e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a636db2-05d6-443d-9c3c-911121a1df5a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c29b067-4aa1-48ac-9532-e96cfd2024c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185453da-b375-475e-9972-03dec379f6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826d45c5-d8a3-46ae-8f4b-3a61859e8d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0302f048-c777-476e-8a32-7e7d15e30f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b4a423-685c-4eef-8405-65956a44a4bc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b4608e-fa88-481c-9e56-14129d4f5dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65019cf5-f76f-4811-bdbc-0093c3356860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f0b4cf-87c0-428b-936e-4dbd9281b5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "20a9f293-344b-4382-99e7-76ecfdafea5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69e8296-1779-4bab-af60-e9dc311cf0cf",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d772eeac-cd85-421b-b953-c0efa2892c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495dd19f-f846-4712-a314-9334b4952694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4127aeaf-4315-4ab7-b56b-88966d18ab68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6691e10-43f7-420d-9c35-c405977b1966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defcb04d-f976-4a90-a325-d424c223291e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4940e7-aa05-41e4-ba52-50b9e98020b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3bcae9-b817-4b4c-9c77-0812c5fa7db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99b2ec3-a16a-4144-963c-a08de13efe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "294dc678-c2a8-4b95-b66f-c94cfd92f471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd53ec5-a548-426d-990d-165bc9360b9f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfd28ac-e78a-4a16-9f8e-9fd4238685cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa91a51-8dcc-4022-ac01-55ae22c48f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abd7776-d1be-440f-ac7f-959bdb5165c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1502b50-d23e-4678-bc61-7e3f75137f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dec80e7-4963-43e3-a1cb-c96559aad6ee",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b926d89-bf2a-408a-b6df-fcbec7badda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076209fe-8cf3-4d88-9a61-45dca4e40814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13024fef-40b4-44d8-87bb-bfec89969e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc78b5bc-ac00-4e5c-b785-cdf03075d6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7aa5d87-a482-4ad3-9c85-01accce9c2c8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293b52d8-3684-4caf-b695-d499d9451af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e1236d-fe18-4dad-9eb1-1fb5e5cd3376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6557e1e-81be-4c83-9a9d-cf0d08c05433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1457b0b9-d43e-4c6b-bdbf-7f1569def27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b032c5c-d5ca-4862-824a-3f4ebeebb64d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7808c6c0-2a67-43ef-9f56-372c92cbff29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2130225f-e246-4946-832b-c5833678c352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b976c316-30f8-4d2b-9408-ed00db5cc263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e382694-db8f-4d91-a5a6-32c909dd5e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ed8d81-0b1b-4fb8-a569-f803ed980bfb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82dfa23-5ab9-4b88-be1d-28e42725a495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb30a714-92f8-4655-a55e-b8e04b286da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfbdfc9-f8c4-4811-a1cb-778c08791a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b079bdd-1451-4e8e-a6ce-0db4d7fd99d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3385be0-5f11-4e28-a829-89c8f8eb1ce6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec8f42c-8083-4a62-8292-e3945891666d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce3c5b9-040f-4681-a450-0496310e78c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed08814c-374a-458f-a669-186c8b6f91b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cada6e9-a335-4645-afd8-c00e1aa504d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a144c7a5-c940-4d6c-8d60-1a6db1a08b02",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2a214d-ea6e-4e1e-9584-949ef4f372ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610c38c7-105e-4326-8c56-7459e4c49c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafe505e-b244-4d04-b2f1-9b2fea7f0b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d67265d-7e3f-4a99-b840-427a50550b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8085a9-73c2-4bfa-a6f2-9dccf98c44ec",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847fbbfc-f685-4732-b00a-67d8e78ce56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a7bd92-dd92-43b7-9f21-84060a8f61df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e90bc58-439a-4bee-b550-8d54b4c5e401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf51b08-e0b5-49c8-be38-c6bb1cee7eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e60ca9-e87f-47f1-bc46-1fe31aa23d18",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27edb0c9-583b-4e0d-a295-beec7c6cdb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06bfbac-8af9-466c-aaaa-4e7298c42c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7220262-4c8f-4605-a8ef-84ae29f47f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8da79be5-a917-4605-8395-f6bb008f3655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e732e1-c708-47e4-9ca0-542de3488165",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57484e89-648c-48e1-9609-e34cd77b5ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244584d7-e6ec-4378-9b55-bc945e42d58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9c06de-b45f-4008-b16b-68e011d7570f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b350ca73-3572-4ef1-b163-b66ae423f18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d751eaff-2b43-4836-bb89-24f119be9de0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b90640f-17b1-486f-a085-4f119cd3adb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ff2cf2-444b-4b2c-9435-2a2b6ddf93e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5276841-a589-442f-94e5-e55e84368cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0c589a04-a4de-40f1-9198-6546c8157141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376ad260-88c3-46a5-8323-a2ffda70d9ce",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ddf18b-7fab-478d-a50b-961fb281387e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a89f7c9-eac4-4539-9838-ad473708eced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e6ced0-c85f-4019-af9c-cb98bb71ad6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3738c8-1550-47b3-9fd1-03b21e26301c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9167a341-da4f-47a2-b0a1-83cec8842a05",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595473d6-395e-4531-84ec-8830d2114f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d769de-d9e4-483d-89e4-a0ed32a84eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1885012-6fdb-4d3c-af03-34eeab017fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "960bc6a9-e567-4a66-9f60-55eb6c498b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889eed7d-cb65-47f0-8f33-3cec8f2fbf7f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827ac68a-dede-405c-b464-543765582790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d1b148-bf43-459f-ae33-fc598a07f8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07868ed-ef14-4be7-ba20-3f9b6333686b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c870216b-9ae7-4c1c-973e-ba5ecb6f2b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba805e3-b5a8-45f5-b322-9b8fb9a4445c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1975eb-c6d3-4b03-8771-d8bdcab09aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087364d6-2a6c-44f7-a638-c560f2f55612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d61d47-dc7b-4800-abf7-db228b50360f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "867b37fd-42e3-4480-be0d-f4f58372fe8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1bb1e8-06d4-4ef2-b670-f595cefdc28e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe290852-010b-41fa-a565-c93110d01c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d672b050-e6b7-4c90-825e-695ef9c68067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108af3f1-a5da-4e3b-a4c3-777bb86daee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cfeea2e-e8a7-4b56-8f63-a78dafbc92ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244a74bf-5461-403c-bee4-dfbdd5597904",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a26ac9d-0484-42a3-9b2d-7a89649346fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be06ebe-789f-49e3-871d-b6500b389373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebc768d-4207-43e4-a8aa-8fb1b6c01264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe2e042-1856-44e5-9058-bf9c1ba04a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5e25a3-1a5e-464f-95a0-79839ed95f4c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03764ff4-fe3d-43cc-8c23-a474bfebb8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65eade7e-9c8f-4c73-8a02-990c3100a538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b85e02a-b457-4a56-b694-09bfbf5813bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "617dd029-138e-41cb-9d4e-b59a3c24dd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede4b9f7-4d03-4175-86ec-c26da36025a6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55c85d5-e12f-47fd-b3ca-e01b6d804a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc3d933-418a-47d9-a60f-055d567bfbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e43b1cb-3731-4c39-a640-33069ddf9c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56db325c-1ebd-4f05-b11e-9a5f6b5641fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2626da92-bf64-42cc-9056-677a0693c466",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a1fede-7817-46e7-ae4b-26a672fd4542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb8a4c8-d937-4307-8a4a-e2a67b56e53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a16ac0-df29-4f29-a145-7593f06b146e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "108a9c5a-8962-44e4-82ad-925cb64ab0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec6db9d-1441-4d7b-9986-313d6938e848",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd448be0-888d-4314-9682-5483714362c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f34a96-fb46-4576-9ffd-eaeef407736d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9f3ebd-ee03-4aa2-8db9-dcb85410f039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ad5fef-1a6b-490b-8010-c29c3749aec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2ec288-0621-4929-a9e0-8b22c261cdcb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1c6338-0e1a-4abb-a19a-0bad2c9a7ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbe9f53-0e20-407b-a823-52d608a742b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc02d9e-d1d5-482d-ab42-0ca41272cbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28c072f8-0810-4ad6-95fb-a93fca1a583d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad88791-20cf-47b4-b22f-1d3db5b46c70",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f222b9-4870-48ed-9773-c17595aef83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14f8ea1-2d1c-429e-9692-74c5a4d37299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0803cc1-436b-4550-8d45-d2597be7ecc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc2d135-b52e-46c0-92d0-8dc5f93e359c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d36638-fdc3-40a0-b00a-a8eb1268e5c3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2abe27f-08c8-41d0-b6e1-f0b77594f4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4073f02f-1401-4c85-930a-546d67019c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbf5536-171a-413e-8919-9bb2246b801a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f206f2c7-002d-410e-a973-858c5e92b5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfce621-c1c0-4d07-9370-8fc5593b9e1b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5c6258-8ac2-4b77-be13-57c4553adb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03893684-d7de-4f41-b35d-69000cb1eb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17989989-b577-4471-ac97-3c0d33094bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5953c25e-7966-4ea2-9669-ab903e2e3cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe7ac50-3808-49f6-a818-8509daf270e2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e8f03c-97e8-4fce-b2f8-22cfd8584edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1d9437-4888-44ed-8323-1195896b7375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b861c8-d63e-4f92-a4fc-91a1b14b761c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78e07b2d-c941-4665-963e-aaedfb55d526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470382cc-a351-4e67-b35c-ab5b36afb53c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf6936f-bd71-4fc2-81cc-5f1581010b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771acb73-c900-48b0-9205-d73983492311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facc7653-bc8c-47b5-897c-007ec663ac73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d53b819-7e77-4c15-8e77-d76ff3f77fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2273b6f-9130-4f47-8f5d-14bd2270fcda",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953ebbbf-9d94-4b7d-96b9-caefee1f22a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1e0694-6d71-4674-b5c9-acd8b610d49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994c10de-4926-4089-878e-ba5d2f68e9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dab7ce39-6170-4bee-9594-3eee27be019b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9a4be2-ed4b-4570-98c8-780562c465ed",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76e60d0-5e14-4f04-b3eb-6e20606e12dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15caa0e-afc9-48c9-a65b-ad11ba569d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b985e4d0-e086-4786-9d84-85c30936540a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7aa9815-3671-4221-ae88-6f64e047ff8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e7c93c-a279-4d11-9799-ae9c7037c719",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e08118-0033-460b-b515-75b79300437f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e663dd84-939b-4c07-9d90-2647334c2553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ce7fdb-a0c6-4536-b3cd-76d377b9b568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20b8b21d-e62f-451e-8165-1fc7311bdde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66096a7-4245-4bd3-9d45-7ef3c00c7bf6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af78f0b0-7871-4bb3-8e95-11b672a85c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19be8f13-12f8-4071-87b7-dc863bc45703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7512f4-4e1d-4012-8ed3-5eff96f93d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c99c249-0bab-488b-ba05-fd885cfe3992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc5fbf1-2949-41b9-af1b-18cc0ae593ee",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c15f09b-6a98-4a90-a72c-cffefcb78534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e18cb00-0b43-4454-b753-e99cf9385096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed33b2b7-03b4-49d0-88ac-9b9975f761ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aac7276-f576-4066-ab30-34ad981d033e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9119b4ac-ae77-4674-a714-d1c1baf32db2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bec2cd3-a66b-4cc7-b1b7-7491c5a198af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f4622d-b9b8-4f95-8935-c0d5d62f7978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c8150f-7005-46c4-85e1-03ec5e7a6488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3128a3fa-0f71-4f7e-8de7-39727fc53512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6452f78b-dd2c-4300-912e-83bfb756c377",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52b8908-76f6-4ebc-8858-cefc148fc141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49dfa877-1402-4fd4-b671-a271d060e03e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271bcb6c-771c-4434-a4a0-96fafd482d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15a1d9d1-50f8-45d2-9d9e-f14bdb4cafa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df1fbbf-00c3-401f-963b-25f90d2e45b3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd54769-90d4-4e42-8d27-9e5d23591208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05bbafd0-9429-4be6-9baf-d7e9f4d94566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73482289-02cf-4e30-ac63-06816d633af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53fc6615-ef8c-4a71-a7f3-83b32ff59e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2ead30-b797-4bad-a8e0-dd39b89e9177",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973922d4-f775-4139-af5b-91b5146ac78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0777f0f2-af60-4f27-8c4c-38462b6dbc17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21db1e26-65fe-4bce-be62-8ed98ffcb010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "12adf0d8-98a3-4bfd-9b58-8519304cb9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d7b44c-9665-4cd8-9ef6-6d9bedec674b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ff0c5f-8413-43fa-ae35-13d8a192d1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79b72ff-06df-4a11-a3dc-32568bfeda6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e8167d-0f5e-4983-9bec-45243a657c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2851400b-c664-4439-9724-34f30627b1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb7b642-de15-4c14-8688-920d338f5a8d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7381c25c-eb67-40ac-a4da-c54737b736fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7df696-f19c-46f2-974b-12d9611f3607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29839a86-e2fe-4cd1-909c-f29cca7fa35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e58f102c-0a79-4103-ba09-9933bf52c28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7218d878-5dc9-4d28-b51c-dbb4e8305ea2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7bb5bc-f767-4310-a927-976fa01872ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb05f31-1fac-4ec6-a916-63da5875984c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd528400-e2a8-4d17-af0c-3bf3cce12c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e24ed139-3fa0-4937-acbb-ed3db9911e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9cb3fd-6479-4b02-8c93-ae8f485e65d0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a891c15-e054-47b4-9c8b-183dbfa81343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9fae35-a19b-4bf3-9276-a16b2c1cf7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bded2d78-e27d-4dc1-84aa-0be006f4c696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7331d51a-e88e-4d78-b3dc-9c5622985708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cae342-da2a-4bfd-9999-8aacf9a31484",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e46c136-5fab-4b2f-b9a2-24af464d38ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2ee951-0b25-424f-b109-0e0fd73167d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9ad97e-b0c7-4288-a10e-cfd01158ea9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "252adeb1-250c-4721-af53-88dee7d089c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8541c990-9f27-41c3-a2fa-57f80c84b63b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98b0892-74d9-4789-933c-9e6aeef1e662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9acfd99-a0a1-4a1e-b9a4-4506404f6337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2afd8f-d212-4c0d-89ad-17860e445846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f81c19b-f9dc-4018-a31f-0dc25ece6f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5f8b9a-8bc1-4c50-8f28-31e52fce8efe",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac13af7e-e47f-4e09-92b0-4effe9cf27e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24c396d-00d7-440f-9c4b-bb68c5187178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d328ad5-fde6-49f3-aabf-dd009005876e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "05af780b-71bd-4d99-ba81-1fed9043ca80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02b117e-c6bf-4788-aaec-ec57ea4c7125",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946a0b55-6e4b-4e1a-86e9-9f5cbec9eb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f301cb-7565-40e2-ab8c-f81025578b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b766aa2-f02d-4d6a-860a-7d28390e732f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa48fb74-1ab8-4780-9daa-0f4a2e28b048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde9c7a5-b0d1-494c-b0f0-c41baa22554c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd41f332-63aa-4222-8721-562e6826d94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239b3520-a1e9-4473-a841-bb227997f5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651c58cb-d516-42b1-9723-09b6531212ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d4d641-0047-459b-9fb0-ba97c7f5b539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252a17ab-f74c-4d6d-8c01-1f1f288fdd90",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdbdbf4-7a0f-40cf-80cb-4520bfc17b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119c347c-161f-4b6e-b3ca-2600e309c972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80d27af-2559-4430-8be2-ea6f6e643148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "13983dba-bb6b-42ee-b0a3-5aa0e69df8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030d2afc-e7ab-49b9-80b0-78115ae5cc33",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5daf6ed9-86d5-4066-9cf9-ab5968c94f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "60e2d889-0786-429e-b00c-1e2308241fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be6b37b-dac5-4c9f-8def-c8aec63652e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc5b55b5-3fed-4c2f-98bc-d180fdc38bde"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bb407dd8-7d2b-4ce4-ac17-0970074ac4aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f9325822-5450-49d2-b28c-887ff031ae90",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ddbc1e-5f54-4404-82a2-e7b3015297f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d8d258d-7be9-4f19-9ed6-fe1c85713850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a99bc3-79b3-4837-a901-7abf1bef386e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11e3c99a-ba2b-47b1-bc70-8851fabe52fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055210d5-47f2-4269-9b43-a8b7b4a06757",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100814f5-0c7c-4b53-92b7-fc2cb19410ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3fdc5a4-0010-4fa3-894e-77640e3dba46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e721f8-f6d5-4aa2-913a-744f49107080",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0ae978b-cd3b-42a6-9f25-dd5df4c0cb42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6baca4fc-653f-49bb-9844-ea46e7a7854b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13e88ed0-3167-4882-b902-4f284d967502"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08eba934-0b59-402c-922d-12e97dc975e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af9f91a7-3f1c-46b4-a33b-4dc184e1ecc5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9cb0a5bf-d24b-4d48-94c6-73ee94d99b64",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d22f337-f416-48fc-a9e6-eb38f42a408e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "de31c931-f4ba-4d87-82c8-ca87ad745d26",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "30c6ef7c-059d-42c8-80cd-f0b2b2b20356"
                }
              }
            ]
          },
          {
            "id": "44322ded-2659-4f12-92ac-57911dd13760",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f8c91305-c13b-4fa0-bb32-9adbaa586651",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "488e73ae-254f-415f-8fda-2a73faebc113",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc24e7ac-791d-42e9-a467-c13534b9cc54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "631ae118-50a2-4473-bb0c-adfd6528063e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0a44e623-0992-4735-995b-b31bd6acd01b"
                    }
                  }
                ]
              },
              {
                "id": "4bbfd585-de8d-40d1-9105-75f83b003696",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77c26177-774a-4c33-a190-f592212f7180",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e160bddd-9fd1-41b9-9c90-f984f3ab9db7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32d39a09-9860-44c3-8b1a-e627e76c3351",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3c6f7f9f-4277-455d-b044-14db2cfa1c89"
                    }
                  }
                ]
              },
              {
                "id": "74995af7-395c-484c-b65f-4f1f0a6e84b3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6dcda7c-58be-4813-8638-18dd00c940e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bca1ed7e-b656-434c-89a2-51199b7c9a07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07dd3ef6-c275-4cb8-b62a-3089951a0546",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9da79190-52d3-4a60-afde-c38f91dfac8d"
                    }
                  }
                ]
              },
              {
                "id": "a43e1dbc-a576-4928-a2e0-9ac7aa12999f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f1b9dcb-3f8e-4d96-a4c3-42fabb8239ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98e7d06a-f68d-4283-9c20-416004ada6a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ba5847d-6574-41b9-9686-16986ba27db0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "82c4f635-621b-4bde-aafd-1c3ee5be7c5f"
                    }
                  }
                ]
              },
              {
                "id": "708c7942-0f16-45a8-a363-1a86c6ea3053",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "edf1a832-d125-4e07-9496-74f1992f4d79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9fc0ac10-428a-4592-9713-2ad728a4e0ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "922a2197-812d-4cc2-b906-7f34320aa458",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d25b3aa3-1346-4393-9272-efb30b3f8ddf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "431e873d-836d-4763-b1be-2c86f62d8fb9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "500a68b2-cb12-404b-a424-9d74985efe29"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "011db255-91b1-461d-8eff-efb9dcf33686",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4b01e6c-793d-4229-a934-5591f48e7173"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6133fc2e-7594-43f4-b8f2-ecad64dc8423",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e1913326-5d75-454a-b916-e3a32b0b5113"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa152d4f-ae8d-4f38-b5b6-02eb274a6930",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f929a3b5-b573-42b2-b7f7-0e33a5c4396c"
            }
          }
        ]
      },
      {
        "id": "3ba202f0-5c16-4ee1-93e5-5cd64ae63425",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "589f5746-40cd-4cb1-b1e9-35bb56052765",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ceba1a18-78ce-470e-afa0-2304593b9459",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cebef475-495f-4157-93a8-1a7893d58103",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94361b5b-5f57-4a47-8631-e16033b2364a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65369914-f6a8-4ad8-a9a7-a06f43831947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716e8879-ad6b-408c-a892-f25d85405f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "948599cf-1a8c-4ac2-8ee6-4c057ab1e4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ea86de-0d2a-4371-b0d8-c9a4e86dac26",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98801e51-1dcd-49a4-9530-1bf24e9be3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cffb9d0-98a6-453e-8c4b-0e5549ba1de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563c65f5-eb8d-45c2-919a-e4ef54906fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84fe2c02-f4a9-4b61-a358-c5210e3ca18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753524a5-c93c-4c41-b0db-d45e8991785a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf133612-e4b2-4a87-abdc-9d4a59cf6746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692f84f4-8123-4a0e-9ef5-efaf5fcbf420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15f9121-7538-4677-adac-6967cc5f2230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "110286e7-fd88-4c24-bf6e-4d5fa4ad24ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1faa32d4-6cd4-4962-a379-b31b76a73144",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a94bdd3-60f7-4c6f-a854-4ac773245a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcafd49b-61e0-400b-9366-da5b6ec7c3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafd22d3-363f-4fa1-a642-2395a54635e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a4c31f-bd38-46b7-8104-c89c7f8b4969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a475cf-6d6a-4496-9bd8-c289a88aa4ea",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4855cd2a-2c71-4ac7-92f9-6ef26490bc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e9fb37-46ad-4deb-9412-7f69e6593393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7d645b-42bc-41dc-97c2-b5b541e256fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12cc8fba-ac55-46c1-9a5c-748e41e4ce67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d24c183-24f1-4d01-a506-d892709f84f7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d955a4-8d0d-469a-9cb1-1617a9685409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bae99de-a8a4-40cd-8dcc-0919bc521d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea7a5fd-e14c-423e-bfd3-ae0eee841223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "feec02a7-e08d-48ae-869e-4d96566b19be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8cfb5f-4c34-4728-8967-f95c78f4f76f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef94767-c3e5-4e59-8495-e06484fa16b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e46284b-9813-4589-8a90-1ef2050d8338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86588c16-be00-43be-9f90-7665d730f8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd256296-2548-45dd-90cf-98abf2a7feaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17333e09-159a-44df-8d05-1c5b8b5c5dd0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcd5235-1e5f-42a9-9c56-ca055b21b8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3628c86-622e-4f58-a89d-7cba32d17549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe932e9-c9ca-4f1f-a922-cb7a399c477d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10e8a071-2927-46bc-97a6-f2e39c3c5c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057861b3-41a1-447c-aecb-e9338e67ec81",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8035f0-445b-4785-a03d-71c4150d53f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1737a4-0cd6-4698-b66e-fb1dc0c8bb94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b03f4ef-91b5-405d-b840-b977332100e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae159b1-ad15-4041-acf2-54758d9ce142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebcfcf2-29bb-4778-8507-a1dd613f331b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41179fdb-6d53-4eb6-8fe6-cbcaef305505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8c2c93-2762-4fc4-9b99-464b1c4bcb7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a690ad0-ae85-417b-a713-7b407aa07119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31444816-381f-44bf-b948-2d041e2f3063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6624c24c-cf41-4cd7-a5bc-afeb922c1322",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba99966-5bc1-4eff-9c5f-5eb723fa7047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5a385c-281b-4218-b0e9-e63421b45bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597d8da2-f749-41b3-b9bf-6851de24f4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "07506aa1-8768-4d5d-b733-15956beceae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01dc92c0-1075-4fa6-8742-cabf2c32de20",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58e7147-05fc-49a9-b80e-f70e39711e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99defaa1-2b62-4a8d-bacc-0e3a7ca13cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2960f7c-01b2-4fa9-a1b8-b83115ac182d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "824eb425-b46b-4050-80aa-c52a1092b059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3206877b-11e0-4528-bc4b-85f643f8c6be",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9729adf-d0c0-4902-8507-d9fb4be3911a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5586531f-7080-464b-b264-742b3315f583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78dcbed-e961-4438-bee6-a5f13f005e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9c5818-5d7c-491c-8c79-2a6324551c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683304ff-3e15-4d7b-8f3c-09a4102776e9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4038e5-ce99-4d9a-a012-90b94ae00cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7afb78a-f3c0-4e10-8b8d-0b88712b7ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742b8385-762b-4613-95d3-f63898a5e9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "615c1e22-d9a8-49a4-81a8-94c48a9e0e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8beb82f-cb92-4e08-a04f-6f755146852f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9c1cbe-cca0-4a89-9b40-1f4ec56a06cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee7ec5b-8422-4c33-bee0-b981f59b6858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454c4434-b7da-4bb1-962f-13bbc7596bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2ef605-dfcb-4d05-936d-35a4842520e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5038f6-6424-43a1-b5cb-9c9e4639fb25",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c437869-ec0a-4961-a8c2-953d2ac7ad47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e08461-86f0-4454-b0cd-6829997dc922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6865a9f-53e9-47a9-bff6-0cac07b1568e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0cb083-8d2b-4f9b-af63-dd090e1440f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0f990e-8d60-447b-b48e-3f9cdd82f73f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb8a4bf-983d-4d02-8aa7-f82191fcd752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde0f4c6-9ef3-45db-8fe0-60270c96ea99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526f0998-8250-49c7-9d1b-90ac129955a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d78bd20-0f45-4ffb-a49f-4758a649fa5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87eadcd6-1326-430c-8bc0-22b21f79eb40",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f06e30-03b3-4c53-9935-972b634e8ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853ff5ca-d92c-458d-a309-3361f1a739f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1a6ab0-669f-4733-9597-abe1c0d6510d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "47326a61-48fe-4d11-8007-d4b16b397647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35347d68-5d50-42d2-afbd-34592b4840b1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1c218f-64cf-4beb-a2ce-2bbfb06269c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37fa3ec2-062d-4f58-acf3-0ab8a23ad429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad81804-4672-438c-a3d0-8406a15550d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24d47362-ebd8-4f97-8e9a-e8472007eca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54b1d30-b7c2-444b-be46-a874b8ca93a2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dd87ff-df6b-44d1-ba97-638f99ab6074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442c9069-0650-41ff-9e09-7986eccf2ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af087c7e-1d8e-4c34-ae85-5d3d1f4a2225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fed9a33-75bd-44aa-8498-37a8a5406fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bfc767-e76e-4cd4-b075-a39d266fd527",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fed62d4-2b64-4780-bd64-244ebca8b15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00579e6d-f673-4d7f-ad49-39ae9b2f0091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbf9637-eaa4-4917-991f-7c8ace50e184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de964b84-833d-4804-b6f5-988050d82231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91523455-169c-4011-b646-3c15db0a72e7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699081f2-28ef-452c-a50b-59d2e81446b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c251bfa-f9d2-46e4-b85f-a0352588d9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba844fa7-5ab5-4361-9405-03340782e380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f91226c0-bc4c-4e8c-99cc-794fbf37e144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8098b1-fdf9-4b3e-8fc5-a88700b77518",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecd4b71-41a5-46ac-b79e-f7edbf6fa2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74f9d99-b3ff-42d3-9f0d-d53bee8d4b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e35fac-b2a2-4227-a670-b8316cdaae9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95cc295f-bd41-4cc0-aab2-5c9c1f6918fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688cebe4-6c12-4ea9-a56d-291ac0e113ce",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93afda19-239c-4130-88c1-d7a8e7a26b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f611529b-495f-4d02-ba9f-2004eca7bb64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2e3d68-b840-4eea-bbd4-85a164bbeb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b398dbb6-25d6-4f61-899b-d5a0c4ea5d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c814053-98cd-4213-aa75-5f727cedf737",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee47520-6f34-489e-a491-2fdf1f31e777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f07523-66ff-424d-9162-15a2f9b3e012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001889f3-c9fe-4434-add0-1b8532ea2fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1dd5ae-c733-40ed-8fca-61c9413f4357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b467798-51e3-4a4f-892d-052c00a81c47",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99230d4d-c245-433a-88c2-0bf7e4ae41c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "370e1cd7-8107-4919-b6b7-a84e0ad8ee4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea9d90d-0686-4dc1-b489-b0091eebd1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "339da113-7714-4465-a75e-e9a258977d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0eb780-0b40-47e5-ac41-fad4f95c5ac4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547b2b8f-49c2-4f8f-898c-650b31f0bbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dbfe6e1-cba4-4ec6-bb22-2e990796e361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca4cd9c-9640-43f3-ad0c-0cf5c3043166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18ec51fc-ac91-4802-9ad3-aec8539ca111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b23d947-381b-43e3-8a05-29ae3f8a1596",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da67b7a4-4585-4ec0-b161-ea66af1ed374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72615c66-c258-47de-97f3-4e514fe4fd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6595be9-990c-47c5-a3fe-b553bbba4e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33f80051-b185-46ba-ba12-b18c4c804b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5f5d5b-9e75-4f3c-8b74-8876c2e029f7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74a35be-e2cb-4b49-a0dc-b820149b222c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67840604-890f-4318-a2bd-8cfaf403e27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d8de9f-60c2-418c-9b47-f990523a1346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a16ca8a-0a07-47c1-b80b-140aebb885f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea663f02-87b5-47ab-8aa4-cd94e02d3f67",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d6d521-4042-4480-9c78-4853ae1125da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d8d36e-ffee-4cb3-aea0-cf62d77a40ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c79ae5b-80d3-46fd-99c0-d75cb740789e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65204bca-b13e-4974-88d4-ba1e9a540c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d7a98f-d178-4860-ad43-a13a6017d374",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bdadaa-a3fc-498e-a9d0-aa4643ab6ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ec3d2a-659e-44f0-9359-8a3b389323f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a51d6b6-55cb-47bd-adb6-f97b8e13ab35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89a2074a-1668-41c5-83c0-47b857944007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7197578e-d3c3-48c3-a488-794a8c7f6578",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3ce7af-8ab8-4f26-95f1-b4a9474136d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a1ee95-ba72-4d3b-b25e-d94359739172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f28eac8-d906-41ba-b237-775b1078a23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6cab8d8-0fdd-4fed-a70d-d6302dc266b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e123ecb6-5d69-4151-b8ac-3ee8864c8cd8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8768f680-8138-45ec-8d40-c1aedb2be5e1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f309066f-cfc5-49b6-8059-52af25c2ae13",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bca6ab6b-7c6e-4164-b89f-d7c12d12007c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868e93d6-2d5c-4e0c-b057-315593e6972d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e97f1113-a09b-4568-9e96-ff6f39cf438e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f38f14-d0fa-48c1-9c82-1d3ca84f8c64",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d248ef0-bc05-4aa2-963a-3246890833e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "93c97f04-c1b1-4fb2-85d6-b20f8c784fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdbae8f-0c78-4a65-a099-396ca9280e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87225b26-58b1-4960-8a17-854eaed546ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "452b2adf-1d70-4a46-8731-e668bcdc3023",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71577e7c-efff-40a7-bf82-0e6958f28e04"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c7e19b2-837c-43be-9574-064bf70ba896",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39490e97-856e-4b23-9b3f-d56e10015cc2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "318f3914-3c15-4d87-a37a-1fc7c0c6f4b4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d656b3a5-d2d2-4c5e-aca4-685739ce5ce2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d2a1af3-fe87-4fd9-8f0b-10893110004f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8747b331-2b5a-4353-8639-d3454d56dca9"
            }
          }
        ]
      },
      {
        "id": "6e53077b-2e34-46da-9a8d-a7c57d5d95d0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2ac6170b-35a7-4535-9f64-3b19298fafdd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6c834ef-8ecd-45fb-bb36-13da6a2125f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b85c7f95-d15b-4db2-b3d1-75eb3fbb9331",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2152068-b108-41f0-a5bc-1fb66222673d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c7de7e-ffca-4f34-8b61-2ef7b9e115de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c31371-bc91-4174-991f-e05436cb12bf",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a361eaca-fdac-4388-8dd3-176779c50906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288f8e8f-7ece-43dd-8400-201a5b8dfd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4822b21d-8fb8-4de8-a9d0-5febc6efe3cd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e057501-61ed-4e86-9b37-5003b1e46eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363c9b07-a170-4fa3-8c84-c6495f5c5f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7552834f-6b1e-4178-8241-da4c6c79ea33",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d704571-28c6-4d11-a7a6-fcb540a8e7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2fe39d-201c-4b35-b5cc-adafc2e9a947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2cdcd2-4d87-4afb-a2be-e1281c7b3a75",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bae06f-f5ac-4794-8ac1-1c1453a27c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5d9f53-5159-4d5a-922d-9529e131ab40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6121f7-e8b3-42f8-bccf-a672c648d89f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a9b607-465d-42cd-9e8e-e78d37f4e89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc720522-e497-4893-aa87-a94db584eae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0e677e-7f2c-46ac-914c-0b410dd599ee",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fc33f9-ed8e-4d63-b675-39a5f079fdb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5728159f-ff9c-43fa-bfe6-181b6d8264f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cdec1f-d2c7-4698-a6fb-02000ee27b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c466405-8f3f-4ece-b594-bc8cd1dc96a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cdd2db-6709-4cc9-bcea-ced61fbeac90",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb07caf-b704-402b-9078-bda1d84113e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fa12c9b-128a-4fa4-838a-6eaaa7f73ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f881e7c9-1a68-4d51-bb5d-8cdc9909cb17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a02334f-4c55-4189-b9b6-1786cde233af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3924181b-963e-42cd-a503-135bab2eb150",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd077b9-75f3-40c4-967b-91cd2c22d8c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b29ce900-5153-432f-8ac5-99d62fb5335e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e469558-1ae2-4b17-881f-7a58d3300d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4b59dd-d6f0-4d96-b72e-e034c1011f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be38c568-2118-429d-8de9-9630dc5004ed",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43020b0d-7e1d-4e88-9817-7dbe06f35ed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87302a08-b081-4c54-b4e8-b5a9e84fa52e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0459424-ef67-43f0-8e7d-d0c96af76a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2462cc44-10e6-49f9-acec-537916ddbd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7733dc73-3326-40a9-b3c1-e01bfecd4df7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306a917d-69e0-4f9b-b61a-93413ba3ba95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c623cf5d-b0b6-49a3-8009-a752350473e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26069611-d8fd-4e39-b124-3c4c72ce8edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95de60a9-560e-4549-b9c7-367ca5f5e90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f3dc6f-6f5c-48fc-91b8-212ff5f30ad1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d82e12-a521-4d96-ae49-ad8019ece5cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c8cba9-3f6f-4ed6-bfd5-0050c4493c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4066418f-bad9-408a-a5d1-eb0e012f2f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2951035-98a7-46e3-85eb-b5116e0e477a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d539a29-d86f-4171-9473-9ba06064eefd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dd4d5f-046e-46d9-b106-f4f8adeb23d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3db6351d-6540-4858-bed7-4b83de123d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2afff1-609b-49ac-b1f7-0a500fe2df47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a76c87b-d09c-40ca-a33a-02c24a1ef880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e0fc79-732c-451b-8dc8-769829430ff4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c038566e-f668-4a34-b75a-0480eec16048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0164800-9938-44fb-a081-eca483442409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b02d81-697e-4ad5-bafe-3bc9a735cdce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab86d2b-f5f1-446b-8f5a-5a86699457a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc97a481-fb30-42ee-b716-edb23105bfc7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449d106b-b723-44c2-a9dd-64c6ae32c03f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0399f354-839e-4491-9286-8e42e3954284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83693a9-667f-4a0e-bf5a-107160eeed8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2395c3-d10d-4cc2-b5bf-11c6bbd5c420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22af01e-6a52-44bc-8ba4-2ee6a60fe944",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2c9284-9e5c-4767-a920-aad89d094321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a82dd8b8-971d-446f-bee5-4f722e2b7410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e6a3fa-7acd-45d6-8506-69a4ad9521f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b6d696-6557-40de-a68d-987cabded817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c605ef5-1879-4219-a5e2-9613dc144aab",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3070c9-b0a1-44d3-8c91-7257ce5ddc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98c4480-b30d-4636-8e66-ad9e59cf1d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2035ee-7004-451e-a6bb-e29a290aaec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b0276a-9c49-426d-9549-113d1209c030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9279c9d9-b23d-4b7c-a99c-991db18027de",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55ef574-59f5-497c-ab95-8296b40f2111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af0adcc-a027-48ca-945b-c0a87a8810ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1024fff-d538-4f56-8ce4-067250153396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12425c6d-7872-46af-99ae-ca5865ca22e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e960bc-2298-4e29-8a27-c18f132142c4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a08f90f-5d57-4958-bd11-a286e00cdf2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3740fcd-87fe-46b2-b32c-bf39c85b46f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fee9a15-f8ae-4ae0-bc7d-c3173abd9c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f28705-05eb-4ea2-b75e-396aa8b1d557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debf6c62-4244-4af2-83ee-2c0b3c3de4da",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ea72f4-0cab-4ca8-a793-d75f84640b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab32719d-6107-4885-adcd-ad9d75674045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d858616-0266-4b4c-b328-705df8e82359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf22d59-7138-408f-a0dc-43de94528549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32533c3c-c37f-48ca-b40d-bd77fbd96de6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9365e706-2245-4ca7-9527-6d8a2d13c526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6544feb0-3e4c-4c43-8399-3524b62272b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7bd9a5-4cb9-4310-a865-a4e659e4d2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90fbc19-8758-474c-ac48-2387e3366d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70c08f5-af79-4b54-8fa1-b12e10cce3e1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2440001d-bac0-46fd-a6a1-b50caca5d1f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad663cf-c21a-49f2-93dd-501aa191557f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3920d683-fe01-413e-a766-42b5b8c72ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2045b7-c706-4cea-b6f9-60c8e0f6c3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd034970-91c4-45f8-bd26-a304cfbd024d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98932145-ae67-4c14-b6fc-e14da6ad734e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a0b0e5-8fba-41cc-8e41-64fc9e9e70d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b590ee33-c55a-43da-be17-9b845e2afaab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00b528b-7cbe-46d1-a0ab-1087aabbf902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457a101c-4e4b-478f-8919-59339fbc59be",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf04f46d-406f-4afa-8e63-d01673cc6d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "243a5450-6eef-4978-9663-671a93cf75f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a687776-ca26-41e6-93d2-0d6fb3d5ee92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97328086-80f9-4493-9fbd-81a54da08e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24808a57-856e-4b29-aa3f-24b76a77d189",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed41b25-c528-48cf-9ddd-341af944d4af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "044e74bc-eed9-442c-a519-5e2277360fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce6b96a-ece8-468f-be2f-b14c04272374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82508af0-cf43-4f62-b8d7-7889fb0f51a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4168ce89-7e8a-483b-a037-2914b75c5e0f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26a8dd4-6a03-4fd7-8caa-4718b9088913",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "333b4a25-551d-40a3-86f7-fc5a4f513723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09566a54-1d91-4bca-9f04-2d59e08d8b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada15327-9a2f-41ad-90d8-62b355299712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d029abe-3c21-4277-8ffd-45e6deb8cc20",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad2b20a-7ceb-4b32-93cc-1651e8f12e6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cf18ef0-94bb-4551-94c2-16ef786caca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57159791-823c-4033-93e6-a4b850752426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ed8e6e-a37b-4eb7-99a7-9833bcebf770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2385be-761b-4d4d-80fe-4bbe91ce39ba",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe12352-753a-4643-a537-328ede226553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9b5e8c-26a0-48c1-928f-dba76fbf7ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996bd088-fcb0-49a2-886c-43d64a421e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63593e29-5059-48a4-9a02-b227238a03c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080b2b83-7592-43ae-90b6-efb5cb520fe7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e75035d-aeb1-45db-9c86-6d78ed438efd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ead47be-1ef4-4598-8ce4-dbf021ceb7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab20906-f261-49cc-a535-97f5e414130d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aeb8cc2-52b7-40ce-98f8-22308ec91345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98156319-f427-4ce3-948a-746f39bb2adf",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ece78e-4b2d-48e3-a74b-fe18f295ba16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0847a408-3796-4c4c-b561-16afb49e6846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "628125ab-3dc3-48ba-a529-fab10594a44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb92097-725b-4d73-b728-6d9df3a36cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ab6712-e54a-4b4e-b41e-f60e316494c5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81725e70-f93d-4d91-8a6e-d9c67fdcedf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5982356c-1ded-46a6-a94e-55e87ddb46fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72578a1-a68f-4160-bb1f-286988b84b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62209ae-f6bd-4d82-89d2-424f43bd5e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a51aa9c-edf2-49e9-b39c-495c920ba33c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bffb99-2742-4a92-bf2a-e11f516e76d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbed3049-afd2-4030-9388-4ca8e3775301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91839d21-9b39-49f4-be52-dfcf636e355e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f1543d-4089-455f-91e1-3e015bb3b79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28711840-e1d2-4dad-9b2a-fbd306d4189c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7a62f7-52f3-44e5-bb9e-4f3d530d97b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91a497d5-2f50-489c-884b-50a990e09458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c788100c-5bca-4a1a-85a6-8434563b940e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663c6415-1557-4d42-99d9-7f668a46aa77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6a9cda-a25f-4607-a6aa-1b2f508a2c15",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec5621f-58ef-4a57-9b66-080d0e7ff939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "937ae3cc-731d-4e2b-b46f-0dcd49fd92de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda1d330-c92c-43fa-828c-18f37634c17d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097c893b-2945-44ec-9bba-b2165ec41884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad5e63a-ee4a-4e52-bb30-523cc068f020",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7afc16-9f0e-4182-8df9-85fe8f30d4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26c4b16-2688-4240-98dc-d2f95ae850dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b08558-6707-4dcc-a9d7-931557fe1500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa85b754-fa83-4132-862d-9810a5c62ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e73f08f-e477-4276-b87a-288e95516bff",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f94f82f-a5df-42e3-8d23-cb8047b98d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4302327-765a-4500-8a75-a46a62579ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa5ff62-5509-4ec7-a3d2-14347f4ddf4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e085524-ed65-40ed-8a79-bec128016890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280c7845-a75d-44a5-a659-f67bccaf140f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ff50a5-50e8-4e4f-bae9-32f779c9d1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51cd892d-b857-43c5-912e-0b9ce0ce0160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfd85ee-40bf-47d0-b3ca-758b9e93b48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63618d16-cf5c-4794-be9f-12b55dfdbfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d70520-03fc-4daa-ab69-37255a89deec",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bfec19-6d6f-4ee4-8f41-eb07278d4b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a5ca23-0738-40d7-a0c8-e0c16503266a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0610404-92d2-45a4-916c-fd16c39da520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abac28ba-2510-4e66-a7fd-bf28dc86e7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce76bf3-a6a6-4232-98f9-55a68a2d0fb9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e5a2f4-0aa5-46a0-b208-df092b235a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56e0ee6-d684-4dda-bbec-d80d0dec22f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca2655e-2ef8-49ae-bf14-0b268bbf83da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c49b973-fd0c-46aa-99bc-76df9c5cc0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d9cd5b-3ce6-47a2-abbb-c14b80cd0eaa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c9b675-36ab-41c8-80bb-2a3a36cb4547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7cba5d-4a90-4021-ad1f-6fec866c34ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6089b527-3c62-4690-815f-36a86fbc8259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f3bfe5-4453-4fee-9158-337a9efd179d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c86e865-c866-4426-a107-b3089bd068f9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d55534-3c3a-4965-9911-930d2507e61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a851adab-3c00-464c-939c-a027e09ca02c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c77227c-b675-4a7e-899d-3065a15b498d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe41106-8329-4da4-90e5-e71a189e8124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f499ebd4-6197-4766-8b26-6b1c673f3949",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f0cd30-70cd-4b37-9e58-b81d30b58fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4b5d55-366f-473e-8654-01d7c80b03e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba4cfa2-30fc-48cb-b3d7-37502d07940f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f594518c-8972-41a6-8703-ecb9e38f549d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9d7d9e-cd50-4a75-a4e7-a592b464dc4f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed75c3e-069e-429e-aac6-c3336fab3792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83d4689-3343-4e89-816c-da37049d831a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf8e2dc-8194-4a36-b9eb-15718a4ba1b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24c458d-a02c-4faf-b20a-cb1c5f1b0220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe60d98-eb76-4276-9286-c919239cbca9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff43e9be-818a-4f41-bae4-cb6e00678b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753a26b5-13e9-4765-8914-b72c91615a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6367c141-880e-4827-abf1-935a73fc72be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c8080d-1541-4d2c-8cdc-cf40a7d87414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16db1f01-18b0-4c34-aaca-ed7d9599f316",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a2a628-bc7b-4a3f-90a3-0341efd3c535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1608f5c-0c6b-49fb-82b5-a0f4dd784b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6b66f6-335f-4e5a-9f45-f9ea2cec54f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37bff17-d072-4ca5-bfb9-a4a034d253d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f3edd2-ab23-4cf1-aed8-3ee8408beeb2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88562314-333a-4e8c-a22e-a54566b87d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c712be0b-cb06-4a56-9a83-32c314999dc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0056ee18-d597-4c55-b5aa-3d0a0aa284b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f831e4c2-c33a-4b36-bb65-a61759fce0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72648b6a-45b1-4b45-807c-7c8efcc39146",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f7b6bd-321e-4c81-a833-8d1dbd3193d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95757264-1a82-4eb1-aae9-5f1544b326c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157db197-a7c2-440e-9851-588e7d3fe324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7dd328-3bcf-42e3-bec8-54df8dd9cb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a475e7e7-c0e5-4e62-9927-9ecfc5d792f1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a22ad94-8a42-443b-a94f-6fcf9f0c0bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98efec3c-1589-4cf3-9be7-f56a67a70f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906cd178-ce48-42e7-be65-c8255c7f8c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4bf701e-15eb-4d13-b4fb-03ce1a209d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755b8641-0bc4-4fc2-89f5-713e164275c4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28209b83-aacc-409b-afd8-6f6dc74c441b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9438a0-af8c-4c90-ae71-744f0c41720e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43193699-61fe-430b-a3e1-ee34f166eb0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06436ec2-0728-4727-9d53-cd17805dfde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101c8358-4807-442f-9231-6a999b205d0c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b942a751-e834-4ffd-a0d9-fe939939957a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5e491e-1b62-4fa4-bd6e-994e955621e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb13b49-e4f5-47eb-97f3-50552001ee2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299a6319-c771-406b-a1af-edee3fd3ed23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6212c6-b11d-4014-a1cc-b5dada2bedb2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e65ea50-3626-4c1e-949d-db4fb587d3fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e7afec-f5af-4776-b2a6-d73d82b7d39d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a05bd34-34b8-459a-af40-eb6c1a02ce62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9beafba-7aa2-4ce7-b114-57a731ce6d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b9ffe3-fc4d-48b6-b423-24f2c875a05d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b0c921-fd4a-4213-ad6d-9a2e6b70f3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2e5fcc-808d-4041-9ea3-40c7db16d022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f77c16-123c-46a5-97ca-0dae9f9cc181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffcf0ca-f984-498e-98a7-156e9950f23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bce72d-7ea9-4dfe-ade6-be2be39db7df",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f411be9-8692-499d-badf-9d1090e0b9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ac9294-5a09-4981-9125-0c693c0d97ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961689d9-a4c2-496f-bfe0-18b124c0daa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3845acc7-a8e4-4806-940f-bc8f4c6f5830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d69b6fc-9ba8-46ec-a4fb-76392883b041",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92dec99-219c-4d29-ae28-144a0747835d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b6804d-bd87-4136-860c-4d925f50f533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4476ae-e7eb-4233-a64e-036a8b8a65e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faaf0912-1c94-4762-b0b9-e1abb95497b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807a9264-b84c-42ba-b15d-2a80806b5ee1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fe36b1-1ebf-4c00-bffe-e60289d4b1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242da885-2179-4823-88d2-95429ec35389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf923b3-1e4a-4326-8f63-3c227d8f0d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796c3ca2-fd07-4811-8d79-38e4a165b186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a904a14-f913-4cb4-932b-a205e3bc7325",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd635f7-512d-4d2d-a689-4d1a9500f6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9a572b-e051-4088-a9aa-a19e3bd4429d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "098931dd-b84a-409d-97e8-fc4cd5997813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0818246-b49a-4abd-aa6f-9b058e5834d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769fe7d7-e21f-44af-90ca-328ee2103178",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac8142f-5665-481d-9d5a-06a59099dc14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89077dfe-b8b4-44be-aa6f-e3740b16553c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01f40db-b4ca-4ef1-aab4-667ecaf9cc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081d6929-9f7f-46d1-a1ea-b40ddaf6fea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf149d46-e689-401d-ac59-00693123917c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61dfc6f-b090-4e99-8f1b-bbfa48538e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ee7920-4e93-493c-b556-30b042ea3296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ce6d79-44a4-4c2d-8e45-d39d07f00cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8971769-27bf-4c33-b48c-a22c144d512b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720b1f93-5189-495a-9b4f-6df1f9b364b5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa08c08f-c43c-459c-b259-ddfd2490d143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6fab54-1663-40c0-bde7-5a0ac2af8ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fdc65e-3d1d-4ce0-90ea-1051e5498052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb63296-cbaf-42df-9fd3-67e3f63f5343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72b98cd-1a6b-4aca-b85a-25768c563544",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99a8ec8-580a-4bac-a427-3741ad28f37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e20814-d198-4b29-b005-5cc73cf0b4b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe90147-07ab-4965-9ca3-c286102ad8d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06416c4e-111f-4d44-b8c1-9a2a4c8c9e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e026420e-0832-42f4-b232-2c564ac90f7d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2c9289-ae57-4612-9b5c-1c9aa50f5366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8908d8-eef3-4b72-95ba-cd4b158b657e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af7c37b-4411-4017-be99-349fb8efd584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb03f60-ace2-4157-ab91-d50ff502f1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64580ac2-29a3-4b6e-a0ce-a170f3bea791",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304f7e86-a0c0-48dc-8a78-30f7fe2940ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976b9664-8366-402a-9c9e-3ed5c4502443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fc3eed-26ac-43a7-902a-43e5945ef465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f89ab0-c5af-4e74-ac28-600f3be5519b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82912573-cf79-410d-afbe-d362ae7b8d63",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5194fc1b-fed2-4586-aa4e-403acc996be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f196de6-0c47-4a49-9985-fc0fca40b9d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caf137b-3309-4669-8a30-6e55bbf74c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938696d1-7016-47e2-a348-2cc465c05bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe3bcb6-f78b-409b-b6b9-bdbc67d63dcf",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a7d386-c169-49df-b705-5821438ae8dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d9838ff-0735-4da5-8538-b85c8e2cb9e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a20ebd-fe64-4ef1-81c7-16e031433bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d13e056-8d73-4745-bf4a-8366bd5ed3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc7c463-e33e-407b-9bc8-1e6f064e3af1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d3e228-f805-4ded-8a72-48a9ea35d195",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "027a3e3c-a146-4ba7-9b9c-0de7fee31659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66afcc53-70f5-412e-8cde-0d7d12844c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c92fdc-6890-46b3-86c2-510eb519c222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c0a686-828b-4efe-9aa5-808f36ad5af1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9663db3c-e489-440b-9e8f-7916a893bba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc8747aa-4f52-48c7-b1ce-189c501fc989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffeebe5-b907-480d-928e-6c326d468e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd15d597-8163-45e6-9485-99ca71ce9ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c1c4f8-dcca-408b-bd73-870b68102301",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353bb8e5-15f3-4e34-801e-58488da767f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94ead700-ced3-48bb-8710-fa46d8216233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c266147-669e-4a71-9708-88b0e6a68161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c913f5-b0ff-4dce-8b62-7a4af683798c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f7da0f-29a8-4f28-b147-499283baabf1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db30ecd5-3efb-472c-8a99-512cf042a276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16a29c1e-2c38-4f43-a5c5-fec8868df137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "928dc4e1-cc1b-4eb5-991b-7fb9c546f425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9d7544-d9fa-438a-920e-3fe348d46f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f3e845-efff-4867-8338-783cf18e5d44",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2a8ffc-3e60-40cd-baab-c95d29b152a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c6bc94f-af11-426a-9f7b-7c2bba028d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9299c42a-2aa0-4f91-add3-a52f5160b633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc00d83f-2167-4b13-878b-582ab556a560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2677d273-a452-45d9-8a93-9883f478861b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9dbfd9-6b2c-43e3-9eb3-3a91ee1eac75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de01fb43-a811-4dd7-b4e8-7a04a3d6a27c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba5763e-f9aa-42d2-ad0c-5a451556f2ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75223edf-ebdd-421c-b85f-b010479e2929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ee787e-6df7-4cb6-99e0-8a2d7beed6c5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5d82bc-674c-4831-af7a-dcb17346a774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44253038-76c5-44cf-8518-0643f7a70375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c855d648-215e-4bd9-8533-29b1bd4b079f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906fef5a-27c3-4801-abe1-24c0fa84995a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503fb96c-8e24-45ca-a9d6-eb30ecac6451",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8096f73c-35fd-4b4c-abb2-3f8d9390409f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef9c76d-5af1-4bd0-b84f-73cfca43f9f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb065e37-7401-4e68-b23a-2a43daf936c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6582e34d-3921-4dc2-a9b4-8e4d90942cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0297b75a-885a-4ec1-a631-a8e45983741b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9575fbc-9a6c-496e-95a0-ad317ba25e58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51bac563-67a1-4e36-a83d-59936da42bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4972ec-55bb-418a-bb67-83e241abeebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4636e56a-be06-4dba-979c-c9f39c961a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f1ea58-2663-4e68-8888-a4bb2e3d851b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9b367b-405c-4918-a474-dcbde588fcf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bc0d5fc-1160-40f9-8125-ffd52cfa4fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d61526b-f5e2-4180-a7ca-0deb93008000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4440bd2e-c8c3-4e07-a566-0d49152d1f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4901ff66-1cbe-41f1-a020-4afda79e3c34",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15fad7f-88bd-4375-99ab-be3d4b552ec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce633bf1-fe91-4b36-9231-3956e6881135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e93cfcc-2b20-4599-8ffc-2f17bb2bde62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a7f741-d9c0-45c0-9a06-4d77d29905ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5826847d-74eb-42dc-8c7b-459422b5b8f6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4b9096-c002-4a5e-b47a-84a39daae7f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a46450a-6a97-4121-9862-f7e33b9a0d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cefd503-0d80-47fb-999e-2bb1b131587f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf9f5fa-7954-4d7c-b45c-868bf3f69783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b568cc-f152-418d-9a40-2a950649b2e4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3e05bc-172e-44b4-a8b0-a62efda091b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2df7e50-673f-4231-a21d-e128b3e4d470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91569d4c-60c7-4623-b234-bf9cfc130d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b42ca36-bcb9-44b9-88d4-c7d2233511ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58982577-0cbc-4f91-b1ea-5e42028a645e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcc84ef-71ed-4df6-af53-68c122fdcc6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e0bd0f9-3b67-4de5-b317-f41a3f4bf982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9c60dc-dd0c-4341-9cd1-cf10becd5259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad7471d-8f35-47d7-928a-a6c6096b4902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c3a995-3bd1-414f-8cce-67809b08366d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badbd5f8-9e79-48ef-9001-1f6d5a01aa72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c65efef4-5cf7-4cef-9a42-4f2a80a459da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a111ae-61ed-4020-bcab-642dff200b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014fde9e-ab7c-465a-88d2-f554fbf262e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e52f8c-62ad-494a-a4ac-c54442dcf9e5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4760d062-d514-4d3c-83b2-eb8943c31415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c2f2348-9605-4be0-8b9f-eb837b8f86fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b61e3b-a98b-4ccb-9081-2dfc928a91fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e739bf4b-381a-4e44-8788-8a9e8fa346b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dea6d29-1548-4221-8c51-64e470d65655",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bd9750-4325-498a-8eca-f5becb1a8753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c3b145a-d903-462e-92ff-ae6ea7b04aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "776b71f8-e778-46ab-96e6-c01860f6e3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60744f5a-46dd-4cff-ba76-092a761e4630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27af2ebc-2abf-4581-bb53-0b859952355f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ece85a0-0ead-46f2-ba4a-70edec67f20f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce1f2e3f-2f04-40df-ba8e-a217d6ef9a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d81773-09cb-4a24-b20a-dad67b8dd928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a63979-4655-454b-ae00-589e745343f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6557f78b-ed70-4940-a7e5-8d7eb81824bf",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f70eda-883b-4df7-baee-a4c2a78bb346",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5481275-bdb0-423a-a678-56af6abd0026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742ab773-4db7-444e-b7d8-6e5cfa7c7495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89489072-6db4-483d-8a07-470111a6dce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db98e364-dcee-4ee7-b56e-44dd0caef3e2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2758342-4115-4327-af6d-2bbab82622b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d7465d5-02ad-43b4-b0fa-8b89cec2e211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1943611-8a6b-45c8-80eb-2f95b5312941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307b5a73-da7d-47a9-85a4-7d672179a127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62fba9f-899d-4049-858d-767723e1639f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454d572f-bceb-4f45-862d-e3eb2947ab05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f4c68c2-f410-4ac9-8191-76dd54a24b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1936ca42-8956-4445-9cd3-2c0a9eeb85d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3468ab82-732d-492c-a734-769cd5621cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb56edaf-d87c-4e57-900a-6148b70f40d8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6cb301-f455-4360-ac95-a82a6abe8ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66b630cb-f199-4c32-8997-37b06ba67bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ba56a4-b439-4fc9-9917-5ec9712ee0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bf380a-bcb4-47ec-ac58-b239063c4501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad63ef6-3d08-43b9-93db-835e19728bc2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ae7e6b-f826-4673-8edb-61dc504d2424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fc58c90-5ed9-4d2d-81bf-de4fb92c7faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9eb9ef-7690-460d-8db7-8f0b09160f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de106179-77fd-439b-9d97-05fe65bcdd55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73c9902-ea25-43f4-a329-430c5bb31006",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161efe1a-a08a-448e-8cb6-86f5ea92f422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d3366cd-acce-43b6-a9bd-8be0bce32205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efebe804-31e6-4412-b452-251e8b20e643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaed72fe-3fd6-430c-80f7-ffb5b4673d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e7f61f-de4c-4fa3-a1f7-5f42dc58c2d1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595088f9-7b05-44e2-a646-e60b72790276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8b8b838-89d4-4815-b2c4-ecaec3ae65cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ddaca4-c697-49a3-a960-a643897d8f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40568c9f-16db-46b4-a6d6-f6e1d2087755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3420c3b2-38bf-4475-975f-d7d9b9858ae7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a33d32a-266a-4f2e-b45e-1f7ac21b3b6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67a57407-b351-413e-afed-33430dca0185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d93189-2ad6-44ce-8120-33dc1f1592b0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42e1343-5420-4097-927d-4a5497e5c895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22609692-a6c7-4d66-8ce9-c7b7fc5026e0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9bcdf8-3dc9-4820-9599-054720938976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eed4ae2-b1f4-4616-8f84-ef656bd39dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "effc5aaf-a394-4af8-84ca-b8946ab4f095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16eeae9b-168c-41cb-a349-86530465f584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aeab41d-c57f-41f8-9b62-ff1b7fd609b9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21726bc1-16a6-4b5d-a4c9-a74ef7a902fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84451a38-c4e0-44d6-8e83-2635c1be91f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2085cc28-d785-47d8-a39f-7bcd113e7095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a84281-5bca-46d0-85f2-9d54878d8621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9702b85-e091-4268-b89f-93fb7cec7dfd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c435f717-ca56-4f8a-8f18-da7c7e430a01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc67a2e4-7529-44ff-a9d5-58044e49c8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfcaed0-cffe-42f0-b8bb-17e6d5105d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a9f94e-ee70-4100-8338-c9ce00e10a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd306071-ebf9-44ed-abb5-9210ce84b70b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b648a877-4dae-4c3e-95f7-d64aae83ceb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb25613a-df6c-4f14-b590-d8b3c1b3a889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6032f9e-5893-4589-8b92-25f3ebd6a5c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72f3c61-7ce2-4bc6-bee0-82e6a738ab5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99e816a-356c-4c45-859a-47f944d7916c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bf8c0c-9b55-4c17-ba1c-d90b8e8996b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64fee444-c33f-4330-93b5-60384e6c9af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbd7783-92af-4c0a-b1e9-354d715886e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d574fd4-08d6-4af1-9ce3-7895222077a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6afeb7d-f353-47fc-9d01-8f24fb96ac58",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdf5793-3a11-4d0e-a66f-db714c987e62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f3c8140-1f99-4a5d-aed8-57854be1dc05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d59ec31-7891-499e-8f18-5b84d817dff6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe398f9-76c6-4695-a013-aa0ab60c9532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251780f1-dbed-4317-ae8b-48e0a5735085",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935ef445-6a5f-473a-859c-b024c5251ff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da8cc0e8-f3e1-4c82-8275-7408c4e11085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea94091-8b3b-40ee-8d7a-af26c52295ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c48df8-6420-446b-873b-2f6ae016d9ae"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8a5e35f-3c40-4e79-84df-b869b42dd040",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2a61afb-6d3c-45c5-a5b7-db8460fb8d4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8061aa1-1e99-4dca-8710-c90e39be649c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc7b6625-08b1-418a-adf7-556ce47ac9c2"
                    }
                  }
                ]
              },
              {
                "id": "a3b866f7-fc21-42d7-b317-40b88402674a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "438b9814-0045-4481-be08-ea46fe8497f4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec7565a-eddb-48d2-a22b-6af30bce6ec4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3c219d2b-9765-4e61-81fb-ae70b8906b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b0b323-5067-44f0-b884-41218373f55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87fab607-f4ab-462b-9f8f-cf9c5c90793f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a75815-014f-4ff6-b7c8-e6584295a59f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c01ddb-0e55-47f0-a226-4d01e69abbff",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "eed11f10-29f4-442d-be38-9d0ba76c1abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0659aee3-88e4-48ba-b1ff-0ca848250892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53c8d072-8fd5-408e-ba70-ceb6c9452cfd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a48b77e8-64b2-4d01-ba4b-8d2f4a68d736",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e028297-f6b0-43a3-a0d8-8b19f5d17929"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "113b6b7b-9a95-471b-80e4-2949b1e55cb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e928412-b1e0-4980-8066-030ff9f83809"
                    }
                  }
                ]
              },
              {
                "id": "e49d71ae-32c7-4327-b084-b9845eb852e3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2e6a9612-cf6f-4090-8209-1a72f7b48b1c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11b41e7-4a85-458b-8ad2-b4cc5479cafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d91cd8e4-4128-4020-be33-e2753cc32f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e1e725-6337-4c80-9c67-1a527c940a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa728b74-7ac6-4a5c-8bb1-3c670b3f9965"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ba90680b-d1ae-4455-b405-6a6712121699",
            "name": "Positive Testing",
            "item": [
              {
                "id": "77d1874e-4a86-4c84-bafb-e755fae6ef4c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00b2e744-3ab3-4e14-8e41-74f68961e5a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "35155f19-264f-4be7-9a3d-4328074db954"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "619bd206-6e50-43bd-80d2-a2dc8ab402af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d78bb64-df91-4c90-883d-77feb9a6c692"
                    }
                  }
                ]
              },
              {
                "id": "45f2fa0e-3383-4dd7-9bf6-910fa8c0603a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ceb1726-f309-4576-8b2f-730be8982699",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "64a1dd26-8715-4c44-9326-3679dc553e71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d93aaef4-e4f2-44e5-8e34-0017788181b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c89c3c0e-4022-426d-9599-d587e8d413fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5861f572-914e-41d4-81c2-9647e8250405",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bcb72004-50f8-4b96-a1c9-e9a0f05a3322"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52dbdcc4-54a1-4def-883e-6f2542a4bed5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5145a40-cb76-4753-a7f9-64dbec36ee8b"
            }
          }
        ]
      },
      {
        "id": "24bb6029-bf13-4a77-b580-b57215ea5cae",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e0625d91-d2ce-4022-933b-4eee3c6b55a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfb1d0c9-793e-48d4-a120-c13b0764e6d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a2a57de-4fc3-4fcb-80ef-585cb145647f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22f9cba-967a-4d71-b060-baf07a0ca74c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4caee951-6b37-4241-8b1a-067e340744b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6edde6-da90-4c03-844c-5be778f41876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e4dd64c-a51e-4018-8707-f39b20678e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95082936-786f-4974-81f3-b3817d92ad1a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c788e8-1399-461c-8930-440e095459ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "82b2e011-d082-4693-8faf-5ef8e2d4a1c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18edcfd6-1044-40e9-ad89-44a1098c74a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2018724-427e-4f84-bbed-43b4dd132052"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc677be0-0aba-40fc-9d03-1c5f161388f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10976d18-d635-4620-8190-6d9d394dee88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18655f86-2a86-40fc-823c-49042d4c3eb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d66e8f5-177a-4904-b36a-2427b2e7f0d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a8f7656-e3ab-4943-9a10-605325028535",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4b31064b-b370-48e4-a46f-8e767407e064"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "786a65b8-9cbe-440a-93e5-b0cbfcbded17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97f962f8-fafd-4268-85f4-12869c74edb8"
            }
          }
        ]
      },
      {
        "id": "6256cd66-767f-4412-bf54-35c4b895abd0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "746abca4-2d1e-478a-b6f7-1dd7fb39e75f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1773db4b-e67d-49ac-92c3-ebf5c33fc900",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a927da37-9075-4725-a43a-b62137ed671f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8f3f04-ccf4-4402-b609-29b2ab6cdf34",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ff799ec-c49b-4174-b1d0-d3828168560f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae7d57b-824d-4ff7-9f8e-aedc8b7df8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f51fd60-efa5-4d78-b995-23d9829ee63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ca7aa4-9582-4bbe-a9d6-ea197f9bfd09",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f779d4-c39e-4f4e-9a63-f78a0e7af55c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6638b105-7425-4627-aeb5-d7048c67bede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b72a574-0c17-4d48-88f6-d9c7a0e903b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4d91f7f-8d65-4eb4-9edb-fb410a7eac95"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e8f0753-89e0-4139-be31-7c474618408b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd70e2e5-6b36-4f56-b852-09c9bd097799"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2683d74-339f-47e3-b8cb-d5765f8bb5ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6fd3d66-cf40-415f-9d6f-fb496d1520d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d059c07-9243-4dd2-a48f-71db71690b8e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4ed45a22-ab43-48f7-8584-c8681490d4ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aad60c6c-81f0-49fa-8d29-2acd76b9f556",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b48fc2af-14bc-4dbb-8dc0-43f6759e57be"
            }
          }
        ]
      },
      {
        "id": "456e1a5e-ad73-472b-b795-4568f6beb235",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1945425c-73b7-4da1-9e8c-c9e0d972b9b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54a5e4d3-55b4-4f76-9605-137f5c80cc5e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "165aba96-cfef-4331-be15-fb25b1fe35f5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccde4c4c-7c28-4474-9508-22123212eeff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b76823d0-00d9-4d30-8d9a-5345b041a9db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71015369-655f-470a-bdaa-dd6605f85936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82f10cc3-0d26-4349-8e69-28c37069f40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27c2396-f6a9-48ec-92e8-8d6c8321bc05",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199033ee-ee74-48b7-bf71-35bdaf4a5b66",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7accc4-02de-48c2-8d3f-205f32bc43e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc480aec-5489-45f8-bbeb-f0e1c3e18e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b445d35-ff0f-4015-9946-49f1a689c777"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bbf4a6c-d8b6-404c-8a6b-d3f04514ca00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2179e06a-4451-4350-983e-efaeff810259"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8da94b23-54d0-4140-b1ad-1b47050d44cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c219d089-86f2-4aad-a31a-3b54d17732fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9584e741-1c6b-4505-a40a-321ae8af3bfd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ea74ba29-433c-4f97-bd69-f03af4ac3301"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0160269-4dc5-41ed-ad05-2e3989cacdf8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6761551-f74f-4bd2-810d-0c2903d7eaed"
            }
          }
        ]
      },
      {
        "id": "e0b84762-0777-4d12-a2ea-ebcf733971de",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d10968b-87d4-4aff-857e-f7d6c5b066d5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08981277-9bc0-49a2-9d25-8ab3d6ed15a8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c8af77e0-aad4-4030-9314-9db8b8d241a4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65d5f0dc-8035-459c-9f31-f024acbe7422",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c86ddbd-91bd-4379-b7c9-03b73614a69d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 620.6988416988421,
      "responseMin": 12,
      "responseMax": 7605,
      "responseSd": 704.476597268528,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677890382976,
      "completed": 1677890554286
    },
    "executions": [
      {
        "id": "8a296f34-e2bd-4eb2-9b2e-49c7c5243428",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "57310d5c-ae75-412d-ab14-eecf508a607a",
          "httpRequestId": "4bbd4360-023a-482b-8c98-dfa977702503"
        },
        "item": {
          "id": "8a296f34-e2bd-4eb2-9b2e-49c7c5243428",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d70dbc2e-0e60-446a-bf43-4b944a020bbf",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 0
        }
      },
      {
        "id": "b440035a-e3d3-46d6-80ba-d9ca534934e2",
        "cursor": {
          "ref": "e7f95316-4361-42a1-99a8-f4fb9e80bce8",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "55a0b801-6cbb-407b-95cd-ffd3725882a0"
        },
        "item": {
          "id": "b440035a-e3d3-46d6-80ba-d9ca534934e2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "da45c39b-2954-402e-bbe0-2daa0871db83",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "73975626-d303-4d3a-a90a-e0ae3e5fb08f",
        "cursor": {
          "ref": "ad297c51-6285-4337-bcb4-d0affdb66494",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ddc6bfa8-f356-4505-a733-934d0266b445"
        },
        "item": {
          "id": "73975626-d303-4d3a-a90a-e0ae3e5fb08f",
          "name": "did_json"
        },
        "response": {
          "id": "9050b5e2-1ec3-480a-95bf-9357d0624615",
          "status": "OK",
          "code": 200,
          "responseTime": 846,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c32998-90b8-4e62-9ed3-b75fac58fe48",
        "cursor": {
          "ref": "89a301bb-84ea-4f09-9b43-94fb99627d72",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ff5488f5-0689-40b6-96b0-cd05c78e6956"
        },
        "item": {
          "id": "a0c32998-90b8-4e62-9ed3-b75fac58fe48",
          "name": "did:invalid"
        },
        "response": {
          "id": "b1bad600-ad47-45e7-a91d-5a1e77a0e1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c32998-90b8-4e62-9ed3-b75fac58fe48",
        "cursor": {
          "ref": "89a301bb-84ea-4f09-9b43-94fb99627d72",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ff5488f5-0689-40b6-96b0-cd05c78e6956"
        },
        "item": {
          "id": "a0c32998-90b8-4e62-9ed3-b75fac58fe48",
          "name": "did:invalid"
        },
        "response": {
          "id": "b1bad600-ad47-45e7-a91d-5a1e77a0e1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ba3475-59b3-468b-ad3c-fb9cf4f945af",
        "cursor": {
          "ref": "f3ba7607-5ab2-4ded-b166-1b3184da85d5",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e999c857-b4da-4529-99a9-2311613b5643"
        },
        "item": {
          "id": "e6ba3475-59b3-468b-ad3c-fb9cf4f945af",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a5168bde-540f-4fac-b91c-a6b400222a3f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 867,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac92465-0806-440d-8eb3-578158dcad28",
        "cursor": {
          "ref": "3c0d91d4-f58e-4c8f-aca6-4efeac04aa3c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1a196e12-2f8b-419d-bfd5-4c683c00b21c"
        },
        "item": {
          "id": "8ac92465-0806-440d-8eb3-578158dcad28",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bc322d8b-7d8c-4764-ab10-452d0edf9c9b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 687,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80eaaaf1-ee09-40a0-8d31-f8955b399dda",
        "cursor": {
          "ref": "a606f562-1486-491d-92cb-8ae7bb55106a",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0aa94818-236e-48a7-8032-8bac7b6310d1"
        },
        "item": {
          "id": "80eaaaf1-ee09-40a0-8d31-f8955b399dda",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2f4e69e1-bba5-45b5-9147-5448401566d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0029146a-3dd1-498d-80b8-c86970446859",
        "cursor": {
          "ref": "bce9dc58-8211-4d69-a5da-aeb3d748056c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7bb5463c-057a-4f43-a193-25c94b942aca"
        },
        "item": {
          "id": "0029146a-3dd1-498d-80b8-c86970446859",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8ee65f7a-35ea-4240-a30c-838c90958e05",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 672,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0029146a-3dd1-498d-80b8-c86970446859",
        "cursor": {
          "ref": "bce9dc58-8211-4d69-a5da-aeb3d748056c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7bb5463c-057a-4f43-a193-25c94b942aca"
        },
        "item": {
          "id": "0029146a-3dd1-498d-80b8-c86970446859",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8ee65f7a-35ea-4240-a30c-838c90958e05",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 672,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244c809d-d142-4258-acc9-9e6c61897d17",
        "cursor": {
          "ref": "c1b0a4fd-55e5-4f99-b5fe-d741984abf23",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "487b39dd-56fc-40d8-9ff8-87e165299295"
        },
        "item": {
          "id": "244c809d-d142-4258-acc9-9e6c61897d17",
          "name": "identifiers"
        },
        "response": {
          "id": "cf484522-772a-4133-aa18-9debe194f062",
          "status": "OK",
          "code": 200,
          "responseTime": 939,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cf89ba-1274-404b-9bc9-914dff1b1bf0",
        "cursor": {
          "ref": "228343bf-45da-49cb-9f06-73198fdb5eac",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d1d94df8-2f6b-41a5-9fc4-74cc1df0a935"
        },
        "item": {
          "id": "f4cf89ba-1274-404b-9bc9-914dff1b1bf0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "42125168-e343-480e-afca-1b4a910fd62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cf89ba-1274-404b-9bc9-914dff1b1bf0",
        "cursor": {
          "ref": "228343bf-45da-49cb-9f06-73198fdb5eac",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d1d94df8-2f6b-41a5-9fc4-74cc1df0a935"
        },
        "item": {
          "id": "f4cf89ba-1274-404b-9bc9-914dff1b1bf0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "42125168-e343-480e-afca-1b4a910fd62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ab95fd-7255-4220-9cf1-64f40e7cc6ff",
        "cursor": {
          "ref": "b843e1ae-3c55-4124-80e3-1e38e8c20b04",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0ea4c562-4fef-4d19-a14a-fc4d8119351a"
        },
        "item": {
          "id": "b7ab95fd-7255-4220-9cf1-64f40e7cc6ff",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3dc36115-e20e-4fe6-92f9-bd33bd5139c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1142,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322f0773-205a-4b41-8a96-60690a008618",
        "cursor": {
          "ref": "d5cc7f30-ff5a-46ff-aafc-b785e609fe5d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ee0a4fb9-e6fe-4b2b-900b-c25b54a2a958"
        },
        "item": {
          "id": "322f0773-205a-4b41-8a96-60690a008618",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9f32a840-ab72-48a5-958b-9091394d7b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1181,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d4dbfa-a5f8-45ce-8cac-1da5c3cc42c7",
        "cursor": {
          "ref": "e6bfd478-de2c-4753-8e92-09bd9d72c5b9",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "12bccfa6-b2b1-46ad-908b-37294cce3e68"
        },
        "item": {
          "id": "95d4dbfa-a5f8-45ce-8cac-1da5c3cc42c7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6880ffc4-6419-47d3-82b1-e87430410571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1268,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b79445-3ff2-47ba-9642-2983cde271d5",
        "cursor": {
          "ref": "c78ef331-fa8c-4737-b18c-d19bfa7333d1",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1699e746-eb7f-43cf-a4ef-43bd77059210"
        },
        "item": {
          "id": "34b79445-3ff2-47ba-9642-2983cde271d5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "058a6834-3121-42f7-a856-00f66af6951c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1076,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2231c538-2773-42ad-8f33-ecbc9b474f02",
        "cursor": {
          "ref": "296ad81b-3004-4fb0-b05c-b41e5c3e5be1",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8f76794d-cadd-4b62-8cf7-d6d0e13e0c25"
        },
        "item": {
          "id": "2231c538-2773-42ad-8f33-ecbc9b474f02",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "00cc9e2b-b7ca-46c8-8b49-e086074e7c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1013,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7b678f-38bf-4571-997a-5e8b7f1a8ee8",
        "cursor": {
          "ref": "4e5b82bc-5155-4543-bc65-21bc05e67a81",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7000aaca-fd56-4806-9eeb-18667fbe16e9"
        },
        "item": {
          "id": "ed7b678f-38bf-4571-997a-5e8b7f1a8ee8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b3392ddb-f79d-4e1b-8700-06b6b3f307fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08dc50e-0d97-4856-9f65-11ae72465a88",
        "cursor": {
          "ref": "bc988b90-919c-4308-b62c-c1cba949e874",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "60e8e2fe-6f8e-4967-a24b-0746c5452aeb"
        },
        "item": {
          "id": "f08dc50e-0d97-4856-9f65-11ae72465a88",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2bf404a0-1411-4390-a19d-df75fa39c993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137f6501-fcbe-4d06-87d8-e41d432824de",
        "cursor": {
          "ref": "0d302d7a-f3f9-4b83-9b2e-02070f9162e4",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f95e524c-8da8-4c0f-83c7-1cf2f17fdfbd"
        },
        "item": {
          "id": "137f6501-fcbe-4d06-87d8-e41d432824de",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "feb2b8f6-505f-4a1d-8e8e-c66fbdfe9cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75285917-2fe3-4b28-b78c-b04f92ee01e0",
        "cursor": {
          "ref": "7fddb3a5-b2ad-4c37-ae13-2c67a125dd7f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "997a3f8e-a95c-4693-b68e-94fc7a5f7e03"
        },
        "item": {
          "id": "75285917-2fe3-4b28-b78c-b04f92ee01e0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f565e768-b1fc-4f58-b20d-9098fd91d42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afba8b7a-5619-4704-9e50-9717d4ab1b4b",
        "cursor": {
          "ref": "2899ed68-77d7-4382-b749-f77b84e25124",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0d330a1d-1651-4fd6-bfc1-c0e97b631301"
        },
        "item": {
          "id": "afba8b7a-5619-4704-9e50-9717d4ab1b4b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b690658d-b22f-43a4-8a7f-ee24f4456c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded51daa-3cae-46d5-bb80-db40a5b93d72",
        "cursor": {
          "ref": "20f84070-a375-4b2a-a62f-b394f358e8cc",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "aca661cb-e0d6-4cc1-86db-48e29447ec63"
        },
        "item": {
          "id": "ded51daa-3cae-46d5-bb80-db40a5b93d72",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b9fb62af-f8a1-4a37-a244-a91156f3ee18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154d678b-719f-4187-8871-965d71399a9d",
        "cursor": {
          "ref": "ef0952fb-3bf7-4c32-8c94-7511a04ccde3",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "efc3c217-6940-4fd3-8d8b-5e011e66d928"
        },
        "item": {
          "id": "154d678b-719f-4187-8871-965d71399a9d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a2c19982-e7f5-4eea-834e-859fdece8bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906ee912-4ef4-4a90-b52c-d952afb6a484",
        "cursor": {
          "ref": "dc5989be-df42-45e9-a7da-f1594d00113c",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0de1d92d-48de-45a6-ade1-7c1a3f50de1f"
        },
        "item": {
          "id": "906ee912-4ef4-4a90-b52c-d952afb6a484",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "bba5599c-ad76-47a6-a83a-9aee4c0cb85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb3542b-d2b7-4168-8396-20627c235a92",
        "cursor": {
          "ref": "7fb0a83f-97d8-485a-a2c1-25e841a9abf1",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8e755207-c381-4b46-b67e-e27c838cf5c6"
        },
        "item": {
          "id": "4eb3542b-d2b7-4168-8396-20627c235a92",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "34fa4cc5-ba19-4d3c-ab83-4463a511e7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a002a9-42ff-4507-ab93-dd69b9060813",
        "cursor": {
          "ref": "7c2c7e44-ae96-481d-be67-7127d427a2dd",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5245c08f-c57d-46ec-bab3-6d992c3f4fb8"
        },
        "item": {
          "id": "47a002a9-42ff-4507-ab93-dd69b9060813",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9997d52a-987f-43a5-968b-04fce9f9c37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afbd542-0e4c-4790-b7c3-d04a55127be0",
        "cursor": {
          "ref": "d5a580c1-8056-48f6-88ed-3df12fbab550",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c5fc16bc-2630-4abc-bea0-c2ba43311ead"
        },
        "item": {
          "id": "2afbd542-0e4c-4790-b7c3-d04a55127be0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d841d01e-3d89-42f4-a1fd-7edbfbc417d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d753bdd0-fbb1-48fa-9ca4-abc3483c0b67",
        "cursor": {
          "ref": "ec2150b6-d0e9-4375-9af7-832cd32326b4",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d3cacd5f-e093-48fb-867e-bf30cf671dd1"
        },
        "item": {
          "id": "d753bdd0-fbb1-48fa-9ca4-abc3483c0b67",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "874923ab-c79b-434a-a819-0ecfbf80e9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e4d05e-7e89-4cbe-9002-9d7ff8f7295f",
        "cursor": {
          "ref": "5b197518-e66f-40e0-a737-9e8bcd6f58ee",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "515536eb-1109-4891-bb51-b8166a0c7685"
        },
        "item": {
          "id": "d8e4d05e-7e89-4cbe-9002-9d7ff8f7295f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "abfb47c8-c8eb-4ced-8f28-3c067b59a7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 994,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8167e92c-2a45-4a2d-92e0-d0d33466edec",
        "cursor": {
          "ref": "e4675983-0345-4c12-ad91-42b9bfa25375",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2d9be7a4-354f-47f6-b993-4506b4251759"
        },
        "item": {
          "id": "8167e92c-2a45-4a2d-92e0-d0d33466edec",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a777eaac-25d5-450f-a063-ea8c246db708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 943,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bc7214-ae9a-46f4-81da-9e453149526c",
        "cursor": {
          "ref": "1caa8911-ec99-4f9a-bb64-ffca943c2b94",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a92253d3-d690-45f2-a445-0f184e6d4e3f"
        },
        "item": {
          "id": "86bc7214-ae9a-46f4-81da-9e453149526c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "23b3e899-8c91-4c88-98b5-a43d8d25fd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1362,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20be50d1-3b3f-42ed-8d43-d103241dc293",
        "cursor": {
          "ref": "d519c004-973e-42df-af47-e88b64954b4b",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9c83c8d0-95f3-45f8-8969-39fa12f8afa2"
        },
        "item": {
          "id": "20be50d1-3b3f-42ed-8d43-d103241dc293",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a983d315-b131-4a1a-b83a-3d11e834b71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1280,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5515789-dc7b-4a34-829a-93f39604f018",
        "cursor": {
          "ref": "aaeabf66-699c-4780-afdb-6d45b8719873",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "73755d9d-cc1d-4dbf-9c56-2c29b60d462c"
        },
        "item": {
          "id": "c5515789-dc7b-4a34-829a-93f39604f018",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d30d8554-8f91-4104-9ea7-299aae186be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1403,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa44cd2-96ea-40b5-b9b9-533d948b31ee",
        "cursor": {
          "ref": "74183786-f357-40a1-a918-51f1b5ef8363",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f96770d3-eed7-40ad-97ce-49d3e20a6a0f"
        },
        "item": {
          "id": "9fa44cd2-96ea-40b5-b9b9-533d948b31ee",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "84a167f8-ed2b-4f17-b983-525e30f5459d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 981,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add7d836-b3d2-44a8-a9d2-0bf5f73788f7",
        "cursor": {
          "ref": "02ac81ec-b3eb-402a-8891-9b9e2ac8ab19",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f309a0bd-e611-4916-bc9a-945d2ad78ba5"
        },
        "item": {
          "id": "add7d836-b3d2-44a8-a9d2-0bf5f73788f7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b22c6170-1532-4405-907a-16583e091fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f4fdfb-5c73-41e2-9ad2-112a7e85b43b",
        "cursor": {
          "ref": "4da6f92e-700a-4b0d-a441-f5058158db3d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c5798548-94cd-49ea-a940-43cd67836cd0"
        },
        "item": {
          "id": "47f4fdfb-5c73-41e2-9ad2-112a7e85b43b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c04f3755-043c-41e0-a791-3e037b3691b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0393f6c-e1b0-40ef-9fa8-676b906cc30c",
        "cursor": {
          "ref": "1ca5d710-7dad-4fa6-a700-0745b6f88ac3",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "95e3da75-1cc3-4471-84ca-7ab63c3ec153"
        },
        "item": {
          "id": "c0393f6c-e1b0-40ef-9fa8-676b906cc30c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7b9fcef0-ffb0-41db-a3e4-b174fab6758b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85448881-3534-47de-a6d0-4f0fdd6f6526",
        "cursor": {
          "ref": "6ac14014-99de-41e0-abb5-9e937a4617e1",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f10247e4-14f3-4d5b-9264-0f66cf37e583"
        },
        "item": {
          "id": "85448881-3534-47de-a6d0-4f0fdd6f6526",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a4606910-d48a-40e7-91a1-d6a041440069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8093e9b-1615-4d50-80f1-82268545faa0",
        "cursor": {
          "ref": "9a65ab6c-f83b-4922-9315-5ee730ce2507",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d4bab212-51f3-4de9-b50e-f2f4ad6275b8"
        },
        "item": {
          "id": "a8093e9b-1615-4d50-80f1-82268545faa0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0174ae48-264e-4e1d-b105-36b9b7effe8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e5787f-3919-46c9-a560-7e03fcfec94d",
        "cursor": {
          "ref": "6437bbb6-6ad1-49cb-87bb-ac945778df4a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "35d2e941-95ac-4509-9faf-dafdcb9ec888"
        },
        "item": {
          "id": "f1e5787f-3919-46c9-a560-7e03fcfec94d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "824c230e-b0d7-4866-822b-039813f96463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4107860a-6b01-47aa-9ee2-3ae3dbbea2f2",
        "cursor": {
          "ref": "9e5ce1a8-75fc-47bd-a6fe-824a8d9d7fbb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "853f8208-af3f-4eaa-a74e-8b5a6cafd683"
        },
        "item": {
          "id": "4107860a-6b01-47aa-9ee2-3ae3dbbea2f2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f5df3a7a-1090-4cff-b747-a1c671bda2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828c1918-5262-4c5a-9527-97babb231645",
        "cursor": {
          "ref": "1c06afda-fb26-4280-ab67-c761d335eccd",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "686306a4-b32f-45f3-a584-d71c9e786594"
        },
        "item": {
          "id": "828c1918-5262-4c5a-9527-97babb231645",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e008ebdf-1bba-46d6-8c77-63c2636bb338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47739869-a0fd-429d-82da-78581d83d8bb",
        "cursor": {
          "ref": "e780b790-4a88-46a5-8ae3-fbc634f40108",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3b24fce0-7212-486f-a353-95ff66c1cfa5"
        },
        "item": {
          "id": "47739869-a0fd-429d-82da-78581d83d8bb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3c451902-fa3f-4af3-842a-5aa3122823bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5936d0-de78-4085-a4a4-b9ad6c602e2c",
        "cursor": {
          "ref": "66c05b77-c931-4086-a58e-5d8adcf20dc1",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8a82986b-2802-49e6-974c-7d298818defb"
        },
        "item": {
          "id": "5f5936d0-de78-4085-a4a4-b9ad6c602e2c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "10373fae-7269-4d09-9796-3464fae53dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a759680-118e-439b-b857-68ae51d026a8",
        "cursor": {
          "ref": "581ed64b-a6b0-4f07-9ebf-98cc4cd95262",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7f1ee795-b8e7-4e86-847f-ef56f03024b6"
        },
        "item": {
          "id": "9a759680-118e-439b-b857-68ae51d026a8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d2cc3959-bd67-4356-bb61-d3e808d36382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8c074b-7245-4e8d-8e7e-8f8b08434bc7",
        "cursor": {
          "ref": "f290987f-1d32-4022-a635-acc9f7bb654c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "feaf4a4f-a85b-4f7f-882c-5be43619ec41"
        },
        "item": {
          "id": "2e8c074b-7245-4e8d-8e7e-8f8b08434bc7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bb0eb4b3-eb90-45f7-93ed-518e6a80b3be",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 602,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada03f64-3ab3-49fa-8b78-e38dfc05ece7",
        "cursor": {
          "ref": "7d21355e-bd47-4eeb-b261-eacfe29efbe1",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5afe2925-f7f8-40e9-81f1-b88d49ef2575"
        },
        "item": {
          "id": "ada03f64-3ab3-49fa-8b78-e38dfc05ece7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3ce20f93-6533-4dd4-b92b-952667fc5ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6eb80d-9163-4cc6-ae01-32710185bb4d",
        "cursor": {
          "ref": "0e2ceb83-93f4-468e-be89-783ecc7b3e27",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ff485e80-01c4-46f9-a657-ec399577af17"
        },
        "item": {
          "id": "1c6eb80d-9163-4cc6-ae01-32710185bb4d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a269b22e-1bf7-4641-ba35-ff9f64c4d8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7504d1e-6cf3-4354-af0c-49e946bb40f8",
        "cursor": {
          "ref": "cc7a1b31-9657-4274-a8bf-0103f58200f0",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c5a9bf34-a864-45aa-a124-37e0b73ba894"
        },
        "item": {
          "id": "c7504d1e-6cf3-4354-af0c-49e946bb40f8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1071e151-a4bc-41ce-b150-9a2a7ed2c4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a49f786-255f-47c9-826f-9a1b76b71262",
        "cursor": {
          "ref": "c6e23060-dcd7-40ae-8571-f503f140a43c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "16a194b6-5429-4cf6-9e6a-49a23909a224"
        },
        "item": {
          "id": "5a49f786-255f-47c9-826f-9a1b76b71262",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7f4d5a83-e5d3-4e3f-9859-9e9dec567c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e0a3c6-b519-4670-896d-b104be761eef",
        "cursor": {
          "ref": "1c9f6f6b-b9fa-41cf-a6e9-8dba4b4bca0c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "783ec240-7276-46ec-b958-5e3160cd2975"
        },
        "item": {
          "id": "f1e0a3c6-b519-4670-896d-b104be761eef",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "07f4be63-7e35-42a5-9069-01a0ac419c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a636db2-05d6-443d-9c3c-911121a1df5a",
        "cursor": {
          "ref": "ea404a6f-97d2-4e33-b609-6e90ad421f02",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8ccbd17e-ef90-4043-b24a-69e1c4857422"
        },
        "item": {
          "id": "8a636db2-05d6-443d-9c3c-911121a1df5a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "642ea82b-c759-4cb9-9166-54f6b7cc5369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b4a423-685c-4eef-8405-65956a44a4bc",
        "cursor": {
          "ref": "935b68c7-84b7-40c0-89a0-7b0b2069276e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0d9ff988-c1e6-4590-870e-470608557e75"
        },
        "item": {
          "id": "a9b4a423-685c-4eef-8405-65956a44a4bc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cf54ff75-5497-4678-8b0f-25477e3188a7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 609,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69e8296-1779-4bab-af60-e9dc311cf0cf",
        "cursor": {
          "ref": "d731d43d-bd1f-46dd-8427-0e8ed7d81baa",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d29271ac-8fb8-42f0-8c74-f27040bb4be0"
        },
        "item": {
          "id": "a69e8296-1779-4bab-af60-e9dc311cf0cf",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5cac6178-abae-4a64-bf40-f6d6d5fd6f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defcb04d-f976-4a90-a325-d424c223291e",
        "cursor": {
          "ref": "22459868-1d91-4112-b2ac-5935378cc83b",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ff6c4d18-f68d-4901-bb20-25a72fc7d972"
        },
        "item": {
          "id": "defcb04d-f976-4a90-a325-d424c223291e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b0f19985-d789-4615-8387-bb87003a8fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd53ec5-a548-426d-990d-165bc9360b9f",
        "cursor": {
          "ref": "f470ea69-b9d4-4cc0-b98c-f67692615097",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "10669996-790c-444d-b840-159a7d46ea99"
        },
        "item": {
          "id": "bdd53ec5-a548-426d-990d-165bc9360b9f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d6cdd91b-c929-45df-92bb-7bef490bdfca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dec80e7-4963-43e3-a1cb-c96559aad6ee",
        "cursor": {
          "ref": "67773fc2-f7d8-4674-9eb7-dc547976aad8",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0b0881c4-92fa-4db4-9620-9be12ceb39dc"
        },
        "item": {
          "id": "5dec80e7-4963-43e3-a1cb-c96559aad6ee",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ef51d562-d2a0-44fe-8550-4b510fa37b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7aa5d87-a482-4ad3-9c85-01accce9c2c8",
        "cursor": {
          "ref": "6e02a224-d610-447c-b525-2de1ce73dd06",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f4e16dcf-ed89-4581-af14-ab13831e7799"
        },
        "item": {
          "id": "a7aa5d87-a482-4ad3-9c85-01accce9c2c8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e2d0d5a3-6a05-4ec2-8aac-66e3922b666e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b032c5c-d5ca-4862-824a-3f4ebeebb64d",
        "cursor": {
          "ref": "5328fefb-db4f-4b84-a41e-552f436ac7d5",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "051296ae-eb57-4db5-9714-3709d1a84ba0"
        },
        "item": {
          "id": "2b032c5c-d5ca-4862-824a-3f4ebeebb64d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "16a12059-dd7e-4d5c-abaa-77ab3d6d1fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ed8d81-0b1b-4fb8-a569-f803ed980bfb",
        "cursor": {
          "ref": "b5e41510-ad57-4c37-857b-cc8143c923d6",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bb89cd93-f2f8-4bc2-a214-8f8cac0563d9"
        },
        "item": {
          "id": "01ed8d81-0b1b-4fb8-a569-f803ed980bfb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "69ee537a-83e2-407f-851b-70a2f18fddfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3385be0-5f11-4e28-a829-89c8f8eb1ce6",
        "cursor": {
          "ref": "b5df9665-325e-4d9c-a169-85edae9e5be3",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a9ccd15b-735b-4727-a6f7-a79b14c24cc3"
        },
        "item": {
          "id": "f3385be0-5f11-4e28-a829-89c8f8eb1ce6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1efe2789-0845-4e47-a734-2ada9fc8855a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a144c7a5-c940-4d6c-8d60-1a6db1a08b02",
        "cursor": {
          "ref": "446d9bf8-ac36-4ccc-9b94-b0d36e224334",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fb84e477-3c4f-450a-bb3d-0dc960309a6d"
        },
        "item": {
          "id": "a144c7a5-c940-4d6c-8d60-1a6db1a08b02",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4bd075ad-413d-41c1-89fb-1bde705af4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8085a9-73c2-4bfa-a6f2-9dccf98c44ec",
        "cursor": {
          "ref": "439d11a6-6e1e-4b0b-a6ef-f013ee014b09",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f92974c6-e7f0-4f83-a2c5-6da8483c7256"
        },
        "item": {
          "id": "9f8085a9-73c2-4bfa-a6f2-9dccf98c44ec",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "af3bc152-272c-463e-aebd-4a9a68153317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e60ca9-e87f-47f1-bc46-1fe31aa23d18",
        "cursor": {
          "ref": "76523b73-d99e-4a55-b2d0-48bb4a76ddb9",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3b747561-9bdf-41c0-9e4c-7cc1480779f8"
        },
        "item": {
          "id": "d1e60ca9-e87f-47f1-bc46-1fe31aa23d18",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1e8d13ae-c7cb-4daf-8eaa-a83b70b9510f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e732e1-c708-47e4-9ca0-542de3488165",
        "cursor": {
          "ref": "825711ac-9912-490a-a9e8-e082110fb63a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "17a81fbb-b07b-49d2-8230-a9335ff9c98e"
        },
        "item": {
          "id": "c1e732e1-c708-47e4-9ca0-542de3488165",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2372d6c6-4dd7-4fcd-8006-f6034f327ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d751eaff-2b43-4836-bb89-24f119be9de0",
        "cursor": {
          "ref": "71523a00-1bf0-43f0-9912-f36f2642f4a3",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fc60e692-2278-4738-add9-9fb0544029be"
        },
        "item": {
          "id": "d751eaff-2b43-4836-bb89-24f119be9de0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c034c573-ec37-4561-87af-2cc91c647624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376ad260-88c3-46a5-8323-a2ffda70d9ce",
        "cursor": {
          "ref": "fac12107-0731-4d25-83f0-76e6a8bb9e44",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7af3a0dc-f631-4edd-8eeb-2cbf611d5784"
        },
        "item": {
          "id": "376ad260-88c3-46a5-8323-a2ffda70d9ce",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a0b511b3-f49c-411f-bcdb-02e4aaf9244d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9167a341-da4f-47a2-b0a1-83cec8842a05",
        "cursor": {
          "ref": "4d33a41d-7a6c-45b6-bb3d-70c51e5de386",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d41b7773-b726-4377-b405-b60248a94f31"
        },
        "item": {
          "id": "9167a341-da4f-47a2-b0a1-83cec8842a05",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "84bb52ab-cc67-4563-8212-9513d3e41471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889eed7d-cb65-47f0-8f33-3cec8f2fbf7f",
        "cursor": {
          "ref": "a6933ee0-a6d6-4ba4-8b23-7d7e9b2df90b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6bda979e-d898-41fe-81c2-4bcec342b6fc"
        },
        "item": {
          "id": "889eed7d-cb65-47f0-8f33-3cec8f2fbf7f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0fe7fe7e-18f8-411d-b777-1f8099da25d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba805e3-b5a8-45f5-b322-9b8fb9a4445c",
        "cursor": {
          "ref": "86693ccb-2ff3-4ed9-937f-faee41ab1a00",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4b78e3d3-a7fb-44df-8498-3c08878146ed"
        },
        "item": {
          "id": "dba805e3-b5a8-45f5-b322-9b8fb9a4445c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f6cbcf4c-bc6a-4e63-8870-97e70a56d9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1bb1e8-06d4-4ef2-b670-f595cefdc28e",
        "cursor": {
          "ref": "bc83a45e-0142-4fc5-954a-6ebc8f19cd2f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "139ba5e4-858c-4e10-8d38-e063e4e49abb"
        },
        "item": {
          "id": "ed1bb1e8-06d4-4ef2-b670-f595cefdc28e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7d469a51-5779-48b9-a18b-a889727cd873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244a74bf-5461-403c-bee4-dfbdd5597904",
        "cursor": {
          "ref": "2b85d747-f157-4c5e-b346-1ba65628493c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "800df500-f0e8-4f55-95bb-0cffebb167c6"
        },
        "item": {
          "id": "244a74bf-5461-403c-bee4-dfbdd5597904",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "203cbec8-9cf6-4334-a972-79d2cee4332d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5e25a3-1a5e-464f-95a0-79839ed95f4c",
        "cursor": {
          "ref": "d8abeec0-6658-4517-8649-b4f64e94b8e6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "163ea567-0543-4c26-959f-88850059e3ac"
        },
        "item": {
          "id": "6f5e25a3-1a5e-464f-95a0-79839ed95f4c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0d5ba979-7c5a-49e5-821f-ee5ae62da110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede4b9f7-4d03-4175-86ec-c26da36025a6",
        "cursor": {
          "ref": "777e5e3c-2d89-4f8e-822c-73571b5aa912",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fd86015d-ce53-40b5-a624-48f776e13f6b"
        },
        "item": {
          "id": "ede4b9f7-4d03-4175-86ec-c26da36025a6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "97fd1614-a3b5-499b-9124-5bd44eb9870c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2626da92-bf64-42cc-9056-677a0693c466",
        "cursor": {
          "ref": "a0413f99-624f-463f-9f9c-ccb33e338496",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "429493c6-5447-4e5f-adc9-bb8a921925c1"
        },
        "item": {
          "id": "2626da92-bf64-42cc-9056-677a0693c466",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1bfd103d-9ee0-4e84-ac55-e28406f0339c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec6db9d-1441-4d7b-9986-313d6938e848",
        "cursor": {
          "ref": "680a7cad-d682-463b-99b0-f521a454d54d",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2189908e-56e5-43a0-add5-27930ed1f5b8"
        },
        "item": {
          "id": "5ec6db9d-1441-4d7b-9986-313d6938e848",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c07f8347-9ebf-4c3c-a688-bc4721c3089b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2ec288-0621-4929-a9e0-8b22c261cdcb",
        "cursor": {
          "ref": "a8dc24df-8437-49fe-8941-e2fb3b81eca5",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3be8ac12-0fed-44bf-ab59-80b6da14b7a3"
        },
        "item": {
          "id": "5e2ec288-0621-4929-a9e0-8b22c261cdcb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4146c9b3-6506-4fa6-8678-584ca1270315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad88791-20cf-47b4-b22f-1d3db5b46c70",
        "cursor": {
          "ref": "bb0a0f5f-1993-4ddb-b14a-1c5db1b3c6c8",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0b7e39c5-d4c4-40c8-969a-c76544daad1e"
        },
        "item": {
          "id": "1ad88791-20cf-47b4-b22f-1d3db5b46c70",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "88e792d6-7cc8-4088-a12b-10ba1f550d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d36638-fdc3-40a0-b00a-a8eb1268e5c3",
        "cursor": {
          "ref": "949404ba-ab2d-4443-b0f0-e9e4c63eed66",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f0944e78-545b-4daf-8cf8-15c2997a7730"
        },
        "item": {
          "id": "00d36638-fdc3-40a0-b00a-a8eb1268e5c3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "985a938f-eb9a-4b2d-9b66-b9d72b76ba65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfce621-c1c0-4d07-9370-8fc5593b9e1b",
        "cursor": {
          "ref": "9cfb0efc-969a-49b1-a4fb-91683548734a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ad1b8b6b-cacd-40e0-93d3-16b7068aea24"
        },
        "item": {
          "id": "8bfce621-c1c0-4d07-9370-8fc5593b9e1b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b8fab617-50f6-4798-b616-b2576ceb0212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe7ac50-3808-49f6-a818-8509daf270e2",
        "cursor": {
          "ref": "f4a95650-e8fd-46b1-98c4-59b195a40c6a",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "960be10a-b5b9-421d-8908-ad2435ad22ae"
        },
        "item": {
          "id": "0fe7ac50-3808-49f6-a818-8509daf270e2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0dc7e3c7-78f6-401e-b8a2-dd23d6f1f19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470382cc-a351-4e67-b35c-ab5b36afb53c",
        "cursor": {
          "ref": "7cfb7007-869a-4744-889c-38ec34da5e89",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "517584f4-d641-405f-a9ae-37e0bdb61078"
        },
        "item": {
          "id": "470382cc-a351-4e67-b35c-ab5b36afb53c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a7b5aefb-6b8d-4196-a597-f67fb7be2ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2273b6f-9130-4f47-8f5d-14bd2270fcda",
        "cursor": {
          "ref": "6f5a6e5f-bf13-462e-ad7b-87fdbea4fd78",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "47449bda-a20b-4233-80a3-f95054d0207d"
        },
        "item": {
          "id": "b2273b6f-9130-4f47-8f5d-14bd2270fcda",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e3f97308-10b1-4b92-af91-9d7539ebf65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9a4be2-ed4b-4570-98c8-780562c465ed",
        "cursor": {
          "ref": "a6e1d494-040b-4f9b-902e-cd1cc5e066c4",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d13d253d-97a9-4f4f-acb8-d0450a62fa44"
        },
        "item": {
          "id": "3b9a4be2-ed4b-4570-98c8-780562c465ed",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "05b192d7-4486-41df-b6b4-67c7b9f355af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e7c93c-a279-4d11-9799-ae9c7037c719",
        "cursor": {
          "ref": "aa44920a-3d44-4e41-a678-4d6fd05023f4",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7e0094f5-7a4d-4d08-9db5-44e642e0c09c"
        },
        "item": {
          "id": "56e7c93c-a279-4d11-9799-ae9c7037c719",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "03e53b1c-e462-4c4d-b0ac-3a359e86cbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66096a7-4245-4bd3-9d45-7ef3c00c7bf6",
        "cursor": {
          "ref": "eecf860b-8072-4094-92ef-21ab5ab97db7",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0c212e4e-8236-4b16-a9f1-c25d4b1cdf5a"
        },
        "item": {
          "id": "d66096a7-4245-4bd3-9d45-7ef3c00c7bf6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fd3f7a66-febf-4ef9-bb02-3ec74416683c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc5fbf1-2949-41b9-af1b-18cc0ae593ee",
        "cursor": {
          "ref": "f9dc9b19-d924-462a-bf75-843bfc540a6c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "01c3b6cb-8b8a-403b-9690-a6b7fa417be0"
        },
        "item": {
          "id": "8fc5fbf1-2949-41b9-af1b-18cc0ae593ee",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8b48ec3f-b1fd-477e-a18a-ed09029a0278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9119b4ac-ae77-4674-a714-d1c1baf32db2",
        "cursor": {
          "ref": "d1384288-3503-424c-a627-1b4ff2f8c2a7",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4545acf9-d85a-4fbd-93d7-f21a46b62029"
        },
        "item": {
          "id": "9119b4ac-ae77-4674-a714-d1c1baf32db2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ac346e8f-c3e2-4c1d-aa88-9e1edaf3910e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6452f78b-dd2c-4300-912e-83bfb756c377",
        "cursor": {
          "ref": "123d0c32-a062-4d9d-8804-8c7466c3eb7e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6794c958-97e0-4715-a88d-a77d735f7025"
        },
        "item": {
          "id": "6452f78b-dd2c-4300-912e-83bfb756c377",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "27b8722d-e791-48eb-ade7-8ade27ef66ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df1fbbf-00c3-401f-963b-25f90d2e45b3",
        "cursor": {
          "ref": "d1875466-abcc-4ad3-9156-62c1456a8e79",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "10a01e74-b3bf-4aaa-8633-a12fc5337515"
        },
        "item": {
          "id": "7df1fbbf-00c3-401f-963b-25f90d2e45b3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6c61da05-0a22-4b3d-adc9-4e5ef43591ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2ead30-b797-4bad-a8e0-dd39b89e9177",
        "cursor": {
          "ref": "df54bab6-4fb3-49b5-a6f2-4820b0b4b3aa",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "57655704-92ea-4a75-b1ec-6c7ef33f8f93"
        },
        "item": {
          "id": "6f2ead30-b797-4bad-a8e0-dd39b89e9177",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9fb1addd-0bd1-46a0-aeda-e533b30e1e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d7b44c-9665-4cd8-9ef6-6d9bedec674b",
        "cursor": {
          "ref": "28eeea52-cdf1-4441-8d51-2bac13a75bde",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ae0e746d-d1aa-4a6a-a32b-f70d1dc1217f"
        },
        "item": {
          "id": "66d7b44c-9665-4cd8-9ef6-6d9bedec674b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "03e6c19e-7e43-4fc8-b98d-57d5fae7b939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb7b642-de15-4c14-8688-920d338f5a8d",
        "cursor": {
          "ref": "2fee8653-4fe4-4c60-a775-ab3466193255",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "755a9bac-80ea-4457-8700-28312b0bc954"
        },
        "item": {
          "id": "8bb7b642-de15-4c14-8688-920d338f5a8d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "542a1e4a-edde-48db-81de-5149944f0b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7218d878-5dc9-4d28-b51c-dbb4e8305ea2",
        "cursor": {
          "ref": "90bebda8-43d6-461c-8c6d-1e31171390af",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3123c94f-a53e-44c8-8271-67fe5a3022f4"
        },
        "item": {
          "id": "7218d878-5dc9-4d28-b51c-dbb4e8305ea2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d374f82a-7cda-4f4d-85c3-1e055b210201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 932,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9cb3fd-6479-4b02-8c93-ae8f485e65d0",
        "cursor": {
          "ref": "245dda4e-8094-4949-b5e9-231213314780",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4435a2d2-d010-43d8-aa02-f52c00a6df43"
        },
        "item": {
          "id": "6c9cb3fd-6479-4b02-8c93-ae8f485e65d0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "37251c26-6aa9-431c-9afe-873e3f72a529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 887,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cae342-da2a-4bfd-9999-8aacf9a31484",
        "cursor": {
          "ref": "f6879c6f-14b3-4c0e-ad60-2ff454cea6ea",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "46d19266-136a-49a2-8579-54695b23befd"
        },
        "item": {
          "id": "d1cae342-da2a-4bfd-9999-8aacf9a31484",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "86406f2f-b01c-4513-9f49-d2b901329154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8541c990-9f27-41c3-a2fa-57f80c84b63b",
        "cursor": {
          "ref": "3772e0f1-0120-46ab-9731-333f7e6e0c31",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0b48553d-e975-46d5-a544-ba19710119c7"
        },
        "item": {
          "id": "8541c990-9f27-41c3-a2fa-57f80c84b63b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c2845a88-7add-4448-90d2-be89983e061f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5f8b9a-8bc1-4c50-8f28-31e52fce8efe",
        "cursor": {
          "ref": "0d38a746-8eac-4658-bfe4-9673d5f87c4e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "09634597-724b-478c-a260-3a2e17e5b81f"
        },
        "item": {
          "id": "8e5f8b9a-8bc1-4c50-8f28-31e52fce8efe",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a9b8ad74-e57e-4d8d-ac5d-c8321956e286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02b117e-c6bf-4788-aaec-ec57ea4c7125",
        "cursor": {
          "ref": "7d0b6092-1335-4819-b0c1-0b26e92fc3e4",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "89769626-711c-4330-8a16-8ec7f2d6134d"
        },
        "item": {
          "id": "f02b117e-c6bf-4788-aaec-ec57ea4c7125",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6e3d36aa-6152-4200-bd1b-d11cfb83dc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde9c7a5-b0d1-494c-b0f0-c41baa22554c",
        "cursor": {
          "ref": "25d41313-a9cf-4425-96fb-c3b92c530a03",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2e1263f8-bae7-4763-bcbb-1d372e0608d8"
        },
        "item": {
          "id": "fde9c7a5-b0d1-494c-b0f0-c41baa22554c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "76cca4e0-14e5-48b8-b65e-8ea5e781c78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252a17ab-f74c-4d6d-8c01-1f1f288fdd90",
        "cursor": {
          "ref": "a758de28-49ab-42d0-911c-8d8e6d68c160",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4b006037-faf0-4d64-a963-41fa3375b925"
        },
        "item": {
          "id": "252a17ab-f74c-4d6d-8c01-1f1f288fdd90",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e900beba-869d-4524-b237-ad5d3303a3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030d2afc-e7ab-49b9-80b0-78115ae5cc33",
        "cursor": {
          "ref": "bf5e97d8-e087-4adf-8f04-ac5ffe098472",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fa50fd31-7d2a-421e-b1cc-0b862433044d"
        },
        "item": {
          "id": "030d2afc-e7ab-49b9-80b0-78115ae5cc33",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8a68be59-4ab7-407e-9ded-24544ea7510d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9325822-5450-49d2-b28c-887ff031ae90",
        "cursor": {
          "ref": "7c6a9639-a575-43c6-ab3d-6d575c96e969",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a3ef18d6-122f-4be2-86c9-b2ad36544d1c"
        },
        "item": {
          "id": "f9325822-5450-49d2-b28c-887ff031ae90",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "72b2d7f7-5258-4a38-8ecc-75bddf96d435",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055210d5-47f2-4269-9b43-a8b7b4a06757",
        "cursor": {
          "ref": "4510f4a0-c79d-4be2-9948-5abbf6e9c36c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dbddb934-f38f-4063-952a-c9722534209c"
        },
        "item": {
          "id": "055210d5-47f2-4269-9b43-a8b7b4a06757",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "e941a17f-f4bf-44f3-8565-e6ba1d477b75",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 589,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c91305-c13b-4fa0-bb32-9adbaa586651",
        "cursor": {
          "ref": "3a690490-7153-4cc9-8f18-f3a70570391c",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7818cdf0-66b9-46e9-8cea-1dca7e26c896"
        },
        "item": {
          "id": "f8c91305-c13b-4fa0-bb32-9adbaa586651",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cb69afc7-3ca2-4e38-958d-ad494fd9508a",
          "status": "Created",
          "code": 201,
          "responseTime": 4704,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbfd585-de8d-40d1-9105-75f83b003696",
        "cursor": {
          "ref": "ed8de940-036d-4097-be9f-42b4ada62b9c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a0a28b9a-1cde-4eb6-9924-e5c56a8ca247"
        },
        "item": {
          "id": "4bbfd585-de8d-40d1-9105-75f83b003696",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "20784cb4-4910-4acb-8402-a2cb825cc1fe",
          "status": "Created",
          "code": 201,
          "responseTime": 4316,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "74995af7-395c-484c-b65f-4f1f0a6e84b3",
        "cursor": {
          "ref": "a2794311-b0f5-4991-bf79-13c014e57c61",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6ac19095-191f-4b91-bb6b-a6ab67ca82be"
        },
        "item": {
          "id": "74995af7-395c-484c-b65f-4f1f0a6e84b3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9ec2cd68-f945-4059-b51e-18ec518a346d",
          "status": "Created",
          "code": 201,
          "responseTime": 7605,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43e1dbc-a576-4928-a2e0-9ac7aa12999f",
        "cursor": {
          "ref": "65f274ee-229a-45f8-803d-3fb45d1bf214",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b6f0afc8-39fd-4289-8182-3b92e95ad68b"
        },
        "item": {
          "id": "a43e1dbc-a576-4928-a2e0-9ac7aa12999f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b0cf8b8a-8b25-4cd5-a607-c179485b383d",
          "status": "Created",
          "code": 201,
          "responseTime": 4021,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "708c7942-0f16-45a8-a363-1a86c6ea3053",
        "cursor": {
          "ref": "2732e903-b1c6-423d-833a-14c95a107e35",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9e1e09c3-b047-400f-a442-4bc6216d51bf"
        },
        "item": {
          "id": "708c7942-0f16-45a8-a363-1a86c6ea3053",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "39bdd2dd-d0bb-4457-91c4-d5865ae93ed1",
          "status": "Created",
          "code": 201,
          "responseTime": 5092,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebef475-495f-4157-93a8-1a7893d58103",
        "cursor": {
          "ref": "86d3dd39-fae9-4d65-a154-ea7552449516",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b2859dc2-338f-462f-a489-9ea72448d8e4"
        },
        "item": {
          "id": "cebef475-495f-4157-93a8-1a7893d58103",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cc9d2e85-b0ff-4396-bb69-7a8b72216b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebef475-495f-4157-93a8-1a7893d58103",
        "cursor": {
          "ref": "86d3dd39-fae9-4d65-a154-ea7552449516",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b2859dc2-338f-462f-a489-9ea72448d8e4"
        },
        "item": {
          "id": "cebef475-495f-4157-93a8-1a7893d58103",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cc9d2e85-b0ff-4396-bb69-7a8b72216b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ea86de-0d2a-4371-b0d8-c9a4e86dac26",
        "cursor": {
          "ref": "aa4db1e0-1282-4f20-9258-bb00edd6db87",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "94cf1218-44d2-42a8-b190-2ea79fa7c870"
        },
        "item": {
          "id": "a4ea86de-0d2a-4371-b0d8-c9a4e86dac26",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "161aae90-6312-4af1-8053-d683af7a406b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753524a5-c93c-4c41-b0db-d45e8991785a",
        "cursor": {
          "ref": "484a3b12-d9de-47d3-ad28-71d914328a95",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c24c6db1-6ceb-4237-a922-c099257a0b6f"
        },
        "item": {
          "id": "753524a5-c93c-4c41-b0db-d45e8991785a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b456e1c6-5584-4ed1-8bec-a852af750aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1faa32d4-6cd4-4962-a379-b31b76a73144",
        "cursor": {
          "ref": "98119832-5a66-46ab-bf12-d8f95b9d21fd",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fdfa7522-e822-4fab-89f7-5338cb35103a"
        },
        "item": {
          "id": "1faa32d4-6cd4-4962-a379-b31b76a73144",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "be1f0e48-5939-4203-9820-adc85e617dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a475cf-6d6a-4496-9bd8-c289a88aa4ea",
        "cursor": {
          "ref": "d0473351-aebd-424e-96a5-a985b84e379c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "52139bb7-c1dd-4f30-a751-2dea402fcc11"
        },
        "item": {
          "id": "47a475cf-6d6a-4496-9bd8-c289a88aa4ea",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0c5022bb-bea1-4015-a407-5841b315a07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d24c183-24f1-4d01-a506-d892709f84f7",
        "cursor": {
          "ref": "3a2d2071-ff0d-44a0-9a85-6c8cc6cd7901",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5b98bf01-5fa1-4745-8164-134a6a5bb50b"
        },
        "item": {
          "id": "6d24c183-24f1-4d01-a506-d892709f84f7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c0de1a10-9fe4-427d-bd17-7e83c449a906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8cfb5f-4c34-4728-8967-f95c78f4f76f",
        "cursor": {
          "ref": "74787588-b616-4b4f-8fc1-69640a95510f",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "29d2bb7e-4d8b-4aa8-8cfe-c0eed500b512"
        },
        "item": {
          "id": "1f8cfb5f-4c34-4728-8967-f95c78f4f76f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c4bde35c-a1d7-41af-a660-00db8b416996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17333e09-159a-44df-8d05-1c5b8b5c5dd0",
        "cursor": {
          "ref": "35b4c1b1-5983-4f3f-837b-626c4162dfc8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "25967ca4-33fd-46e5-923d-d2275f4d3700"
        },
        "item": {
          "id": "17333e09-159a-44df-8d05-1c5b8b5c5dd0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9bbde040-4a8d-4c2b-98cc-70d89996ba08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057861b3-41a1-447c-aecb-e9338e67ec81",
        "cursor": {
          "ref": "1534a4c2-b650-4a58-b252-cb1b42db75b7",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e456100d-27c2-48e2-b6d6-1c6d2130b08a"
        },
        "item": {
          "id": "057861b3-41a1-447c-aecb-e9338e67ec81",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d332c221-56e9-4c9e-87bf-de85c2615fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebcfcf2-29bb-4778-8507-a1dd613f331b",
        "cursor": {
          "ref": "4e1ba3b6-ddb2-4af3-a0bc-3943a3fbdcaf",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "275fed75-8fbf-433f-af7f-a628ce61e313"
        },
        "item": {
          "id": "2ebcfcf2-29bb-4778-8507-a1dd613f331b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "02b12f17-29be-45e2-865a-e65a2ee7c603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6624c24c-cf41-4cd7-a5bc-afeb922c1322",
        "cursor": {
          "ref": "70c216ed-59c3-43f3-b703-8159b5f768c5",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3b04dd85-0d3a-487f-ba3a-ace74f47b192"
        },
        "item": {
          "id": "6624c24c-cf41-4cd7-a5bc-afeb922c1322",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cc839dce-870d-4546-a216-985185e31056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01dc92c0-1075-4fa6-8742-cabf2c32de20",
        "cursor": {
          "ref": "e953ba93-dc55-484d-a405-608b83922fca",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "96f07bea-0d13-4cc5-bb56-e5615b163611"
        },
        "item": {
          "id": "01dc92c0-1075-4fa6-8742-cabf2c32de20",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "eb1724da-17b6-4426-9829-7ec9fbb11789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3206877b-11e0-4528-bc4b-85f643f8c6be",
        "cursor": {
          "ref": "622165e5-dab7-4af0-9f3c-0821d47314ad",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e4aeb979-a1ff-46d6-b307-3c082fa7d32d"
        },
        "item": {
          "id": "3206877b-11e0-4528-bc4b-85f643f8c6be",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3d391dfc-3a4b-4ffa-be8b-7fd7ded8b6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683304ff-3e15-4d7b-8f3c-09a4102776e9",
        "cursor": {
          "ref": "d988bf4f-ed61-48fb-bbe2-bbecb279d0e1",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5c47e317-8420-4f6a-8878-78c2d9b4b0f5"
        },
        "item": {
          "id": "683304ff-3e15-4d7b-8f3c-09a4102776e9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f4649481-7db1-41df-b422-faec0a54104d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8beb82f-cb92-4e08-a04f-6f755146852f",
        "cursor": {
          "ref": "d1358c1b-79ef-4afd-a8d0-99af5f063620",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4d2f8c0c-ea0b-4414-a38c-6271c7406c73"
        },
        "item": {
          "id": "e8beb82f-cb92-4e08-a04f-6f755146852f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6b3a1f5e-c58b-4968-ae23-233f35099e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5038f6-6424-43a1-b5cb-9c9e4639fb25",
        "cursor": {
          "ref": "45c40e11-d586-4179-a448-e5a04a31f67d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "32bfc405-e94a-4ab2-a4bd-52b21ad57ce5"
        },
        "item": {
          "id": "df5038f6-6424-43a1-b5cb-9c9e4639fb25",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "adbea65b-4c07-49c3-a401-1f3df55e8b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0f990e-8d60-447b-b48e-3f9cdd82f73f",
        "cursor": {
          "ref": "9385db7c-242b-4880-9288-3d00f5e1ae33",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bc0fc8e0-52af-457f-9ae8-f39eb254cb0c"
        },
        "item": {
          "id": "ba0f990e-8d60-447b-b48e-3f9cdd82f73f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a0b936ff-1f82-48b2-b21c-90c2e4543086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87eadcd6-1326-430c-8bc0-22b21f79eb40",
        "cursor": {
          "ref": "92f1609a-e523-4fef-9db2-f8f368ac4ecd",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d22bfa39-2f29-4817-9921-cf49e0b9d1cd"
        },
        "item": {
          "id": "87eadcd6-1326-430c-8bc0-22b21f79eb40",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ec6e476a-3331-4c5a-8c47-bfa0e952c30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35347d68-5d50-42d2-afbd-34592b4840b1",
        "cursor": {
          "ref": "04217b42-f5fc-4adc-bffc-863f02b4e284",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "74b02add-69e0-4d52-83cc-e14df408611f"
        },
        "item": {
          "id": "35347d68-5d50-42d2-afbd-34592b4840b1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6d68d128-173f-477a-bc6b-bc1c265799e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54b1d30-b7c2-444b-be46-a874b8ca93a2",
        "cursor": {
          "ref": "63e5b276-1824-4617-9c1e-7e38635f5180",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "602e0df8-a342-411c-859d-c618dae98e4f"
        },
        "item": {
          "id": "b54b1d30-b7c2-444b-be46-a874b8ca93a2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "312e74f6-8ad0-422f-bbc5-6b62f75f56ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bfc767-e76e-4cd4-b075-a39d266fd527",
        "cursor": {
          "ref": "84af2129-4c00-4b74-bf50-bda25dde7e95",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "66d3a703-08e3-4fee-90ea-bbff8f0e926f"
        },
        "item": {
          "id": "76bfc767-e76e-4cd4-b075-a39d266fd527",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b60463ce-1a53-4ec7-84cc-f552d88096e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91523455-169c-4011-b646-3c15db0a72e7",
        "cursor": {
          "ref": "78f876f5-1bd2-4a0c-93ef-7d63325abd77",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "83509a2b-9387-4679-9c7f-b4bcf927610b"
        },
        "item": {
          "id": "91523455-169c-4011-b646-3c15db0a72e7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e1169c44-7ccd-48ad-b9db-5cc5ec3297f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8098b1-fdf9-4b3e-8fc5-a88700b77518",
        "cursor": {
          "ref": "d6e855ef-9f84-48d0-89a9-6803cad13de0",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ea1cf1f9-d421-4d12-b457-584308714bbb"
        },
        "item": {
          "id": "ca8098b1-fdf9-4b3e-8fc5-a88700b77518",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "396f9b61-560c-4920-bf99-d3bc57195b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688cebe4-6c12-4ea9-a56d-291ac0e113ce",
        "cursor": {
          "ref": "3c959ca0-d5b5-4dfd-83ff-f19e87c4c28a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4a8b8df2-a8e1-4982-a226-bf83efa3887b"
        },
        "item": {
          "id": "688cebe4-6c12-4ea9-a56d-291ac0e113ce",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ef17386c-a778-405a-9c90-232be6b41463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c814053-98cd-4213-aa75-5f727cedf737",
        "cursor": {
          "ref": "b7dc5dcc-a4f3-4d11-a3f6-2a1f62affa78",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a99df0e8-df14-4b8e-8132-3d773d61509d"
        },
        "item": {
          "id": "2c814053-98cd-4213-aa75-5f727cedf737",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a633623e-c991-4c31-a03c-a46b13692063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b467798-51e3-4a4f-892d-052c00a81c47",
        "cursor": {
          "ref": "6149bd1a-d803-4f6d-8924-d528e19bc382",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d62bb326-f90d-4c5f-b0d2-44d08fc726c3"
        },
        "item": {
          "id": "2b467798-51e3-4a4f-892d-052c00a81c47",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "54d328d3-f3a3-44c8-a796-3241670c1781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0eb780-0b40-47e5-ac41-fad4f95c5ac4",
        "cursor": {
          "ref": "bf400a49-2b7a-4647-aa71-cbe5d823ffc2",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "30b102f2-d9e7-45d3-9635-0a098028004b"
        },
        "item": {
          "id": "2e0eb780-0b40-47e5-ac41-fad4f95c5ac4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9d504c0a-efb4-4c4e-b312-71e57dc9de35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b23d947-381b-43e3-8a05-29ae3f8a1596",
        "cursor": {
          "ref": "9594ff9e-c17f-4b64-8433-0168a09b677c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ef0779cc-b63f-4434-9063-d395ac343de3"
        },
        "item": {
          "id": "3b23d947-381b-43e3-8a05-29ae3f8a1596",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f3a83034-2b00-4aca-a610-442c0cb1dc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5f5d5b-9e75-4f3c-8b74-8876c2e029f7",
        "cursor": {
          "ref": "a32a669c-21de-4c7c-b98a-e3e96c2507ee",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "235bc35f-4778-4579-bf0f-1ba1fea8bb07"
        },
        "item": {
          "id": "ea5f5d5b-9e75-4f3c-8b74-8876c2e029f7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "98ea4c2e-3ffb-466a-a4ca-9b4a78f0941d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea663f02-87b5-47ab-8aa4-cd94e02d3f67",
        "cursor": {
          "ref": "07bbb13d-de05-4cc5-9d68-2cbc4c871fc0",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2e89b916-60e7-412b-a8d3-1f82d77f7599"
        },
        "item": {
          "id": "ea663f02-87b5-47ab-8aa4-cd94e02d3f67",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b5cbc057-0a4e-4ff0-bd30-be44e5f30d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d7a98f-d178-4860-ad43-a13a6017d374",
        "cursor": {
          "ref": "12b5fd7d-99a1-4d98-9fd5-c64021758d89",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "58adaa52-6981-489b-8895-5ef11d175fc0"
        },
        "item": {
          "id": "97d7a98f-d178-4860-ad43-a13a6017d374",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7f4b8ea3-8cab-4d28-a0ac-9737db919bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7197578e-d3c3-48c3-a488-794a8c7f6578",
        "cursor": {
          "ref": "3e5872b9-aef3-414c-96db-bf6524981755",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f8b67688-e2d5-4142-afa5-5fa758daad28"
        },
        "item": {
          "id": "7197578e-d3c3-48c3-a488-794a8c7f6578",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "16b37477-f561-41f5-8c99-577df97bee71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8768f680-8138-45ec-8d40-c1aedb2be5e1",
        "cursor": {
          "ref": "b8947a53-7ada-48b5-9d0a-9c654af23ee8",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8d24bcd7-18c0-4cde-a67d-bef967c06a18"
        },
        "item": {
          "id": "8768f680-8138-45ec-8d40-c1aedb2be5e1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e95bc01a-acb0-46a0-ad80-61e016e102ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f38f14-d0fa-48c1-9c82-1d3ca84f8c64",
        "cursor": {
          "ref": "f9f61ada-2c15-46a4-a52a-7eb0f42a0fbc",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "aebf98e1-77f3-49b2-84dc-8bcd8b1b2e43"
        },
        "item": {
          "id": "d4f38f14-d0fa-48c1-9c82-1d3ca84f8c64",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "977d5574-5358-450b-8f49-fd9fe7a13db4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 519,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85c7f95-d15b-4db2-b3d1-75eb3fbb9331",
        "cursor": {
          "ref": "0b97a3dd-6b9f-4e23-b040-75f12cca5e02",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f15688a9-99e4-48a9-8072-af8defcefce6"
        },
        "item": {
          "id": "b85c7f95-d15b-4db2-b3d1-75eb3fbb9331",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "905945e8-5e6f-47e4-8f86-68844a7c43c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85c7f95-d15b-4db2-b3d1-75eb3fbb9331",
        "cursor": {
          "ref": "0b97a3dd-6b9f-4e23-b040-75f12cca5e02",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f15688a9-99e4-48a9-8072-af8defcefce6"
        },
        "item": {
          "id": "b85c7f95-d15b-4db2-b3d1-75eb3fbb9331",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "905945e8-5e6f-47e4-8f86-68844a7c43c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c31371-bc91-4174-991f-e05436cb12bf",
        "cursor": {
          "ref": "2a687cc8-4c87-4156-a01c-be091d76f06e",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3971b704-7268-4299-8589-f37b5ae4ff1e"
        },
        "item": {
          "id": "c2c31371-bc91-4174-991f-e05436cb12bf",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "972e02a6-d880-4d04-94e7-eb2edc0d0117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4822b21d-8fb8-4de8-a9d0-5febc6efe3cd",
        "cursor": {
          "ref": "de282031-bafa-48b5-8caf-b681edee0eb9",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d961d237-6fba-4cb3-9d9b-1a79fa491a7b"
        },
        "item": {
          "id": "4822b21d-8fb8-4de8-a9d0-5febc6efe3cd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2c55ce72-4720-49f8-878b-73c8276c66dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7552834f-6b1e-4178-8241-da4c6c79ea33",
        "cursor": {
          "ref": "6f228a33-cf4e-4c08-b336-0873f46f9697",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "76393e67-c0df-4706-bc70-c1010ef5115a"
        },
        "item": {
          "id": "7552834f-6b1e-4178-8241-da4c6c79ea33",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "56f3c82f-3066-40c5-bcbe-e00b7be66f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2cdcd2-4d87-4afb-a2be-e1281c7b3a75",
        "cursor": {
          "ref": "1d3bbf1d-f0a7-423b-8b2b-a0b7169ef12b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ade81119-2f20-4ef8-932b-4a0d3c80386a"
        },
        "item": {
          "id": "5b2cdcd2-4d87-4afb-a2be-e1281c7b3a75",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ee398658-9d22-43dd-95be-f864d1b4e246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6121f7-e8b3-42f8-bccf-a672c648d89f",
        "cursor": {
          "ref": "6462aa63-0c26-4f4c-9f68-fe90e5f112e8",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6fcd83ad-5084-4259-a5ac-c6ee2181fb2e"
        },
        "item": {
          "id": "de6121f7-e8b3-42f8-bccf-a672c648d89f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b451ef86-9582-48ce-9615-6c17bf3da490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0e677e-7f2c-46ac-914c-0b410dd599ee",
        "cursor": {
          "ref": "3f9c83f0-89d2-4283-a56d-ab47724ae0ee",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b16e9234-c688-481e-9ad5-afc3f6f94ccb"
        },
        "item": {
          "id": "6f0e677e-7f2c-46ac-914c-0b410dd599ee",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9521c322-db7a-4cc8-9f48-ef33a06f0c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cdd2db-6709-4cc9-bcea-ced61fbeac90",
        "cursor": {
          "ref": "10c8523b-138a-44ab-8262-a49fc0f1f961",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "57602d66-5fa8-4a7f-9898-9ab9edb66c83"
        },
        "item": {
          "id": "46cdd2db-6709-4cc9-bcea-ced61fbeac90",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9d217b88-b0a6-43e1-9803-8f229ff2875d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3924181b-963e-42cd-a503-135bab2eb150",
        "cursor": {
          "ref": "1cec9f50-b8ff-4f5d-bb84-7fe3f3295d52",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "651d9696-11d9-4619-babc-5b763e90eb99"
        },
        "item": {
          "id": "3924181b-963e-42cd-a503-135bab2eb150",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "319ac795-dccb-46d0-a60e-cf2a96437bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be38c568-2118-429d-8de9-9630dc5004ed",
        "cursor": {
          "ref": "49204566-92b1-44bf-801a-362338ebe313",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "09f24671-3bde-4d1e-82f0-326e540affbb"
        },
        "item": {
          "id": "be38c568-2118-429d-8de9-9630dc5004ed",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "df05c930-ce93-44cb-9d39-32773822b252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7733dc73-3326-40a9-b3c1-e01bfecd4df7",
        "cursor": {
          "ref": "534d65de-311b-47f0-aa6d-ac3fb52b684b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "37b447be-e61b-450a-9ddf-43e6a05223ea"
        },
        "item": {
          "id": "7733dc73-3326-40a9-b3c1-e01bfecd4df7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "97f6819c-26f0-4c2e-8023-b0d5b5289719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f3dc6f-6f5c-48fc-91b8-212ff5f30ad1",
        "cursor": {
          "ref": "20a9abd8-dff3-4469-908c-51c861f04ba6",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "45e6e2e6-fe3b-4db9-a0e2-90703281dd66"
        },
        "item": {
          "id": "72f3dc6f-6f5c-48fc-91b8-212ff5f30ad1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a020fb5c-246e-4493-a3c4-2f9ee7ec5259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d539a29-d86f-4171-9473-9ba06064eefd",
        "cursor": {
          "ref": "3855342c-d343-4ac3-9e6b-57ba9d55fcde",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5d0150fe-78e8-48b7-975e-68f5c8cab6ae"
        },
        "item": {
          "id": "5d539a29-d86f-4171-9473-9ba06064eefd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a6984a20-8ab3-49d2-9f0c-2266157e4f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e0fc79-732c-451b-8dc8-769829430ff4",
        "cursor": {
          "ref": "5bb58bf7-80d4-4ce1-bf7e-2366f17ce261",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5ad35c61-c3c3-4f60-b638-720d8b5d8b36"
        },
        "item": {
          "id": "e9e0fc79-732c-451b-8dc8-769829430ff4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ccd7cca7-8fe2-4670-8c2b-025a195abd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc97a481-fb30-42ee-b716-edb23105bfc7",
        "cursor": {
          "ref": "b7838945-218e-4b86-9644-283186ef5239",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2fded3eb-169c-46d0-a563-2d7cbe452304"
        },
        "item": {
          "id": "cc97a481-fb30-42ee-b716-edb23105bfc7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b72680d7-fc88-4528-8db5-f5c3ab66a32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22af01e-6a52-44bc-8ba4-2ee6a60fe944",
        "cursor": {
          "ref": "707a6b21-f660-46ef-810c-8a44888611fa",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8016c3ee-e4f8-4f09-bc68-7ba2e85a4c37"
        },
        "item": {
          "id": "a22af01e-6a52-44bc-8ba4-2ee6a60fe944",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1a793b3b-312c-49fa-8340-148fc467ad70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c605ef5-1879-4219-a5e2-9613dc144aab",
        "cursor": {
          "ref": "4f8a010f-dba6-45a8-9599-e33409589515",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "64576fa2-027c-4915-8189-4758efb2abe5"
        },
        "item": {
          "id": "0c605ef5-1879-4219-a5e2-9613dc144aab",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d66169db-7ba4-4699-86e5-f191623216b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9279c9d9-b23d-4b7c-a99c-991db18027de",
        "cursor": {
          "ref": "d172ccc5-445d-4139-9d75-d99fc82d0128",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8b9d77dc-3154-441b-b347-db04bda4e428"
        },
        "item": {
          "id": "9279c9d9-b23d-4b7c-a99c-991db18027de",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bc6728ed-c2c7-4ad8-a810-01ff1d75a4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e960bc-2298-4e29-8a27-c18f132142c4",
        "cursor": {
          "ref": "4a60a3d7-f987-4c22-b66d-3e3e5bf8089d",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b757b208-47a7-4bc2-ac1b-199496afd824"
        },
        "item": {
          "id": "71e960bc-2298-4e29-8a27-c18f132142c4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "89dbee1a-3ac2-460c-b1c9-76c260f45c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debf6c62-4244-4af2-83ee-2c0b3c3de4da",
        "cursor": {
          "ref": "6e55fa33-0063-42a6-abe6-71d667fbf8a3",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7a8362e6-833c-4abd-8f1d-f05ab81ad791"
        },
        "item": {
          "id": "debf6c62-4244-4af2-83ee-2c0b3c3de4da",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2efd5116-bc59-4fae-81fa-8c7a19173c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32533c3c-c37f-48ca-b40d-bd77fbd96de6",
        "cursor": {
          "ref": "6be2bf77-566d-4af5-86fd-ef93eadb0f3b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "451813f4-eb19-463f-976b-163573fadccb"
        },
        "item": {
          "id": "32533c3c-c37f-48ca-b40d-bd77fbd96de6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "44efad82-a940-4351-899b-38134bd58782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70c08f5-af79-4b54-8fa1-b12e10cce3e1",
        "cursor": {
          "ref": "e1701ab3-ab6f-4845-8281-f1ac499909d6",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "851a3f17-d5be-4bcf-b31b-b96a9c175f88"
        },
        "item": {
          "id": "b70c08f5-af79-4b54-8fa1-b12e10cce3e1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5710e3e1-e610-42fe-8859-2834f66897b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd034970-91c4-45f8-bd26-a304cfbd024d",
        "cursor": {
          "ref": "09162af2-5b7f-4276-bf8c-3a7e5f76b322",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "214e549f-6240-4588-af5e-fc53665e97df"
        },
        "item": {
          "id": "fd034970-91c4-45f8-bd26-a304cfbd024d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "77a3e319-013c-45e4-86e8-39abd3974689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457a101c-4e4b-478f-8919-59339fbc59be",
        "cursor": {
          "ref": "901376c9-7e06-47f1-bf84-39b0185bbbbe",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8db8232a-9ab0-457c-94c1-8056688d5f6b"
        },
        "item": {
          "id": "457a101c-4e4b-478f-8919-59339fbc59be",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "91a27252-df07-41eb-bb50-ec521b2dd881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24808a57-856e-4b29-aa3f-24b76a77d189",
        "cursor": {
          "ref": "9066ff9f-14fb-48b3-8ecd-081a05cfbad4",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8a1cf86d-629c-43e7-855b-f564d29651db"
        },
        "item": {
          "id": "24808a57-856e-4b29-aa3f-24b76a77d189",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8a063054-cdf8-47d9-9379-a9c1af39345e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4168ce89-7e8a-483b-a037-2914b75c5e0f",
        "cursor": {
          "ref": "bff9eee7-ead2-49e5-8611-143da3807099",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f165a670-9b40-4827-a5ff-9bf65e03f4b6"
        },
        "item": {
          "id": "4168ce89-7e8a-483b-a037-2914b75c5e0f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "dd2f4ffe-4cd6-4719-92a2-1756710da83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d029abe-3c21-4277-8ffd-45e6deb8cc20",
        "cursor": {
          "ref": "47b6080b-c0a2-4d36-ae04-02010ed0fd46",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "930c02b2-7f3b-4f2b-9aed-1c69e3fb2fed"
        },
        "item": {
          "id": "0d029abe-3c21-4277-8ffd-45e6deb8cc20",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0e00dfb2-200a-49fd-b9e9-7995d50378db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2385be-761b-4d4d-80fe-4bbe91ce39ba",
        "cursor": {
          "ref": "f5a28f93-4a2d-4780-b46c-f4d0f01e07fa",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "083d07f1-178e-4211-bf88-36dd1844a0d9"
        },
        "item": {
          "id": "dd2385be-761b-4d4d-80fe-4bbe91ce39ba",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3af6e53d-aefe-4e48-94f1-7dc67bcbc33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080b2b83-7592-43ae-90b6-efb5cb520fe7",
        "cursor": {
          "ref": "2d847a1a-378f-4f31-8bf1-8271dc6f1bb7",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fc6a93b2-3fbd-45bf-9600-589b0d3fa7ce"
        },
        "item": {
          "id": "080b2b83-7592-43ae-90b6-efb5cb520fe7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d614b5dc-17bb-40bf-bf1d-54f45edc4a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98156319-f427-4ce3-948a-746f39bb2adf",
        "cursor": {
          "ref": "9c2aa7cb-d931-4efe-8cb2-81a815ff9e8d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9844427c-f197-410d-abcc-b027f873b5da"
        },
        "item": {
          "id": "98156319-f427-4ce3-948a-746f39bb2adf",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "69893eba-457a-4170-8521-1fd1f0fbb716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ab6712-e54a-4b4e-b41e-f60e316494c5",
        "cursor": {
          "ref": "b2f79c52-9e73-4fbf-a94b-0c33805629c6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f3963dd3-2281-45c1-bb13-3233032ad1ab"
        },
        "item": {
          "id": "29ab6712-e54a-4b4e-b41e-f60e316494c5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bb81028d-d05e-4363-9921-cf6cce3bbcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a51aa9c-edf2-49e9-b39c-495c920ba33c",
        "cursor": {
          "ref": "327c57a3-3558-4e84-a9ae-8775404798aa",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6d03b464-d537-4450-babb-368c4fc53428"
        },
        "item": {
          "id": "1a51aa9c-edf2-49e9-b39c-495c920ba33c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "236ce700-57d9-4e9d-9dac-5c8873424083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28711840-e1d2-4dad-9b2a-fbd306d4189c",
        "cursor": {
          "ref": "a32ac7db-3da2-4748-9fc5-1419aca43437",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6cb6971f-df91-4861-97a5-5b5113c46625"
        },
        "item": {
          "id": "28711840-e1d2-4dad-9b2a-fbd306d4189c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "88add359-eee3-4433-b1d9-1fa7af372a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6a9cda-a25f-4607-a6aa-1b2f508a2c15",
        "cursor": {
          "ref": "7a38dcaa-c82b-4a77-8e7c-dd63dfdecf5d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c6b0a524-c514-4b6b-a505-065708798ce1"
        },
        "item": {
          "id": "fc6a9cda-a25f-4607-a6aa-1b2f508a2c15",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ee0f8705-e739-49a6-8dc0-21c4585d9f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad5e63a-ee4a-4e52-bb30-523cc068f020",
        "cursor": {
          "ref": "73a5de55-ffa4-496b-a81d-739de8f6d232",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "aa086100-2929-4fda-92ec-af39d995e1eb"
        },
        "item": {
          "id": "bad5e63a-ee4a-4e52-bb30-523cc068f020",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a2238cc7-41a9-4af6-bbd2-ddf3885f6d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e73f08f-e477-4276-b87a-288e95516bff",
        "cursor": {
          "ref": "4e9f72a0-9731-4ab8-99b6-be18e4f98bca",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "307810b5-af5c-49dc-8fa1-2b576e325e5c"
        },
        "item": {
          "id": "1e73f08f-e477-4276-b87a-288e95516bff",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "38149620-a445-4e38-94b8-035657e8dbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280c7845-a75d-44a5-a659-f67bccaf140f",
        "cursor": {
          "ref": "f66d5207-780b-4dcb-a33d-5a643e971300",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "12835a3c-f433-47e5-9d32-6fce5cb24f1c"
        },
        "item": {
          "id": "280c7845-a75d-44a5-a659-f67bccaf140f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6993d8e9-0e71-45ae-ad75-ab163a88681c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d70520-03fc-4daa-ab69-37255a89deec",
        "cursor": {
          "ref": "5f9591f0-2d39-45d6-8c34-d092c18997d0",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fa4b1e73-4cb9-4345-b5b2-08a47200c65a"
        },
        "item": {
          "id": "a0d70520-03fc-4daa-ab69-37255a89deec",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7b35d3f7-698c-4fe8-a3d9-922623417830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce76bf3-a6a6-4232-98f9-55a68a2d0fb9",
        "cursor": {
          "ref": "2c718ee4-e160-4c96-99e6-29a393d371b0",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "992ed499-cd85-44be-8ec6-90a32601e569"
        },
        "item": {
          "id": "0ce76bf3-a6a6-4232-98f9-55a68a2d0fb9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "02954dc5-4051-40d9-97f3-d940251374e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d9cd5b-3ce6-47a2-abbb-c14b80cd0eaa",
        "cursor": {
          "ref": "8364fb89-803d-451b-a54d-aa98e21ee073",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "960615f2-ed60-4ef6-a22f-8c5389de20bd"
        },
        "item": {
          "id": "55d9cd5b-3ce6-47a2-abbb-c14b80cd0eaa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "445844d7-3fb4-4361-8345-8cf66b1d445f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c86e865-c866-4426-a107-b3089bd068f9",
        "cursor": {
          "ref": "c755a8dc-55a9-49c6-8884-e228d7d9f218",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "527c0350-1f3c-449a-b06a-5d35b5901f96"
        },
        "item": {
          "id": "7c86e865-c866-4426-a107-b3089bd068f9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fc04562c-c09e-4629-86d7-f1a1224d7988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f499ebd4-6197-4766-8b26-6b1c673f3949",
        "cursor": {
          "ref": "4f129cbb-6f49-4fdc-85ac-e5b8293d6d43",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "527a408c-1e07-4c0e-a363-4152c1384b96"
        },
        "item": {
          "id": "f499ebd4-6197-4766-8b26-6b1c673f3949",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "45e7c175-0dbd-4c60-8263-9b4dc0d91faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9d7d9e-cd50-4a75-a4e7-a592b464dc4f",
        "cursor": {
          "ref": "d3589600-1e68-4f5a-a510-bac027bb0d36",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bf940f2e-09b7-4ac3-a65e-eb7a281fd622"
        },
        "item": {
          "id": "4b9d7d9e-cd50-4a75-a4e7-a592b464dc4f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a4460e34-bf63-4bf0-81c9-1713948d244f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe60d98-eb76-4276-9286-c919239cbca9",
        "cursor": {
          "ref": "54a35029-5f4a-4f19-8c9a-e86f00e8f72a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0df23ed8-b459-4b8d-a683-01b7b6701016"
        },
        "item": {
          "id": "6fe60d98-eb76-4276-9286-c919239cbca9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7a817eba-5f49-47d7-a19f-860a450ed2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16db1f01-18b0-4c34-aaca-ed7d9599f316",
        "cursor": {
          "ref": "bebfef46-8f83-4c67-9390-55251926c7a3",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "af6aedff-a704-4ab9-85cf-43c7d5363ba2"
        },
        "item": {
          "id": "16db1f01-18b0-4c34-aaca-ed7d9599f316",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "aca72213-ca0b-4e75-88b6-e313644a6cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f3edd2-ab23-4cf1-aed8-3ee8408beeb2",
        "cursor": {
          "ref": "253a5a7c-91c3-41d5-853a-2f1fb74e0a0f",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a9447f20-a977-4b2b-9904-50d828aaaf3a"
        },
        "item": {
          "id": "a6f3edd2-ab23-4cf1-aed8-3ee8408beeb2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2336ff51-b974-4975-b0be-6dbfb62907fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72648b6a-45b1-4b45-807c-7c8efcc39146",
        "cursor": {
          "ref": "9acfaa1c-ee4c-4e17-bde1-13c5a9978f89",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0a87e50a-c0e2-4fc0-b803-745b35c03e8c"
        },
        "item": {
          "id": "72648b6a-45b1-4b45-807c-7c8efcc39146",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d7fbd16e-1640-4851-ba16-9cdcb82a29d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a475e7e7-c0e5-4e62-9927-9ecfc5d792f1",
        "cursor": {
          "ref": "5c4660ef-a927-4ce5-8a50-884055d15e62",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "734335d1-3b14-4028-8fee-f9087c47c61b"
        },
        "item": {
          "id": "a475e7e7-c0e5-4e62-9927-9ecfc5d792f1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e14191fb-54be-4470-b111-a97f1a465b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755b8641-0bc4-4fc2-89f5-713e164275c4",
        "cursor": {
          "ref": "1b866feb-176c-4d94-af64-f8ffd045c459",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "af26d54f-4e8e-42b0-aa09-640f5120f680"
        },
        "item": {
          "id": "755b8641-0bc4-4fc2-89f5-713e164275c4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "807383a1-25b1-47e5-82f6-0d47591ddc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101c8358-4807-442f-9231-6a999b205d0c",
        "cursor": {
          "ref": "ccaa6397-0837-4f6e-aec9-3d42e465d9c4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c77c0e84-0fec-45ce-a7a1-ee34eaed85ac"
        },
        "item": {
          "id": "101c8358-4807-442f-9231-6a999b205d0c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "501d25af-8c26-4754-85e6-4ebbf808a3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6212c6-b11d-4014-a1cc-b5dada2bedb2",
        "cursor": {
          "ref": "57e0ecb6-bc52-4b01-84cf-2c975ecaac29",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2d2afc32-6d0c-468f-b93b-0e176da16e29"
        },
        "item": {
          "id": "3d6212c6-b11d-4014-a1cc-b5dada2bedb2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d4b047e0-7e34-462e-8df3-d177b2bb3220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b9ffe3-fc4d-48b6-b423-24f2c875a05d",
        "cursor": {
          "ref": "2af3b2ea-e899-40a4-b634-5cb8c70c0850",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f77a6595-ef7b-4641-b869-db957cb3e89c"
        },
        "item": {
          "id": "95b9ffe3-fc4d-48b6-b423-24f2c875a05d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5a163cfa-6b6d-42b4-94e0-06d1c9e84c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bce72d-7ea9-4dfe-ade6-be2be39db7df",
        "cursor": {
          "ref": "bb1ac02f-9031-4963-93a0-62cf6c58e7df",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "843eb066-43aa-47e7-841c-fe896d9c3790"
        },
        "item": {
          "id": "74bce72d-7ea9-4dfe-ade6-be2be39db7df",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f97feb6d-c85f-46d9-8fbb-20727bc602d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d69b6fc-9ba8-46ec-a4fb-76392883b041",
        "cursor": {
          "ref": "c3ac4414-9b00-4db8-8ee3-bc347207ad7c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "70491556-d424-43d0-8d74-4f1db2daac45"
        },
        "item": {
          "id": "7d69b6fc-9ba8-46ec-a4fb-76392883b041",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f1070a33-88f2-42a2-a3b8-0f939026c4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807a9264-b84c-42ba-b15d-2a80806b5ee1",
        "cursor": {
          "ref": "13dd5e98-397f-4653-8341-5b532e46175d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e490268d-0ac6-45e3-a2ef-3392a2883b44"
        },
        "item": {
          "id": "807a9264-b84c-42ba-b15d-2a80806b5ee1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "41032c05-11b2-4b92-9b68-4331e9f25b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a904a14-f913-4cb4-932b-a205e3bc7325",
        "cursor": {
          "ref": "fc661c1a-1714-4916-96f1-ae57763bd278",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "59ac3f94-de7e-4b0c-9df0-3fdbd8444642"
        },
        "item": {
          "id": "1a904a14-f913-4cb4-932b-a205e3bc7325",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "90d2dfce-633b-492e-8774-d635409b5453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769fe7d7-e21f-44af-90ca-328ee2103178",
        "cursor": {
          "ref": "5fa956da-b00e-4eb8-bf0c-81d816662666",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "80117cea-6944-4954-8630-ca656f6fd91e"
        },
        "item": {
          "id": "769fe7d7-e21f-44af-90ca-328ee2103178",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b25a2353-1caf-492d-aef7-677974bfca66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1001,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf149d46-e689-401d-ac59-00693123917c",
        "cursor": {
          "ref": "58a370c3-19fb-435b-8fb2-9bbf83addc5a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "439b81fa-a267-4ccd-a36c-67d1e3afa60a"
        },
        "item": {
          "id": "bf149d46-e689-401d-ac59-00693123917c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f3f5b3e4-7dc0-4ca4-b978-d8e56932313a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720b1f93-5189-495a-9b4f-6df1f9b364b5",
        "cursor": {
          "ref": "b291bf54-1867-4ec0-8f5e-4af249ae8efc",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d73103a5-f81a-4c80-838f-6729e5b37d0d"
        },
        "item": {
          "id": "720b1f93-5189-495a-9b4f-6df1f9b364b5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1bd2aac5-6a90-4f62-8730-7b9a1a1f5be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72b98cd-1a6b-4aca-b85a-25768c563544",
        "cursor": {
          "ref": "144a8d05-8845-41ef-b3a7-091e07298bea",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0d9f74e5-1cd1-4809-a0a4-41c5ce1d39d8"
        },
        "item": {
          "id": "a72b98cd-1a6b-4aca-b85a-25768c563544",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0313b813-8efe-467c-bd41-8c55d8956e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e026420e-0832-42f4-b232-2c564ac90f7d",
        "cursor": {
          "ref": "d77ab206-e1c3-415a-b48b-4fc12d0a7586",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "861a8c79-4c77-425e-8f97-8f55a4093374"
        },
        "item": {
          "id": "e026420e-0832-42f4-b232-2c564ac90f7d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7078cf6f-b969-4439-b598-839e1314842a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64580ac2-29a3-4b6e-a0ce-a170f3bea791",
        "cursor": {
          "ref": "fbdc976c-0112-42bb-847f-2bbaad91d43f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7ac3bb19-ea7c-4fc4-b82d-a11fbf8c8286"
        },
        "item": {
          "id": "64580ac2-29a3-4b6e-a0ce-a170f3bea791",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "005ef426-cead-459c-841c-cd8fcf79295e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82912573-cf79-410d-afbe-d362ae7b8d63",
        "cursor": {
          "ref": "54e896bf-2f8c-4d4d-9033-cbcc3e064ddc",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f7e6a7bb-d548-4df2-9a8a-8b779b36d8d4"
        },
        "item": {
          "id": "82912573-cf79-410d-afbe-d362ae7b8d63",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fe8db277-3f04-49d6-b51f-61ad4cac169f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe3bcb6-f78b-409b-b6b9-bdbc67d63dcf",
        "cursor": {
          "ref": "600beb64-1fe9-439f-9be2-63754a0e0d63",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5f071f71-fc96-4995-b12d-d187fc5d13e3"
        },
        "item": {
          "id": "bfe3bcb6-f78b-409b-b6b9-bdbc67d63dcf",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b386b181-b4d4-4aa8-92cc-f43a631d2bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc7c463-e33e-407b-9bc8-1e6f064e3af1",
        "cursor": {
          "ref": "63761bf2-698a-4d9c-811c-4e0f5f6528e7",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6244bfb0-e8aa-4962-a93a-feb7aa9e303d"
        },
        "item": {
          "id": "5bc7c463-e33e-407b-9bc8-1e6f064e3af1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9b8ba529-c33f-4f8d-9557-f0c71bc412f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c0a686-828b-4efe-9aa5-808f36ad5af1",
        "cursor": {
          "ref": "a37bbb18-2316-450d-8677-6a7027a06396",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "69c64fca-ae34-49f2-983d-1800799dc74b"
        },
        "item": {
          "id": "92c0a686-828b-4efe-9aa5-808f36ad5af1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bc7ba669-d372-485c-aa23-c13c30605f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c1c4f8-dcca-408b-bd73-870b68102301",
        "cursor": {
          "ref": "54891a8f-18c9-4f2c-8757-78219df05df9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4bf216fb-4ce2-4c99-98c7-b8d7d9a044df"
        },
        "item": {
          "id": "57c1c4f8-dcca-408b-bd73-870b68102301",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e62e0495-d0f5-4296-8f93-4098b5baef90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f7da0f-29a8-4f28-b147-499283baabf1",
        "cursor": {
          "ref": "350dd329-82e5-479a-8250-5cfc8a3d2d1a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "be4a9bc6-32ab-4f53-85a9-c6be786d70d4"
        },
        "item": {
          "id": "a4f7da0f-29a8-4f28-b147-499283baabf1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "69b7f2c0-1e1a-489a-bc15-ea6fef06e90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f3e845-efff-4867-8338-783cf18e5d44",
        "cursor": {
          "ref": "0f2639f4-158c-4f63-b69a-99b638512d23",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0989bbda-771c-4674-a556-f4359952feef"
        },
        "item": {
          "id": "39f3e845-efff-4867-8338-783cf18e5d44",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "10d9f300-c8ef-4d6b-b4fe-d8807a4060a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2677d273-a452-45d9-8a93-9883f478861b",
        "cursor": {
          "ref": "e27b9e49-7638-4621-806d-5b0edbef4302",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b2c98019-61e9-41f5-9fd5-14a42659bd4b"
        },
        "item": {
          "id": "2677d273-a452-45d9-8a93-9883f478861b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f8254cd5-0cd6-4376-9654-ce99373fc7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ee787e-6df7-4cb6-99e0-8a2d7beed6c5",
        "cursor": {
          "ref": "2bd1de2e-7ad3-4b96-be9c-4a3394125ca5",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bd035617-f90d-45c9-88ca-2cad3fa89187"
        },
        "item": {
          "id": "81ee787e-6df7-4cb6-99e0-8a2d7beed6c5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "76784e95-8d8c-4e9f-a0c1-921755cb598d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503fb96c-8e24-45ca-a9d6-eb30ecac6451",
        "cursor": {
          "ref": "8458a145-faaa-4755-bad1-d71e385edf3b",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4740cac7-a255-487f-a73c-6fc259034db8"
        },
        "item": {
          "id": "503fb96c-8e24-45ca-a9d6-eb30ecac6451",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e1da88ab-8d31-4d9d-91c2-5f4167552de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0297b75a-885a-4ec1-a631-a8e45983741b",
        "cursor": {
          "ref": "bf5578af-4857-428b-ac7c-bda9aeded8f0",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "59da7756-ac13-4910-83b7-053cfb26eec2"
        },
        "item": {
          "id": "0297b75a-885a-4ec1-a631-a8e45983741b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "33803501-1a64-4211-9b10-8737599d7337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f1ea58-2663-4e68-8888-a4bb2e3d851b",
        "cursor": {
          "ref": "d893998a-2e80-49c0-a09c-aa62f2e85e22",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "78a7c4e7-08dc-4812-9100-de8a860fe664"
        },
        "item": {
          "id": "b0f1ea58-2663-4e68-8888-a4bb2e3d851b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "30b07b21-c370-439c-a0aa-f9c0d4f19900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4901ff66-1cbe-41f1-a020-4afda79e3c34",
        "cursor": {
          "ref": "09faf6d8-4d1c-4064-821d-cf55afa9d220",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "98f4eb88-0a87-4d0c-b9a7-59a202294b33"
        },
        "item": {
          "id": "4901ff66-1cbe-41f1-a020-4afda79e3c34",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8481168f-62ba-4479-8073-eff3a820c758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 991,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5826847d-74eb-42dc-8c7b-459422b5b8f6",
        "cursor": {
          "ref": "c52437fe-37a1-42da-98ee-e74dfdf930dc",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fdcfe933-d368-4837-a8f4-981ffe6c3a6b"
        },
        "item": {
          "id": "5826847d-74eb-42dc-8c7b-459422b5b8f6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "874e2bb2-92e4-4d9c-a43e-05ad3dd7b516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 933,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b568cc-f152-418d-9a40-2a950649b2e4",
        "cursor": {
          "ref": "412d5f42-a76e-4667-9061-4638cd640d6a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fe087357-16a7-4854-b7e9-76c7405d4cdb"
        },
        "item": {
          "id": "87b568cc-f152-418d-9a40-2a950649b2e4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f7c83e08-3a24-46e6-beac-1941ce7ac508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1163,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58982577-0cbc-4f91-b1ea-5e42028a645e",
        "cursor": {
          "ref": "04a135fa-7e83-4094-811b-9ecb8246685b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1d2f7523-b1d5-440f-b7c9-9cd9c6469dc6"
        },
        "item": {
          "id": "58982577-0cbc-4f91-b1ea-5e42028a645e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "65adee89-47f2-4bc6-b12b-084d4bec8c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 958,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c3a995-3bd1-414f-8cce-67809b08366d",
        "cursor": {
          "ref": "1bfdf8d8-bb32-40cf-9533-d7c1253e3a99",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8eacf155-4274-41a9-905f-773bb5e4fc07"
        },
        "item": {
          "id": "b2c3a995-3bd1-414f-8cce-67809b08366d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "17182ee7-bc6c-4574-9872-c2a7aea526b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1005,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e52f8c-62ad-494a-a4ac-c54442dcf9e5",
        "cursor": {
          "ref": "d3d436f6-b80a-4be6-a9e6-bf576d70b8db",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b9290b26-1a72-4cf0-9c6a-86b77801f8f8"
        },
        "item": {
          "id": "60e52f8c-62ad-494a-a4ac-c54442dcf9e5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e90e9053-3182-4495-8aa4-fa15960ce1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dea6d29-1548-4221-8c51-64e470d65655",
        "cursor": {
          "ref": "747aa81d-1b20-4129-a36b-320f06d72992",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "84b8b799-22cd-403a-962d-0be1e3f2b55d"
        },
        "item": {
          "id": "6dea6d29-1548-4221-8c51-64e470d65655",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "310534d0-71c0-4c89-b29e-68771c03c660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1053,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27af2ebc-2abf-4581-bb53-0b859952355f",
        "cursor": {
          "ref": "662b4338-ede4-401a-acaf-feedca764c36",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f93e427e-bf9d-4a3c-b823-aea2bc9ab3e9"
        },
        "item": {
          "id": "27af2ebc-2abf-4581-bb53-0b859952355f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bd66e199-a8e0-4394-b6d8-cc04e41f9a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6557f78b-ed70-4940-a7e5-8d7eb81824bf",
        "cursor": {
          "ref": "3de55815-749a-4b8c-abe6-54f13b503500",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9c518dc1-3e4b-40e2-a4b6-96f6fbaf0d92"
        },
        "item": {
          "id": "6557f78b-ed70-4940-a7e5-8d7eb81824bf",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e287a43b-7c41-46f9-ab46-be90604d39e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db98e364-dcee-4ee7-b56e-44dd0caef3e2",
        "cursor": {
          "ref": "31a73f9d-d03c-4ac7-88e4-f35c56123ece",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7669687a-ce27-42cf-8adc-e4fe9b520b5e"
        },
        "item": {
          "id": "db98e364-dcee-4ee7-b56e-44dd0caef3e2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c179032e-7f15-4012-9056-3803e4d74cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62fba9f-899d-4049-858d-767723e1639f",
        "cursor": {
          "ref": "7c0bcf17-c969-4df4-aa09-e377e3a5a091",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "06f56f07-9f59-4458-9edd-93572d53e69e"
        },
        "item": {
          "id": "c62fba9f-899d-4049-858d-767723e1639f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "697ec36e-b77e-478d-b165-c27bc61207f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb56edaf-d87c-4e57-900a-6148b70f40d8",
        "cursor": {
          "ref": "5321a398-95f2-44bb-8a6b-74151d6387fa",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "223795d0-8136-43a7-99c4-907e14731936"
        },
        "item": {
          "id": "eb56edaf-d87c-4e57-900a-6148b70f40d8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2f295fc5-543b-42ca-982a-d6a705c81512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad63ef6-3d08-43b9-93db-835e19728bc2",
        "cursor": {
          "ref": "7949cb6d-9c07-4366-8881-e20ab67d911b",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "da916e2c-1cfd-47ed-a3e4-c15957d19748"
        },
        "item": {
          "id": "fad63ef6-3d08-43b9-93db-835e19728bc2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f2fe56ed-a471-4e30-a276-fdca7fde09e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73c9902-ea25-43f4-a329-430c5bb31006",
        "cursor": {
          "ref": "ac14557f-cbe7-4600-a616-f707473a091b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "901147bc-e32f-455d-8de3-29ba48d14ae0"
        },
        "item": {
          "id": "d73c9902-ea25-43f4-a329-430c5bb31006",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "685e97da-7445-46b2-932d-6081ff771d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e7f61f-de4c-4fa3-a1f7-5f42dc58c2d1",
        "cursor": {
          "ref": "598cfc2e-fbbd-4622-9fea-9e7d4c4556f4",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "21654706-ee40-4f69-9efa-77b462f303b9"
        },
        "item": {
          "id": "e6e7f61f-de4c-4fa3-a1f7-5f42dc58c2d1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f96de786-dc7c-429b-a940-38c432ccf0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3420c3b2-38bf-4475-975f-d7d9b9858ae7",
        "cursor": {
          "ref": "19cb64ba-e696-405c-8d13-01026c60ee0d",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "294c9d56-27d8-42b0-a709-7ff0de56ec1d"
        },
        "item": {
          "id": "3420c3b2-38bf-4475-975f-d7d9b9858ae7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f9f20ea2-5fce-4fdd-b7a9-e46fd743de2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22609692-a6c7-4d66-8ce9-c7b7fc5026e0",
        "cursor": {
          "ref": "db630ebd-98b8-499b-af77-2479bbce0da6",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "90f8e305-5ce3-4d33-97b6-f0c409a3ab95"
        },
        "item": {
          "id": "22609692-a6c7-4d66-8ce9-c7b7fc5026e0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "13b1259c-2a96-487a-a00e-bdea79a48314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aeab41d-c57f-41f8-9b62-ff1b7fd609b9",
        "cursor": {
          "ref": "70cf7828-092e-4726-a481-f83f9c3f5c95",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ef6d4759-49d0-4848-8c7f-2a453dc31895"
        },
        "item": {
          "id": "9aeab41d-c57f-41f8-9b62-ff1b7fd609b9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3605a145-640d-4c64-9cc3-5e4fdb8a564b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9702b85-e091-4268-b89f-93fb7cec7dfd",
        "cursor": {
          "ref": "175b70bb-d7c6-4c7a-ac94-57c768170bd2",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c66c7105-7794-4bc6-8ba3-8726fce07d92"
        },
        "item": {
          "id": "c9702b85-e091-4268-b89f-93fb7cec7dfd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "752bca0a-168a-4f08-bf12-a1dfd6c77bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd306071-ebf9-44ed-abb5-9210ce84b70b",
        "cursor": {
          "ref": "c020a793-2079-43c8-9122-0d4905470d52",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4e129e17-0a47-48b4-a333-0c3f96e29261"
        },
        "item": {
          "id": "fd306071-ebf9-44ed-abb5-9210ce84b70b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9e03ffb7-c3ec-4e7b-8cc5-bb989435d21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99e816a-356c-4c45-859a-47f944d7916c",
        "cursor": {
          "ref": "ff8596e0-0559-44ec-aff0-94278f8d1be4",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ef24bf91-66d0-48c4-b538-505532bcbf81"
        },
        "item": {
          "id": "c99e816a-356c-4c45-859a-47f944d7916c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "37a25f1f-d292-412c-921b-a69005c5a82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6afeb7d-f353-47fc-9d01-8f24fb96ac58",
        "cursor": {
          "ref": "a1fcac0b-9940-4be4-ab89-896f5d36e079",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2c2ce7b8-7d74-4770-85cd-d2b180330705"
        },
        "item": {
          "id": "a6afeb7d-f353-47fc-9d01-8f24fb96ac58",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0b9ce01c-56ed-4d55-9af8-42d484afaf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251780f1-dbed-4317-ae8b-48e0a5735085",
        "cursor": {
          "ref": "2bb63963-a817-43ea-9387-8560101eb548",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3f93de94-2a1e-48ca-821e-c9b3256c8452"
        },
        "item": {
          "id": "251780f1-dbed-4317-ae8b-48e0a5735085",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "20b14337-f9c8-4cd1-9bb3-9ef08ae5ad4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438b9814-0045-4481-be08-ea46fe8497f4",
        "cursor": {
          "ref": "755c10f4-0347-4b04-ab18-a9e480aad0fa",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "348f0fd7-f4ab-43c7-8fff-a7e8ca3b44ba"
        },
        "item": {
          "id": "438b9814-0045-4481-be08-ea46fe8497f4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ae93c1d1-0ae1-4493-b400-9872d96ce04c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a75815-014f-4ff6-b7c8-e6584295a59f",
        "cursor": {
          "ref": "a2914d80-0e02-463b-bda5-dbd495a55d9c",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "48386333-7cdc-4855-a0c9-1ca193ebfda6"
        },
        "item": {
          "id": "32a75815-014f-4ff6-b7c8-e6584295a59f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "2362bb36-3164-46a7-8e27-42728e4588e2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 339,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6a9612-cf6f-4090-8209-1a72f7b48b1c",
        "cursor": {
          "ref": "11bbc4b6-e56a-497d-b835-b6a6b5e91bcf",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e5064a3d-452d-4c2a-9121-d2dd260afa56"
        },
        "item": {
          "id": "2e6a9612-cf6f-4090-8209-1a72f7b48b1c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "83ef54ac-4895-4c58-9d1b-c7fd8b9795c0",
          "status": "OK",
          "code": 200,
          "responseTime": 418,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d1874e-4a86-4c84-bafb-e755fae6ef4c",
        "cursor": {
          "ref": "053f6400-e99e-49f4-9f9f-0342857b763e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3183b393-9ac3-4e59-965e-af349f0a23d3"
        },
        "item": {
          "id": "77d1874e-4a86-4c84-bafb-e755fae6ef4c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "39fbac87-62d6-46ce-a9a4-1de6eb9eba9d",
          "status": "OK",
          "code": 200,
          "responseTime": 2008,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f2fa0e-3383-4dd7-9bf6-910fa8c0603a",
        "cursor": {
          "ref": "ca08e1d4-0e96-42f7-80df-162692933b8e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0ea18d9c-cb7f-4d0b-91c6-ebf3fcab1444"
        },
        "item": {
          "id": "45f2fa0e-3383-4dd7-9bf6-910fa8c0603a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dd54bdd2-7691-4f6d-9492-d1a2ac728782",
          "status": "OK",
          "code": 200,
          "responseTime": 1528,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2a57de-4fc3-4fcb-80ef-585cb145647f",
        "cursor": {
          "ref": "c2c128e8-bee8-4068-aca0-70fee2669955",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9fcd06ac-dbbf-4104-beb5-38154555d236"
        },
        "item": {
          "id": "5a2a57de-4fc3-4fcb-80ef-585cb145647f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b289c80e-3e89-4660-8845-c77ea43c2b23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2a57de-4fc3-4fcb-80ef-585cb145647f",
        "cursor": {
          "ref": "c2c128e8-bee8-4068-aca0-70fee2669955",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9fcd06ac-dbbf-4104-beb5-38154555d236"
        },
        "item": {
          "id": "5a2a57de-4fc3-4fcb-80ef-585cb145647f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b289c80e-3e89-4660-8845-c77ea43c2b23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2a57de-4fc3-4fcb-80ef-585cb145647f",
        "cursor": {
          "ref": "c2c128e8-bee8-4068-aca0-70fee2669955",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9fcd06ac-dbbf-4104-beb5-38154555d236"
        },
        "item": {
          "id": "5a2a57de-4fc3-4fcb-80ef-585cb145647f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b289c80e-3e89-4660-8845-c77ea43c2b23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95082936-786f-4974-81f3-b3817d92ad1a",
        "cursor": {
          "ref": "1a6fd935-8214-4af9-9444-50863edb2591",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "309e402d-50f2-4318-8e77-9cdb58da4b77"
        },
        "item": {
          "id": "95082936-786f-4974-81f3-b3817d92ad1a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "1f705f6c-51c0-46be-8f0a-d5bdc07bf423",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 325,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a927da37-9075-4725-a43a-b62137ed671f",
        "cursor": {
          "ref": "76da8fa5-d902-4042-91ad-ae4043673af8",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ba85c085-8c0d-43eb-81fe-9e4199ba0130"
        },
        "item": {
          "id": "a927da37-9075-4725-a43a-b62137ed671f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "840bf714-4cd1-4e60-83ba-8c841d4e7f13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a927da37-9075-4725-a43a-b62137ed671f",
        "cursor": {
          "ref": "76da8fa5-d902-4042-91ad-ae4043673af8",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ba85c085-8c0d-43eb-81fe-9e4199ba0130"
        },
        "item": {
          "id": "a927da37-9075-4725-a43a-b62137ed671f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "840bf714-4cd1-4e60-83ba-8c841d4e7f13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ca7aa4-9582-4bbe-a9d6-ea197f9bfd09",
        "cursor": {
          "ref": "9a248241-775f-4003-8588-a3f892e7d51b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "064bc6f8-088c-4f25-a590-c038e0fd7f25"
        },
        "item": {
          "id": "e2ca7aa4-9582-4bbe-a9d6-ea197f9bfd09",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "bf803a8d-5a28-493a-8f49-8710f0d82996",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 561,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165aba96-cfef-4331-be15-fb25b1fe35f5",
        "cursor": {
          "ref": "7865ef56-ef2c-45ed-9c39-5cf463e17a76",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5e69647f-25cd-4240-8c6c-93f2603b8456"
        },
        "item": {
          "id": "165aba96-cfef-4331-be15-fb25b1fe35f5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ff93032a-cf38-4125-ae52-e5269a4637e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165aba96-cfef-4331-be15-fb25b1fe35f5",
        "cursor": {
          "ref": "7865ef56-ef2c-45ed-9c39-5cf463e17a76",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5e69647f-25cd-4240-8c6c-93f2603b8456"
        },
        "item": {
          "id": "165aba96-cfef-4331-be15-fb25b1fe35f5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ff93032a-cf38-4125-ae52-e5269a4637e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27c2396-f6a9-48ec-92e8-8d6c8321bc05",
        "cursor": {
          "ref": "7c4d4c46-a2dc-47ee-874d-417868d30911",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "59cb5c84-8b10-439d-9906-1f4a65fd3299"
        },
        "item": {
          "id": "d27c2396-f6a9-48ec-92e8-8d6c8321bc05",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "69714d6f-9b24-4e72-ae88-745dbb6a623f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 586,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}