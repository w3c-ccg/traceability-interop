{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "39f7b3ff-749d-464c-91d5-c8f559e96455",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d942da38-94fc-4e00-8e3f-461e6fd9d77a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b0bf0cb-ad01-4832-84c8-dc641bf21e98",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3c73a9b4-9468-444e-8987-278a040c58eb"
                }
              }
            ]
          },
          {
            "id": "2a11764c-8a3c-4d52-bd9b-4d2061a308f7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "309c8df0-d9e9-47da-8239-a348c629186f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bce0ef49-f753-49a3-bc4e-09ef3cec89c4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ca1f9dd6-a1d9-4045-95b9-6f825a53a366",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "67292e7e-f933-4ae2-ba6c-f30aa3aceb49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "23548f37-3977-4dfc-bf49-c7b0c7afae23",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20ad4112-ec1e-4e84-8897-c3b020a81bd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "565a2d3f-45c2-476d-82de-e8f2e67efd1a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e58a2be-9d24-45ff-ac63-6d4ac2db3c21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4969b8a-0f94-44d6-801a-cb15f7703709"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "458301c6-1c17-46ec-ac10-1913f404bd6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cdbbcbb3-4324-49a3-9fd1-d62af0199878"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fda2264-20c7-426f-b2e8-37c04fd641ff",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "db1a75a6-628f-4a79-a758-9f91932a2cb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac985e2f-eb44-4e2a-975e-48c89711fd62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87370241-0b37-4736-b60f-3ec71e4ced8e"
            }
          }
        ]
      },
      {
        "id": "def20b98-c70d-4bbe-935c-10cb66358949",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8ed78d60-df97-4a46-a200-f5fe9747616a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e67cdeee-23f9-45aa-80e7-3aba0ef7c24b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2d9be823-9a9b-4505-bece-db31619263d0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcc8e14-d496-496c-a623-5608ec439aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f45bcde6-5da8-49d4-8aa3-0b9bf06645da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95c91cb-0063-4b1b-bcb2-0c6332363eeb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbfcf24-fa3b-4f90-ae1b-c9e56a7ec10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f75d5d52-dd27-421c-aa0a-273f19802a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0a8d5f-1a49-4674-8638-5807728383fe",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8db1fd9-145c-4bce-8e1a-dec72b361d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "758e7ba5-e31a-415a-b3b7-d1304f5e9421"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aed10d9f-74eb-4627-9553-84ecfcdb94fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09fd9195-b1f0-46ad-b960-069019174acb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3596bacd-99a0-487a-b161-705bb934d6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1097c0d9-d9a5-49e4-9c9e-2ebffbc4c363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80076dc9-676e-4e4d-8110-11819f12acca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45c8f0b-4403-44b1-84c0-0ce970abb767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74d8b1b-9f36-476f-ad42-95a87742e30b",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b79fb5c-e600-4d8a-a9b2-64fa4a0d03eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f37c4a17-3441-4075-ae30-7d37a5328ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6d723e-2aec-4f57-a228-35aa59110238",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "be7fc862-8ee4-4733-a74f-da99bad04bd7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "47e5d8dc-d6a9-49cf-bdfb-44d811ad3b1b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1a87aca0-bce6-4a27-8457-3e48fe4f4e77",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "862e8b94-b6e5-416f-af6c-69bfc24f72d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "99bd5819-e367-4eb3-bf38-f367c1486957"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a390d96a-1422-4db8-994b-2775885f7003",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "bbcc5e65-9d98-4721-96a9-d20ab0495ff2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "604e1682-359a-4b81-987a-7a24b26085c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4dfcc09b-bb66-4ed6-9c7d-4d81d0f350da"
            }
          }
        ]
      },
      {
        "id": "79033600-b143-4dc4-81cc-f81242f33901",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "694bf82d-d0a4-4bf6-9e27-69dc31275100",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed57216c-242a-402e-8fee-8553f42e06d3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4c2ac0a3-f7e6-44bb-9dc2-ac4ba7c20ac2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa30d2d-c648-4024-a390-4d20d871a9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de39320a-1108-4f4a-a175-4cf709104ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d59143c-325b-4d72-a21b-fd8af160fcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f325149-3cae-4bfd-b4be-20911fb32387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd66acf-48fc-4506-a8dd-01e9392cff95",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a72f237-a087-47fa-9246-75edb015aa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf2de07-edca-488d-9bb4-de2e20234543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69eca5ec-67a6-4887-b199-9dd4105c4504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17349f8a-5210-4fa8-a181-9ca2a5cb005b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54deac6-1e91-4965-8aea-18f6cdd5c10c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7af369-12d2-4d89-8d39-456981fb2f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7017dcb6-1bc3-4d47-9505-29939d1271f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a748d0-650b-490a-a1b1-b0ff107d769e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2ac81a8-4435-45c9-8324-492ad39bdc16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c4dfce-61fd-4a27-8951-bb511151da78",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53cd70b-f2ee-425f-bd3a-08ed61b06127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3aeb534-487b-4aa9-b7ce-c85c49cc5cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef47421-7d02-4086-90e8-99bc06a65f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d841f1e-a182-4bc2-b6a8-a8be0607464d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b914ae9a-d0a2-4f8e-a77e-8ec40edde307",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfa8e13-9a46-4bd7-a638-7d9de68a1c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d80587a-1956-4fa8-8d14-2a520da2d4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed9f4f4-f9bb-4291-a87f-64379d9b8bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "293a6346-957f-4882-99e0-c9939bf8d856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8650e281-ef04-4415-9e4c-d7b21f29b8ef",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e2255b-394a-4d39-b135-77502ef61e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8442a8e-66eb-4fef-a40a-bee84098885a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf0f9f3-fe6c-4718-bfaf-2880de2c3e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d9ae843-7731-40ef-b78d-0d1bad480715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8152a168-ef3a-4ce8-86d2-e46b9a41862c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f011bb5-8715-4a81-b1ca-2bd5c9ab6100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63af15a5-f935-4f6b-bd96-2d22ea75242b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c84c20-c035-42dc-9005-ae9156365657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6df2760-d2ed-437c-944e-ec6c24e51b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d590f71-772e-424b-84a2-94a1a1ccd15e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22527a3-1e7e-4d17-9661-9e95a6beb992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8963d2-30f0-4f49-acf3-284c4b30f1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3b05ab-e963-4800-867e-59b6fc72451a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9439f0ac-4d96-4692-ba4a-fc03952c0ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e98278-0e93-44f1-b5ae-6eba1e59e74a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52cd9d3-9ebc-44d4-964b-4e05e6b832c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8083fafc-e64a-449d-859b-f391b59c8fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615c702d-7fa4-4b01-b324-9dcce14e17ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60686e12-78ad-4bed-a42d-f6804bc78ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83b15c9-52ae-4e20-87f8-56b9be527cb7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe948f2-dccc-4800-919a-42f1982b43ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c081afc2-6a18-4fa6-9949-c433b9c0f9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2620f05-e86d-4bc6-9d18-8db8a446ca94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8e49a88-2294-461a-8152-30e80a80a861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50bb6ba-a6fa-4d66-abcc-ccc3b2665d0e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f4219a-58e5-42d1-a924-53347edadca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3d5378-b941-4722-8f09-05a717d98756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce403593-67ac-4dea-8666-0b059e6f4535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "496f2746-3539-4055-b65b-5c2612a22ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c82604-4d84-4a25-b3b4-e3875938b510",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2c6ab0-13c1-46f7-9e67-b439f51bbc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fa97a5-0b41-4c53-a2f5-3a9a98e75e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90d833f-370b-4d46-acdc-02bba832706f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e496381-3627-4f3b-91f2-61d99f10654a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabba97b-5909-4f53-bd66-00e49c4878e8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0240326-770c-43d1-b1af-6d0e79393ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc716bc-3953-4c08-9cab-462248b95bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fe8597-6ccf-4eed-95fb-a62b5efbf12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03090256-0c34-4190-9d0a-0e7e2ea24056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c64ec8-7cf5-46d5-9850-d70af3cd40b8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47aea86-6a98-430b-89cb-2bd1b6d2ee39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d26d7a8-fc00-4b11-ab6b-69bb8315a597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76d8eb7-fd78-4108-b905-cd7c89acd9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53933182-0e66-4ec4-bd5c-eecd7a410910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d49765-c817-40bf-91a1-7b414b782176",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a67717-fefe-4ddb-aef3-f1ef7bdb468f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d5618f-ed51-4909-ad3b-d247e20a3c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786d615b-bb63-448f-aead-72b8be03e468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c51e997f-3004-4789-90a3-b97694b01f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd673cd-7666-47cc-a5a3-a9d2fc0a7d2e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6238f35-2808-4a13-a122-47edcca68698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e693af0d-3a70-48f2-ae43-655d2450c295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cff9ff-db36-4ceb-a006-3fa8a819a4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d265e7b-68ec-4fee-9b8d-6dc28b00cbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b703001-efd6-4d15-83ed-a2976ed1d4f3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef6ea20-11a8-4c60-b92d-88cc7abd530d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e31394-133b-43a2-940c-ea638afc3329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a443541f-1872-4c40-b465-1d996e340d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5074d0f9-d3b8-4ae3-943f-e70242f5c8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b180065c-592e-4c0f-836c-62269cd776f7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f418f352-a222-4175-b573-375e740fa79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89d7441-77e7-4c1d-88b9-09b47b6f505c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2597a580-332b-4f0f-a57a-8c2dc957d4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "edc44eb5-63de-4c57-95ce-2e7034b81628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a8b35a-83da-4d38-b30d-c52b2f6d871a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283e0e1d-6b3d-4ea4-ad11-0e0f2713a4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1857bd-d69c-4d6f-b455-622e1613f80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd39adc6-4ab8-41c3-b1c0-5b3c4cb43268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6956ec53-994e-4a49-9a73-3e6f1250f1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee8d1bf-072d-419a-8dc5-49fbfb935151",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f72c9b-f85b-43c0-b2a1-89cccd169c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc4045c-b999-4acf-bafc-22370bbbafb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effc4cc1-38a2-4832-891a-685a25853c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e7f01e-a41e-4439-8d7c-4a1736bff37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e96069-8a09-46d3-863c-ee658885d936",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1fd3d5-7bd8-4dc1-b85e-5e11964638a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a312047-e92c-45e6-ac16-5d268659f7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf6892e-8173-4bb9-a264-742c919e69e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2255c83-6c7a-4ee8-a050-7186e21d9373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0d4e97-41d7-43fb-a859-8043639a4e34",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8eeab2-30ee-48c2-9157-8448f79832a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec67d829-1dc5-4c46-8304-80ada65d4e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac5e982-3926-47da-889d-09460c66590a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec16e83a-4ea9-41ed-926a-3529dc87b0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16774b7-2b23-4b46-939a-5cdb7d653267",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7513fb-8dea-482b-954b-ef441f8c028f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94796ebb-51a1-4ce1-82c4-2092f12e0261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be698d3d-9091-4dd6-80f8-547eca7bcbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ac5acd-8f86-47d9-bf59-9ca588443a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034abe42-36ca-47ab-8124-0e27ea8ff810",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc5001c-188e-4b48-b661-4de269a255ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52ee6b9-0870-4c00-84cc-dfbe05003515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d80b01-0096-4277-a050-04b0a983ee3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd6b73c-cd22-41e9-85b1-26835abda468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82623f98-6006-4a9d-8b9d-60d275d04db2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e803f6-c636-4b84-be5e-6592266cc497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef55fdf3-c31b-4e31-a083-f67f14bdf0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c926a749-a79e-4819-bab9-a6270a836eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "671b25ec-4599-45c7-a2a7-fce80da07275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b84c70-62bd-47db-afc4-a45696352ca2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701d2ebe-24ac-4635-8ef7-5cdac397196d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514e4185-41d2-447d-bcae-e1f3e366e638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4c506b-fe16-4416-aaff-7049db6a0856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11ddbc78-7974-4f21-9107-50219c4d77b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ce5274-9405-450a-8d12-b99a575a7b37",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3128e549-3ccc-4dd2-95b4-692d03cc364d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fae9fc-8b16-4229-9341-258b0f3b34c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33eae946-d6fd-4b01-9f99-6f125f3ab177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad6f0bb-307f-426b-87f8-0dc9e649e969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7076559a-21c0-4afd-a529-1b7d7ffef1b6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e8463c-c203-4e4e-8cac-9f7c03b0b238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cedd04ed-92fa-4c15-a181-5a4b997166c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b52d1b-57c0-40f6-baca-cb3acfa2f8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e31cbdcd-ffed-45b2-bc5b-e50702631a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a836145-8c9d-4ab8-a4af-0e4f027ecc3b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30fdf9f-e82d-43ef-9552-2ddcde67a303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb0647d-3925-47f7-b2f5-b8983d88ba45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b9081f-d770-4e48-aa3e-c8356c86d7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9328f22-9f2a-4ad3-8ab0-fbc457fe67dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c7e27f-3ed6-4759-a07d-e9feecd4a159",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78579020-2c30-4473-828c-df529d2f7308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f273e1-9700-4b58-aa6d-f3910fe01413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31eaecad-d8b4-4e19-9e31-1648bf3e3aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "74fed265-8cbf-4d00-b3f5-3e1dfa3383f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76962806-2939-4bc0-8b64-19d1a3af294c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38dcd3e-c958-496a-845b-8784f8b7f579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db431ecf-b963-4ade-b647-f8a746f408b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8ed9a9-6acc-443a-9b98-3f7894c498e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7de2fc64-ca3c-4289-b9e3-ea14741df014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a8f6b6-3ff3-4474-a3e9-7bd0e0589bd4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5defd5be-d09c-415a-adb1-e385f4af8211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d412b192-52a0-45c7-bd21-590c0e8223b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a84614-24d4-44e3-9c49-0bc4f1f00c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0af67d59-a6bf-46f4-922d-924514de1e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b65852-a2cf-4b74-a37b-c4f06c4d03d8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acfc0b0-1258-4aaf-a6a2-cb74193b82d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4ce88a-ddda-4288-9bf9-7cd9d5a2f12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07caf1f6-a9c0-4e67-a064-c01f6d08b15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61a19e52-6381-4205-9e7f-50e6cc242bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3cd90e-d677-43d4-9dd1-aa3bcac27242",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6e6147-1c11-4989-ad47-bf766beb2c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c50bc9-bb46-47df-8a37-9388b8e71d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a331fa-0b7d-4327-866c-4aa93ac47bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b473b666-2533-468b-a02a-58b6802414eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3970fcf-5e92-4ebf-a342-6aba33b4378c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f655d1d0-bd10-4578-b0a2-33a7a480f8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859a6de0-356e-4184-a26a-37ab60e0e0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146f4dae-93cd-4ccc-a607-dd9693bfc6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "70fffe6f-6e84-4768-9585-0eeab7c6b139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94916be-0099-4aaf-b19e-04f999623c56",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73725ae-edb8-4093-95c8-9b6d0797941a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0dd577a-93b2-4e3b-abb8-cad457865d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8d4024-6079-4a0f-a5cb-f54c86aa4e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "895adaf6-6447-4d5c-b5be-e9cc3e5e6f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9efae5-5541-4a98-8a25-01102c8c9399",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0448a0a2-417f-40fd-ae21-806b1501514f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075feb14-0d51-4e90-b425-836e962a8c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b096fe9-6789-483f-85fd-0aa4e6bc25c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "beca1cfd-91cf-4f95-8bab-a8025a0c3df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0603ba59-ae8f-4327-a5f9-87c50b7e6161",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96a0b6d-9cc9-4c1b-b24e-ff144ea61ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b35e0ab-8525-43f5-b0d6-e8778cf7e31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949db346-0217-47f5-82f9-e2ac15307298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7591f7c7-e6b7-4c63-b8a3-eb64821e8f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0237d9-d2f2-4578-b8ca-7c6625573c05",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1a8b9f-c85c-4675-a348-50dde9441285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae444655-4edb-494f-aef6-d550b73fbcf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8393135d-dcb0-4fe9-a694-b41d16c151cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dc3e33-b428-4314-9595-408cfc04474a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05323f85-6d8e-4787-a527-27d35dcc0fd0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138a4983-e0a1-4972-9dd2-06ee9ed3c793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f85b31a-a11c-4a3d-a509-dee4beee73d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa41267-4216-4db8-a9d7-849d33d423b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2b2131-4e03-411e-931d-d00301cbe5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b457df80-6097-4d93-84e5-f10aacccb284",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0736645b-f8a4-4016-950f-8da37f563e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a045b700-a4b1-40a7-ab75-24e2a5035a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ba1c46-cff4-487c-99b7-6adfeaa3d433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c513bfe5-584f-473d-b251-3b6c412bc049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7e02a7-bbcc-4586-9438-d8e4f6b647a5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227dfc49-655a-4d81-a108-c92f28551d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf96b0f-d772-4be2-b5da-634a02780fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41186d6c-3848-4454-a3e1-3bae8a2e67ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "52f653fd-55b9-4e7c-947f-0bcb89a8cf80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a8b9b3-f325-4169-be28-387ee8cde313",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffee0ba-ac9c-441c-a14e-c51e32ac75e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e3ab1f-9897-42ec-a745-b4fde07403b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439858a0-b5e7-47e4-bf81-34c3ebd78281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b234a2a-8237-4f50-8590-0b3236679fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ddfc68-b12d-446d-bcce-54bf886058ee",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6752e08a-ce56-4219-bb1c-70e78a623459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b050e8e7-d5e0-4f92-9623-427fc2378f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2791d8f7-2b5f-422f-ae33-45825996ee36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b8470d-aa42-4805-b03a-7f990626373b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0d31c8-945e-4e60-82f2-3d8701a00dff",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13904c98-9c70-4f4d-8eeb-f868b6d77de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca942aa7-2198-4f9b-89a4-500b3caa5c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179c1059-46a9-4f92-b9fa-9ff626f1be56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec83c4e4-11d6-4f1c-af94-1a48a86f6d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04b4f73-20bb-44f9-a2e6-a7d47cca3fa1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da247f5-6f19-45c4-afc1-cc322ebeca6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d6af53-3f20-4e8f-b2cb-7c7cbd8138a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93408c23-03cb-4343-a01d-6c52d38223ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b42cae8c-2514-406d-a0c3-fa47ed2610c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421c1bb4-2f8a-46b9-ba66-7499562dc49f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b608067-464e-4ad2-bb38-9b59326579c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e918ef-1420-4fc3-a1a0-146e16693d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa14be8a-58bb-43f4-aadb-44d0ce3252e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a1e363f-830d-44ba-9876-2acf7a463478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a210624-cc4a-428a-a6fa-0e611747a059",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f92cbd-8ff6-4436-9ef9-742a6e2f8045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f96adf-0649-4370-8c74-87d2d0b3edde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1736064f-be0c-4f00-a3e1-b5a18cd790f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29a355a8-2274-4391-b713-3f7e600dd541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b7a506-0792-4533-a41c-b2fea2ae322e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ef029b-2589-40a2-9074-9617be7d808e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b1ee81-e1c9-4b0c-b5ef-2471da920827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d84953-85e4-4e41-b62e-18894c72e830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9726b55c-e011-4b98-bdd9-07b8adf06145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3f675a-0c34-423c-b4ad-3cd0e4bf136b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79622e87-0c90-452b-a447-cff1506f8460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b8a024-fdaa-4609-ba1e-fce13afe002c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec1eca3-b715-412f-a7ee-919a3733a9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70133913-747c-4f65-9e87-1e6dc658daf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733af4b4-3912-4ff2-9818-ffdba6f766d2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d808005d-fb34-4bfb-bc66-05b47326ffff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f1fe55-245f-49b0-bb15-1f65a3324775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbd4530-0896-4ae9-9061-55068e52de6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "daed65d7-649f-45ab-847f-fb143bab9833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740e62d2-cf6b-4861-a828-289608aeda85",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7785c0-7333-41ab-83b1-aa80002dfca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d814613f-cfe7-4e27-8631-19fd80ed105c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa0906d-5616-432d-ab6b-38b795045a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1222e480-9b26-4a3e-a45f-174e65a518b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10a9d4f-a105-4bd7-8865-fdccc59167e7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df81e04-c4f9-4a59-9755-9e2eeb5fc327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4785427a-874b-4690-a465-60d4bfbb0920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181f2b17-c544-4d87-aafb-d9b7d799eecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bec88114-60a8-4983-be11-91a5aa1ff510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bbebee-3540-42ec-bfc0-677b1868ad8e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84d0357-3c7d-473a-8aeb-85a3debef88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3552c7a6-9d30-47d2-991d-dd7deba0c795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39842668-1b55-4355-9ffb-6d6bc5bbc10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "996875fe-b76f-4844-8f1f-7d3046e3c75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607aefd3-cedf-4ede-9de4-92b29f35152e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a7cf59-fb55-42ab-aab9-b96fb4cbee9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23740a80-2b6c-46e0-9c68-01ec3a71b26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6d4279-1b65-4a1d-8ad1-821b72bb4a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b104c55-2e1c-417e-a8fa-e484b7d4d6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e91b36-4405-432b-84be-e6fcfdd1deca",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7194c1-9a65-401d-a3ef-458340ab0e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ede681e-5114-40c8-b639-67172aa400d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b20211f-dd75-4967-9402-3c23210b598c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd85aa0-eb12-45d4-a3c6-cb59696d0702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63244f7a-0889-476b-947f-bf7083fb055d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977af7e4-01d6-4561-be35-c4d698dc1c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667cf69a-3230-4443-abd7-74e350283364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87b211e-e009-42bf-9f9f-f53ab2c48e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f93e8a5-403c-4553-97a7-8c85c103aa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c183cd3-e522-4017-8080-74cd328c32ac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce615c58-acc7-4d4a-9bc1-23a3d2885a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81e234b-015e-4f9c-ad2a-ef68816863a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9e7cdc-db59-4d85-83de-7fd2da3b37f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9212c6f0-c25f-4a1f-bcc6-a85d82eca13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54df12b7-b4ea-4841-ab4e-1fb35357d413",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff55163a-7ee5-4166-8fea-2a89b192c251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a995ba1-22c8-40b5-8890-f7835acfa4f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5151d6c4-0144-498d-983a-53291540845c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "032a5481-e58c-4039-b689-58a06528c389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8498c55a-b94e-46b7-bf9e-a61455498f1e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f3a501-d957-4d63-9a3a-78452c1a1986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a482bbe-e63d-4c39-b1e3-d33a7f638199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0afe04-7856-439c-b86b-26307d43d78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b8b988-d11b-4bf8-80cc-6e6e503ffe96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014058c2-47ee-49ee-a8d9-74ffcd497b82",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f05ce47-746f-49fa-b965-e5672e73d48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38bdda86-4173-4d70-bb87-d3770e840f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e751a2f-4409-4525-a3c5-916284e4b28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb2c8b7-1a43-4a87-9f3a-051e889c2741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c633b9-ac6c-41a1-a007-e30858de8fde",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c7ea40-df7b-408f-9ebe-df8e551664d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a7b72e-f071-4543-904d-ee0cd4045386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0977e153-e29a-4145-9204-c2be682b0814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1ddfa8-0518-4f37-8e54-db68ff20f06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566b3af8-9cb3-4aab-a04c-9f66481b34be",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9da9bc8-4f63-4c53-b480-8b405e220f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199ceab2-867c-456c-82b7-5f2ca3dd5ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115b0387-590e-4311-9bcd-8b6ad98f9e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "37839706-5f72-45ee-a1a6-61e569ac8694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d7b120-b71c-4fe7-a81c-ac7d6b8e5f0b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6485dbf9-69bc-4916-a5e5-ac4d910f086b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04315294-5fde-4a7b-b15c-f046f005cbeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06466887-7627-49be-a235-555e43e956d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5feba395-6746-4ec1-9e07-b1b6525917f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8613d3df-1514-4c2a-8840-2c9474db8e0b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688dcda1-5607-4b21-97ba-0f4712b2c676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d787fcbf-8d0a-4599-baf4-0e7f25e0585d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8d08f0-f460-44ae-981d-1b66c1faafc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eda38a1-56bf-4d8b-aaff-ac57a695704b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96667b4-8067-4445-ac47-f06b6970f31c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c85693-740c-4167-9071-6517fa009f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf80b23-a7c5-43f6-9ecd-f278803ae40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6179f85-c98d-41e9-89af-eb50d66aeadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4dab48-4123-41c0-a532-bd0e0ca06659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8311ef3a-d5b2-43a9-bdf1-525e97fc1284",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b198a1-1592-4db8-b598-248671ca46ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0e3c71-82fe-47b8-852f-db6390ade1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ae119e-b6f8-47e1-b423-1740f3570e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f875b209-78d9-4f32-943a-c40bde24b52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df8d58b-654c-419d-b2d6-10b9a9c6ada1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71146fae-68f9-4305-afea-eb06d16ccafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b64fbf-0195-47a9-aa1b-0dea3af48c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f79a2b-ecb8-4e42-9941-c01e81241d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb52736-5407-459d-a9ae-492a06c04091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ed7aa0-7873-42f8-a4dc-feeb99d89331",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fed118a-0c96-434b-8f41-3e826b95f619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696ef34e-2c52-42e8-ba50-692597e311ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a90eabb-0146-439e-b379-4a2a2079cf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d607cd19-f55f-43ed-96a1-fdfe5b07285c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc9db0d-27ef-4fcb-8b31-b3eec2b491b9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1903fa-f619-4afc-a515-09d293c34f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77910a0f-fb18-4c8c-80e0-00f839687bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee90b95a-549f-4565-a145-bf37a9b01cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2727a7e-d3a0-4595-992b-599001960dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32e2fb9-b878-40a2-93ea-4b85b3580beb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5c12d9-b0c5-4835-960d-593ef9352a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edafc893-4e0a-40c2-a507-856e234cdbe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18d31d0-994c-4383-8855-0e2f0a3c5b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58698f44-7dec-405c-bb50-74e614adfb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7a1da8-5f20-49e0-be0a-e1a9bde53b2e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80850c51-bd8b-470e-8401-1af7e51b3ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7191d0b-9283-49f2-920a-f2985f786b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7556450a-3166-453d-a668-21f231712d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eecd10c6-85da-450b-9291-27091d7e8d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63434ef-1346-455c-ad21-469bef1f59ba",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cecbddd-4acd-49a8-9270-0178dbd2c169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784dcfaf-5350-40c1-8d58-fefed2b105ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc52b1f-f039-476a-96aa-ef8690d2141c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "736070b1-fbe9-45ad-893c-34b41afe01da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43de574-9112-4d03-b2db-917b28d08808",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a29630-c6a3-4762-b5fd-4f0320eaa1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22a539a-d7cd-4127-983f-e5dce43d0131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed34cdf-e39e-4257-b24b-46f726d329a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0d8c2f-80ac-4c5a-ad25-83e3c3fcb7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb7a9e0-c81b-464a-b166-d170fa1f8583",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f498848-77e9-4fae-918f-5faf83b50f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8cc9d1e-2ad3-437e-8d25-f00354a22676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221ff612-071a-4cbc-a9a8-6e726e5e2c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da2f35b8-6ba9-44db-b4bb-3d3a58e897b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e354160-9a9f-4281-a6fc-432f06d85914",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8248e97b-cf25-4312-993f-0d5e4b0e057d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae6bdea-09c4-4945-aae6-9f482086ddec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece8268a-8e56-47d5-a5f1-77c8147b834a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5b58fb-2ed1-45b8-9673-2678f97e4266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7c2ff6-53a2-48b1-be3d-949ff2a04725",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210e3724-c9db-44d5-a21d-9712921ef117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a072a867-b201-4c30-94af-6fe8f5771571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fcd9dd-a284-4dc8-be24-9c9a90caa210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc0dd29-291c-41cc-9faf-42558337a06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a613b682-4b8f-4487-9e81-71732b673441",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c019797c-d3a5-4a1b-b787-b307f7e06cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60505985-4eaf-4848-bc24-1df8ebf9e6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a767a9-81c2-4da3-9d6b-8baebbd27fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9e99aa-fc46-47f2-9530-fca302205ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e853726-325e-432a-ac73-36152065b575",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab3dae9-74ac-43be-b5a7-875ca6bc5b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "267f3531-5cea-4f48-b532-2e2ad07695a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1580f3de-3212-4bad-80df-1bc866fa1817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06798d3b-1d45-4a8d-9a36-030f1c398373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea35638b-bb7d-43c4-801b-836f3af85a60",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc88b80f-ce76-4182-b159-68b0fa997f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4f57c5-2627-41c4-b509-af564c578707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e89c915-3770-4ce8-9a65-c97397ef1765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ba09b6-fcd2-4b60-81d7-24c44872fc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb507ec-3407-46a8-9f78-d04668816b3a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26aad81e-19f9-45d0-a563-1a4a78eb010f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b7bd622-07c5-422a-8422-32823f6ab3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0c818a-648f-4748-8768-c3912be2efb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "40b256a9-309f-48f2-bf0a-0d80df7a28fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca55e0b-64e9-4c17-bfdf-653be608691b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb876097-0a7b-409d-a83a-d1b980308371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b3cac7-b555-46b2-823e-cb2c68b468de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e325adcc-3051-4d6c-b3fe-f0b3ca4b0663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2518f9ba-2d96-4a86-87c3-513216ce4dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083358fe-580b-41e9-a9ad-c995429813a2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7a69e8-0b5f-46cb-8b0f-2ce04915c532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb1c974-b34a-4635-87c3-feb8596e26e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9d7508-7c80-449f-9852-8f6eb888e44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d68f0ce0-b878-4852-8684-0c174e401b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5311ff41-055d-46d5-bfd3-8ccf3d37addf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d66d37-743b-4802-a3b6-de74c1b499a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329bbcaf-3839-41ee-b158-340c737b70a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc25961-bb78-404b-8d8e-33e5fb0c8237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e39c8a1c-1118-4f91-a648-3a6c803a69d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d017ab-932e-4a73-834f-5dedbc10d675",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c570e57c-27a8-4ed1-a212-8d7e207e4460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3bc51a2-afdb-4418-aecf-1a9b57fbb13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856581f3-9380-4e27-a944-ad2bf59fb692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f41f1afd-e94e-49ed-9340-a0d48392fc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7be2350-4ca0-4c52-a772-932f6f1a3af2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c0b6a4-abe0-46e4-bce1-9b760891ef04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b810121-511b-44ac-bf7d-fea30e0463fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64f2096-14f3-46c2-aa44-fb9045bb6315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3419e958-7e5d-4dea-8c16-561c8e083956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb4360d-a873-40d8-ad53-163c5bab3d80",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1d1977-8cfe-4c61-8a9b-5b57a1e54f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6902a7-d36a-42c2-8943-8c0e505fd922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3463348-7f76-43a8-8c12-f60a36c7b5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "40ea8d1a-8b46-4518-ad9d-0590deba1f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc3b194-9e87-4959-a034-f73eabdf7a64",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6850450-73eb-485b-a267-0aadf7d368bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad4990a-8174-4b54-9473-e2db8cb72131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbaa47a-779b-42ba-9d9a-ae102061d6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "825ba463-0ed8-4548-92d6-abfcd17b9600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c67cd1-3be1-46d9-846a-945b789d3206",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33cc889-2298-46a3-9ce0-b914c721d631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df95b56e-cf06-4a06-83bb-2f863537267c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa913f0e-7135-4e8b-9d31-3e7262da38f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a46ad62e-dd37-42b8-a21a-516365ca4e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3213ad52-e7f0-4d13-9f21-6304148e3fa3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7434e5-0a0c-45a8-8a06-ff371a19e9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286566c0-a3a9-4437-a6eb-ca2f4eaa7e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242d426e-6e02-4c15-a7a9-2bdd52120491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e585cac5-f3fb-42cb-901b-a611bbf782c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17238f5-ba8c-4f6c-ae99-1e0a3f92621e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6259f08-5557-467c-a68a-3bde41944fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205b537f-2cce-407d-b032-a5ca487d13fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd62255-657b-4f15-a6f4-b14668f3b8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0fa1ae-9392-4259-972c-9ba9216c0db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5700c2f-4333-48a0-8baf-0be82eda2219",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c12f609-cd93-48e9-b69c-98faa705dec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8157b4ec-185e-458b-8f3d-ee30bacafcc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da87a1a8-2691-4cc3-9bc2-1347295f1cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b464fd8-092d-4aa8-9955-53c56f0d93c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4505c235-4d7d-4dda-bdaa-ef59439a35c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e510c090-55e0-4f4a-8dcb-e9b808a12851",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915c2f71-6535-4759-a3c8-496313ea4f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f5a23ca-2055-4ecb-89aa-cec9601c8ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96efca9-3dcd-495a-8c52-da9cefb50a93",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "a8a7d5b1-9391-4616-b2c1-67474f5b5900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c851f605-924c-4853-b5a9-86c8a3f5e138",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4534d091-8a92-47dc-ba64-85a24423ea4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e56e072a-4543-42e6-a4e5-b3cf137a68a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a73ad9-83c1-4edb-868f-f17c073e809f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "ccdbfb80-234a-41b5-832f-4069ee455de1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2aac314b-c3b4-4250-a189-d579b153ad54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b741c7f7-76e2-4219-af5a-2bca4566b085"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77e8e810-83f1-47c0-9479-9c7b6c8d5c79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f082e99-ebc4-4fa2-a516-84e21718d206"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae8c4c4e-8b3b-4048-a55f-a9a9aa863877",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b70a6769-e328-4c1f-987c-e04e4a1eb319"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a9629ec0-07f4-49e7-9213-7e6be37f5ddc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6fae6521-ead6-4ef0-be35-d360e6f8d5c9"
                }
              }
            ]
          },
          {
            "id": "1b823729-c7d2-4b75-b127-c5b1df06ee0d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9e6f7113-d3c1-47ce-bba7-bc240c6b2257",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76d2dbcf-67d9-4ed3-bde2-27976e64aab6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d9860ae-5ff5-4590-aa08-7c465327345e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50ffb7c6-084d-4298-919f-c9da030bec74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "30d4849b-1a1a-4c09-a5d8-28d6b9bd903d"
                    }
                  }
                ]
              },
              {
                "id": "5101b6fc-80ac-44a5-80fc-48b9c1a1dc4b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed504f59-018e-4546-9629-8c3373daa80a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bcc70c80-e995-4352-bfc6-db4cbc2cf60f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3dec35b-62f4-4f96-b4e5-a050bd53a913",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4098df3d-22b0-45f3-a492-383ecd2d1ace"
                    }
                  }
                ]
              },
              {
                "id": "d6e2642f-00b5-444b-ab09-dd7847d9784f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df33cb8a-9b2c-4e95-8f4d-6dfa0c56319d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a22644f5-5265-481e-ab16-ffed2455ba43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "208ab73a-c0f2-4fde-959a-204430ae9a51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2812c986-717c-4095-a4a5-314bf2bb4615"
                    }
                  }
                ]
              },
              {
                "id": "da8fe579-ce97-403d-b872-3584cd242a91",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30d3ad8b-c514-445b-b498-2e54bd290da5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "401a5de2-76ad-48f2-a744-4d2e80f34f85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b337676-fd29-4e76-afc0-a2a5b986431c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3d7a6267-2735-4241-ab9b-633dd82e9f62"
                    }
                  }
                ]
              },
              {
                "id": "e6021f7a-7840-47eb-ab81-0273cf9b91c2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ec92877-207c-4671-a822-ef8d49999197",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e473b54b-e73e-41d7-9b17-4114cc0ae73c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2582c7c1-dc6e-45d3-bad3-5e5dcca7b181",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "364317db-9059-4aa2-ae5f-4c2da852dc9c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "76896999-0a78-4319-855b-2b112ee3330a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b1401aa0-8a37-4f7a-b117-87eb46e3584a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "051801e5-ed0d-49dc-acab-05798d0e3843",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "53ef5853-fef4-4660-841c-c0303cb3705a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67a689fd-8559-43ae-a545-bb0fcdbdf6f1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2bdda9c1-a8ad-438d-9a6a-21430483c3f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "347e8a96-4313-4489-8594-b5fab8e064f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7193a4ab-6767-42d2-a122-1c634c616202"
            }
          }
        ]
      },
      {
        "id": "6fb377f5-767a-4bd6-b483-e0e188ed4564",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bb6a2469-9c3f-44e1-a5eb-6632bd9822a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "887c39e3-6e44-4a27-96c9-92a8a26fbe92",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "27edf558-5523-40e9-8530-04103d8fa23f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723b35c8-3494-49cd-ac39-26e261200099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733ca191-de7b-4200-8e21-8b38d3c1f5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2f26bd-866d-46a0-8dc7-7f48656ec93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc83d37-7867-4835-aee5-8e29d6462d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21afbc8-6b07-45d7-881c-30a772f48fb2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b471bf-20c7-4888-b7ed-bb71a3b9f545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb8cdaa-0bb1-4330-b495-85e18a454b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e185bc69-dfa3-465b-8b92-261103bcc110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1563726a-77e6-4aa7-8f0b-40b221fd8668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac503dc-1971-413f-ac94-06c22a1d829c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec0d7d4-1673-4e15-8c6c-b4b322d227c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6dd20b-8fe1-4482-a8e0-92be15447d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f927da-2785-4ab2-9c6e-7f96b89032cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6845b62b-fccf-42a4-9c8d-f72e93bfe90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f763a73-36a1-4f82-92d0-d642e8fc20c1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f3a429-cd5e-475a-93ad-578c22449494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e99114d-269e-48d5-849a-165d4ae02f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f6f1d8-d8cd-46aa-a4cb-8f07da0a837c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb917589-e4aa-4451-8e8d-dc787f15ea4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b077eb2-c845-435a-8a4b-51d7569236c2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8262eeb4-80c3-48c9-8dc5-836eac13e2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89598b20-3c76-4d01-b3aa-9540ee2c1a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d5d5c5-987b-4000-85b9-9dd826ced569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83a01736-5856-4ed3-acad-bb0afe6beb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707ce643-b97e-415f-b636-eeecbc4be5b1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cd73e6-e465-400c-bd9e-b69f4f1a1e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af198b02-3866-482f-90ee-800177f8f198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b06e0d0-872d-4e6c-9f24-8b250c6abc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "feb744be-f255-48a3-ae55-a3d5424bd880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b713dc-4a08-43ea-91cf-bca46483a1cb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc6f971-67f5-48ef-8f12-f19c3f3e46b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b71840-cbd8-468b-a1a3-5dd1f32b8498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a52d37f-7459-4982-a6ff-6fac05afda91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "10e7c482-f3d8-4942-922f-85e6f624c4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f34d45-fdee-46c6-bb64-b2ed4f32136b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e91b3d-b62a-4bf0-adc8-40531ef5ee41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85b9d0a-6e24-43f9-bbdb-4e8c562fd575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373280a9-d969-4a98-80de-a35a27a385a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c79db508-5c3d-4f05-ad75-4b3adce08db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84cd2c5-418f-4907-9c8f-995f5b06c0c8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33de1bec-d265-4401-bc75-5184b47e7deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba089f0-3660-4fb8-9279-bb287acc87bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dee6c5f-0f6c-482e-870b-cfc965993ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d15273-44ac-4f58-bc81-473a20c1d6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba635dc-7c9b-4d5e-a174-d0dc86280426",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2ef4f9-8f93-41ed-8a02-5b301fa5af4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d9de11-1ce8-4a20-bd0a-043e8a29dd7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7635c6ff-92b1-4e84-92e3-b2899553b6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4144d051-a81d-49ed-a297-cbc86696cc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75918de-d184-452a-bd8a-f9facf440ba6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f857f923-4f39-4f1d-b15e-e441c39e5778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b435a854-7d23-4668-bf38-8f4364bded4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7875b232-ecdb-4c6b-883c-526c116c2518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e581c9-8209-4249-92bb-933dd07ce142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160c22cc-ad4b-437b-b767-ebafd4757841",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e52974b-50a7-4e46-a8b9-f9e97fd641ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e78314-e8f9-4d31-81c1-ed709ca8e4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bd953e-8ed1-494e-a721-be792954401c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "add6af84-263d-4edd-bb50-b82582bea187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06806bea-8d79-4f67-871e-84e16d802699",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2519e0f-1f87-4b52-a4f7-2f14308fb683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2540868b-3c4d-4ecf-8124-8d6c33380edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec65643a-f3b8-4acd-babb-720f96aec79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "842aec9b-a680-4d7b-9cbf-48d74d6fec04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a5d624-cc9c-4632-8fe1-6c8261d5e9a4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f21eed-378c-4975-b37c-38983448fa36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3ccc03-e07c-462a-af11-0af94e128d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67b3bcb-095a-4794-b732-4f3526733b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b386e51-06fc-4ae7-834a-a414bf17d938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b90638a-d518-4f5f-98b1-ee24c36ff509",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d976a7-8af1-4247-8eb2-7d9fcc58f653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ddf8fff-0a4c-4d15-a5df-b24cff36efa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81dc9eb-db92-48b0-82fa-3c2bb0ad70af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2011c71d-d552-46cb-a19a-0ddef5e1273a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f42a28-66e5-4599-820d-99fc1ea848a5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d5e256-41a1-4723-a8b6-1820f780cc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f47550-1771-4e1d-842f-20b51fc3a64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9246d156-0bc1-454d-89e1-e05aa739d25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "66af7181-05cc-49e0-96e9-10d051c8f480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b230e5a-2b14-4f62-874f-9c629ba76473",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d48e76-16bc-4356-9cc4-b2b3f1939dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7016a56-7ac9-42a5-b144-9eb6fc9a29f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2f581a-7a56-46ae-ac16-c0597ec6d9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3cec87-d810-4866-85fc-e702c446f54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cada6305-1ec1-4dc4-9fef-b1f14b550bde",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34afc4c-c0f0-4251-91ee-3d36c8618a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054c7d67-bb4d-4412-8fcb-7c53c8216285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa54450-ea77-4551-b6cf-d062361e3fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0f946b-a5dc-40d0-9d05-ab0e68e84690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c7e57c-9280-45d8-898f-2671d123dd12",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f13c7d3-e4c9-4b74-b3f1-56a3241a4a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858b0a01-58cd-4e31-a305-bfc438294d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7605be38-870e-45ba-8842-17b8bc027eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b25e578-d657-445c-b1d5-5a7b824bd866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cff64a-8f62-48b7-ba6f-e519f1000d98",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4e1357-94e6-44fa-9c48-e40815084a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9dc5902-f420-4043-a5f3-3173a1007ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ab9d0d-0ded-475a-aec3-8b51cefc4779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f29f0fe-fa57-47ed-9dc7-4880dff0ce53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f328e2b4-d955-459b-8690-723ed11f2576",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c876802-bf7f-4214-84cc-aaed380aa8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a85d90b-c47f-4947-8f04-fa2506af41eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716a2047-8b5b-44c9-8ed2-ba11c3b0dcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4667e8a1-ba21-44e1-ae0a-411020f487f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f58178d-3f5d-4b70-a0bd-693020ab73c1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6504da1-4856-4647-8229-8c3233787463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be560068-c83b-408e-a7bc-f0ecbf88dbdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e165040-761a-416a-a013-2e78d556768a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "328a8a41-2535-4805-be90-faff7311d540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dd6f04-16c7-47a4-822f-fa3aacafc9fd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bd780f-8f0f-4877-a62f-2560df3f33a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b236ac2f-efc6-4239-a589-f49a5eea3593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60f9e81-83e4-4202-a227-f468dc19050c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc0cecf-9c28-4cf5-b100-92db8b4b3aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5651aeda-58d2-4b09-8a2e-fdc7d995c015",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc76cf4-267b-419b-9840-2b0506cc21e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e6c65f-2a35-4bf9-8b96-dc91156ffcef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3472604-f81a-4657-9726-450a2af20126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18042fff-0fed-4ee7-a106-917c2e6161f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7468da01-2adb-4e1d-94db-5cb8fc78e93a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abd7034-717f-468f-b96f-30839f7ce478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af2ab4f-4b2a-41e7-a2f1-e119d6e70780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526b9feb-e061-4832-8b31-017e61f4447c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f92b699a-f06d-4ce3-b663-5cc18dbe6429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a6a8d7-cf44-45f2-bb55-7ec9853161de",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4753fe52-73c1-4704-b4fe-a8db67493485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf95e12-e2bc-49ab-b2f6-d3e3454f2da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cebe488-3f77-4c78-84c9-aa8901040f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bde7e68-ec91-4210-bfd7-a68147964a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226a15e3-4e77-406a-ae57-04dafdb5ac4b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7077c2-dac2-4536-9269-a2a4ce0996bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4739c6af-0683-4801-ae86-cd7ad20a2e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3e82ee-cd40-436b-bf44-50107a56ea7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe70a26-ce68-4ed6-8de7-be73d75ab2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e657ca6-948a-414a-aace-98fb1d9e523c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f8db3f-a517-4fd9-85a0-a54ce6b40607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e797cb62-b159-4f38-b421-8fda174bbf4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de458a9d-fadb-41ea-af01-b22821e1e2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9b832e-b59b-49ec-9082-ba4b21eb4ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc1b74e-acff-4163-b09b-442cd319f2ff",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce70717-be9c-4227-8bfb-3ad08db684e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09bf96bb-00ee-489e-9c62-ae5047bd82ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cecafa-9556-4b64-9790-db46a1cb4323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9437a61b-6adb-4d13-aa3a-d8146a9365a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da578bd-a1a8-40cf-a1ca-8c3802897344",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e26dcd-df8a-4d32-bef8-735637137fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1008340-29c7-40e2-8256-71d037241e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dae2a4b-d3be-4986-840b-1a628969c353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "431a1a4a-e804-40d2-a34c-88ee25441308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4433ad33-0daa-4334-a8bf-18000d29cf66",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7986699-0eb5-437c-863a-c12195d647b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d174d903-c9e3-44c4-9a39-af1a5c6f3a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29fafa4-681c-4635-93ee-4090992879d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd7bc03-5bad-4d07-b96b-6273bd2cfd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c9abfb-6310-4da9-bd93-0d02a589a271",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a75975a-983c-454f-9d9c-ecd03217582d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63206524-7757-4380-9d1d-37d899078b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d050cd-df9f-4cdd-bf56-8ae2aa65b244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89cecea6-81fa-4de1-9b4a-7758d55f739d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e9332f6b-8ab4-4188-8c44-db6f11f83c0e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13fa8366-f43c-4e8c-90de-54a8661af266",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4f647f-12c9-4a67-bc64-2891961b17c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc58d3cb-a5ce-4284-8e5c-feed4e7110ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d95049f-754e-4055-8603-174c74222d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4f21f66-c826-4d33-be10-12a408c65e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d366f10b-2fb6-4319-8a56-130e286405c1",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d19f6c5-6371-4f53-a2e3-5ec128586c24",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "84c1f5c5-6fd7-431c-936b-7f0e2953325b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2a18ff-7d50-49f1-b1f7-c21aa1391e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a49300c2-683f-461a-a70e-d43fb9aa7e10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d47f2c73-3c81-4d26-8416-d2c637945da0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "667188de-8a6c-4af2-9eb8-e8e4289c35b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da493736-868d-4586-95e6-cbf314754f29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a6c0bb1-4cec-4e97-84ff-72f8c18a60d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4c58c40-9295-410a-9f75-38ab213e703a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b5c79ec9-2e0e-4334-91f4-d0fb57775730"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7249f6a-b2a8-4827-9b7a-5c464cfda4fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "820b79b3-2e02-49f8-986f-8e3c8130400d"
            }
          }
        ]
      },
      {
        "id": "482b69c1-ddde-4571-ba87-023a6c47984c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f7476b35-a9d2-45e7-9191-692796472418",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b35d08b-86a4-4b4c-9ca6-875e168dbf9d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5307d53d-b4d6-4ade-98c7-00c3b27ce03d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84e07f2-19e8-41cf-8d72-39f85e5cda8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5896b5-3d5e-41f2-8e61-715e6181d9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830a100b-98a3-4a26-b015-56661ce33776",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1a06a6-184a-49cb-b98d-22e85ba660af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4928d844-f0a2-407e-a383-fc3317a7bfa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf0e350-544d-4406-a241-703b9c14fc51",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b360ca8f-a7b0-4974-8778-be730f6a5344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd285056-c55e-4282-8850-e31eb2051a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159a7f1e-43b3-4d4c-8174-b6f5df5fe6f3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580c56eb-e1cf-4590-9fca-630758731cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0e7217-213e-4e76-9d76-4b6020a5cb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20c0c1e-e487-48e3-bea7-c9cb18d95633",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebfdf7b-d04d-4e50-9cb5-395700dadfe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f284a2a-8165-4d2a-942d-c1c68d8d0fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e072d925-c223-4586-89fa-2f652237039a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ec42be-b029-4387-9ba2-e91ad564b1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8018e095-9cf5-4264-8bfa-202d02113326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01ae2da-1a1c-4f63-8097-e6c28cea2575",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e796f31-c191-45fe-a725-5554974a2b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b40880e-9fbc-499b-9e34-4b839c94805d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160f4235-b914-485f-ab86-f4f1288223de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a12a0df-082d-4175-8d80-dae08365fd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c1caf3-304a-4636-898c-7e814735636c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c1a5ad-e82a-4bf4-a82d-ee914182e6e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a3cfa12-bcfc-4537-be70-9a76b9904004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc824aef-a9a0-49e6-b1fd-ae57c7839a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd88d6e-3b03-44b3-b320-19a225962500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d5ce10-6d27-46ec-b92c-ebc4f87b1990",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e76312d-59ed-4928-bf48-40a3f88c7d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4028056e-4ced-497d-88d2-d6c849d9cf2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1c96d9-c2cf-4d43-bde2-f09364dccbb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250f10db-984c-48fb-bc8f-9d78dc16f6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401f3c13-64bf-47bd-8911-d0780be20097",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7be85e-3e9c-4915-941c-dc128dd2ca1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9ad7626-f5c9-4868-ba6e-5708d6bdc2dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ec926c-9ba6-445a-9751-5ab56d145fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3aae4f2-220b-4ac7-b950-32c3471339b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf81559a-5bb0-482b-8759-76493506a5d7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945a730b-81ea-44d0-a2ba-edf2d18ed812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121c41ef-0da0-4d98-990c-a96243f00738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d724ce-095c-443d-a793-3f8239dfe876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfa49d6-68eb-4c07-81ff-95e45abc962c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf09fa0-f811-4e4e-b468-be9313ef08e9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac3a259-acfa-4c8b-9f7f-451fb4f05e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860bd071-02b6-4e9b-ae46-75619c4806bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b773f495-8011-48ac-972b-35b6511c2933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d17ba83-45b2-4ca6-8788-c0613782412c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dc3585-5212-4177-8eec-7706580abf2f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ad3236-e537-4298-a5cd-9c6e11ac69fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b533cfc-4e65-4520-8fa0-08e1f4831336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "886444e0-a2a2-4145-a56b-54a4ac5300e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73439d30-b7e0-4d01-bf48-fa2e3812c874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dc712c-7a8e-4b95-908d-7a9954bd3a80",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9aaef33-c7af-40be-a019-99c518a02081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88d50080-b8fa-4847-9e58-f6ae460f8073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba535117-dc19-4d43-aff4-a5f2dfbb6f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0a96bb-ad90-454a-830f-71f190f84fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752bf760-1f44-48bc-a17b-5a9c9e605373",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de0ba2f-e0f3-44c6-87f9-7d97896cc2c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85d2fb4c-3188-4961-8463-5089858f134c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a9d03b-813d-4ccb-a0e4-c30b6f8f89a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e98cc0a-b967-4d0b-a381-2842c4c15835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9851db0c-a02d-405e-9330-744042533ddc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd0dafc-3deb-49bf-88a8-1d68f59c5606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da760b70-bc63-4a9e-ad0c-375feda3c468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83117487-bac7-45be-9228-e7d332687048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6d2bec-bcee-4a95-a9ad-f427ac6306f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e562bc-0189-4646-8c27-59044a83c6f9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec77437-4fb0-4f7c-8c33-ed8a7cfc2ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c1c3de-ecc1-4331-a7f3-c168cf6b131a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3551eb31-6581-40f7-8e03-6445ab5fc309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36833b85-0fdd-44aa-8122-cf309a7da5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92adf0c1-3ce1-4629-a4a1-4d489d6486ad",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68124ac-4068-4685-beb2-fec11bb8b578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5905213-3599-4385-8238-4581d2865d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaca84e3-0c37-42c4-9fbf-b4a9bceb0612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e62bb5-3b69-485e-bbf0-615d393989ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8364af-2b87-4e44-b149-1f0b861d095b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91512a57-ef20-49ad-bd54-9c73f3cdcf0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d547a0-81f8-4453-a7eb-585fd7184a08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4907195b-ae02-429f-aa05-2ce835502266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3e76c5-4f95-4b9e-8830-186fb7917109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5b3111-dea4-4b75-93f8-e9563efcc502",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67894ee7-0ce7-46d1-8a5e-83c1616d93cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8ff5e1-17b9-4857-8412-58f0dfaed2e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "387d1fb0-d894-4f49-a45a-8a8020faec64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7615e3-68c5-47ab-8405-d1acc4f145cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a0a8ce-c3af-4465-9a70-60fc6c845f5c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da076c50-5c92-412c-bcc8-a99045eb098b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9669d1cd-c0c6-4bdf-a387-330ec6f8e15e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7ae7ed-ad00-40a6-9925-147b83338684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1403ac5d-4fde-4b1c-a1cd-98b72bdd4b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7906aad-fcbb-4d6c-ac9a-b202cc0d2112",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c723327-811d-4588-b6be-29efebebc2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e97d9c-50f0-480a-a528-e396ee5cb5c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "384f6f1a-a552-4817-ad83-c59096f182ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b52e5b-b467-4f65-9e3e-0e490f5a1b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d6dfad-5064-46aa-b073-497afbb4ed98",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812e0f85-8bc4-45d0-8079-343e4604c05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c66db7-538c-4a0d-b075-689f046af9f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89144b3-2cd8-4b36-9e5f-8c4501acff9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60741c2-bb14-4cbf-8d57-fbc3aeb2e903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f330d42-901d-473b-99a0-a223a3b8ce1f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417c52ac-7478-47e8-8f96-cd7e38ed1db9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24134d0c-3915-48db-b595-89e1df1b9240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "943e89a0-69ff-4b25-aed8-1d78e15366c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8df18d-db64-49f3-a762-ca640aa9e7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f296866a-e2ce-4059-81b3-ef62f7227c80",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29068ec-86ca-41ab-ab4b-cde40599dc43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "071074fd-3dbb-4361-b53e-61c559ec6aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba32319d-f5e9-45fa-ac6a-d96bbfaba11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6914eb5-a551-42db-8854-e03c19bb7470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5566be46-1791-4509-aba5-76c17904a0d8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5b50d1-939d-49ad-9952-5ba80686c740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff005053-0aac-4058-ac7a-2900e1381c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee18472-a91d-45fe-b041-2ec432e10efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a1d9ef2-c7c6-4d03-af36-9f1202c1084c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ec1660-3d5a-48d4-885f-7e83c32a62d5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6b7fb7-4ee0-4460-a3db-ddeb9305c445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0975892c-15c8-4df2-bb76-4e9835fabb59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "101a7aa0-4817-474f-9c10-7d0ca4273231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e24bfbd-06b7-4ba2-ab30-6c927e632c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac79cb9b-49b3-40d8-ac2d-2d3204e17459",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fc878b-0802-4c5c-ae29-1ec615ef97fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0270378d-2028-4085-8430-d11afbeec0fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1740ebcf-7ea3-42da-a8fb-530dae0cedfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7f8e9c-95f1-44aa-afe0-b79f4a7dd126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef92f270-5a15-4e17-b92f-baa224471ac7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f30678-b72d-4a1a-8f93-820f33b331b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e67ed253-a7fc-4f8e-a87b-722965f2290c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba9d257-3191-42af-bbd1-28b605a2c701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079d21f7-2fbb-49fe-90fa-b229b246dbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f5061f-f7bf-4c64-b47e-a907ee03920a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4ebba5-e80c-4214-a671-aec0f9206068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1843cb7a-f834-4848-8bef-15161cc35d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2735e885-b986-4dc0-947c-3032a4010696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d083536-b827-42c0-8f81-e158481f59cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349c4c6c-94ca-4529-b893-7b5f61f84832",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a96abc9-9f0f-48cc-b9c0-9aa710f22a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f842e7da-ca32-474a-80fa-ee6fb00c8f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fe2ee3-bf39-4750-bfc5-466c00a8b2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9e0c2a-8521-4447-a57a-e19dba3edb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6616876f-30b9-4906-b3d1-9ab9685d3597",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ca8dc3-de0b-428a-9914-14a24cd05359",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33e484cc-1717-4868-bb29-44e48770930e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f1d765-9f8f-4a83-9c19-e86994c20164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae0fdbc-b5f4-49a5-ad41-d1dc02ebf10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a9751f-03c8-4d17-9b72-dab810be823e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bc81fd-3fc1-4040-8d4f-8c39b473111f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5b645d4-dd36-488d-bfbe-fb8c41437b82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58f92d2-f602-4cc0-bcfb-c88fb03e3b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e72eb2a-5d22-4ae9-bce1-5365b2a8de48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d389359-72d5-4371-a54a-49c67483147e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb01a58-1818-4c8a-ad42-8d282e9d1e75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7abc788-bea0-4056-a49d-e67e2b18acda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd88249-0113-4d0f-9fa6-90202452b711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff13880-e644-4b64-8be9-8bc5ceb1a4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e2f0f7-2f08-47ea-be3d-0e696202ad1a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63267f4-e452-4040-a33e-cb7abca20fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af978ca-987d-4c3f-bf51-6b615da83bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286f2887-01a5-4e43-9093-3b0d3f7609c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdcfe5b-a888-4c41-95c4-2b2b9a66d498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd54dcad-56b5-41de-9b7b-a27e21d8f821",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87d2475-2919-4ece-bf3c-611c1b2a3ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a03527-b357-4c18-8dae-7bb285107ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff44a58-37aa-4e65-b61a-3d4e38d45f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a08b56-afb5-424b-b375-100ab98d6be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0231e50-1492-412e-8bc6-19060bf80acf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5024c16-28ca-4b34-a728-88560c2af61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d70b85f-33c3-4658-9126-efb5f4101dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd252c2-23bc-4cfb-be67-6fe49b497158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41dc26b4-4647-4a73-9d28-99c71582c644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4f1ed8-5919-4faa-9927-43bc8f10f39b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4322d61e-1d45-4af9-9966-eb963b8994a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846d6615-c0a9-40c1-bbdf-65b20325716f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d44cf48-9737-4259-8f3b-9efb859ffd6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391dc33b-0d51-4b6c-9b38-d0ae4b0435c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97de82e4-734e-4bfd-9f04-3b07bc1641fd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eaa3e85-2a3b-4765-bb4e-62ea9fbaf125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a0844f-c9e2-4d79-879e-1c37e061d7b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47feface-fde1-4035-b888-5e4dce2d6812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c99403-41ce-4823-9083-d602c13eeff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05907c96-8628-416e-a8e2-607af48b61c2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92922e8-32ab-4b6f-aa1b-177109ec6d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef45c1e8-2ed7-4454-b6dc-d3bd9d48c7dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be4687e-b4e5-4c90-8a0d-71af57d8e497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957bad8e-5230-46cb-83dd-0bb70876e33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ce7261-80c2-4679-97ae-04fca2b85b83",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09220dad-21c7-48ae-9921-63a1bb610155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c99d6c-23b7-4f1a-ad1b-5889f917df65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbe68bc-dcf1-4a65-9eb3-6b2bf8023b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b8df93-f255-4278-8837-c2fdff1327bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084373d1-9dcd-460b-8cb5-bb60199b0485",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34305d73-9d86-4138-b086-1a2fafeae798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950accf0-03b0-4a1b-b503-895e2398b23c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2a75ed-951f-4d51-aa0b-676edc683100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae515a9-955c-4e6b-8374-d0a3493499c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fd067b-5e06-4ef9-83b1-0028fb693040",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd95f5f8-83dd-4849-9608-fee68bb40d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f133b6-7fda-413d-a548-a351590ed1e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "729e12d3-6f86-484e-a115-0fdd1b23ebf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6e0013-85b0-4665-9c02-c9dd7aa2931b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6346887a-b89e-4521-9b35-616466b6cc5a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ac87d8-fb52-4233-8718-314b517c50f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61b94eb-9214-4504-934f-dfb3c511893a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fc8524-a859-48dd-ac6b-a96d98550909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21c874e-5f6e-43bd-b232-9063a6844404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24aa1928-21fd-4c3d-ba78-2edc9403ac2e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d647fb-892f-44b3-9891-7204dbe83ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2b47c7-6e2d-48b6-af7f-0335e1ffde18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da33be62-f6bd-41e7-9e5a-1e079978fbf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d90433-d733-46f6-8cc8-1492f11b1995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9276e956-c68b-4f90-90a6-d27a73194da9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc8019c-abf5-46f5-aacc-88cd5046834f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb1c494-7687-4177-9254-14fb830aca95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273bba2d-493c-4486-ab1d-18bcb0e1e9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a71aacd-6404-4f8e-bec7-9e181ef06876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4e093f-3699-4f8b-a016-15faa9eec3dc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee0eeee-690b-4915-889f-253fb5104cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45be6a62-0441-493b-8e9e-67d8abe4e4b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2578de1e-51f3-405b-9d3d-fe4e312b105b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3411f545-f4b2-4266-8773-cf9c22287465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d3e8fb-fd46-44c5-b397-3e5c555555be",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63b3b10-4098-4327-9143-cdcc428cbe1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03914bb-5a1c-4720-a7b5-ec6eb72e2f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c614adc7-5d0f-4b0f-8383-d68ac1d8a202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b8f751-6d17-4dbe-89fc-cdbf4bb42978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134818e5-86ab-4d8e-b094-8511cf848025",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e71e8c-4df8-4bb6-ab97-24a79726dfbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc06678-7c18-4a19-a3db-029206f03bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f51c5db-b297-408d-8acf-f17ec4a4fc2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de8a782-d4e5-4654-b0df-1861b9706dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e64d1a5-8bab-4138-96ed-f85ed2c2cb71",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f613227b-54b0-4974-9d37-74cc30922636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a00e7f-ffc3-4c35-a50f-1c444c5ab3a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2b940a-9551-468d-a45f-880c89890a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b0adf9-7303-400c-95e0-5a4f239acb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d3d76a-4dd0-4869-a2f0-fa8825cd8355",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314b7e61-b061-4ff5-852e-ba07d9efcc77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bcccb1-5313-4c81-8b4f-18edc634ef94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e8590b-3e3d-4b57-a296-cd15b130d506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d980591-8c09-4bc8-8877-3c33c5ed46a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c3d6d2-e974-4e0c-982d-112e41b2d8c7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3124b6-4861-4728-9633-0d11182a4561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54154e97-7e49-4899-a569-0e19bf433126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf8087c-3dde-40fa-934d-409f17187935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6f9d3e-5a63-4d32-a175-fced75192eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0728f5b-be82-4492-a159-fa3d2ed9067e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee9d6bb-6255-40da-a553-7e0b8d9566ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bb22ac-33d0-4441-b3fb-b0abde789e98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b727e08-c640-4862-b58d-bd7352f3990b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91158542-ce17-4ea0-8fb0-e958462afff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73aa9ab2-ce36-41fb-8350-7a1783fb478c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae427b7d-6ec3-42fd-92a4-29b6de7870e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd7b426-da00-4ad1-8b7d-95f1929c67c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07448751-1ddc-489a-ba82-a179983d1f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0125c9ee-d7b1-46eb-a6fa-cc23f6953a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5bc3c3-8d2a-47e5-ad04-5bcaaf7d0dbd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae4288e-ff94-4418-8eac-39ad5999f1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a518d1-f4e3-4abf-bcbb-f53f66643f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbc88ca-cf04-4c4f-8491-a794b6a50912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c703e1dc-47e0-48cf-8418-4b80630fd098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9c4816-08f9-425b-9afb-33b0cf0f63d6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada9f277-9ea3-40c0-ac8c-e05653f50546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263e6892-0a3f-4091-b298-26c125d073ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6b2249-9704-4738-aa35-1e31b794b83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c65f23d-4ca5-4fab-961a-91eacdce8101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4782c69-0605-4d4c-b965-bd61b7496a4d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8258e6-5034-44f0-a2d6-1ee6007e481b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02599367-9eab-46c3-9f05-36856c126008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01058d8-6a11-4698-a727-d2aa7f4424cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d1ab35-abb3-4df3-a5a0-633ab136d5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb49d940-969a-4e61-b1cb-8eb8730ffa37",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878d60af-00d5-4ec6-83f6-054399a2f4ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4227975e-3be7-449b-8c07-87cfe8c449a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2dc3e4-a2b5-49b9-a681-f85ff271c9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32dec41c-1395-4507-8971-c7c3bc1f49d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1568d05b-0c2b-4f94-ac06-6ba7565f8dab",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24436461-729c-4d17-bbcd-99ffb4b3db6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6714090b-e3c1-4d58-806d-a6730b4ffb1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17aaacd9-bc6c-4143-8e8a-c6108569d41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff401e7-8747-43b6-96ca-eeb5f21b5a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15c86eb-28e7-4b35-a5f6-fd9dbedfb5de",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7057c700-aae5-4d67-91a6-d59f3819ed23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a701a331-0c5a-4379-bf13-579b17d69bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8fb0db-698f-4ed3-8667-c4c20c36663b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89073ee4-eb8b-4ed5-a43e-95709a58b68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389a9696-1e28-40e0-ae5e-88498ebe72af",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a99dd3e-6354-4762-b122-4cc144d4ba24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de552569-bd2e-41c8-9f08-7c8b3459e82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbc9686-cd71-4d6b-bca7-c7ebbc2508ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97e8753-60dc-4268-a39e-e4e75be97ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787f7102-2550-4f12-a7bf-e706b4260131",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3cd8b8-e548-4d7f-8dac-f209ec3d110b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1c6e19-e63a-4d0d-b656-9af3258e8fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c404621a-fca4-4a93-9ea9-baa194fdadaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1aeb18-4765-40a2-b531-c79100f5de3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ceca46-01ac-4677-9e6d-fda9cded7ea9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180d40ea-010e-43d5-a1cf-4db049135d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819ef35d-3985-4753-9208-6c17779d1fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77f180f-0a96-4d89-b63a-bc263d62516a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269b6cb9-aa72-4cf1-8f82-bf8823d3a738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd48506-3826-4ff4-99cb-4bcfaedd9e32",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfe1ea7-49fe-4506-b43d-a17a713efa67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cd41c40-276b-4f68-a83f-6831907b608c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "502dddd1-f49d-4261-b6dd-999f7dd5e26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419d53db-625a-4a53-be9e-d659415fe3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f90e9a6-5651-4947-9296-22d72ee7a3ab",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be7b424-2029-48da-bf05-cd2e094dbc73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f7d6ff8-88e2-4058-9ecd-8f263da7da16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008b124c-0ba8-40b9-8983-44c6deea35cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22b74f5-077a-48ba-a9ad-af5cba3730db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41b5b8b-0876-4c3d-81f5-9ce53ed0b488",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea8e879-18f2-4ba5-b0fd-359d06898f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32946520-b1fb-42c2-ae71-6314683c144f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a40303-c547-43b1-8f05-a76979ca2aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865fce78-4c6c-4d4f-9a84-fa4b84af3d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba40ebec-734e-4f15-b795-989bd61e4c8c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7162746-5a1a-479f-9052-a66e4d68039e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1009745-4aa1-439e-88d3-8873dde14b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4f61f6-ca46-45fa-b4f9-0ca89eb6c3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01d8952-b158-4179-8d1a-e071f83e4d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a47ce2e-2481-4f60-89c6-6d2ed0f90346",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f7a909-111b-46ad-8cad-9d77a92efc4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6bd4e84-aaa0-4b76-94d8-23d9397ae308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c84b9f8-fddc-4250-ba4e-7275ef4e6a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e73d9be-1ceb-4a0d-ae8d-098244dbdf1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae35f40-2495-4d60-adec-306afcf0ed4f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3662338c-42e2-4822-9adb-c0a4a008addb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "246410df-fd63-4717-9853-354371fede33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8508af46-3a46-4d18-aae5-b8fbcf4c5596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e415aed-92ff-457e-8b79-64cd91c33c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58446498-bdb2-4284-accf-b4e3530712b4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d7f5d9-30d4-40bc-a147-4ffdf134a388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3fe984a-f596-4417-b4bd-ec8b6076c58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28eb54eb-5dff-449d-8e33-8d32642579ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e21003-052b-4135-a7c8-5f129cd2fd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31090ad1-31d0-42de-91a2-bf891cc1ef72",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d690c622-942e-4021-8238-c7be6338ca94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1d22ce8-15d8-47ab-be46-921f8a707680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9655d8f0-13d2-46a1-a7a2-e94eddccdff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850ca044-27ae-42e9-b104-65d5ce79a77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638aa06b-9642-4052-a0a9-8ac411e479c2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18ba5f5-b130-4c36-87e0-29c79857da7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07544f63-a183-4a78-ad42-13163dab9a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612ab73a-b56c-4496-bab7-9868f6e780d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99bfe73e-7ae7-4b20-82a3-b2acc9f3cb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19da440d-d9ba-48be-8be9-32916220ec54",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a945428-42d5-4b9e-8d5f-9951ef922587",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7bbe631-3376-4ca7-af13-44e7c3e307e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6875eeb6-7c04-4a02-95b6-c20354240dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35bba98-65e9-4824-af60-9cb805affde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770ec247-9c57-4c96-bc0c-4e3cebd0882b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79845171-f665-4d5c-a4b0-fc9bd0baf101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b982ecf-ee30-440f-a3de-4c22e2ceff1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043b9cda-0ef9-4cd5-8bbb-61324f0d03a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b1ce884-e583-41a1-be6b-becc245396c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9a43c0-6f56-4e0c-9cbc-3361489ea21b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59ac3cd-fe3a-4a72-bbcb-f73eebb9d370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0401ef10-d291-49f9-9534-407db1d0ffb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cef55c-ab19-4398-90f1-aa2dd12b9380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16703a47-b431-432e-a3f9-13813e936bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b220f6-ae72-4f20-b598-a85cd1c219fd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542d0cf5-c01f-4c87-8469-c5ac20b1b7d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f007397-9a7a-4f05-a035-118367a0a8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9185f2-098d-418f-a053-b0fc308bb847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf63b1a0-ab3d-4ebe-8569-4f657cadd474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcac682-6034-4de5-85a2-8bc32b52e244",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b57ec46-9b41-4158-8e81-2044f3ce3b3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6b491e6-bc71-4962-bab2-0551c4a4e533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21a3c8b-4e2a-41d0-9669-d909f0d1922d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e67405a-5483-4466-9f2f-4215bfbb3ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41aa280-43f4-4832-89c3-5e1ba498f558",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6926dd97-b2bd-4c97-8c91-833bf8bf0936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fa225d4-2c6a-480e-8887-27db72b0ebd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b453e89-17cf-4f87-92ea-0c810a770b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56720b43-5b1c-431f-87e8-64428e1efedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e57aa87-2d67-43b1-bbdc-20ef8f8331cc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef1e9f3-25d0-4288-ba21-9409f66f323f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "006a87ba-072e-48b9-bd80-47c6d645fa8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7154d1bb-9271-42fe-9d54-7a8bdd1245cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a35a86-d227-4f59-81bb-3bb84ba77355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adf4e68-720c-43bc-8d2c-42859e5df30b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b89bc85-f9b3-4bfe-a242-4ad3bd2a3c6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82ad3205-0956-41cd-879e-b7d369f67c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bab73a8-1915-4155-b1ba-864c7433c7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18f1460-a56b-4dc3-aaec-68351f36f7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7eb526f-951a-43e0-955d-568c707c2def",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f90661c-bfc3-4773-9c9f-4f38ee5a828d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f36261ec-c3d4-4332-bb92-7c30e1ae4348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57e8fcc-894e-4596-934b-ee665417f42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3970b632-a5c8-432c-bf74-cf142082478e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c5c0ad-6260-4521-a834-344e2293b933",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885e6021-728d-430e-8eca-2b3e5e76fbf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44996c72-46c1-4541-8ca3-9e920ca06ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd3c29e-9979-42f0-a222-efcbd3bbb5f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe765488-4851-4ac3-aa9e-0ff32016803a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40c659a-0ee3-448a-9ac2-09a055872017",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4094275e-cec0-47f5-8a87-ddfd128defb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b15312f-9c2e-4622-891e-10ed7c840edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1e86c1-b57f-4bc8-8db9-e069d1132d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f2f496-ac6e-47c4-9244-ea88545227c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a197805-e078-41e5-86f2-aa316f66fc1d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b644a5-d135-4328-803c-362bbfbe2903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc00cf3e-cd46-4a72-9f2d-31d3e776c396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a03895a-6240-45d2-8499-15c61e1f7472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1318c0ab-c1d2-478c-ade3-606e89042c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9e2890-4366-411a-b4ea-04073f756f92",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353a570f-64bb-4582-a62e-ae8e18a391c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95df7517-cf12-45f9-94e8-ef34959f9b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6647e3ea-0f6a-4c5b-b552-08d8fb114423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fd45ec-7a32-4c69-9465-c19112f4a98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f328a0-9eac-4499-8888-632c60892cf1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09e4fcb-bed8-48c5-9ea1-65ba67d719db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c4dc78-3748-4792-b443-c3480c8a9f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef63509-b065-4115-a298-7b638a89b1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6032f9f-44ba-4ea4-96c7-b68534de2384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6909fa3-c45d-46dd-8ff7-bf8cb19091e4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4315081-ff99-4525-a694-ab7235b50273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83f954bc-e850-4897-ab45-df6bdf63d6a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b591000-0ed2-4df8-87be-1191f2f5495b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1afbc8-1b9e-4a71-9284-4ad418f09247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7251cf61-9d5c-4f2c-950d-19087aa14c18",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96713a04-640c-4005-a509-844908b7f80a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f384be03-aa9c-49df-8d21-80454ca2629c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a48654-dba1-4681-9855-d79cc25e066c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f1bea7-f2fd-4dee-b241-29582f5e9b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f38a666-ed00-4b38-bc57-cedfff237232",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2197115-30b6-4db4-a51f-f17d4e81fba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "922d0af9-49d6-466c-a844-e2311fe0998b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde2a512-2ebb-4db1-bdd9-af37c4117b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecb6247-4754-44f4-b601-ed99c41887ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6602bf-3316-4c45-bed8-35c9b51314c0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcf4def-9e30-4976-a220-2ecd06d134db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "462d8d5a-38ed-47c0-b53d-93093e71b9ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfef208-1354-4576-a336-50d5cc8c0007",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9fdf32-983f-468a-bfee-9c992cc0218b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cf2113-3a8f-4f45-aa14-6bf4ce1d376a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d793fc-b7b4-4e29-9bd9-5d5782f8fcba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e819176-0e23-4dfb-98b6-71cd3430b82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4e65c0-4188-41c3-b67f-d4e839ef2052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6171aeb9-b2bc-46f9-9fad-71ccf76fbc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4da7b2c-a8c8-4c65-a214-28d26bc1e689",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb9fd45-37bc-4981-aa4f-b0e37d5d6eea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2137961-1f7c-404d-b45e-d2df6a216ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e67bb63-10f1-4914-8221-fc8d47b8bb59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecca7e6c-caea-461b-9fc1-702f7364d2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1354347b-ebb1-4b6a-95e1-78d0539253df",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a304ab9-b196-42c3-8b57-5d786bff028b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54da518b-d27b-4c83-ac02-0a0e0fc68e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cfe54a-03ba-43ee-921b-73a5b41a1ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c47954d-c7fb-4afd-a410-1baad15d137b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf27588-e101-4d6b-9a0e-d668da232864",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd72e6fc-6f93-4a2a-8b96-8b681386cffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b9a63f5-d4b2-4e19-946e-d4b02c5c4c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29958f43-73c3-4d00-9508-72d3897b3e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62648c1-7070-4bb7-ac8f-a7a27d61b0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8abbfe-e137-4e5c-bcde-c98929045aa5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba128135-d973-4781-a19a-752affd0e92f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce573de9-d9ab-4f36-90ac-d9c30afafeb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8201fa-0873-478a-a8a2-4a5e2a214177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ec64e5-5b47-4a39-a4cd-e58e4a97e0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36017d16-c94e-4363-ad24-b2a9e4ef9993",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3ba717-bb08-4f05-8a9e-9a363b2d0117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "871ead71-8d40-490c-9178-957442e1d00b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9882f8a0-b608-44fb-8770-01decc5214ff",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff287430-6e2c-4d2f-8138-9013ab55726c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca5b20c-3b2c-4822-9ff5-170c3ff67a09",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1eb327-5734-4753-83de-27ed7716e59c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02285fb8-bc29-40a1-b985-381b72b70427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f285995-4eae-4e49-b94d-f672c5547489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90bd0665-e935-4251-9b9f-b647be9e8bc7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d27899f9-1211-4cc7-9c3d-b9955dadecef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51d046cf-e2e9-4ba5-a091-76584ab2df18"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0acf1360-2ff0-4d66-9c83-259a56e48d4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48f54ac1-c9d9-4171-9fa0-75a96f5686ea"
                    }
                  }
                ]
              },
              {
                "id": "dfa26427-246d-482c-89c5-4cf11b9e4518",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "607f9ba9-dd8b-431e-85a0-a00cde312e6d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b64e1df-16a3-4962-a410-843d9841f013",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c1755dda-ab7d-4b7b-a60d-0a9317e464ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501a18b7-babf-4287-8088-dd564415af7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9afab47a-09d2-4432-84a8-3726d69595da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb790824-7bcf-4af8-9d36-ba61a4af7ad7",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7d5aec-244b-4bc6-aadd-c49bf46082fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "947c24c1-4fe1-4df8-b857-b11f9156f3e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3999400-65ed-402f-821d-4e5354ebf43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be19a090-4538-4b8a-8757-ae8e530b383a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fcd14b5-0701-409f-b49a-bf23cbede3d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7b330f1-d22f-459c-869f-5d02dbeb24fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1925093f-bcd8-49ad-821a-bd772bd976ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3a43908-c422-4313-9186-b802cada4d23"
                    }
                  }
                ]
              },
              {
                "id": "6d0fd5a6-e1e8-41ea-8e5f-89643f9c1a54",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "759e18da-99cf-4c66-b68e-1de9c67e9f2c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8dc405-1818-47fc-9083-3b8c83e9b269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1b6a2b62-8255-40ed-9058-9735249de41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4624cbfa-71d2-430e-9ed2-03dff164013f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5583c55f-5612-4b87-b254-083b75d95b05"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bb6b4734-2734-40b8-867d-b926c15d5f4b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b512d03-6267-4c6d-a46d-706f7b09bcf4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cac1c8d-4d6a-4674-b96e-4373ad1e3225",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b6992e8d-df08-424f-88b4-6864437810c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f0bd07e-b34d-41e7-8b05-de3df60d3a1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c26885bb-fcce-4d8a-a301-339d5ba05bb1"
                    }
                  }
                ]
              },
              {
                "id": "44dc213a-fd96-40bb-bdc6-1bdb6f1736bc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5584ccd1-2df2-4a53-bf64-9d971eb414dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cea63908-6941-4f5e-a71c-c7f0161427fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be6f8895-16c1-49fd-8cf3-3a123495f862",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8be34b21-53b9-4704-8f3b-39c2a2554b6d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e67b88ea-7b0a-4431-849b-e1531a8b2955",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9192d292-0389-459b-ad91-7831d1e9644c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bf38fb9-d94d-4c56-80f6-7420ba0704f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c96afe4-adb8-417c-82d3-9adc37a09843"
            }
          }
        ]
      },
      {
        "id": "1053fc18-cd00-4607-841c-331dcd909c3b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cd9eb56e-deba-4bfe-bbd4-4f743c63a3ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa341245-8114-4aea-acdd-3a8e61762b9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4594f2d8-8d5b-4413-8698-b41eeba7ece8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf128528-32f6-4e76-be8a-f65276a7e2a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4ec098ea-e47b-468c-a96b-be3a28c5c731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c93794-b087-44a7-b158-2ab30272cbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c262bdd8-fd87-4223-8e04-772cd3075c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203099f6-ac8b-44c4-b0a3-609a6ec7319c",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a04e2d-303c-40a6-93a8-dd7dc5d07446",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "32c03228-6773-4822-8748-baa1b6cf3acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116f9137-11cb-4ed5-bcf1-3c605a778b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9bc02e3-df5c-4f3e-92cf-bd9b41cb3db1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00cae555-d815-492e-a3ae-5a68091169b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b49ed15d-de4a-434a-b79c-e220cccec7b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bdfc75d-2aed-4e3c-aa0b-8c22ef5d04fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f100b3c-b47b-4914-8432-982d8acc16f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f01817a-e1d0-4f40-9ac4-740c750af60f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2a34055c-689b-49f0-b7cb-aa5fa32ba15d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be7a8e49-40c6-44b2-acb5-375563ffd1b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22ba53d6-d1af-4741-ab7c-ca303f9ae8c6"
            }
          }
        ]
      },
      {
        "id": "8d7535d9-5261-4cb6-b532-e3fd1bcb6f29",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b7fd0e90-5279-4164-93f7-19d69b61e91b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47663f72-10be-49c5-8ae4-bebbe6e5d1d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8343144b-7e2e-4bbe-8af8-2c2196975938",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89eb184b-5c42-44d3-818d-536a9b188591",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "adf0a9df-c85e-4eea-a94f-10d5aa151003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af5b68b-dc89-42da-9166-348a15eb20e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30ab990d-680f-4e84-854e-c9f7113813fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2b8515-df42-4ddc-ba26-ae5088c5dd31",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72d6ccd-03c0-4568-b7fc-ee688a4974d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "472ef010-b894-4367-9942-b943d60a792c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adfecd2-0f38-458f-bd1a-f82dceae2bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5ca0082-37ea-4174-a260-40c6d9bf1f49"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "409d5a85-91f0-47bc-b818-e237f07cffeb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38449164-5c5d-44ac-bd44-954a0b96b847"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "210bb6f6-dcc8-41ab-92cf-4fa47eabe232",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ffc4b75-e1ff-4dc8-bdfa-bd47afaefd53"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebfd0814-7a46-4ce7-a498-7a1583589bea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "31249d07-b8c8-4af2-837f-06f4e2e0d299"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae4d8a39-18e4-472e-a7f4-7ac23fe948bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "425d9906-b6fb-494c-b6e5-3725cfe8b942"
            }
          }
        ]
      },
      {
        "id": "6b3eb11c-57e8-471b-bb5c-8023dc7f75be",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cd9dfa71-3c6d-4e41-92d2-64c2e676034b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1df33093-ddd2-4758-a79c-ac7ce9e86925",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6da53949-c29b-47b0-86bd-5c51305daf9a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6581d8e2-f092-45af-9e7a-495cd50046b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "173bf86d-5a7a-4560-b531-123a63da580e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e062876f-1ec8-40a0-9b7a-2ed29025d2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06e0bdfc-7e5b-450d-93e0-3b36f4d76fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8094b61-9a22-4bda-8969-af3d9f512d1a",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d809e81-9177-4ac7-a778-5e3968e51760",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1729732d-3a8d-4494-a843-9e8ef5112ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9628219-8b3c-4dde-8448-9ab563535354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bde33069-2324-43c1-a012-ac3eff76c217"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "643cbf9b-e87c-4355-9106-f438c1b6a8e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c82eee0-5b1a-497d-bd22-30203d10bf39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc2e3172-e91d-486a-bb44-d206e6b45cfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb0fc535-5454-479e-968b-175b19600064"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d65eee7f-67ed-47f1-b849-6683b54f4cd4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "319df0ca-583b-48c0-b2e7-97603358a2eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8083ac64-f37c-406d-9fe5-01adbcd589fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c01ab34e-4d0c-4f1f-99c5-a5964d451699"
            }
          }
        ]
      },
      {
        "id": "13a30c4e-98a0-4ae5-855f-9975f95aeba2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2075f61c-fbf6-40a9-b9f0-33ab603395f4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7a11407-78c4-460e-89ee-5f11dc135cb2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "842cf4ca-0410-4590-9ae9-68feef8770d7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ca00ef3-bd40-4ca7-8513-5b227caaa094",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d31e8ec9-6c11-4346-b810-d9f230e51101",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 711.3822393822393,
      "responseMin": 20,
      "responseMax": 11266,
      "responseSd": 994.473406292775,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677717866780,
      "completed": 1677718061667
    },
    "executions": [
      {
        "id": "d942da38-94fc-4e00-8e3f-461e6fd9d77a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "da561462-8790-4a9e-9ffc-84bf0d90a418",
          "httpRequestId": "08f6453c-d20a-4ed0-903f-1e2766d211f6"
        },
        "item": {
          "id": "d942da38-94fc-4e00-8e3f-461e6fd9d77a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "82cdf273-3a3a-40d8-be53-c9f6e5e998a0",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 0
        }
      },
      {
        "id": "2a11764c-8a3c-4d52-bd9b-4d2061a308f7",
        "cursor": {
          "ref": "307ea3da-b1a8-484e-bc58-3ad50ece066e",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a2ef43dc-9082-46be-8ccc-f139ac9cd7f5"
        },
        "item": {
          "id": "2a11764c-8a3c-4d52-bd9b-4d2061a308f7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b677b2ba-a819-4be6-9c3b-818254766838",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "23548f37-3977-4dfc-bf49-c7b0c7afae23",
        "cursor": {
          "ref": "2bc54025-2b94-42fe-9d45-a30fb524cf1b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e3dbb68a-e848-48f1-9019-bd62b27f7634"
        },
        "item": {
          "id": "23548f37-3977-4dfc-bf49-c7b0c7afae23",
          "name": "did_json"
        },
        "response": {
          "id": "f75d2c8e-3a0e-4438-9c6a-5eb811dca241",
          "status": "OK",
          "code": 200,
          "responseTime": 871,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9be823-9a9b-4505-bece-db31619263d0",
        "cursor": {
          "ref": "76d101f9-5d97-491d-a715-d516e7654dfa",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9d9a9855-f3b4-4beb-9084-c7d4803c1558"
        },
        "item": {
          "id": "2d9be823-9a9b-4505-bece-db31619263d0",
          "name": "did:invalid"
        },
        "response": {
          "id": "2e6a7353-ea5c-48d7-a545-1746935a6cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9be823-9a9b-4505-bece-db31619263d0",
        "cursor": {
          "ref": "76d101f9-5d97-491d-a715-d516e7654dfa",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9d9a9855-f3b4-4beb-9084-c7d4803c1558"
        },
        "item": {
          "id": "2d9be823-9a9b-4505-bece-db31619263d0",
          "name": "did:invalid"
        },
        "response": {
          "id": "2e6a7353-ea5c-48d7-a545-1746935a6cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95c91cb-0063-4b1b-bcb2-0c6332363eeb",
        "cursor": {
          "ref": "0953d4e0-27e2-4b82-9aa1-819ec9742893",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "85fb533f-c63c-4e8f-95a1-bbe95025eaac"
        },
        "item": {
          "id": "f95c91cb-0063-4b1b-bcb2-0c6332363eeb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "aa732923-02df-497c-8b86-329f9a915eca",
          "status": "Not Found",
          "code": 404,
          "responseTime": 797,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0a8d5f-1a49-4674-8638-5807728383fe",
        "cursor": {
          "ref": "831463ad-1c87-4aec-bccd-6a287da6a7e3",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cd10be45-b469-4cb2-a444-015efb92fd0b"
        },
        "item": {
          "id": "9c0a8d5f-1a49-4674-8638-5807728383fe",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "24449a69-7bc1-4a1f-aebb-86de73c0b3dc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 616,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fd9195-b1f0-46ad-b960-069019174acb",
        "cursor": {
          "ref": "eafe29d8-d98b-4490-b5e5-160271a3a1ea",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5b00d420-0df5-47e6-ae90-cab7bab618a3"
        },
        "item": {
          "id": "09fd9195-b1f0-46ad-b960-069019174acb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b925bf22-3e60-4f00-9537-c69d11afb172",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74d8b1b-9f36-476f-ad42-95a87742e30b",
        "cursor": {
          "ref": "6e1a396a-5825-46fc-a873-63a6ce01f6b6",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8f7abab8-7b68-4730-b179-21b1767953f9"
        },
        "item": {
          "id": "f74d8b1b-9f36-476f-ad42-95a87742e30b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a9b21838-7d76-45c2-9d3c-00e7a199f736",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 647,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74d8b1b-9f36-476f-ad42-95a87742e30b",
        "cursor": {
          "ref": "6e1a396a-5825-46fc-a873-63a6ce01f6b6",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8f7abab8-7b68-4730-b179-21b1767953f9"
        },
        "item": {
          "id": "f74d8b1b-9f36-476f-ad42-95a87742e30b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a9b21838-7d76-45c2-9d3c-00e7a199f736",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 647,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a87aca0-bce6-4a27-8457-3e48fe4f4e77",
        "cursor": {
          "ref": "02aab87d-ab3f-4ebf-ac53-5969b5fdbcca",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5aeb4bac-a23f-467f-879b-30635c636cc3"
        },
        "item": {
          "id": "1a87aca0-bce6-4a27-8457-3e48fe4f4e77",
          "name": "identifiers"
        },
        "response": {
          "id": "372e5aeb-d885-461a-ad24-df740672c478",
          "status": "OK",
          "code": 200,
          "responseTime": 1050,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2ac0a3-f7e6-44bb-9dc2-ac4ba7c20ac2",
        "cursor": {
          "ref": "d1130061-9594-4275-a320-cfcc3d9898de",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6835f715-c2b3-44fb-9a9e-61ac7fffb6c3"
        },
        "item": {
          "id": "4c2ac0a3-f7e6-44bb-9dc2-ac4ba7c20ac2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ce6646eb-d5b7-4f59-bb56-21d401ab1956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2ac0a3-f7e6-44bb-9dc2-ac4ba7c20ac2",
        "cursor": {
          "ref": "d1130061-9594-4275-a320-cfcc3d9898de",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6835f715-c2b3-44fb-9a9e-61ac7fffb6c3"
        },
        "item": {
          "id": "4c2ac0a3-f7e6-44bb-9dc2-ac4ba7c20ac2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ce6646eb-d5b7-4f59-bb56-21d401ab1956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd66acf-48fc-4506-a8dd-01e9392cff95",
        "cursor": {
          "ref": "83c3cb2f-298c-4e33-b23d-4a64b6898be3",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "44b66169-a75b-47d8-a1bc-cfa9caa4e36f"
        },
        "item": {
          "id": "9bd66acf-48fc-4506-a8dd-01e9392cff95",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "76a83599-1c8d-46e5-8a6e-c6386e9f7f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54deac6-1e91-4965-8aea-18f6cdd5c10c",
        "cursor": {
          "ref": "1b491b95-ed90-4898-9f3f-a5fe72933c9b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b2f005ca-103c-4ad9-abbd-0152460586b6"
        },
        "item": {
          "id": "b54deac6-1e91-4965-8aea-18f6cdd5c10c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8400ae40-e185-454e-bfb5-65d3b20ac53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c4dfce-61fd-4a27-8951-bb511151da78",
        "cursor": {
          "ref": "e5418adf-f314-46d8-b9a5-279b2ffbc15d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f8b2407c-f0fb-4748-85c6-79e22d637d3d"
        },
        "item": {
          "id": "a1c4dfce-61fd-4a27-8951-bb511151da78",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a2b371b7-1c23-4034-b5ee-23b45de9fbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b914ae9a-d0a2-4f8e-a77e-8ec40edde307",
        "cursor": {
          "ref": "ce952af1-7028-4585-8742-46f9cd0af32d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b10fd582-ab65-4160-8d67-db8428fe0188"
        },
        "item": {
          "id": "b914ae9a-d0a2-4f8e-a77e-8ec40edde307",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "01774364-61df-4633-bc94-42a74504504e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8650e281-ef04-4415-9e4c-d7b21f29b8ef",
        "cursor": {
          "ref": "a8825fc6-9ce8-4706-a883-1b37b846add1",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6de57267-63c6-4934-9474-9f33e0bb0683"
        },
        "item": {
          "id": "8650e281-ef04-4415-9e4c-d7b21f29b8ef",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c97ef112-0637-40c0-9762-dd8454bb6257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8152a168-ef3a-4ce8-86d2-e46b9a41862c",
        "cursor": {
          "ref": "ef349fe1-d9c9-4426-a27f-96d3cf37d1f2",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "27daaeab-bd42-468c-aa67-3f09f4813f78"
        },
        "item": {
          "id": "8152a168-ef3a-4ce8-86d2-e46b9a41862c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5b89f148-00fe-412a-83d8-b64797c22ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d590f71-772e-424b-84a2-94a1a1ccd15e",
        "cursor": {
          "ref": "d564d86b-c06e-46ac-9d00-b73cad692be8",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b7c09ae3-b373-4f0d-82e6-45d0493adad6"
        },
        "item": {
          "id": "5d590f71-772e-424b-84a2-94a1a1ccd15e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "de8d48dd-67ae-40a6-afdf-5cec92698bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e98278-0e93-44f1-b5ae-6eba1e59e74a",
        "cursor": {
          "ref": "19bf3152-dfb5-4a36-a831-ee2a78ec5ce3",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bcfe154a-88ce-4d05-8a90-9217b1a771a7"
        },
        "item": {
          "id": "33e98278-0e93-44f1-b5ae-6eba1e59e74a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a5b7c8e7-86b7-45c8-b9c7-bd3153def3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83b15c9-52ae-4e20-87f8-56b9be527cb7",
        "cursor": {
          "ref": "f57671c9-9114-455b-958c-88bdc1892392",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "42cb8340-3ecd-452c-b473-d2594c004f93"
        },
        "item": {
          "id": "b83b15c9-52ae-4e20-87f8-56b9be527cb7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "02f2a254-9903-4f56-8a20-43efea73a890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50bb6ba-a6fa-4d66-abcc-ccc3b2665d0e",
        "cursor": {
          "ref": "eede98df-d26a-4fe3-81ce-47f45551661d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "387f0a99-4462-454f-ba59-ea41975d18e2"
        },
        "item": {
          "id": "d50bb6ba-a6fa-4d66-abcc-ccc3b2665d0e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f68a38d8-9eb2-4d70-ab54-146c446c04fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c82604-4d84-4a25-b3b4-e3875938b510",
        "cursor": {
          "ref": "7f1c65c2-09f0-4b51-addd-3cb63fbb2a5e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d36a56e0-b7ba-4e6d-9faf-1a981e42a25e"
        },
        "item": {
          "id": "f8c82604-4d84-4a25-b3b4-e3875938b510",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a02d681c-e130-4add-8cd7-d4944a289b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabba97b-5909-4f53-bd66-00e49c4878e8",
        "cursor": {
          "ref": "d156a0bd-6ce4-4113-8899-67903710b1b9",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5c4051ea-857d-4a08-98b1-6f10c06d46d8"
        },
        "item": {
          "id": "eabba97b-5909-4f53-bd66-00e49c4878e8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dec07e31-381a-4b81-bdc8-91d55d564d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c64ec8-7cf5-46d5-9850-d70af3cd40b8",
        "cursor": {
          "ref": "47ca9500-b9ae-4f3c-8557-f766d9f798c7",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "735e3165-c337-4260-9670-db87f1f26ab3"
        },
        "item": {
          "id": "53c64ec8-7cf5-46d5-9850-d70af3cd40b8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2b0a6332-e830-409f-b0f9-132d24a79c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d49765-c817-40bf-91a1-7b414b782176",
        "cursor": {
          "ref": "90ea98b7-23df-4aa0-a7e6-a0fddd5fcf7e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f6443988-cac9-4170-991f-35b74931014d"
        },
        "item": {
          "id": "02d49765-c817-40bf-91a1-7b414b782176",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "44d62670-1930-46de-99f1-ca0238ec09ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd673cd-7666-47cc-a5a3-a9d2fc0a7d2e",
        "cursor": {
          "ref": "18d146ea-1fcb-4f1a-ab4c-dc1582e0cd4f",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8db8d42b-9c2d-43ad-bf21-913e7083cca7"
        },
        "item": {
          "id": "5fd673cd-7666-47cc-a5a3-a9d2fc0a7d2e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7bd09866-1fea-465c-b3d2-778740e3dcbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 935,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b703001-efd6-4d15-83ed-a2976ed1d4f3",
        "cursor": {
          "ref": "137067ac-3c6e-48b9-9ed1-89ab1fcd4e34",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6701eaef-af7a-4db1-bc58-23e33034cee0"
        },
        "item": {
          "id": "3b703001-efd6-4d15-83ed-a2976ed1d4f3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4aa13d10-1d76-4956-96b5-cadec245d893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b180065c-592e-4c0f-836c-62269cd776f7",
        "cursor": {
          "ref": "fa78c155-bf4d-4aa4-b396-475f77c7dfcd",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "993ea0d2-f24e-4f16-91ec-2c9624dc44d3"
        },
        "item": {
          "id": "b180065c-592e-4c0f-836c-62269cd776f7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "44368c6b-fd88-4cd0-a952-57b9d2b0dd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a8b35a-83da-4d38-b30d-c52b2f6d871a",
        "cursor": {
          "ref": "1be677af-4def-459c-9dd5-4e5cbd6aae84",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c546dc97-3814-4505-8d0c-7455686780de"
        },
        "item": {
          "id": "63a8b35a-83da-4d38-b30d-c52b2f6d871a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a685212f-df5c-405d-82f7-6b72f2edd93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee8d1bf-072d-419a-8dc5-49fbfb935151",
        "cursor": {
          "ref": "fb71ff12-8035-4d56-9368-fbc5dbcc3297",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d21e4b0b-d55b-413c-8af9-75dfdfbe2c6b"
        },
        "item": {
          "id": "8ee8d1bf-072d-419a-8dc5-49fbfb935151",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7a8058ae-7772-4e0a-9586-3b114f66c458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e96069-8a09-46d3-863c-ee658885d936",
        "cursor": {
          "ref": "850c52fc-f8b6-4e1a-b6f4-69baa8867292",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "427a9e25-5ce7-40a0-b3a9-c5525e1f3e6f"
        },
        "item": {
          "id": "e1e96069-8a09-46d3-863c-ee658885d936",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2ad4573f-99e1-4651-a62c-17740ea5c5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0d4e97-41d7-43fb-a859-8043639a4e34",
        "cursor": {
          "ref": "a057af69-42cd-4579-a52c-e9ef6d9004ee",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "df259c13-e84d-4752-b930-1a94dc7916e2"
        },
        "item": {
          "id": "3f0d4e97-41d7-43fb-a859-8043639a4e34",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ed8fff71-aa90-4ded-bc06-dade49099d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16774b7-2b23-4b46-939a-5cdb7d653267",
        "cursor": {
          "ref": "a9db225a-7efd-4096-971d-dd520527061b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a04adc33-98e7-40df-be55-19b08698d8c7"
        },
        "item": {
          "id": "d16774b7-2b23-4b46-939a-5cdb7d653267",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9e94f461-eb15-42c7-a2d0-9e8d32dcffca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034abe42-36ca-47ab-8124-0e27ea8ff810",
        "cursor": {
          "ref": "3cd74386-4698-4e7b-ad0d-f3b550168ca4",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "81379bb5-d45b-4f09-97e5-408cc81715d4"
        },
        "item": {
          "id": "034abe42-36ca-47ab-8124-0e27ea8ff810",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a7db475c-d752-4e2b-851c-5ed169380908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82623f98-6006-4a9d-8b9d-60d275d04db2",
        "cursor": {
          "ref": "800835bf-71cf-4fe7-9b4f-7d9f4a564370",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d1bcc3ab-a790-44f9-a5eb-8abb05ac15ba"
        },
        "item": {
          "id": "82623f98-6006-4a9d-8b9d-60d275d04db2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f87060f1-4e18-4015-bc03-e12764605b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b84c70-62bd-47db-afc4-a45696352ca2",
        "cursor": {
          "ref": "961d5dce-497f-4fad-bb36-a5651014124f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f5d7abdf-3187-4ea6-8748-ee36fd41b2a5"
        },
        "item": {
          "id": "19b84c70-62bd-47db-afc4-a45696352ca2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a883b1eb-eab2-440f-8b4c-c40514b4999e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ce5274-9405-450a-8d12-b99a575a7b37",
        "cursor": {
          "ref": "788f3431-4f7e-46bd-b1d9-7f3e8959f975",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f881109e-278f-4512-af44-786c3c7d52b4"
        },
        "item": {
          "id": "33ce5274-9405-450a-8d12-b99a575a7b37",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3acaed55-e18c-44b3-951d-30ea81269dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7076559a-21c0-4afd-a529-1b7d7ffef1b6",
        "cursor": {
          "ref": "ea9ac9ab-000f-46d9-9edb-5fd726e8cea9",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d2bb67d2-37db-4ed7-af07-536eb56a5fd6"
        },
        "item": {
          "id": "7076559a-21c0-4afd-a529-1b7d7ffef1b6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "201b229e-0224-4a6a-8ba8-3e4484c68847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a836145-8c9d-4ab8-a4af-0e4f027ecc3b",
        "cursor": {
          "ref": "932f017f-d1eb-4035-9e33-8519c653814a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1fc881e8-bf77-4bff-abee-24626803d639"
        },
        "item": {
          "id": "2a836145-8c9d-4ab8-a4af-0e4f027ecc3b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e95c12a3-739a-41c6-b9bc-81e500f2a958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c7e27f-3ed6-4759-a07d-e9feecd4a159",
        "cursor": {
          "ref": "b2773955-67f4-402e-8e47-6e1214295be9",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3b8699fa-2bc7-4a7a-b9af-546ada600df8"
        },
        "item": {
          "id": "93c7e27f-3ed6-4759-a07d-e9feecd4a159",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c991c72e-f1d9-4bae-b092-492a24461075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76962806-2939-4bc0-8b64-19d1a3af294c",
        "cursor": {
          "ref": "8ef04054-74cc-4366-81d0-316ce213fd11",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c00a7760-8f6d-4cc4-a330-6af09a4077e9"
        },
        "item": {
          "id": "76962806-2939-4bc0-8b64-19d1a3af294c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "161412d4-07ec-409b-8e69-1cbb536a0e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a8f6b6-3ff3-4474-a3e9-7bd0e0589bd4",
        "cursor": {
          "ref": "97d7d113-3645-470b-9d48-dd0d639b952b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3a941081-03a6-4269-b66d-2332c29e436f"
        },
        "item": {
          "id": "75a8f6b6-3ff3-4474-a3e9-7bd0e0589bd4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "611460a2-3e20-4c0e-8f68-445b5a400cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b65852-a2cf-4b74-a37b-c4f06c4d03d8",
        "cursor": {
          "ref": "17b9af6e-8958-4a9e-87b4-4ffad95d71c5",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b9ef5641-c8d8-49fe-aca4-ab77a468fbb0"
        },
        "item": {
          "id": "23b65852-a2cf-4b74-a37b-c4f06c4d03d8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a1185793-dc2e-4866-add0-28975ab7c046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3cd90e-d677-43d4-9dd1-aa3bcac27242",
        "cursor": {
          "ref": "89c70b0a-19c0-4633-9389-bcb48c61b38b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a11486bd-c48e-4e63-a0c5-b06569144ce1"
        },
        "item": {
          "id": "db3cd90e-d677-43d4-9dd1-aa3bcac27242",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b9ab70a8-e3d3-42ec-9ec3-4347bcc96f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1111,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3970fcf-5e92-4ebf-a342-6aba33b4378c",
        "cursor": {
          "ref": "758a9732-bf2b-4946-9fc3-6777f8164be2",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d1c6117e-5536-47ac-a382-eef5bc09e181"
        },
        "item": {
          "id": "a3970fcf-5e92-4ebf-a342-6aba33b4378c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "afdc246b-ac6d-484e-8956-b6d2bc181c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1019,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94916be-0099-4aaf-b19e-04f999623c56",
        "cursor": {
          "ref": "5c2e21e8-e93b-439f-90c7-db904f0190f1",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7fc9128c-ba75-46fc-8336-d83ff56e9c52"
        },
        "item": {
          "id": "d94916be-0099-4aaf-b19e-04f999623c56",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7031d864-d0dc-49b0-99a0-2e97b0e247d3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1242,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9efae5-5541-4a98-8a25-01102c8c9399",
        "cursor": {
          "ref": "a170d495-1be0-49e4-a12d-124b852c03a4",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "709ac6cd-fab4-46f6-87d1-644b7e380877"
        },
        "item": {
          "id": "dc9efae5-5541-4a98-8a25-01102c8c9399",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b1cd69fe-d6eb-47d1-b591-9b41115749fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1000,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0603ba59-ae8f-4327-a5f9-87c50b7e6161",
        "cursor": {
          "ref": "284388f3-eaa8-44be-870a-66d96810b2ce",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "22f8fca1-a716-4000-a291-76fef6c8c5f3"
        },
        "item": {
          "id": "0603ba59-ae8f-4327-a5f9-87c50b7e6161",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9cb37167-56da-4b90-a6ef-76523794ab35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0237d9-d2f2-4578-b8ca-7c6625573c05",
        "cursor": {
          "ref": "52495345-810c-4031-8a41-d31fa623ccef",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cb375e13-fa2b-4891-99a5-3b6129a55057"
        },
        "item": {
          "id": "0c0237d9-d2f2-4578-b8ca-7c6625573c05",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "524ae140-bb4a-44c7-b085-bbcd8cad6f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05323f85-6d8e-4787-a527-27d35dcc0fd0",
        "cursor": {
          "ref": "e89ee014-bf15-4624-8dfe-be89a1dd43e1",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "06ad5097-49f3-4299-a1b0-6aa62efe1f5f"
        },
        "item": {
          "id": "05323f85-6d8e-4787-a527-27d35dcc0fd0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2aae1103-fcb3-47ff-a9e3-76688e3c24ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b457df80-6097-4d93-84e5-f10aacccb284",
        "cursor": {
          "ref": "8b1a10fd-fd84-432c-80f0-623739e37c40",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "16c92584-737b-4250-bcdc-6d3fa12a9a44"
        },
        "item": {
          "id": "b457df80-6097-4d93-84e5-f10aacccb284",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fac7287c-366d-43e9-915a-cce039d0259b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7e02a7-bbcc-4586-9438-d8e4f6b647a5",
        "cursor": {
          "ref": "d9820a71-da4d-4706-a633-f34869a46483",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c9eef300-d471-4ec4-a81c-6acf915231db"
        },
        "item": {
          "id": "ce7e02a7-bbcc-4586-9438-d8e4f6b647a5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0d0ad9d4-8c09-4a46-95db-00b0b532fbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a8b9b3-f325-4169-be28-387ee8cde313",
        "cursor": {
          "ref": "ce29fd91-f7d0-4747-9f5d-9b0e71c42cfd",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "20aa3b61-e2c3-4186-965c-afd04c10bff5"
        },
        "item": {
          "id": "b5a8b9b3-f325-4169-be28-387ee8cde313",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d8ee0503-9d04-4cbe-a20c-2adf1f93dec9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 810,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ddfc68-b12d-446d-bcce-54bf886058ee",
        "cursor": {
          "ref": "cbcb8002-8c9f-49fe-9723-03e5e9321a8e",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7a80d21c-e670-4395-b215-b1f8b76710f2"
        },
        "item": {
          "id": "24ddfc68-b12d-446d-bcce-54bf886058ee",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "310df4fc-21b4-4297-9cc5-34a190b62b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0d31c8-945e-4e60-82f2-3d8701a00dff",
        "cursor": {
          "ref": "52f44454-fec4-4aca-bc85-3fd8a4569607",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f5d4225a-6432-4346-aceb-cded4f00030a"
        },
        "item": {
          "id": "2e0d31c8-945e-4e60-82f2-3d8701a00dff",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "86b10f8d-1eec-46fc-9704-843dfb57cf9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1165,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04b4f73-20bb-44f9-a2e6-a7d47cca3fa1",
        "cursor": {
          "ref": "e76077c6-4463-4418-87b6-ddbb29b53188",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "697529c8-8910-49bb-8199-772173679351"
        },
        "item": {
          "id": "d04b4f73-20bb-44f9-a2e6-a7d47cca3fa1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "70dfd7e6-c391-41f8-814e-966ebc73853b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1218,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421c1bb4-2f8a-46b9-ba66-7499562dc49f",
        "cursor": {
          "ref": "52f8b641-c910-441e-b1f3-75614e56ccb1",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "612c1f07-daa6-4454-b672-7c1356cf5da8"
        },
        "item": {
          "id": "421c1bb4-2f8a-46b9-ba66-7499562dc49f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "895e11a0-38e7-4003-a320-49811d8bdfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a210624-cc4a-428a-a6fa-0e611747a059",
        "cursor": {
          "ref": "5061ea56-422b-4996-aa89-88197f38e05e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "20555ad1-a13b-4352-9b3a-3f23bc6fcb3f"
        },
        "item": {
          "id": "3a210624-cc4a-428a-a6fa-0e611747a059",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "132ce428-e9fe-43e1-9c31-f2c70a8e2f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b7a506-0792-4533-a41c-b2fea2ae322e",
        "cursor": {
          "ref": "b5bdd67d-8201-403b-a504-cbdc9924701b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fb18fef4-8e45-4184-bcd9-58fd3c1eff41"
        },
        "item": {
          "id": "07b7a506-0792-4533-a41c-b2fea2ae322e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1b00ae10-ff61-4150-a835-95812dbd9acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3f675a-0c34-423c-b4ad-3cd0e4bf136b",
        "cursor": {
          "ref": "06299261-d35f-449e-b6e1-06ea0c225ac0",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "26f82fbe-0a84-48ef-b1d3-561e2b2502ca"
        },
        "item": {
          "id": "3a3f675a-0c34-423c-b4ad-3cd0e4bf136b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e5ec2e73-0013-4e38-97f0-42a6700c260b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733af4b4-3912-4ff2-9818-ffdba6f766d2",
        "cursor": {
          "ref": "da5686de-4333-4757-ba8f-585dd7b713de",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f4bbc086-1d09-47d8-9c7f-393140e810d2"
        },
        "item": {
          "id": "733af4b4-3912-4ff2-9818-ffdba6f766d2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d72da46c-555e-4980-b790-223546ee34a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740e62d2-cf6b-4861-a828-289608aeda85",
        "cursor": {
          "ref": "1d1fbac7-a123-47cc-aec2-155c5423135b",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dfb1ce5e-7d09-4120-aade-f0ee5a11e554"
        },
        "item": {
          "id": "740e62d2-cf6b-4861-a828-289608aeda85",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5b2736ca-5bec-482e-92a5-fa34c5cc2c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10a9d4f-a105-4bd7-8865-fdccc59167e7",
        "cursor": {
          "ref": "5ef74a4f-41a8-4298-82bd-d8002e9cbeba",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "20e0b148-fee6-48b3-b71e-3af8d8f05c52"
        },
        "item": {
          "id": "b10a9d4f-a105-4bd7-8865-fdccc59167e7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9e103c38-4fca-4349-be0b-a2bc414015c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bbebee-3540-42ec-bfc0-677b1868ad8e",
        "cursor": {
          "ref": "eb845f90-67c6-4b8a-b724-6fe11d516389",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "de865e69-81ab-4f16-806e-21d003bdae52"
        },
        "item": {
          "id": "31bbebee-3540-42ec-bfc0-677b1868ad8e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b4fee15e-4ab1-4cf9-ba6d-fda1a406aa34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607aefd3-cedf-4ede-9de4-92b29f35152e",
        "cursor": {
          "ref": "e6a1b4b7-ccd7-4ccc-8127-6dcccb399051",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "48eddf16-fbf5-4ff9-a566-5871ff7e8d53"
        },
        "item": {
          "id": "607aefd3-cedf-4ede-9de4-92b29f35152e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f074936b-7084-4051-ab6e-43efc51dc29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e91b36-4405-432b-84be-e6fcfdd1deca",
        "cursor": {
          "ref": "29f2bd8b-7351-4632-8d3b-e574a9dbf95f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b8ebc81f-b4a2-4429-9541-7da38b29b230"
        },
        "item": {
          "id": "19e91b36-4405-432b-84be-e6fcfdd1deca",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9d853bce-c57f-4206-a8f1-62c8bdd90ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63244f7a-0889-476b-947f-bf7083fb055d",
        "cursor": {
          "ref": "89dc308f-611f-4183-acbd-a531125fd1c2",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "16ea01dc-5b56-4fd2-80b3-48d3e6b09d4a"
        },
        "item": {
          "id": "63244f7a-0889-476b-947f-bf7083fb055d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6c783fea-6766-4303-a14f-1dbfe3bcaf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c183cd3-e522-4017-8080-74cd328c32ac",
        "cursor": {
          "ref": "da6eeadd-e612-4215-9fdd-cf72b8ac1f87",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "97d6e334-150f-4872-a97a-6260d0126a40"
        },
        "item": {
          "id": "7c183cd3-e522-4017-8080-74cd328c32ac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7eab8174-cc8d-4bac-a221-2d514ef61813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54df12b7-b4ea-4841-ab4e-1fb35357d413",
        "cursor": {
          "ref": "82211fec-862a-4c5e-8647-14b3fa29485d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "26622568-fdfe-4e1c-872c-b56e46834794"
        },
        "item": {
          "id": "54df12b7-b4ea-4841-ab4e-1fb35357d413",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9dc4b737-080a-4176-b228-81d2bf25c997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8498c55a-b94e-46b7-bf9e-a61455498f1e",
        "cursor": {
          "ref": "1fd74c48-8e73-4606-ab24-404f6ad59296",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4f724e90-12c9-4c89-a0a4-de02c95d6399"
        },
        "item": {
          "id": "8498c55a-b94e-46b7-bf9e-a61455498f1e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2e3ee124-0869-4393-82c4-064e7dced362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014058c2-47ee-49ee-a8d9-74ffcd497b82",
        "cursor": {
          "ref": "7d3ece9b-1836-4796-b1e0-827557d392a5",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "72a8f72e-06fa-4286-a176-7971b157777b"
        },
        "item": {
          "id": "014058c2-47ee-49ee-a8d9-74ffcd497b82",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0708c703-43f2-433d-90f0-d6338b074605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c633b9-ac6c-41a1-a007-e30858de8fde",
        "cursor": {
          "ref": "fc0dec41-6b73-4057-b839-77bf33d8d42c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "13bba013-a0f3-4c57-a1d1-e77a9ebe5b17"
        },
        "item": {
          "id": "18c633b9-ac6c-41a1-a007-e30858de8fde",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "caa09137-df54-49ea-a6f2-b2cb3c4b4e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566b3af8-9cb3-4aab-a04c-9f66481b34be",
        "cursor": {
          "ref": "a568b048-136d-49f9-b89f-9a920c8383f3",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0e6d14ee-56ec-4aa9-9855-aa40f7dfd36f"
        },
        "item": {
          "id": "566b3af8-9cb3-4aab-a04c-9f66481b34be",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "24912e13-b54e-4779-aad5-806d40eeb703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d7b120-b71c-4fe7-a81c-ac7d6b8e5f0b",
        "cursor": {
          "ref": "8b789dcc-79b7-4e47-bb57-23dbb8329831",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f1cf4cd5-f2cf-48e2-8210-da1ac34218ba"
        },
        "item": {
          "id": "b5d7b120-b71c-4fe7-a81c-ac7d6b8e5f0b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2898dc73-e8e0-4cb6-bdac-37a331f129ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8613d3df-1514-4c2a-8840-2c9474db8e0b",
        "cursor": {
          "ref": "ac91b1cc-a769-4c0d-b298-106a43d0a4a6",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2060403e-fe10-459e-b86d-96bb4bacd3d3"
        },
        "item": {
          "id": "8613d3df-1514-4c2a-8840-2c9474db8e0b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d52e3d24-3bd4-4356-a2f8-9638561075b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96667b4-8067-4445-ac47-f06b6970f31c",
        "cursor": {
          "ref": "7d89554d-7ab0-49b1-92d0-4682e7887af7",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "af145b65-37af-4910-a004-9756ef89d386"
        },
        "item": {
          "id": "a96667b4-8067-4445-ac47-f06b6970f31c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3e8f486b-9b2e-41a5-9cc1-e32783ff1d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8311ef3a-d5b2-43a9-bdf1-525e97fc1284",
        "cursor": {
          "ref": "f9f4ae06-5aec-4b06-b015-16fe9dc05a86",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f19753bc-1ad9-4661-971e-dc9c83363da2"
        },
        "item": {
          "id": "8311ef3a-d5b2-43a9-bdf1-525e97fc1284",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e20e3b39-8a25-40b3-95f2-639f259b4eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df8d58b-654c-419d-b2d6-10b9a9c6ada1",
        "cursor": {
          "ref": "121e77a8-66a1-40d7-9073-9a5eeda0fa61",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "71789758-f2bb-4064-978c-0159d83ae7d5"
        },
        "item": {
          "id": "5df8d58b-654c-419d-b2d6-10b9a9c6ada1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d5995636-c335-4771-82ba-7b2cf34cc942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ed7aa0-7873-42f8-a4dc-feeb99d89331",
        "cursor": {
          "ref": "87cffc2d-0808-4452-aea6-a311dade5d12",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4aafce2f-7748-45b0-a334-dc12e8f40aa9"
        },
        "item": {
          "id": "50ed7aa0-7873-42f8-a4dc-feeb99d89331",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "38446410-ecb0-4746-9e93-1dd2caf06e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc9db0d-27ef-4fcb-8b31-b3eec2b491b9",
        "cursor": {
          "ref": "c0cdb660-f7a7-4827-b58f-0be5b68705f6",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4ac3b096-b68a-4542-b81e-6fd5dd14ecb6"
        },
        "item": {
          "id": "efc9db0d-27ef-4fcb-8b31-b3eec2b491b9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "631d2bd2-28b6-4f50-b236-d96cfd076d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32e2fb9-b878-40a2-93ea-4b85b3580beb",
        "cursor": {
          "ref": "01caf1b2-9e4b-449b-9e06-5ad5a0653c10",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5c0283f0-98b6-47df-891e-0906c164e46b"
        },
        "item": {
          "id": "d32e2fb9-b878-40a2-93ea-4b85b3580beb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "befd2cc2-c862-422c-ad4e-b6cd43dec52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7a1da8-5f20-49e0-be0a-e1a9bde53b2e",
        "cursor": {
          "ref": "ca575a48-0075-4d93-9f6a-c4400936d1a4",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a070348b-e04e-428e-b374-c6a918318cae"
        },
        "item": {
          "id": "fa7a1da8-5f20-49e0-be0a-e1a9bde53b2e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "59306d76-ee56-4cb6-837e-c6b930bfa2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63434ef-1346-455c-ad21-469bef1f59ba",
        "cursor": {
          "ref": "aba41505-619e-4905-b60d-3808d0ca7835",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "541cd216-39c1-453b-9b98-4ce5a333e8fb"
        },
        "item": {
          "id": "e63434ef-1346-455c-ad21-469bef1f59ba",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d682adda-727d-42f2-b424-6fc280b631da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43de574-9112-4d03-b2db-917b28d08808",
        "cursor": {
          "ref": "1b1690b0-1f28-4711-a145-61163353c5fa",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0fe51ef7-d0f7-4158-9dad-40b906f411b0"
        },
        "item": {
          "id": "e43de574-9112-4d03-b2db-917b28d08808",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "14b2f87b-5b83-4c5e-bddf-46f85870ec4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb7a9e0-c81b-464a-b166-d170fa1f8583",
        "cursor": {
          "ref": "7cec4006-581e-47c1-80e6-37694a73af53",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "582d6091-f573-44e2-9384-628041c8c41b"
        },
        "item": {
          "id": "3cb7a9e0-c81b-464a-b166-d170fa1f8583",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "319cbe3b-2080-45ff-a4c8-04d7d9e3df12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e354160-9a9f-4281-a6fc-432f06d85914",
        "cursor": {
          "ref": "298ff57e-bc70-4eed-9776-b9d2e8824452",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "292f7c0d-2298-409b-aa4a-552edbbe13d8"
        },
        "item": {
          "id": "2e354160-9a9f-4281-a6fc-432f06d85914",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "032c4bfa-0efc-4b39-a189-5efd3fac670d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7c2ff6-53a2-48b1-be3d-949ff2a04725",
        "cursor": {
          "ref": "54cb54dd-0600-4fa5-bf99-47218c93db38",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "29a2f369-f169-48e6-a153-e5d539334605"
        },
        "item": {
          "id": "0f7c2ff6-53a2-48b1-be3d-949ff2a04725",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "37716efc-9f2c-426b-ad17-aa5eceefae72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a613b682-4b8f-4487-9e81-71732b673441",
        "cursor": {
          "ref": "0fd64ec7-3374-4997-ad63-8d9f8c0d3794",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "80a45dbb-acb1-441d-86eb-d4ee0d0f7195"
        },
        "item": {
          "id": "a613b682-4b8f-4487-9e81-71732b673441",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c6ffe481-3c70-4c8e-a0a2-364fcb21b710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e853726-325e-432a-ac73-36152065b575",
        "cursor": {
          "ref": "a04fa3fe-8750-4cc4-b961-0f7a6cddaf13",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5b7b8884-95f1-4174-a3c3-a7247a505399"
        },
        "item": {
          "id": "2e853726-325e-432a-ac73-36152065b575",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f409e8b9-534f-4324-bc78-b576f258b5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea35638b-bb7d-43c4-801b-836f3af85a60",
        "cursor": {
          "ref": "d040852b-314e-4888-8b39-41402f88a941",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "995b3542-c1a1-4bb0-8702-ffdcb637a7fc"
        },
        "item": {
          "id": "ea35638b-bb7d-43c4-801b-836f3af85a60",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e41f65a8-53d2-43de-a9e4-a4e0864ddcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb507ec-3407-46a8-9f78-d04668816b3a",
        "cursor": {
          "ref": "92c3e741-3979-4ef2-82f7-0963bbbc5681",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d81fadd1-02d3-411f-a5fe-859401e5a361"
        },
        "item": {
          "id": "3cb507ec-3407-46a8-9f78-d04668816b3a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c515dd60-e789-49db-bbf9-d16795bf57ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca55e0b-64e9-4c17-bfdf-653be608691b",
        "cursor": {
          "ref": "4a6a6c85-0ad8-4b7e-b594-ab969b380fcc",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e9b4354e-8f09-4edd-8393-efc4980d6a9e"
        },
        "item": {
          "id": "4ca55e0b-64e9-4c17-bfdf-653be608691b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d2c577b5-7f87-403a-ab3d-6c65f620cf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083358fe-580b-41e9-a9ad-c995429813a2",
        "cursor": {
          "ref": "d525627f-e1a2-4180-a7e4-4d782123af85",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "20818fea-aef6-498d-bdc9-40a03ec0cc80"
        },
        "item": {
          "id": "083358fe-580b-41e9-a9ad-c995429813a2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7f0747fd-d896-4f96-b6b7-8c7c786eaead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5311ff41-055d-46d5-bfd3-8ccf3d37addf",
        "cursor": {
          "ref": "92df3e93-3e10-4122-8cab-6e59f3ed2c2e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "68606688-f044-49e2-9bf5-eeebdc8a4899"
        },
        "item": {
          "id": "5311ff41-055d-46d5-bfd3-8ccf3d37addf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5da0b3bc-5713-4172-85bd-89c05c58b9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d017ab-932e-4a73-834f-5dedbc10d675",
        "cursor": {
          "ref": "fe3c8984-843d-44d7-82a1-f3e7eeac5e4a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fc3da5d3-dde1-4b6b-86e2-4305f257a068"
        },
        "item": {
          "id": "29d017ab-932e-4a73-834f-5dedbc10d675",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e1ec224c-ff9e-4e40-a479-a49ce89f7267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7be2350-4ca0-4c52-a772-932f6f1a3af2",
        "cursor": {
          "ref": "665d3a83-032d-4147-a834-22aaa0710793",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6ba4cd96-17b4-4e5d-93c8-0b5ded4a074f"
        },
        "item": {
          "id": "a7be2350-4ca0-4c52-a772-932f6f1a3af2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "96a3ddeb-4866-4a4a-b80d-6ee87d9ade96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb4360d-a873-40d8-ad53-163c5bab3d80",
        "cursor": {
          "ref": "2abcb651-a495-4758-bc94-34dac05d6284",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1457d194-804e-481d-93f7-a215d7246432"
        },
        "item": {
          "id": "dcb4360d-a873-40d8-ad53-163c5bab3d80",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4f99921d-6a19-4ce9-ad62-0ab583eb5231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc3b194-9e87-4959-a034-f73eabdf7a64",
        "cursor": {
          "ref": "9dc83566-06cc-427a-a5d1-633e0c830f5e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6799aa49-faf9-4b2a-82c0-1d02b53c7009"
        },
        "item": {
          "id": "fdc3b194-9e87-4959-a034-f73eabdf7a64",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e08c0328-d234-49a6-b2f5-f9c503577a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c67cd1-3be1-46d9-846a-945b789d3206",
        "cursor": {
          "ref": "301d9ce0-0f94-439c-a754-bb1d6c59bed5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5654146f-e499-4075-a008-b4dbef30759c"
        },
        "item": {
          "id": "49c67cd1-3be1-46d9-846a-945b789d3206",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d377f7f1-cb7a-4e03-b2a7-c5c6fc837b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3213ad52-e7f0-4d13-9f21-6304148e3fa3",
        "cursor": {
          "ref": "94e029f2-fca8-495f-805b-6a9fefa24336",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "beea8377-cb62-41db-bec9-dd6826a6391c"
        },
        "item": {
          "id": "3213ad52-e7f0-4d13-9f21-6304148e3fa3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "baea3eed-e047-45fb-a338-7f2b5f204c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17238f5-ba8c-4f6c-ae99-1e0a3f92621e",
        "cursor": {
          "ref": "b46f74f5-4248-4ee5-8f1f-ece4be79a6e7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f7a9b023-f1d3-4316-a239-1d5ff87cce83"
        },
        "item": {
          "id": "d17238f5-ba8c-4f6c-ae99-1e0a3f92621e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c268e9c2-6bd0-437c-91a6-593c4bb2bde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5700c2f-4333-48a0-8baf-0be82eda2219",
        "cursor": {
          "ref": "93dc78c9-c595-4db2-80c1-fc503f469f20",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fad6bf40-07ee-4965-8afd-276b09e6b4e1"
        },
        "item": {
          "id": "e5700c2f-4333-48a0-8baf-0be82eda2219",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c0ccf46b-5762-45c7-8b47-fee126c30717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e510c090-55e0-4f4a-8dcb-e9b808a12851",
        "cursor": {
          "ref": "48b6bda1-6b15-4b09-afa7-80f4b1c2ba3a",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c4381dba-afb7-4f19-a662-b92b89edd987"
        },
        "item": {
          "id": "e510c090-55e0-4f4a-8dcb-e9b808a12851",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ea100fea-00e2-437c-a3d5-209ebc7f59ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c851f605-924c-4853-b5a9-86c8a3f5e138",
        "cursor": {
          "ref": "723f6235-d687-435c-9ec7-8115263a56ab",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f65ea8fe-8cc5-4406-b0ad-fd721468fc78"
        },
        "item": {
          "id": "c851f605-924c-4853-b5a9-86c8a3f5e138",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "2eb34904-b5ad-4262-9828-45ee2f884121",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 631,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6f7113-d3c1-47ce-bba7-bc240c6b2257",
        "cursor": {
          "ref": "f553b39a-564f-4e3c-b4ab-4b8c4274cf01",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "073544e4-74e1-448d-b399-eb7c5c118f87"
        },
        "item": {
          "id": "9e6f7113-d3c1-47ce-bba7-bc240c6b2257",
          "name": "credentials_issue"
        },
        "response": {
          "id": "415ec259-c1e5-4a16-9445-956054e45cb1",
          "status": "Created",
          "code": 201,
          "responseTime": 5024,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5101b6fc-80ac-44a5-80fc-48b9c1a1dc4b",
        "cursor": {
          "ref": "7ed742fd-ee21-410e-9b9f-186d7c45fa3d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5da9e78c-cad3-43a3-b7eb-84d7583b006a"
        },
        "item": {
          "id": "5101b6fc-80ac-44a5-80fc-48b9c1a1dc4b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c597b6ee-66ac-4472-80e2-e23c696d0031",
          "status": "Created",
          "code": 201,
          "responseTime": 6407,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e2642f-00b5-444b-ab09-dd7847d9784f",
        "cursor": {
          "ref": "4f68f3d4-221c-470c-a0e2-85d304e837e0",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4f516c07-4522-4985-af24-6f6174b10197"
        },
        "item": {
          "id": "d6e2642f-00b5-444b-ab09-dd7847d9784f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "624dfdf0-2909-4ca8-a2bc-ec1c33c88418",
          "status": "Created",
          "code": 201,
          "responseTime": 7569,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8fe579-ce97-403d-b872-3584cd242a91",
        "cursor": {
          "ref": "49d3c185-4614-4d42-9c29-69b41179f579",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1ec3c464-f61b-4233-b76e-f85acb54b94c"
        },
        "item": {
          "id": "da8fe579-ce97-403d-b872-3584cd242a91",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "01c82aab-36fa-48b3-ab10-5918b9a735de",
          "status": "Created",
          "code": 201,
          "responseTime": 5847,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6021f7a-7840-47eb-ab81-0273cf9b91c2",
        "cursor": {
          "ref": "4517ae6d-eee3-4b29-b92b-bec72ade96bf",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ce008fdd-a136-48b9-bf3f-afd09c42bbcc"
        },
        "item": {
          "id": "e6021f7a-7840-47eb-ab81-0273cf9b91c2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "10160ec7-905a-4a65-a1e9-42e205e25ad8",
          "status": "Created",
          "code": 201,
          "responseTime": 11266,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "27edf558-5523-40e9-8530-04103d8fa23f",
        "cursor": {
          "ref": "8a66bc68-67d2-4e74-a956-0b36e582d789",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "037666be-b175-4f53-af87-413825ad148d"
        },
        "item": {
          "id": "27edf558-5523-40e9-8530-04103d8fa23f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bc5037c4-cb94-4746-b61b-e6f2efa6e993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27edf558-5523-40e9-8530-04103d8fa23f",
        "cursor": {
          "ref": "8a66bc68-67d2-4e74-a956-0b36e582d789",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "037666be-b175-4f53-af87-413825ad148d"
        },
        "item": {
          "id": "27edf558-5523-40e9-8530-04103d8fa23f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bc5037c4-cb94-4746-b61b-e6f2efa6e993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21afbc8-6b07-45d7-881c-30a772f48fb2",
        "cursor": {
          "ref": "4b0109dd-5231-441d-a410-8912ee5f1999",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9e80ea5e-d40c-45b1-bcb2-af4a9d68f212"
        },
        "item": {
          "id": "c21afbc8-6b07-45d7-881c-30a772f48fb2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "65b669b6-8073-423d-82cb-8ae7b919129d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac503dc-1971-413f-ac94-06c22a1d829c",
        "cursor": {
          "ref": "b90c053e-4770-47a9-a8e3-6438b050edd6",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "311d7383-e308-40d6-9c93-fec8e16465b0"
        },
        "item": {
          "id": "9ac503dc-1971-413f-ac94-06c22a1d829c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9e3bb2ff-7e63-4de9-92c5-1727e336e6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f763a73-36a1-4f82-92d0-d642e8fc20c1",
        "cursor": {
          "ref": "ed4c98d6-2a3c-498a-9998-ffa80b821236",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cf9d991f-2d93-48bc-ae94-fd5780917f14"
        },
        "item": {
          "id": "9f763a73-36a1-4f82-92d0-d642e8fc20c1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "32c52c18-5471-46a3-9d53-a6ff249491e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b077eb2-c845-435a-8a4b-51d7569236c2",
        "cursor": {
          "ref": "a6a9b1aa-3f1a-406b-a015-b42dd7499f5b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "35f9713a-9e98-44b2-8e33-9a12a1039023"
        },
        "item": {
          "id": "1b077eb2-c845-435a-8a4b-51d7569236c2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0ccfad8a-c9e2-447b-a5a0-84fea3e87c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707ce643-b97e-415f-b636-eeecbc4be5b1",
        "cursor": {
          "ref": "4bf588b4-d12e-4912-9169-59ba98f932f0",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bf63151f-fa6f-4364-b4a9-bf81b9abb51e"
        },
        "item": {
          "id": "707ce643-b97e-415f-b636-eeecbc4be5b1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "23904302-c6bc-42f9-b6aa-c45c50293dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b713dc-4a08-43ea-91cf-bca46483a1cb",
        "cursor": {
          "ref": "c1a4c6c7-4d49-4a13-b8a1-d1a18661ea4c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "82c5d880-c8db-4234-b9eb-68095af81f5e"
        },
        "item": {
          "id": "83b713dc-4a08-43ea-91cf-bca46483a1cb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cb85e57e-986f-4c9c-a2ea-7796e9a6bfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f34d45-fdee-46c6-bb64-b2ed4f32136b",
        "cursor": {
          "ref": "95c31cba-2fa8-41da-b67d-fa757590e27f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7c383637-d3e0-4e87-a88b-e9afb25e1585"
        },
        "item": {
          "id": "92f34d45-fdee-46c6-bb64-b2ed4f32136b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "95fbb161-4190-4fff-9fe6-03b2e6135179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84cd2c5-418f-4907-9c8f-995f5b06c0c8",
        "cursor": {
          "ref": "2f6fd368-51af-4cbc-83de-9f33ff9dc501",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ffb45716-2548-4066-919a-f9f48ed58dd9"
        },
        "item": {
          "id": "e84cd2c5-418f-4907-9c8f-995f5b06c0c8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a9e98861-9ba5-4704-af8b-71cded3532f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba635dc-7c9b-4d5e-a174-d0dc86280426",
        "cursor": {
          "ref": "88734659-1808-497b-ad83-ad0465aeac71",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "495ba338-1122-4f0c-9636-02af633166bc"
        },
        "item": {
          "id": "bba635dc-7c9b-4d5e-a174-d0dc86280426",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b3985267-9740-4498-8c21-8410adc1b440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75918de-d184-452a-bd8a-f9facf440ba6",
        "cursor": {
          "ref": "9c39dbef-fe53-46d5-a48c-986a6097e2d7",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fa8a0e17-24a2-4cd9-b77c-7159a05d41dd"
        },
        "item": {
          "id": "d75918de-d184-452a-bd8a-f9facf440ba6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "016922c9-9b90-4493-845a-ab4bce525aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160c22cc-ad4b-437b-b767-ebafd4757841",
        "cursor": {
          "ref": "83ea2b06-a1f4-4fcd-a3a8-210ac5a1c9c5",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3501d83d-69d7-4aa9-af14-c77d121ccf95"
        },
        "item": {
          "id": "160c22cc-ad4b-437b-b767-ebafd4757841",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a33ce72a-7023-4dbc-8ae5-16f4b04d2dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06806bea-8d79-4f67-871e-84e16d802699",
        "cursor": {
          "ref": "42a352b0-309d-4aed-92b5-5057ed927b95",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b8a65f7b-20ab-46a9-a060-536d80bd549a"
        },
        "item": {
          "id": "06806bea-8d79-4f67-871e-84e16d802699",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5749bd5b-59ef-4757-97ac-c1dcf2b421d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a5d624-cc9c-4632-8fe1-6c8261d5e9a4",
        "cursor": {
          "ref": "e1a917c2-bd0d-4fe1-99bd-abd3e226ce36",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a03f1763-671d-4cd2-9992-2d507c264315"
        },
        "item": {
          "id": "13a5d624-cc9c-4632-8fe1-6c8261d5e9a4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9a2a997b-cd7f-4371-88d8-d1985fa5181c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b90638a-d518-4f5f-98b1-ee24c36ff509",
        "cursor": {
          "ref": "13224a02-1b32-4ff9-8ce7-2ffd8ccf0670",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9681a101-15dc-41bd-8713-6677477fd6c2"
        },
        "item": {
          "id": "1b90638a-d518-4f5f-98b1-ee24c36ff509",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c01ccab1-e534-4776-8dea-fac465481139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f42a28-66e5-4599-820d-99fc1ea848a5",
        "cursor": {
          "ref": "9dd7518e-3a4c-4daf-b431-d248ff4694a2",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6b276fbd-3391-403c-bd32-331da8864939"
        },
        "item": {
          "id": "92f42a28-66e5-4599-820d-99fc1ea848a5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7c3038ce-d964-4f04-8173-439dfb4302d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b230e5a-2b14-4f62-874f-9c629ba76473",
        "cursor": {
          "ref": "282e42cb-5a02-4a24-821e-70d0d2278fd0",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "85e5bb45-1226-4b89-b893-c1e0e69e1d86"
        },
        "item": {
          "id": "2b230e5a-2b14-4f62-874f-9c629ba76473",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e94f806f-54e9-4847-ae26-925d952aae51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cada6305-1ec1-4dc4-9fef-b1f14b550bde",
        "cursor": {
          "ref": "8a2c15aa-6dbc-43b2-9019-4b18c50f89d2",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ebe9e450-7895-4ece-8acd-d3ba7715c0af"
        },
        "item": {
          "id": "cada6305-1ec1-4dc4-9fef-b1f14b550bde",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a581b219-3558-47eb-8ed4-f9a6bf1d9a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c7e57c-9280-45d8-898f-2671d123dd12",
        "cursor": {
          "ref": "756dcf9e-7488-4ba8-8814-91ce8b079088",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c6abd6e6-19c8-475a-8186-a998240e4061"
        },
        "item": {
          "id": "e3c7e57c-9280-45d8-898f-2671d123dd12",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6836a076-bdf4-4762-a2bf-0b5ee85260fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cff64a-8f62-48b7-ba6f-e519f1000d98",
        "cursor": {
          "ref": "f2979d10-c63b-44f5-af2e-84db7bf14268",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "431abf1f-83df-49eb-a03d-b2520d839d4f"
        },
        "item": {
          "id": "a0cff64a-8f62-48b7-ba6f-e519f1000d98",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0dd1848a-eaea-4b81-940c-b244151943e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f328e2b4-d955-459b-8690-723ed11f2576",
        "cursor": {
          "ref": "128976ed-6680-4d3f-bc54-86b67ae47068",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "894f67d6-1de1-429a-9ade-15f9b980286a"
        },
        "item": {
          "id": "f328e2b4-d955-459b-8690-723ed11f2576",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "70fabe84-1a77-4e62-b9f6-715645a9ded8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f58178d-3f5d-4b70-a0bd-693020ab73c1",
        "cursor": {
          "ref": "694ab073-2f42-4d03-86f3-b633f6be5235",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d1ff6a88-8871-4d53-b5ed-ffc2fc5b1fe3"
        },
        "item": {
          "id": "0f58178d-3f5d-4b70-a0bd-693020ab73c1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b7ebdd50-048c-4043-8e31-48487377c56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dd6f04-16c7-47a4-822f-fa3aacafc9fd",
        "cursor": {
          "ref": "c919fc69-ffa3-4d76-a993-87da97a35522",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7a549e3a-0132-42d9-8f2c-f50069f8cdbe"
        },
        "item": {
          "id": "24dd6f04-16c7-47a4-822f-fa3aacafc9fd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f7bba41b-b59b-4c9d-bfeb-0a5acfdf2c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5651aeda-58d2-4b09-8a2e-fdc7d995c015",
        "cursor": {
          "ref": "40d85f3a-cda3-4400-a30f-02931708be1c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c96b4cea-8f74-44b1-aee8-ab01c1a25a13"
        },
        "item": {
          "id": "5651aeda-58d2-4b09-8a2e-fdc7d995c015",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6832086f-1adc-44bf-9ae7-85cbac5364b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7468da01-2adb-4e1d-94db-5cb8fc78e93a",
        "cursor": {
          "ref": "5532d7b9-beae-4f2b-a534-438d99d7e489",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "29374220-858e-4916-a536-1367b6951728"
        },
        "item": {
          "id": "7468da01-2adb-4e1d-94db-5cb8fc78e93a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "67db67be-89ac-4198-9f16-394f1779c98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a6a8d7-cf44-45f2-bb55-7ec9853161de",
        "cursor": {
          "ref": "d70fe14d-9b92-4e11-bb1d-0d75d92293de",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3c815654-f099-4bb8-96a1-3b1374c8737f"
        },
        "item": {
          "id": "41a6a8d7-cf44-45f2-bb55-7ec9853161de",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "423141d7-365a-422b-9338-d71fcac5d433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226a15e3-4e77-406a-ae57-04dafdb5ac4b",
        "cursor": {
          "ref": "181b54e5-276e-42f9-9279-3f8b209a0db2",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1a1b4d2d-ce3e-4fe6-8710-48d5aac07827"
        },
        "item": {
          "id": "226a15e3-4e77-406a-ae57-04dafdb5ac4b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "776c4a17-3da7-4b53-ba5d-ca5a28d9866b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e657ca6-948a-414a-aace-98fb1d9e523c",
        "cursor": {
          "ref": "5e84e99c-1dac-4b21-9b47-f2bb120bf547",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "abcb4d7e-c617-4e76-9743-c393e333a8b7"
        },
        "item": {
          "id": "2e657ca6-948a-414a-aace-98fb1d9e523c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ac08f15b-a86c-4d8d-91e2-5bc709612a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc1b74e-acff-4163-b09b-442cd319f2ff",
        "cursor": {
          "ref": "c05ab9b9-6d1e-4824-abc2-f5ac3a09d3f8",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8e8b6ff8-d56f-4e0e-97bd-c00e81a5f149"
        },
        "item": {
          "id": "2dc1b74e-acff-4163-b09b-442cd319f2ff",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b712ad1f-3cf2-44bc-aa3f-22ddc954a08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da578bd-a1a8-40cf-a1ca-8c3802897344",
        "cursor": {
          "ref": "babdb802-2094-413f-9e7f-8233c7b1f39e",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bb43a5b4-3fb2-4e13-9590-8576d5edfebc"
        },
        "item": {
          "id": "5da578bd-a1a8-40cf-a1ca-8c3802897344",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bf08642c-3886-43c8-a29a-829314f70bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4433ad33-0daa-4334-a8bf-18000d29cf66",
        "cursor": {
          "ref": "3b8424a3-8e27-427d-b69e-4de6b507b88a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "72412089-bdff-4bd5-aee9-144d095434e9"
        },
        "item": {
          "id": "4433ad33-0daa-4334-a8bf-18000d29cf66",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c2b509fb-9c0c-4a5e-ab4d-7dbb571ca4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c9abfb-6310-4da9-bd93-0d02a589a271",
        "cursor": {
          "ref": "a1f1d685-b5db-4a39-9f45-4c2f4f62b1e6",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e1f0d35c-8d04-459f-a7d9-c2a243c1e34e"
        },
        "item": {
          "id": "86c9abfb-6310-4da9-bd93-0d02a589a271",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5cc9c79e-ad36-4b81-9ac9-de111761a619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fa8366-f43c-4e8c-90de-54a8661af266",
        "cursor": {
          "ref": "77c83d82-b491-4c72-9d12-9275929c3a49",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "27d3f6e0-1d7c-49c1-b5be-7c86354ee365"
        },
        "item": {
          "id": "13fa8366-f43c-4e8c-90de-54a8661af266",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2a680d40-0b8a-4dc9-95f1-30c02cb07d2e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d366f10b-2fb6-4319-8a56-130e286405c1",
        "cursor": {
          "ref": "b2dfd941-2e4a-4bc0-8bbc-6dc3d2c006ec",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8ae273c8-2ab6-43c5-a992-3a5800e65c53"
        },
        "item": {
          "id": "d366f10b-2fb6-4319-8a56-130e286405c1",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e255e3ca-21aa-4b73-a56c-f5eda4ea4992",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 639,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5307d53d-b4d6-4ade-98c7-00c3b27ce03d",
        "cursor": {
          "ref": "2f34a492-5b64-4a13-882b-4c8d9b1eb8bc",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "dd802033-1002-4702-bbd0-9a39c5ddef0c"
        },
        "item": {
          "id": "5307d53d-b4d6-4ade-98c7-00c3b27ce03d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f1fe8ba1-a1fb-41a2-810f-bf04bf895321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5307d53d-b4d6-4ade-98c7-00c3b27ce03d",
        "cursor": {
          "ref": "2f34a492-5b64-4a13-882b-4c8d9b1eb8bc",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "dd802033-1002-4702-bbd0-9a39c5ddef0c"
        },
        "item": {
          "id": "5307d53d-b4d6-4ade-98c7-00c3b27ce03d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f1fe8ba1-a1fb-41a2-810f-bf04bf895321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830a100b-98a3-4a26-b015-56661ce33776",
        "cursor": {
          "ref": "bb4151a4-6f4a-4c34-b674-df2266c9ad8f",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1089ac06-9bba-4d6a-83b5-2d79bad8b035"
        },
        "item": {
          "id": "830a100b-98a3-4a26-b015-56661ce33776",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5c442891-9f8f-4adf-a618-9a2de4d61599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf0e350-544d-4406-a241-703b9c14fc51",
        "cursor": {
          "ref": "d9a3653e-27de-4cce-a098-52914a98b176",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5770d1a5-4bce-4dcf-ac0a-d88e474ed5a3"
        },
        "item": {
          "id": "dcf0e350-544d-4406-a241-703b9c14fc51",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "367ba99c-38d2-4ce8-8a63-378ba826cb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159a7f1e-43b3-4d4c-8174-b6f5df5fe6f3",
        "cursor": {
          "ref": "f04808d7-6353-49be-8703-b62c5e2163f5",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f92f9e72-0cf5-41f0-992c-55d30a19d178"
        },
        "item": {
          "id": "159a7f1e-43b3-4d4c-8174-b6f5df5fe6f3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4ef31d11-a5aa-44fa-997b-8d4d8840d852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20c0c1e-e487-48e3-bea7-c9cb18d95633",
        "cursor": {
          "ref": "8bcda2f5-4d5f-46e9-a8c7-dc00493c3f58",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8ea993b1-deda-48eb-aae3-45ab99aed0e6"
        },
        "item": {
          "id": "e20c0c1e-e487-48e3-bea7-c9cb18d95633",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b48cd529-8973-4a39-b695-8e6f3b0fd6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e072d925-c223-4586-89fa-2f652237039a",
        "cursor": {
          "ref": "425ce87f-4f68-46ef-9fe8-bc3ee0846ef0",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a3527d65-0147-4a2a-bb76-54d7586e8acd"
        },
        "item": {
          "id": "e072d925-c223-4586-89fa-2f652237039a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3ac2670f-2546-431c-b399-3bcd57f23d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01ae2da-1a1c-4f63-8097-e6c28cea2575",
        "cursor": {
          "ref": "f318f076-8bf0-48f6-a4c1-be6f6c917f09",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "64541b46-71e3-4bcd-8291-9e46e9c94eed"
        },
        "item": {
          "id": "b01ae2da-1a1c-4f63-8097-e6c28cea2575",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7bd6fc3a-36ea-4584-aafb-b3c4517c6642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c1caf3-304a-4636-898c-7e814735636c",
        "cursor": {
          "ref": "8abe71c8-be4a-4778-b681-84260dad13c9",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3b91171b-cca1-438f-b478-bd4842b6e136"
        },
        "item": {
          "id": "f7c1caf3-304a-4636-898c-7e814735636c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "889aac13-190f-4737-81ee-504d2bb40a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d5ce10-6d27-46ec-b92c-ebc4f87b1990",
        "cursor": {
          "ref": "33a58ad4-0d3e-460f-9a15-1601a20ab1d6",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f1b66c7a-c70c-4e8d-9e7b-e2d3df811b80"
        },
        "item": {
          "id": "16d5ce10-6d27-46ec-b92c-ebc4f87b1990",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cfbeb6b0-6b35-46cf-ba5d-62b328d9cb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401f3c13-64bf-47bd-8911-d0780be20097",
        "cursor": {
          "ref": "045c05d8-3611-406a-8497-47207a8280d0",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "157b7515-dec7-4ed2-b22c-88e8d5e51ddb"
        },
        "item": {
          "id": "401f3c13-64bf-47bd-8911-d0780be20097",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a8bde287-bbac-4e3f-9127-f3b01e8b8caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf81559a-5bb0-482b-8759-76493506a5d7",
        "cursor": {
          "ref": "4821ec10-3fcc-45e0-ab09-6791e8f2a870",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6066a424-5589-4339-9083-3f463d04d0aa"
        },
        "item": {
          "id": "cf81559a-5bb0-482b-8759-76493506a5d7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "52b21ca7-621d-4d42-83e6-d8ec0da02677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf09fa0-f811-4e4e-b468-be9313ef08e9",
        "cursor": {
          "ref": "99ac0ccf-56c1-4aac-9583-d273a21d8564",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "88c6f3e1-e16c-487c-bf6f-08882c522d42"
        },
        "item": {
          "id": "ccf09fa0-f811-4e4e-b468-be9313ef08e9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "78c0af75-a18f-4056-8d49-41f8c355090e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dc3585-5212-4177-8eec-7706580abf2f",
        "cursor": {
          "ref": "b467bbc2-095e-4858-96a4-dee8d0a24fc1",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cb5856ee-57f3-49a4-807d-b9b221779266"
        },
        "item": {
          "id": "29dc3585-5212-4177-8eec-7706580abf2f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "91fe3192-964d-4aba-84ba-61201f2107b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dc712c-7a8e-4b95-908d-7a9954bd3a80",
        "cursor": {
          "ref": "888a88d9-11c8-4f6f-9a9c-caaf802a0144",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4a8c82ca-b41b-4764-acb7-666fb979905e"
        },
        "item": {
          "id": "65dc712c-7a8e-4b95-908d-7a9954bd3a80",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "269369d9-7504-4e79-9eb7-233c32dbd530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752bf760-1f44-48bc-a17b-5a9c9e605373",
        "cursor": {
          "ref": "de9ded4b-6531-493d-88f2-9ff26391fd07",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "80bf3af9-0db4-43f8-bcac-a18fc10e56d3"
        },
        "item": {
          "id": "752bf760-1f44-48bc-a17b-5a9c9e605373",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "82c570e5-9d96-4083-be6d-62e8aaded28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9851db0c-a02d-405e-9330-744042533ddc",
        "cursor": {
          "ref": "90d128a4-3ae5-48df-a3bd-4e0e75a3a7d5",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4dda73aa-8bcc-4807-aa43-70c40e7035e2"
        },
        "item": {
          "id": "9851db0c-a02d-405e-9330-744042533ddc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1bb224f4-1616-430c-95b4-94582a7d7f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e562bc-0189-4646-8c27-59044a83c6f9",
        "cursor": {
          "ref": "06115677-e401-4022-a104-cad3534b128c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e25f0d23-57a9-4c5d-8a23-f07969c5355f"
        },
        "item": {
          "id": "18e562bc-0189-4646-8c27-59044a83c6f9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cafd9a10-7029-44a4-8865-9a7369d2036e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92adf0c1-3ce1-4629-a4a1-4d489d6486ad",
        "cursor": {
          "ref": "f2d49584-9856-460a-877e-9b640f4338bd",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "53197358-6d82-4aec-934d-cbc6af9cce56"
        },
        "item": {
          "id": "92adf0c1-3ce1-4629-a4a1-4d489d6486ad",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "de8cd2f8-1ab5-4695-9834-ffae2b0a7e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8364af-2b87-4e44-b149-1f0b861d095b",
        "cursor": {
          "ref": "8b438207-7c58-48c4-8048-3f7ac2d24db4",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "05f022d2-de66-4fe5-8882-743ff76912fb"
        },
        "item": {
          "id": "2b8364af-2b87-4e44-b149-1f0b861d095b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b39dc3e2-8a45-4638-8329-04e1e4152e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5b3111-dea4-4b75-93f8-e9563efcc502",
        "cursor": {
          "ref": "bb7e6aac-4266-4cec-9f63-901655c85404",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8e69494b-b0e4-4263-9861-bf34eb6f5a2c"
        },
        "item": {
          "id": "8f5b3111-dea4-4b75-93f8-e9563efcc502",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6a18aa1f-a157-4d73-b054-feff12bff785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a0a8ce-c3af-4465-9a70-60fc6c845f5c",
        "cursor": {
          "ref": "7c2ca7dc-7a71-4de5-acbf-d0209570a394",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4dcde432-50dd-4e11-ac18-0a9c794e4351"
        },
        "item": {
          "id": "b8a0a8ce-c3af-4465-9a70-60fc6c845f5c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0d32d470-e1dd-4367-af9e-8509e9d33465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7906aad-fcbb-4d6c-ac9a-b202cc0d2112",
        "cursor": {
          "ref": "88c1e570-51af-4f5a-b31f-354e76555465",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b5a33ddc-422b-42c6-a504-24e2b2058632"
        },
        "item": {
          "id": "e7906aad-fcbb-4d6c-ac9a-b202cc0d2112",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9a51c0f0-75bf-42b2-bb27-fc80386633f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d6dfad-5064-46aa-b073-497afbb4ed98",
        "cursor": {
          "ref": "18ae2d06-92d4-4f38-873e-7951ca15314d",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "36a697c4-01b8-4395-9916-97c759a52c1b"
        },
        "item": {
          "id": "e4d6dfad-5064-46aa-b073-497afbb4ed98",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "40c8fe52-79d5-459b-afeb-7b0d2ada5fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f330d42-901d-473b-99a0-a223a3b8ce1f",
        "cursor": {
          "ref": "3313902e-d3f8-447b-bbc1-9926caab96ce",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ef1c22cc-3d72-45b3-9dbf-93689571029f"
        },
        "item": {
          "id": "6f330d42-901d-473b-99a0-a223a3b8ce1f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2e09f5e0-176c-4b36-bd0a-80d5e92bf0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f296866a-e2ce-4059-81b3-ef62f7227c80",
        "cursor": {
          "ref": "0973f4b7-4d7f-4e8c-a58c-e8b0657a6673",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a9b4330e-4629-4c2a-bbcc-1b34233d4bfe"
        },
        "item": {
          "id": "f296866a-e2ce-4059-81b3-ef62f7227c80",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9efadb09-8928-4c5e-9767-63624443f6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5566be46-1791-4509-aba5-76c17904a0d8",
        "cursor": {
          "ref": "fd0a7167-6bbe-4065-b92d-8eeab6afa693",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "76343719-1c19-448b-ae84-5d66b84b643c"
        },
        "item": {
          "id": "5566be46-1791-4509-aba5-76c17904a0d8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1c8e9e64-053f-4f02-aa36-2d82887429b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ec1660-3d5a-48d4-885f-7e83c32a62d5",
        "cursor": {
          "ref": "258b5bf7-2289-4cab-babc-dbe3086892d5",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0d85b65f-bca9-4b2b-86c7-40df51c86eda"
        },
        "item": {
          "id": "46ec1660-3d5a-48d4-885f-7e83c32a62d5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3ed6b69d-71db-4f69-84ef-368366a464ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac79cb9b-49b3-40d8-ac2d-2d3204e17459",
        "cursor": {
          "ref": "49cff3bc-b8cc-4bca-bcfa-da45a0f0b983",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d2c1b081-41d8-495e-b693-41c422c6fd41"
        },
        "item": {
          "id": "ac79cb9b-49b3-40d8-ac2d-2d3204e17459",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ce8348c5-47b7-4f2e-bf6d-c6d8698d23b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef92f270-5a15-4e17-b92f-baa224471ac7",
        "cursor": {
          "ref": "3c6c39ac-ad3c-46fe-80ed-952e90ac2c62",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d829d2ac-6db0-4c13-be22-baaaa24aee2b"
        },
        "item": {
          "id": "ef92f270-5a15-4e17-b92f-baa224471ac7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "75c4da68-637a-48aa-aea2-b61705729a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f5061f-f7bf-4c64-b47e-a907ee03920a",
        "cursor": {
          "ref": "9f8fb48a-5461-4e26-a209-e3edd65243a5",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f02b03ee-93a4-4202-b826-83b459ed0c9a"
        },
        "item": {
          "id": "52f5061f-f7bf-4c64-b47e-a907ee03920a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c8b4acc3-a354-45b3-8b5c-73e486f31662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349c4c6c-94ca-4529-b893-7b5f61f84832",
        "cursor": {
          "ref": "f4dc789e-cabf-4bb2-9ead-2ead74185680",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5b049b9e-1be8-47bb-9ee7-ac91ef6e91ea"
        },
        "item": {
          "id": "349c4c6c-94ca-4529-b893-7b5f61f84832",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e4c33a9c-7ca7-4015-869e-fe5f61e1b7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6616876f-30b9-4906-b3d1-9ab9685d3597",
        "cursor": {
          "ref": "ba416350-b214-4793-9944-41613bbb83c1",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c35d1ec3-f4e6-4816-a075-8ed0789de9ac"
        },
        "item": {
          "id": "6616876f-30b9-4906-b3d1-9ab9685d3597",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "afe9e642-942c-4927-899d-7b7935b274a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a9751f-03c8-4d17-9b72-dab810be823e",
        "cursor": {
          "ref": "14c8671f-1fd1-4dfa-be08-d4ad110db1ae",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cd9690a0-1f93-4cc1-b749-a06462fa8ecc"
        },
        "item": {
          "id": "d9a9751f-03c8-4d17-9b72-dab810be823e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0ec0b35c-e473-4903-b3df-87d20cf103cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d389359-72d5-4371-a54a-49c67483147e",
        "cursor": {
          "ref": "f6e07df1-dc5b-4281-9d98-006d71861b2f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ef47465b-1048-4e0a-8005-e5271d39db89"
        },
        "item": {
          "id": "9d389359-72d5-4371-a54a-49c67483147e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2ed39091-5e74-4d77-83ac-5425fec8d35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e2f0f7-2f08-47ea-be3d-0e696202ad1a",
        "cursor": {
          "ref": "f2dd4ee6-377d-4c51-8952-8cbfbe245d71",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2e42b7f0-e855-4a77-a2f1-feb5c26b7e91"
        },
        "item": {
          "id": "d0e2f0f7-2f08-47ea-be3d-0e696202ad1a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5d7c1acb-0d4a-4304-b7ce-34fad388b53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd54dcad-56b5-41de-9b7b-a27e21d8f821",
        "cursor": {
          "ref": "3b7876d6-2616-42e2-b3f3-9d32e7d3df4e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6655c949-cef9-49c8-b0b5-63eda130ec61"
        },
        "item": {
          "id": "fd54dcad-56b5-41de-9b7b-a27e21d8f821",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "734c0b1c-86e5-4d29-ba3e-ecf9183cd8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0231e50-1492-412e-8bc6-19060bf80acf",
        "cursor": {
          "ref": "dd0aef62-26e3-434a-86c6-f43570438fa0",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "91b09af8-ce50-4a09-880c-53c7d110c1b8"
        },
        "item": {
          "id": "f0231e50-1492-412e-8bc6-19060bf80acf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "672cbc7a-282d-4208-9f92-00d26525a4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4f1ed8-5919-4faa-9927-43bc8f10f39b",
        "cursor": {
          "ref": "893d4c04-6c91-4878-baeb-1dfb05a1c68b",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "428cb55e-b649-4827-85f2-4a9191ed2f55"
        },
        "item": {
          "id": "8b4f1ed8-5919-4faa-9927-43bc8f10f39b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "29bf8ca0-bf37-4c7b-9218-a66a3fc74a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97de82e4-734e-4bfd-9f04-3b07bc1641fd",
        "cursor": {
          "ref": "50d91323-0eb8-4f8d-9013-2897346605d1",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2a81cea6-9157-427d-88c0-51ce261aeb26"
        },
        "item": {
          "id": "97de82e4-734e-4bfd-9f04-3b07bc1641fd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d919cbce-beba-4a80-b0b9-11b4f907eece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05907c96-8628-416e-a8e2-607af48b61c2",
        "cursor": {
          "ref": "ab115e96-7fec-43cb-8995-7da0c3b62390",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "07c9fe3a-1f69-4e4b-9c4a-2f821b22b70a"
        },
        "item": {
          "id": "05907c96-8628-416e-a8e2-607af48b61c2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0ba91f41-3e59-4318-89e6-262d71c6cb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ce7261-80c2-4679-97ae-04fca2b85b83",
        "cursor": {
          "ref": "e4b223fd-3880-4a0c-a443-7c29493ab239",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0f72754f-ab1d-40cf-8f2b-dbc562d3504b"
        },
        "item": {
          "id": "57ce7261-80c2-4679-97ae-04fca2b85b83",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "024a1607-4234-4574-a7db-594682d9f00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084373d1-9dcd-460b-8cb5-bb60199b0485",
        "cursor": {
          "ref": "88f645ef-dc8d-485f-96ce-ad6a16e3b020",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c02e4ecb-6327-4ec1-9698-5491fb4a6965"
        },
        "item": {
          "id": "084373d1-9dcd-460b-8cb5-bb60199b0485",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d146720b-2e72-44bb-9240-5fb91ca017fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fd067b-5e06-4ef9-83b1-0028fb693040",
        "cursor": {
          "ref": "b19231af-7f39-477c-83ec-099396727719",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "783b8a59-28d6-4b8a-822c-c036dc33356d"
        },
        "item": {
          "id": "84fd067b-5e06-4ef9-83b1-0028fb693040",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2a45aa8f-c01e-4f08-9886-4a5d33e66af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6346887a-b89e-4521-9b35-616466b6cc5a",
        "cursor": {
          "ref": "6827d739-d6ad-4be4-a39d-a566177469ab",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "81db4663-7239-4ea4-8c96-6e4a8b67b056"
        },
        "item": {
          "id": "6346887a-b89e-4521-9b35-616466b6cc5a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9d2a054a-c9f2-410f-b5b7-b5b3c985d963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24aa1928-21fd-4c3d-ba78-2edc9403ac2e",
        "cursor": {
          "ref": "f6cb38d6-3941-4e55-854e-11aff3a70c05",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "55dad9d4-8fe1-451a-9acc-03627456b603"
        },
        "item": {
          "id": "24aa1928-21fd-4c3d-ba78-2edc9403ac2e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f2449dfc-5635-418f-a34d-2b36fc572e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9276e956-c68b-4f90-90a6-d27a73194da9",
        "cursor": {
          "ref": "eb809030-7ce3-4c08-85d9-cea1d15328c0",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "540ec4a7-eb2a-470a-b1f6-afa934c0352e"
        },
        "item": {
          "id": "9276e956-c68b-4f90-90a6-d27a73194da9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7c670c5e-1c75-4682-8ff8-75fc4ccea5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4e093f-3699-4f8b-a016-15faa9eec3dc",
        "cursor": {
          "ref": "d9e7adad-7032-4944-8862-64b475eeadae",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3e8e11fc-78a8-469f-ae5e-3844121c0155"
        },
        "item": {
          "id": "dc4e093f-3699-4f8b-a016-15faa9eec3dc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2e41725e-02bd-4531-a8db-089939be987b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d3e8fb-fd46-44c5-b397-3e5c555555be",
        "cursor": {
          "ref": "62808a98-0c28-438e-82e3-72eabbb171ac",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d77f9640-6d13-4a2f-b4d4-3c4cf5a5b8ff"
        },
        "item": {
          "id": "04d3e8fb-fd46-44c5-b397-3e5c555555be",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "641f883f-64ae-444e-bda9-5bc7d4be7e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134818e5-86ab-4d8e-b094-8511cf848025",
        "cursor": {
          "ref": "6ccc1382-30d0-4733-90e1-ef0d66c4e533",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "848f0ab4-4688-4a42-8b86-72870dda8f3a"
        },
        "item": {
          "id": "134818e5-86ab-4d8e-b094-8511cf848025",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "71e81837-5542-4e82-9ca1-bb4beebb36f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e64d1a5-8bab-4138-96ed-f85ed2c2cb71",
        "cursor": {
          "ref": "e5992e1d-e6ca-4e9c-9ab0-d16fd28fc74a",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "36d36ebd-baea-4913-865f-5cd2ebe71686"
        },
        "item": {
          "id": "4e64d1a5-8bab-4138-96ed-f85ed2c2cb71",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "86c0c0ed-1819-4587-9ab4-3909aa266b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d3d76a-4dd0-4869-a2f0-fa8825cd8355",
        "cursor": {
          "ref": "41abebaf-bc1a-4945-911e-8f8f69f2d8d8",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "69a9aef8-53ed-4399-9bc4-b6abe35ea0d2"
        },
        "item": {
          "id": "d5d3d76a-4dd0-4869-a2f0-fa8825cd8355",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "163a102d-e907-428d-b780-8653b37ee8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c3d6d2-e974-4e0c-982d-112e41b2d8c7",
        "cursor": {
          "ref": "971d64b6-92b3-40dd-ab22-9ed3a720392d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f87ca158-30c9-4959-a001-6b5ba0f49668"
        },
        "item": {
          "id": "61c3d6d2-e974-4e0c-982d-112e41b2d8c7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f0b46b5d-254d-4237-b439-d77723644b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0728f5b-be82-4492-a159-fa3d2ed9067e",
        "cursor": {
          "ref": "aa2b8c52-941e-47e0-9c62-a24dbbededfd",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "503ba843-dc19-4131-9d1e-c93014c649bc"
        },
        "item": {
          "id": "b0728f5b-be82-4492-a159-fa3d2ed9067e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d9e4fb86-ca0c-4088-927c-c14df060af84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73aa9ab2-ce36-41fb-8350-7a1783fb478c",
        "cursor": {
          "ref": "d3f095d7-b792-4ee8-84ff-f907314bdf44",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0ec91510-1d9b-4150-8bc6-e32444e77f68"
        },
        "item": {
          "id": "73aa9ab2-ce36-41fb-8350-7a1783fb478c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ff359de1-6202-478f-ad82-a5dfd13e4f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5bc3c3-8d2a-47e5-ad04-5bcaaf7d0dbd",
        "cursor": {
          "ref": "2b21955a-e2bd-441b-9a4d-e0c8ed78bb64",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ada4cffa-367c-4dc5-a01d-0c894e0877bf"
        },
        "item": {
          "id": "6f5bc3c3-8d2a-47e5-ad04-5bcaaf7d0dbd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7546b74a-6369-488c-8ba2-bcad4a557991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9c4816-08f9-425b-9afb-33b0cf0f63d6",
        "cursor": {
          "ref": "722539ad-4c52-486e-bbf1-eb77099e44df",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1eab770e-ab7c-48aa-88f6-59784f2deece"
        },
        "item": {
          "id": "2f9c4816-08f9-425b-9afb-33b0cf0f63d6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1f1788c1-bade-4707-90a7-f61a43fe9b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1596,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4782c69-0605-4d4c-b965-bd61b7496a4d",
        "cursor": {
          "ref": "2222ce40-b9c6-42ee-94dd-63ce4f10808f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "006e2cfb-4869-4b4e-9533-03a6ad49cbd1"
        },
        "item": {
          "id": "e4782c69-0605-4d4c-b965-bd61b7496a4d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6559e8a5-c16a-42f6-9830-8184371b2a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1135,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb49d940-969a-4e61-b1cb-8eb8730ffa37",
        "cursor": {
          "ref": "527cbfb1-eb07-40b9-81f3-e07ef7601562",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "78abb294-1d43-4e55-a095-737b4a259089"
        },
        "item": {
          "id": "fb49d940-969a-4e61-b1cb-8eb8730ffa37",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0d923be5-e2c8-43aa-80b7-c17d8e179d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1411,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1568d05b-0c2b-4f94-ac06-6ba7565f8dab",
        "cursor": {
          "ref": "b77d6b2e-cc23-46b6-bb3b-f2acacb8b784",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bd573b16-e1f6-42e4-a2df-086eb31c4f2c"
        },
        "item": {
          "id": "1568d05b-0c2b-4f94-ac06-6ba7565f8dab",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "35be52e5-7fb3-4244-94e0-7e9cbbafba75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1218,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15c86eb-28e7-4b35-a5f6-fd9dbedfb5de",
        "cursor": {
          "ref": "94e3900d-985c-42fb-9aed-d87877444ffb",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "48b21759-238c-4607-91d6-6886dfb28dbc"
        },
        "item": {
          "id": "a15c86eb-28e7-4b35-a5f6-fd9dbedfb5de",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d0120661-9305-4512-b0fe-9bd62b6548af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389a9696-1e28-40e0-ae5e-88498ebe72af",
        "cursor": {
          "ref": "13b07d09-b0ca-42f0-98e8-1ef7be812af0",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "53a3d51e-4bd9-40f2-aafb-3349266aaeaa"
        },
        "item": {
          "id": "389a9696-1e28-40e0-ae5e-88498ebe72af",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3e0a97e1-5faf-4545-8c94-c41dba8459c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787f7102-2550-4f12-a7bf-e706b4260131",
        "cursor": {
          "ref": "6d511ef8-d3ff-4329-af2c-54a9255a9f74",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c36e1bc0-aea8-4e2b-887f-784735347ace"
        },
        "item": {
          "id": "787f7102-2550-4f12-a7bf-e706b4260131",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "281943e2-a89b-4797-92ca-88e522f17583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ceca46-01ac-4677-9e6d-fda9cded7ea9",
        "cursor": {
          "ref": "76f55912-1575-4c6f-a3b1-55169d522f05",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "75ace7fb-a573-4c9c-a2e6-ab8bf5f8f7bf"
        },
        "item": {
          "id": "a6ceca46-01ac-4677-9e6d-fda9cded7ea9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c48ac2a3-a19c-4a74-85ef-842f81f29286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd48506-3826-4ff4-99cb-4bcfaedd9e32",
        "cursor": {
          "ref": "f2665799-f7ed-42af-8645-cad32ea2407d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "36d67976-e282-40b0-9305-68f85f48e30d"
        },
        "item": {
          "id": "6fd48506-3826-4ff4-99cb-4bcfaedd9e32",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "463e3b21-41ec-4e74-b1ce-1d3a9e542aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f90e9a6-5651-4947-9296-22d72ee7a3ab",
        "cursor": {
          "ref": "906dd5b1-7c93-4c0f-a156-4a08f4200053",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "db21c92c-2ea6-4ec2-92e2-f3d3bf7b9556"
        },
        "item": {
          "id": "7f90e9a6-5651-4947-9296-22d72ee7a3ab",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f356fa07-ff34-4b75-916f-26fe67ba4f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41b5b8b-0876-4c3d-81f5-9ce53ed0b488",
        "cursor": {
          "ref": "c056e662-92bd-4f4d-93b6-95bb74112db0",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "62b84391-a820-4d0e-919d-c2c1993973a4"
        },
        "item": {
          "id": "e41b5b8b-0876-4c3d-81f5-9ce53ed0b488",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f5e5c92c-57e8-4078-bd6e-1fbfd951c728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba40ebec-734e-4f15-b795-989bd61e4c8c",
        "cursor": {
          "ref": "184c8e8f-5413-491a-86f2-caf1091ea920",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f2ac3b06-e430-4443-8b1e-bdb80f48ac94"
        },
        "item": {
          "id": "ba40ebec-734e-4f15-b795-989bd61e4c8c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c091d376-305a-4d46-843f-bf300da09620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a47ce2e-2481-4f60-89c6-6d2ed0f90346",
        "cursor": {
          "ref": "f274a681-d2e4-49c3-9182-1ca1e4cedc61",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ecbd1f61-5525-4f97-87f1-e608d0f5483f"
        },
        "item": {
          "id": "6a47ce2e-2481-4f60-89c6-6d2ed0f90346",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "89252833-7c1e-4e9d-9bfc-97c03fba6fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae35f40-2495-4d60-adec-306afcf0ed4f",
        "cursor": {
          "ref": "34bf9157-f560-4c6c-80ce-4dcb0249c3dd",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "980d0878-37ba-4535-a771-61f4b5d2d047"
        },
        "item": {
          "id": "2ae35f40-2495-4d60-adec-306afcf0ed4f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "886afb79-8d57-4395-868e-41c903ff9674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58446498-bdb2-4284-accf-b4e3530712b4",
        "cursor": {
          "ref": "d0d35890-abb9-43f5-aab0-28217ef72cfd",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f902b07c-6d8b-4201-9638-40ba21cab705"
        },
        "item": {
          "id": "58446498-bdb2-4284-accf-b4e3530712b4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "33378a7e-dd19-4be2-a417-867070197c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31090ad1-31d0-42de-91a2-bf891cc1ef72",
        "cursor": {
          "ref": "1a5b5641-c247-4eaa-b2e2-5414a78ff19d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3e6cfa2d-b13b-424f-88a4-da7b7c2e94c4"
        },
        "item": {
          "id": "31090ad1-31d0-42de-91a2-bf891cc1ef72",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c06a88af-f799-4160-b855-3a5af0444861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638aa06b-9642-4052-a0a9-8ac411e479c2",
        "cursor": {
          "ref": "d66de858-bf93-4925-992f-05a0848fd5b2",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "299d2178-918f-4e77-a589-818f37f25bdd"
        },
        "item": {
          "id": "638aa06b-9642-4052-a0a9-8ac411e479c2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b2de1519-ecf8-4954-afa3-806e3bf69f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19da440d-d9ba-48be-8be9-32916220ec54",
        "cursor": {
          "ref": "c0e9c0bd-b28d-4695-ad99-0593b272b8e8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1ce36e16-4756-46f3-b7f3-f48512610833"
        },
        "item": {
          "id": "19da440d-d9ba-48be-8be9-32916220ec54",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "189aaac3-d74c-4799-89b1-c8e43197e953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770ec247-9c57-4c96-bc0c-4e3cebd0882b",
        "cursor": {
          "ref": "4332e3fb-a82e-4c49-998d-85ec1609dee1",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e09cd579-6a97-426b-833c-fcb01ccf74a7"
        },
        "item": {
          "id": "770ec247-9c57-4c96-bc0c-4e3cebd0882b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f7606e08-5b6b-4b00-9af3-12f6752f0261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9a43c0-6f56-4e0c-9cbc-3361489ea21b",
        "cursor": {
          "ref": "9c299661-d3fc-4fcb-84a6-fed4c3d56311",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2ff23324-9994-4a3b-b9f7-e49e61ccb260"
        },
        "item": {
          "id": "bd9a43c0-6f56-4e0c-9cbc-3361489ea21b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bc8c35ad-95e4-4406-b8ce-824c37268e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b220f6-ae72-4f20-b598-a85cd1c219fd",
        "cursor": {
          "ref": "b6304ad6-4ff5-4cda-bafc-67646f54ced8",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "382fcb45-7460-4223-ba4a-f135911cd3df"
        },
        "item": {
          "id": "28b220f6-ae72-4f20-b598-a85cd1c219fd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "56e6144a-2c2e-4258-81f9-ccf04d17a522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcac682-6034-4de5-85a2-8bc32b52e244",
        "cursor": {
          "ref": "8765be0c-e64c-40b8-87e3-74bec5aae726",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cd10240b-10da-42fc-bb34-3aa4ef3923ea"
        },
        "item": {
          "id": "6bcac682-6034-4de5-85a2-8bc32b52e244",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "03ab81c2-a566-47ee-86dd-5794fe2a1580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41aa280-43f4-4832-89c3-5e1ba498f558",
        "cursor": {
          "ref": "ae32a629-3641-4f0f-abd8-5c008db76278",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7f761429-ca0d-4fb8-a1f1-c93107e71142"
        },
        "item": {
          "id": "b41aa280-43f4-4832-89c3-5e1ba498f558",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "99633c88-1a3c-4a9e-8c09-0cb197e8cfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e57aa87-2d67-43b1-bbdc-20ef8f8331cc",
        "cursor": {
          "ref": "566bdedf-13c5-4a44-a8b8-f565797cf299",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f4759b47-8ba4-4378-b8fa-585061bb1208"
        },
        "item": {
          "id": "3e57aa87-2d67-43b1-bbdc-20ef8f8331cc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7e322df5-2d5c-434b-865e-0dd7331b63e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1031,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adf4e68-720c-43bc-8d2c-42859e5df30b",
        "cursor": {
          "ref": "d0379d95-0837-401c-beed-b55586c3e837",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "66ee707d-e30d-472f-9b0a-50fc61b6dfcd"
        },
        "item": {
          "id": "2adf4e68-720c-43bc-8d2c-42859e5df30b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c509af57-bb5b-427e-8e11-d13c3871df75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7eb526f-951a-43e0-955d-568c707c2def",
        "cursor": {
          "ref": "bdf11a44-6f36-4c03-b5f7-774ce910367c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2cc1f175-e5fa-44f0-8040-82d3a9917626"
        },
        "item": {
          "id": "a7eb526f-951a-43e0-955d-568c707c2def",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7685e230-18f1-4ce3-b8f1-819cba282de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c5c0ad-6260-4521-a834-344e2293b933",
        "cursor": {
          "ref": "2bd1f0d7-1c8c-4d0f-81df-00a245408e54",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c0c21a9a-842a-43b3-8cab-7d6c0e43fa2b"
        },
        "item": {
          "id": "45c5c0ad-6260-4521-a834-344e2293b933",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7757d242-f1f8-4b36-9f7e-a1fa915eecfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40c659a-0ee3-448a-9ac2-09a055872017",
        "cursor": {
          "ref": "8ad0d2cf-5f39-483f-b4a4-9cafa71550cb",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c39350e5-ce68-41c8-b481-c67fba968308"
        },
        "item": {
          "id": "c40c659a-0ee3-448a-9ac2-09a055872017",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "12940eab-a9e6-452d-b62a-d2d0e09700a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a197805-e078-41e5-86f2-aa316f66fc1d",
        "cursor": {
          "ref": "e7727e49-d348-4397-b2cc-c0b50eea3cb0",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cee0feea-236e-4102-8d4f-acab9f8c8ba0"
        },
        "item": {
          "id": "4a197805-e078-41e5-86f2-aa316f66fc1d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fdd6dc29-a231-49b0-9e5b-30e5ab8f9589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9e2890-4366-411a-b4ea-04073f756f92",
        "cursor": {
          "ref": "02c76a12-4ead-49c6-9def-852451393811",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bd7237e4-2452-492f-b7fb-948398ee5df2"
        },
        "item": {
          "id": "3a9e2890-4366-411a-b4ea-04073f756f92",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5952e067-612f-4665-8587-cae41a956bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f328a0-9eac-4499-8888-632c60892cf1",
        "cursor": {
          "ref": "b4f97c9c-d3ce-496c-b3c5-e9627e3783e0",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4430c191-a5d3-41e9-ae84-fa0d4f0ef28b"
        },
        "item": {
          "id": "c1f328a0-9eac-4499-8888-632c60892cf1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d708c387-0fb0-4c76-80ac-e6213a0d2007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6909fa3-c45d-46dd-8ff7-bf8cb19091e4",
        "cursor": {
          "ref": "7795b8ff-d187-4fdb-a444-c473d1ad08af",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "32ae2902-b925-4473-ae99-e6b6ae9d99da"
        },
        "item": {
          "id": "b6909fa3-c45d-46dd-8ff7-bf8cb19091e4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b0778b1a-a4ca-46de-ad64-aaf1dbf6f8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7251cf61-9d5c-4f2c-950d-19087aa14c18",
        "cursor": {
          "ref": "2f08a802-993b-42bd-9072-da636ce8b333",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "60541ee6-eba4-454c-8b0a-9a14f0b0f541"
        },
        "item": {
          "id": "7251cf61-9d5c-4f2c-950d-19087aa14c18",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0290dd0e-4842-438c-a2f2-2e3fc090dfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f38a666-ed00-4b38-bc57-cedfff237232",
        "cursor": {
          "ref": "aa1a3a6f-eefb-429e-a1ed-a49cf5f01e6b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6b1ebc5f-a9fe-4956-90af-ff436efe9676"
        },
        "item": {
          "id": "0f38a666-ed00-4b38-bc57-cedfff237232",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "92648c81-e54a-43db-908d-c0a834b3afa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6602bf-3316-4c45-bed8-35c9b51314c0",
        "cursor": {
          "ref": "c359e589-f86d-4e8b-8c8e-5f892e05ee17",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "39bd0c2d-4243-460e-96f6-4123466f7347"
        },
        "item": {
          "id": "3d6602bf-3316-4c45-bed8-35c9b51314c0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4d1cf7fc-91f7-4e5a-a036-9574f15a52a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cf2113-3a8f-4f45-aa14-6bf4ce1d376a",
        "cursor": {
          "ref": "9cf8c53b-cf2b-43c4-b493-d317205eb935",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0067aff4-c71d-4052-9ec2-f1cc180202e9"
        },
        "item": {
          "id": "d5cf2113-3a8f-4f45-aa14-6bf4ce1d376a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7db6cb6a-f167-4076-9228-4e9f72e6c7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4da7b2c-a8c8-4c65-a214-28d26bc1e689",
        "cursor": {
          "ref": "67aecb62-6b8b-4306-a4dd-4a453a2ad772",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "208a842c-f083-4615-b97e-3ec9592cb12f"
        },
        "item": {
          "id": "c4da7b2c-a8c8-4c65-a214-28d26bc1e689",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f683a99e-25eb-47be-a812-8bcde920fa10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1354347b-ebb1-4b6a-95e1-78d0539253df",
        "cursor": {
          "ref": "34cb27bc-2da7-4d4c-aa08-5c04e0650b58",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0d4974be-d4a0-44de-8dd9-e8872e83eed1"
        },
        "item": {
          "id": "1354347b-ebb1-4b6a-95e1-78d0539253df",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1e0d22eb-e7a8-4736-b8cd-ee444aa4cedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf27588-e101-4d6b-9a0e-d668da232864",
        "cursor": {
          "ref": "5ed36d46-850e-4882-9966-bff9093a434c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "99d3daba-e8f7-451c-aa72-b83ac868c50d"
        },
        "item": {
          "id": "1bf27588-e101-4d6b-9a0e-d668da232864",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "55b30e74-68b5-406f-a66b-426946dac7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8abbfe-e137-4e5c-bcde-c98929045aa5",
        "cursor": {
          "ref": "5ea0da4e-3a27-41bf-95d7-dd845ee19bf6",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "915fdfb8-cc89-45ca-b05c-d64086be774c"
        },
        "item": {
          "id": "fd8abbfe-e137-4e5c-bcde-c98929045aa5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "def96070-67f2-4887-87da-eb17a4545d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36017d16-c94e-4363-ad24-b2a9e4ef9993",
        "cursor": {
          "ref": "65076b93-ee90-4d51-a528-018c172346fa",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2c86e6e8-2f70-4240-9ff6-a3fe70ddc196"
        },
        "item": {
          "id": "36017d16-c94e-4363-ad24-b2a9e4ef9993",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1c642383-ad7c-446d-aabd-0b7fa558b0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca5b20c-3b2c-4822-9ff5-170c3ff67a09",
        "cursor": {
          "ref": "d53dfc80-a338-4c5e-b40e-e5bef972f170",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8afea79f-86ac-4b9e-aed4-01263fd60962"
        },
        "item": {
          "id": "0ca5b20c-3b2c-4822-9ff5-170c3ff67a09",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ce836e5a-3104-43bc-9168-935975f95150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607f9ba9-dd8b-431e-85a0-a00cde312e6d",
        "cursor": {
          "ref": "b3cfbfec-20cd-4094-8a0a-56ee82e4b883",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8b1fa191-e7ad-4820-8998-811b0648a338"
        },
        "item": {
          "id": "607f9ba9-dd8b-431e-85a0-a00cde312e6d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "30eb872d-8dfc-46b5-9f3d-6877c55af8f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb790824-7bcf-4af8-9d36-ba61a4af7ad7",
        "cursor": {
          "ref": "5e58f548-f904-43aa-8429-6fb78e801f05",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "38c0dea6-ffa4-46c4-be6d-492428745f8b"
        },
        "item": {
          "id": "bb790824-7bcf-4af8-9d36-ba61a4af7ad7",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "2c0bd96c-53cb-433f-bc1b-45f715be7037",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 400,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759e18da-99cf-4c66-b68e-1de9c67e9f2c",
        "cursor": {
          "ref": "603fc40d-530c-473a-b0c5-db1c5e213d7c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c5830cac-774b-434c-a531-00c1bca21f48"
        },
        "item": {
          "id": "759e18da-99cf-4c66-b68e-1de9c67e9f2c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "99edce46-6aab-450a-96e6-c4e8e046276b",
          "status": "OK",
          "code": 200,
          "responseTime": 461,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b512d03-6267-4c6d-a46d-706f7b09bcf4",
        "cursor": {
          "ref": "dfbc06e3-da1f-43b3-bb5a-3f7bc30a821f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "85143aa9-56da-4c02-929f-593cca75bd35"
        },
        "item": {
          "id": "8b512d03-6267-4c6d-a46d-706f7b09bcf4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "947273f9-3893-421d-95ee-794586bc2c30",
          "status": "OK",
          "code": 200,
          "responseTime": 2283,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "44dc213a-fd96-40bb-bdc6-1bdb6f1736bc",
        "cursor": {
          "ref": "a437a24a-8980-4f74-ab96-ff81d7e142df",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "133f813f-7b22-4c99-882c-8f58dad5222a"
        },
        "item": {
          "id": "44dc213a-fd96-40bb-bdc6-1bdb6f1736bc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e42e2b37-b339-4adf-8dbc-ebdbcd58cfc7",
          "status": "OK",
          "code": 200,
          "responseTime": 1812,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4594f2d8-8d5b-4413-8698-b41eeba7ece8",
        "cursor": {
          "ref": "7b65f258-e819-479e-8d2e-3b0d84656be7",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a77af066-f250-4f62-b3c2-7d332604263f"
        },
        "item": {
          "id": "4594f2d8-8d5b-4413-8698-b41eeba7ece8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a821dd63-2eb9-406a-ab19-1fcabc5d2d47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4594f2d8-8d5b-4413-8698-b41eeba7ece8",
        "cursor": {
          "ref": "7b65f258-e819-479e-8d2e-3b0d84656be7",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a77af066-f250-4f62-b3c2-7d332604263f"
        },
        "item": {
          "id": "4594f2d8-8d5b-4413-8698-b41eeba7ece8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a821dd63-2eb9-406a-ab19-1fcabc5d2d47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4594f2d8-8d5b-4413-8698-b41eeba7ece8",
        "cursor": {
          "ref": "7b65f258-e819-479e-8d2e-3b0d84656be7",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a77af066-f250-4f62-b3c2-7d332604263f"
        },
        "item": {
          "id": "4594f2d8-8d5b-4413-8698-b41eeba7ece8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a821dd63-2eb9-406a-ab19-1fcabc5d2d47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203099f6-ac8b-44c4-b0a3-609a6ec7319c",
        "cursor": {
          "ref": "bb126c67-591e-4ce7-b5d4-3cdc8081f840",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "658291e6-c574-417a-9115-9dedbcc5c2ea"
        },
        "item": {
          "id": "203099f6-ac8b-44c4-b0a3-609a6ec7319c",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "4474d754-03bf-418c-8d56-612865c8a284",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 411,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8343144b-7e2e-4bbe-8af8-2c2196975938",
        "cursor": {
          "ref": "8a5dd2a8-19f6-45e1-9765-bd5809487d25",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2c909345-e583-4828-bb8d-2c14310f8947"
        },
        "item": {
          "id": "8343144b-7e2e-4bbe-8af8-2c2196975938",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1b72dbf8-c5ae-4bfa-b3be-6e3f551ae33e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8343144b-7e2e-4bbe-8af8-2c2196975938",
        "cursor": {
          "ref": "8a5dd2a8-19f6-45e1-9765-bd5809487d25",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2c909345-e583-4828-bb8d-2c14310f8947"
        },
        "item": {
          "id": "8343144b-7e2e-4bbe-8af8-2c2196975938",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1b72dbf8-c5ae-4bfa-b3be-6e3f551ae33e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2b8515-df42-4ddc-ba26-ae5088c5dd31",
        "cursor": {
          "ref": "f4e22b02-2aba-4a8b-8eda-05c004d726a2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3872ca94-2f70-4f96-a65a-9d1a16741152"
        },
        "item": {
          "id": "0f2b8515-df42-4ddc-ba26-ae5088c5dd31",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "1330965c-6151-4621-a539-8af36effcd68",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 674,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da53949-c29b-47b0-86bd-5c51305daf9a",
        "cursor": {
          "ref": "73ff9a19-8ab2-4c74-8d56-4d62268c22b2",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "363f263e-95aa-478c-be13-bccfd48d1b4e"
        },
        "item": {
          "id": "6da53949-c29b-47b0-86bd-5c51305daf9a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4067b06b-97b8-4100-a072-513fab84cbec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da53949-c29b-47b0-86bd-5c51305daf9a",
        "cursor": {
          "ref": "73ff9a19-8ab2-4c74-8d56-4d62268c22b2",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "363f263e-95aa-478c-be13-bccfd48d1b4e"
        },
        "item": {
          "id": "6da53949-c29b-47b0-86bd-5c51305daf9a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4067b06b-97b8-4100-a072-513fab84cbec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8094b61-9a22-4bda-8969-af3d9f512d1a",
        "cursor": {
          "ref": "6840105d-f6fb-45c0-bcb9-a0ee36b4dfc7",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "968a14fe-6d15-4947-b3e3-f6c7878bc8a3"
        },
        "item": {
          "id": "b8094b61-9a22-4bda-8969-af3d9f512d1a",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "d1c7a729-1437-432c-a154-e4c0bb91127f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 648,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}