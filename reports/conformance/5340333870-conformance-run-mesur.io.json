{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ccc47eec-100d-48be-b68d-4c6082ff586a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5c193b29-8829-45a8-8ca9-3506e3426ea0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d17ff1d4-3ab2-439d-ab2e-6ba9e4c56df2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "24a6906e-113e-46eb-8bb1-1744dd4f8097"
                }
              }
            ]
          },
          {
            "id": "fe3c66ce-2687-4b6e-ab30-2e1e924e7ff2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d0df709-bafe-4fab-9c57-6e734b0e5842",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5c042944-61e1-45c6-8efe-70e69078ffe5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "10272c12-dec2-41c7-a4d9-d7e7f169c739",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a842ba1b-5d8d-494f-8c0d-263f5a14c5c4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d82ee6c7-e125-43de-8b86-586dfdff456e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a11a3eb-cbce-4591-87eb-b63343a4a16b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f71b54dc-0094-4389-9a4b-0d52deceb6bf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "287c2c7f-8f5d-4d29-93f3-78f6944ff934",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "103728ea-5143-413d-b372-6058d0cdb4e2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "81bb5c9a-ce75-48a7-be95-897a5d03d27a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91d67d1e-8f4b-4daf-8248-f66bdd734821"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8dbcb426-bb23-4bfc-842f-9e68ecaff925",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "09697a92-9474-4691-bd3c-43429276bb0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a4fedc2-21a6-40ab-b8e6-b5d859c284ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd82903f-fb73-4c16-b4dc-4f6940819042"
            }
          }
        ]
      },
      {
        "id": "260e3e6e-23e9-4765-8ce8-1bf88e30e041",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "183b9b20-0a15-4850-882b-d9872009ded0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2ec4703-1c91-4b4f-aa92-e7401cfa556f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "82392c33-3fd4-4b93-83ea-173b951e0f64",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcd9075-c230-449a-ada8-99df1fbcc4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f485f3d3-c4be-4e11-a238-19bcc8267be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bfca35-5d82-4849-9939-9e6445abdf1b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee50860-05dc-42ae-a4dd-df2fbbcdffe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa59c3dc-728e-4346-99f3-c83fbc3bb885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea1c9db-9723-4580-b890-cbd33906b1c9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2458f114-2748-4b49-8c34-bd0766f11a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c4b8fa1-8370-4778-9a87-547ca72329c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "56d35ff6-8514-4893-8bc1-a8b3dbc2fc01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1061cea7-7d4e-40ea-b8d4-2ef931903572",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7f23c4-cea4-42f6-95e0-4f8d2c6783ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ab08bb6-a0f3-4b33-ae46-691b102b908f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0887a9-18b1-474b-9d53-11e921e76d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf5f1a3d-a551-4b4f-a8c4-58f4b5b444f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "11deeb4e-2fb4-4e29-b55f-2b471c7f499e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e428a785-7dbe-4402-ae42-6ca30bfa36a4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6757d662-b3f8-47f5-aa6d-fb7bf9efe42e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "41b8c9dc-4e5d-48e2-9b14-197827438959"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d7412cf-691c-4ce6-a6f7-6cf695cf82d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d96eb880-552b-46bf-88c3-a23568e835e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c6e9fd7-e9b8-47c3-9645-623a812dae19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ef800ea-e937-47a6-8ffe-c320f5b8fca5"
            }
          }
        ]
      },
      {
        "id": "fb7edc6c-cd3d-4460-8618-b3d45e4198aa",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "84a8f7b0-2f5b-45a7-8157-7519f25d6d9e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25bf48e9-5ca4-4ae0-a17a-278fdd325f69",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "dcd3abf0-4720-4223-bb07-395f8ca0fc69",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d814f728-eaa9-4907-b7fb-3e8bd6354cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42bb429f-8864-43e8-b8b0-37ebb04f9e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327fb846-f81f-430b-af6c-50748d7e41fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daa44d9c-0df0-4930-9639-33f6d29d6306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffecc142-b625-427b-9f9d-010c2545e9c4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff99d14-fbe8-4c91-af97-63f884043ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df121e0-5267-4c55-8a3e-dba981156ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7e647f-e18f-4a81-8bba-dd09186929ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db015488-a596-46a9-be08-c87b12880a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc31134-96b0-4aa3-9508-fb3cade87447",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a6ac33-ce39-474c-b953-68a5abe0ca0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5e1ba9-fe14-46b4-b115-485bc888187e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d4a409-921e-4b5e-82a8-0e0175e816b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bac22016-31ea-4957-bce7-7747933f3676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f777cd06-a0c4-4f74-875a-b71061f7ba24",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a837051-4893-4220-847c-2940be71f1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b70293c-00d5-424f-8e36-aaf8aef26057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bee291a-8c75-4418-bc80-463989ee4b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e95ae0d1-3e3f-4ac8-882a-573f79de758a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158f4d09-69d6-468c-aa83-6dfbe08b00de",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cd5a94-c511-42b8-bca9-16bd0265dd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82509fb-502c-43cd-94d4-e216041b6261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295f3ce3-a526-434d-9332-02b0cac01a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "740cebeb-7854-4807-9342-04afcedc184f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0f23dd-564c-4a97-b46a-6bdbb822a4b6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365b77d0-677e-4c79-adea-feaa0764de23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae7edd0-d18e-451b-b7fc-5731652b7587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a7efbf-3279-4291-91b2-7e8bd9725a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "439b69a1-5d01-485e-a522-be89f7d56ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dce74f5-08c0-4e33-9e64-458739a38823",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5163c52-1aee-48d5-a612-4202d35067ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49659265-f712-4696-a811-a5cf6fc3de3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6126404e-42b4-4f26-9b9a-cde15fda2ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daf89cc5-ffc1-4089-90fc-a1bd8898a91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3df090-6065-4edb-9ae3-3c20527af83c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434b91d5-12c4-4072-926e-63c271b49404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a684ae15-d6cc-4d70-82f8-0245adce07f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b636b9-c64e-4a62-aa62-471edc7e559a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09952113-a0d2-4595-92df-982d7c847d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d569505-3de6-4e80-bfba-795faf0dd2aa",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc74771-1227-4eb2-bdb0-1f68e4fe7813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad00148-80c8-4851-842b-510ec1906d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970a22ed-51d9-4e73-b658-2e32fad9da96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "909db6e1-1b56-44d2-a07b-61bcb0d002b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8ef1ac-cb6d-4f1f-b5df-dbdbfd0ed193",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec4a663-c87a-4476-b808-0b14c136e2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1671a65c-4a85-4b6e-ba70-d6fdc16ccaa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92f16dc-d630-4120-8d1d-f3cd047ef5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "341c9f4c-0e5e-4822-b8c3-ac29b2195fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454b95f7-da4b-4bcb-9b89-04dc55b6a48b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce189e6f-2148-424e-ba1f-4b77f8446527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07fa73a-2628-459f-a8b2-bba3e0407d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3892163-f418-4877-b4c5-2ec597be0a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5ef7718-6cb9-4725-9f1b-506e7f817b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b66ee8-f707-48dd-8327-2b7451cfc504",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0dfdb0f-c52d-4add-be57-b86e3443d91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94c7aae-ee64-4bb6-9bc4-7f4db71dd0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a562f7-3832-4e1b-87db-3b852d61e597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ce49877-7242-4c06-85d0-d9c32bbd7171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e172b4d-89a0-4d59-bbe8-90b9804e6bee",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aae288b-88d9-4ce8-b402-a1ba78355485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41eb21aa-6555-455d-a402-04371451fbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96b021b-350d-4359-bb39-8c3f64695cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "966aba31-a081-46d8-8962-a27a2f84e476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4290a292-f9de-4d44-8a2d-2a338ead5195",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702dcd01-ed72-4443-862b-b5d97e1b843c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01200b15-9d8f-4c29-a468-08921761a186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826e3fbf-4f94-4c29-97e3-7994969f5ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e104fce-48b0-46ac-8dd5-1e2a92bb938b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3572484c-a076-479d-853b-62b4d1eabae4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4846dc75-322c-46f0-a226-c7906c8d2696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a4b2dd-73e3-4170-9adc-71b533c6514a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8839bcf4-9652-4955-99b9-937403bc9455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1f211f9-0e73-4d0f-9751-b644e8b529c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452f745c-9fbf-455a-b256-395fd4280905",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32735d5-0190-4d6e-8331-5829a4acdff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f99721-cb8a-4e54-a886-f269ffc08862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58144003-53fc-4853-ad41-ef6fa53debf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "585f9e53-18de-406c-a2a7-9f89b204dc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f1d05b-c6d3-426e-95dd-9d9dd0bdfccb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76189241-e4dd-4bb9-a359-b469d5b710ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4ef370-407c-4f54-977d-2bc791236845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc4cc4c-f9c1-4f1b-b576-fc20293bfd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a2a01a0-18cd-4b31-8bb0-1a4d740a9745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520f8098-4759-4c01-9aba-90eae0047464",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5dc24a-9a0c-4835-aefb-868b8086d812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edff2c0-c0d3-4221-9a53-7f6663ed56b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9233c97-11cd-495a-8b63-4601a1753402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "87f82a2a-144a-4ab8-8624-ccc9d3bd4f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5e9f70-9a13-479c-9111-0dd4e531195e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b590a8c2-9247-4a81-97cc-ca3ab5b7cc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d306a1d6-17e4-4f53-b694-3a12ebddd25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4d3058-bcea-44a7-96df-cd9fd2e7d0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d34cb3dd-174e-4948-92de-5e5619658e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8492d6a-959a-441d-94bb-46c52f086c9e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c2af59-aab6-4bc6-8a6e-145417f7da55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e59b7a-091b-4723-b35d-fad7ea376e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796eb4f5-b8d1-4402-9312-52f0696a1f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "797c7f33-2568-4119-8aad-406df348edc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fed898b-4496-4e2e-9726-4abcc0906562",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c93929f-20d1-4a90-ab61-5e2e33ec9207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf20043-463e-4459-bd23-5c2a32525ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5e47d7-292d-4cdf-a792-9bce063b2863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c86f964-ec62-42cd-a185-e358bd095363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bf3dbb-618c-4c49-9788-3c06251abb67",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8029e10b-55d3-4794-8f9a-8da1a6e6a49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433ee330-86ab-44e2-b99c-f0d14e7f66fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd79665a-c145-4b0f-aa3f-fa2dd979775d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8dc7c4-ca41-4a66-b579-2ebde3aac4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347846a9-5e49-4bff-bc34-86601731f444",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b90c48-fa94-4438-805d-775923a3a1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ff7184-d683-4e42-8349-9919640007ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63b408a-30b3-4f5c-a14a-b3d76bc79e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5135602-e35f-45db-ad9c-0db3f5960283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0f7030-3937-4bd9-b278-a6fc45d58147",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab03434-9860-419f-aa35-4fa1f2fe0097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef43b180-129d-46b2-927d-cbf3604b8e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85681485-9a02-4cad-b063-776389dce43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9991259b-5513-424c-8351-753c7627a7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db37a38a-12e9-45e9-b760-ce3395ca59e7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e700bd-227d-4eb2-a2a4-2b486b997ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f843edc7-a129-4ea8-8492-6ab0a75aa651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19558edd-52c2-47dc-a2f3-e2d936311116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecfe6377-1614-4477-aa29-9613cf99691b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cbc2f5-399c-4188-bbbc-bbc16eed57be",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca1721b-2d90-4c8e-95ab-d49f9134ab2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b498d4-1e56-46dd-8692-341acfb2853e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc178b7-aca3-42b4-96e6-fa86fd12b429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7f3916-1c4b-46fe-a3a6-94551a67ada9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c1650b-a80a-4170-8026-a475e35c01c4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742fb551-79a6-4e2e-88c5-9de904eaafc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a9e4c0-a73e-452d-b89c-4efd25a95bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ada1f52-273d-46b0-b54a-d20fed9af9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a546c5-4564-4f1c-bd43-7bc574833555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae19e508-5698-49b8-9027-095e1bcac1bd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953b44eb-ea33-47af-9348-f0f4a7b9d799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aecb855e-edc9-4925-97c3-b3e4cabff09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7050ed0c-0f4e-47b6-abeb-493821380ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3f8b06-5d7b-435a-be85-36510b9afa28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f994837-af8c-4f6c-bd6c-94a0757358f5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cce1306-42f7-407c-aa83-d7649be24e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e775e23-bbfe-42b5-96ed-3d828f0d84e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e9b9a9-cc66-4f38-a8c1-5e5f8b976755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf689c6-d126-4dab-9a94-83d28295a5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3e48a0-f7e6-4e3e-8379-0028cbc41a61",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a05ca64-0787-460d-b0c3-44b177f48931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598840a1-bf51-46f0-9631-3bddb04ffd1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee648d15-4126-442c-8f3a-5bcf1650ae76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1d248a-1754-4aab-8ddd-0ac3018dd93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fbebdd-5bf0-4fe4-8017-b5d713769249",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcdf5fe-cd3a-4ce9-a72a-20dcc204e3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177b0f66-557f-4279-a69c-c1ea0b8c9283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c921b2b1-3935-4c0d-8802-26cbfe12be01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f13f59f5-2b41-4b48-8b44-c8e6145f5a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633c7afe-78db-4bbd-b3e7-af71432c941b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2031a115-1824-46e5-981a-b82cbb07a73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77e04e4-ae34-467d-b203-0cd7c8b55cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45400848-6c34-490b-9690-72223abe2b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50559612-c891-4c39-8497-d7137f79322e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f2a1e3-cd16-4f95-87fb-ffe4bcdddfa6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96992c1c-4a41-4e78-bb8c-874df85e7718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee89f83-fb94-4474-98bf-5269d5471690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b14c83-c5f5-4cf6-bea9-df7d9be96c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0d5803-3fb7-4885-90f3-0fcd3180941a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11335574-7194-4c35-b8d7-81e6d6fd4e34",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4097b9-1e74-493d-a26e-ccf57f063ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0dcf44-a61f-49df-b510-6ef483b7d06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff6803c-c677-47f2-8173-1a5cb160e281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60aee417-92f0-4078-8e85-a666b12100e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0256076c-ab2f-48f2-a646-3b5986706b6c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61482121-dc2b-49c9-bd9f-aaf028aad86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195cd30c-d0d9-41fd-a20c-258d4cee5743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab9f11b-9e5d-4ff8-8fbb-454df0134411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e71917ce-8f77-40ae-a618-3b79f894854a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf915291-6c05-4f80-8628-28f6eb046c55",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e91e68-0c51-4126-b226-acd5075c244a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1326479a-1156-44b7-9d73-b03c3526cb51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84575fa3-a3eb-4c95-a723-031ae326b7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb2d3bf-f6a7-4c9e-ae76-e6ce78b8c057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f723f95c-24d2-40ed-91b9-3b28ab31429d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b0a18f-0c79-4ae1-ab29-0300e961ae46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a18b40-d8ed-41c5-b111-f9bedc6043c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9c34c2-ea5b-48a1-98ac-bd1ac7c4329c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8540aebe-b700-4c7c-ad93-dd63a933382d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899bac98-f7f6-45b0-9ea1-41c87c203e8b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5483d3a-7279-486b-a0a7-f793d3c78f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d059d87d-08ba-4435-88f3-eb6094577f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0a7f1c-f13a-46ed-9de8-561701ef2c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c56a0231-87df-4c70-9150-394b136519a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d474ab9-04db-4ca9-847e-79e94c1e77fa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b9476d-811d-44e5-b32e-6b4f859d49bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f256879b-1533-4d41-af99-8e0728c07267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19aaf8a-691e-413b-95f2-3675244586fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a71ea14a-624b-484c-b8dd-2db8acbc0239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ce2c2b-082c-44d5-a97f-d2234f4e50b5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d038b18-d19b-46d1-b4ab-b22634669789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3038fba-a817-4b49-be43-5514984329c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e6425b-812a-409a-9ff0-b55b2fc2f810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ff4d24-ccd9-4155-890d-a2888b679d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4655ee9d-8272-4763-81ff-be3f8eaef9dd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffeced0-bd83-4309-b1e3-cab7a2e3d7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e9ffc0-9e46-427f-96d1-96f018f92aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c91ce1e-bcdd-46b7-a387-c04a9fcf4ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8168a2-5254-4a9a-b9e2-c91e1a012d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05e6788-14fc-4616-b755-177e4a4f24d7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1508f0b-3978-4254-9cd6-5b1db9e64e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b524659-4a48-4a5c-8aab-3a007677a5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c07cdf-5b0f-4a08-a60b-579b9fd380b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1ddd81-6ac3-413c-b21a-c3f40435a625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adaa4e4-14da-4fbc-b47d-4b0e3970d101",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18f156e-351a-4089-86e0-c6a2851f11bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8d0621-69a4-48fb-a43f-78c2ca7a3898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b447eed-9867-4f89-8544-fec1143dca1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2eec299e-42d9-43c7-b12b-4e8dd4828deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a580859d-453e-4c1b-ac1c-fac62c39685f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fb2a8a-f951-40dc-8ae6-b12ff1a6b408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e389d871-8c22-449f-a1ec-0ab4586a3e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d22d239-562b-4394-9be5-be148e4d3e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "efccd285-653a-46f8-a361-d0f4d6d496c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4105df35-514f-4f83-9363-def799b831a5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb64bfd3-16cc-43e9-9c34-d1bbde2a32a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624a163a-c757-44cf-ac55-295aad59c9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03476d65-47c1-4459-a9e8-b0057275dbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "915f09df-7710-4996-b0dc-547e15fe6520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626b627d-948b-4798-b1d5-f1f2a708539c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2312a2e-f376-48a6-bf3f-199a4a7e93dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf565a2-91b4-4a6d-992a-5817f1765c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ed4c9f-f11f-43fd-80c1-31db086f24e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aea9d98-9948-4329-9b64-8e65c7fa866d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150bfd6d-28d4-4ccc-a059-ea849dac7473",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd66a77-d3ab-4d5c-bb10-db607a954dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910327fa-d1ce-408d-8eae-a75f503e568a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2091971-2f4a-45b1-81fd-7c8232e62b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4decfe-299f-4207-9198-a7483f8e88f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d616d88f-5dbd-49eb-bd68-538c2041b9ab",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e9d3a7-5ec3-4277-83e1-f2e7e035713b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3971a378-0c80-4832-b52a-8ff9a80de73a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126f0034-918a-48cf-a48b-86f85704645e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e7d11d-4882-4f59-aaf7-e128db4915e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968bf015-aec7-42df-9d88-332fbeca1d76",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8040d65b-c1eb-4d46-b10d-96ad40cb0835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e0742a-7c18-4993-914c-6f6a8631fff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0756032c-c4e7-4fe7-a00a-57f8ebf6cb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "221a34fd-1c0d-4484-a99b-19a24df339f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef568ca-35c8-4f21-85ca-260d0c4f8adb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb60f04b-a460-4197-9401-fea90e021e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f30f218-c754-4042-8213-7131944eff58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c51d28b-99a9-4dc9-8af7-182761da6d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91942263-7f1a-4b3a-86e6-8c54b4abd284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03913a0f-91fe-4812-acc6-0aa160ce8894",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cad946-03aa-46d1-89eb-fcf2a723adb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d74fcf-a9ff-42c9-a47b-9eef7810491c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8b14fc-5b9f-49e8-b41d-9636b2221f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9820941-9741-4c2c-a026-756ca0f0fd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba64b4d4-ac38-48e2-ac81-4ab914dec12f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad5e8eb-0aa6-41a3-8215-c4a155967f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91427cb0-99fe-46e3-ae44-9ae210b317d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123ad2ae-3758-4996-8940-338b45ae3db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9841eafb-b4bd-42d4-add3-f2f346d5a7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c586269a-53e1-4a65-8020-0d013ab9dcfd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abebf8b6-67cd-4d8e-85a0-5ada40d40f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c32c8f-bfe2-4884-8b78-14512a7f3166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ffc225-65ee-4ab0-90c4-a032006166ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca84d37-eaae-41b6-8da5-be3db23a086d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b61f0f2-b3d3-4d6b-9c0e-09f6d8498cef",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f071169a-4c0e-4978-b39b-cfce744b42f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be4af25-7dbb-412e-998f-a0d31cf02c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff897bfb-d4f8-4e1f-b7cb-5a385cbe9ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62760420-e625-4770-8350-80abe6bc05ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027d0cfd-4c5d-42ec-af43-e972d4e7dcbc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1501865c-6fa9-4c25-8cf8-5bc50334994a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f8419d-44c9-4314-9810-58879b54a370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee085ec-50ae-4bc5-af22-51b974febf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dccf30e-7c14-486f-a312-55b50f1d9e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf7c4b0-d465-4ca9-9563-4926a39d4af4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7409b30c-4542-4ff2-ae13-b540423057f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634cbe69-58c3-4fc8-bfc7-e7c914b35f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932c66f1-f3ff-4b04-9a69-4884538cbd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "01acf8f3-bec6-4aec-8ecf-25e430de8cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f68f9ea-1f3b-4395-a791-e1d103ce7603",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161a3313-b055-426a-8578-00e9c93a8795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf248738-6120-4e09-8245-dbced5529a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118b05ed-a2d2-4899-8edd-78b5051128d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39577274-ef0d-4658-8bc4-2d5e2ecb173c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1763b03-16ed-4f45-89bb-7dd5a3ee9c5f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c19e968-6fc0-4dd2-a870-80e9df2c1a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d544659-8fa1-4cd2-8816-cd31f2e76906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951c8571-4701-441a-93e2-e0196ae3c23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d1d0a9-88e0-46ba-9352-7c11241dbedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72d9187-8c3d-40b2-b5b3-b83b41ea30aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5285eb-453a-4c5c-813a-dc4dd81ba973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1982d3-1155-4c1b-ae2c-aa463834e37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede25540-ce5e-446a-a8c0-1f5dc8747822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb9ac24-6334-4758-ab9d-82a613416024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6257c5-1db8-4078-ba13-a65df378b257",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e1aabe-3cbd-4ce9-ab70-c7cead2dfb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f213835-5018-4053-9b16-2d60a4a952dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6791b6c4-9f1e-48c8-8e0b-fa46ec826300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f92e79-7bd0-49b4-a923-c32a165c951f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34583e5a-49d8-4224-ac87-0d829e23a65d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bc9966-bd93-44e2-b325-9895a150e393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc0fb14-717c-472e-9994-0f23c980de6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f4724e-9ba9-4228-a588-8793550a9801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa38008-6ab5-4585-ad84-604674b39f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb8dad0-c4c8-4ba6-a897-49192baa3614",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd0f03e-83bc-49a1-837e-9148f48085ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668fee55-17bc-45b5-a83c-0b3164b88d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba088b4a-0745-4643-9a23-4f54314bd4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "360dc36a-543d-4512-816a-da1f9ebcb294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0005d7-e275-4b4b-bbfb-c719e5787911",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e725da7-19a8-46a6-84a4-879eccaf6971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2115e2dc-fd76-4283-afd7-2a31b105cc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ce4ba4-1810-462d-97de-a224f388833a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "87a2cacf-16fe-41f8-a721-eb2c99c2a1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d41ebb-6600-4744-beca-9ab162186174",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c02bd7-62ae-44a2-b5c7-b5fbf986f120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddc8bba-fb0f-439c-9a65-84e8f7b270e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00194ac6-ee1a-401d-ac7d-054211cfdad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dee48873-2fab-46f9-9195-7e0f9d4da57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c99e149-3d78-499f-bafc-515fa0191655",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1029d53b-74ca-4fd8-a256-ba5b987055f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25bac2f-6da7-4df0-873a-4ca3bed492cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d471f2f-9eb8-4814-ac57-fe78ec195d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9917132b-f72d-48f0-8f07-02f76e29434f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc41d87-f73f-43dc-989e-31943e35a73a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c234d7b-69ff-47fd-b981-547a7f73c38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c804b82a-b392-426c-b7f9-c13093a968b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8858073-7e3b-46eb-b484-099dde3f5648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a59b6447-b570-40d3-b916-436acb20785a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d6d500-72f9-4838-a2e5-3c5d7cbe4566",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de0fa01-57d8-448d-a410-99a16a40fb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35199dc-57aa-45b8-b29f-6faa1c921893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507daefc-8fe3-40f0-8e94-aadd89ea15b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "527aaae2-49f9-4bd7-99b7-b7491bdf60c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ab2fbf-b514-4bd8-a082-a47423dcec05",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b851a05-ede2-4b24-85ac-055cfd3ce00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e006963-109d-4ebd-a293-53253287c9b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29e34f7-b5f6-464d-9e71-403dda031a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4de94deb-11d8-4e33-b175-7c72ad166b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd908db3-b146-435b-94c1-38f78b18b9e3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b92942-268d-4247-a1e3-26f3c2b1b211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73ca103-c89e-42e0-832a-45d10e1642a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f73b569-bcf6-4fda-812f-768c6418e5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "60e274a7-fa0e-4945-886d-862707d332ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21707ffb-2dbc-46f0-a670-952f5717343e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0788c5e0-80d6-450a-8c49-8fb5c32bb803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f287ca-e9cb-47dc-8e02-18fb47e62a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f216066-8aa2-43b1-97e3-18864bfe5418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1df907-dfa2-431e-a653-44613d9f18e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a63ec5-773f-4764-8063-e3cae2dc9323",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78798e89-6ebe-451b-a62e-83faaad3f5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15d7ed9-da7e-4bbd-abc8-28dba5229071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49024e48-aec5-4bee-ba88-2453a3e04091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1abfaa3e-e7cd-403c-9ac0-51ba44c90532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4b3b21-6431-49b4-8619-48466d6b21b7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33491ac0-2bb9-46d4-907b-f978c8c333cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a30c7b-df27-4172-b882-2820d5e948c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d81e1c-8f1d-4bfb-9c3d-27edbad39d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49ed82eb-8d1a-457b-92aa-d69a44c195f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c15eac2-f371-439a-87a0-cfe3368a050f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0a4aa3-9071-4848-a9a9-5c6fa00fea1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dca50d1-92ba-4a58-b798-f913cd819208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166c50e8-23de-43ad-a952-357924d625b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff962f6c-b1c0-4550-b1e1-39a4ebeb411d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b165299a-b97a-4539-88c8-6227fb680945",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880b0e78-a067-4d67-bbe3-1fb39bf161a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e6d07f-c0f9-48a0-a2d0-63a0ef1ebfec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72fc04c-04da-4a2d-80ce-a2793461354c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2fc6e1-255f-4a88-9d63-47eb92dac4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ddbcf8-e908-4f4d-aed4-0d7beda58ece",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950a5e2d-b55e-4bd8-b81f-f533792f58c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1708754f-6c7b-4616-9b4c-8fc260110213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b05a79-db16-4f5e-9d94-95ee69af2aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3510b9f2-ea62-4268-b854-e75ad5ef48e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9328cd-04f1-45e0-9b08-face5c63e23f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b511df06-3dfe-4021-b5ee-7f286a7632fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc073812-bf98-4cf8-96d6-ee486ee4bd04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4464506f-cf0a-42ab-91a1-af826dc8921c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1a2e7a-beea-422d-8e50-cf98b0899f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d1db5f-d585-4a23-9096-803fc7022e8a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e12ca7b-ed1f-4ae5-b15a-02f56d8aab95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225ba913-a17a-4a2a-bdd2-c79c55a90c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d1f797-918d-4d4d-a3a7-269753688e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64a6ab50-0b0b-44ac-b55f-6e8124333691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794281e1-a73c-4e2b-b2c6-ad5ead6022fd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acc5b93-dadf-449b-ad44-b216ae609868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c413d8a5-588a-41a4-a916-a8764a2a383e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b694da-4a30-4d79-8f31-d3ae6add8dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61dbe45d-fdcd-4298-963a-0b070b766e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3feffa33-6558-46c8-b684-20e699b89934",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07dacf7c-594c-449b-b7f0-6cb7aaee2b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e32e3da-02a2-40ed-bcc5-f3319871f8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505968b2-dbb5-4860-b943-9c43ef726f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f113f0a-fb86-4320-8b06-d833ae926694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c8e9c3-2e1f-4d29-8588-a25b95ccd006",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb949b07-caa9-49ce-81ee-b383f5f2b7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9027352-bea2-4ee3-890e-f9643e8b9c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b224f80d-a276-4a28-8efe-e48dd0be57ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb47e58-aff3-4b62-b291-cebff5fa1bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14534cb-7f15-4a0f-952c-9ffad7842b06",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4baecbe3-1b01-476e-9bde-0bbeb35344c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d992b2-5d4c-4d09-b75f-36cddd9e6879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f592f3ba-60bd-4b29-a04e-b1dfb36b6316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c265bc1e-9473-457d-9b1e-00f5a531839e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a598be62-a4b0-4e79-8bad-c2ec615edb5f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdd330b-91dd-4040-892a-dfce45a86424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab364168-1461-4396-9add-d2d1a30d2c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4dc79d7-bf8e-46f0-af39-546c22076783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af26fc11-7b77-49f8-b611-e549190d7603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10230f11-be3c-4142-9fd5-b20aae7f986a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99b8b69-dfd3-43db-b1da-711e0db075cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1ffe3a-f7e1-4692-95e5-7ad2494f18cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac636d6-c128-4e19-9f01-d1c69498349f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c30eab3-3ba6-4e17-9924-f1fdd9e19153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8168c1b-4b56-469d-8bf1-b6c2c640d1ac",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b165436f-6a5b-489d-9fdf-32be630886e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64164ae3-923d-44a6-a604-013bb81ef426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd640ca7-8de7-47b3-9a9e-e09acd58f811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5cfa98d-5614-4fd4-8df5-bf0c560e2545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda90812-b93e-4488-871e-4f58872e176b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62db48f2-0106-4917-b9d5-7f3088c094d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab01d05-f0af-4621-928e-e15bdfe8a102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde839c9-9b41-49d2-b4e5-8582fb7abc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0dd9228-749e-4b62-96e2-d75fc6457231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71f9598-13f5-45a5-b69b-7f018786ca87",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143b2232-f03a-461b-bb6e-6abb4fc9388c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbdfbdd-3ed8-4828-a903-e786d9eb5c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df965f4-8212-4ca8-82c8-e262e1e7fc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1c535c-313e-43ee-8eb4-1afe54a9fc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e14f661-3686-4d52-8962-62c07421475e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7071242-5789-4209-8e4c-aeea2346a3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdd8c10-c409-41ea-94c0-2f822fee14c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8f4ada-4d16-45a7-846a-a14e5972e5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eee81a7-9509-429d-8091-92c20317cd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8240f2-b39b-48ee-a01d-2c0b8c133490",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e966b1d6-5a1c-4b79-a1db-5dfa5b3feb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65356e1a-0d87-42cd-a7d1-693fb52ca375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d412b10b-0b7c-4e39-835f-ebb3eaa11dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc73161-6fbb-40b0-ae17-d1bbbebe88cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ff1fa1-3203-4855-a337-25d814720fbd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02919592-903c-4eea-aad3-6b0792c04d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6695355-34ba-4f45-b283-9e494fcfec2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eff42d8-68ad-4bdd-acd7-d683a6b38df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e81afe9a-77f7-4698-a9c6-974ba1a10cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc235b5d-6374-4edc-bcd4-d39bac37baf4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b08218-6a09-4b6b-86d0-ef585d6279d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d22bb38-9a82-4af9-842f-ec01061d6932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2db99c-996e-41d3-bad2-414f3cbc31e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c70bb2-958e-40e0-b25f-2e423870600d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b7e25c-cef2-4393-a4ca-ce18ddcc138b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4b9425-1dba-4203-88b2-bf8bdce15b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ab95fb-dedd-45ba-b4eb-8f0b39a0171e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1a372d-93c7-4318-9f1d-479a1bad17d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "420f5537-e859-4efe-a82b-2afcc8756529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b367f00-6d0f-4452-8939-b85d381a35d8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ad1224-61bf-4402-bcff-75688892787d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c1ce7670-6199-44c6-a03e-258f76830d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81da6bf0-bd52-441f-ba42-5c8fa992cee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6204ebde-1f2f-4834-b4c7-ae19dec50ee9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e7e832b5-cc61-4a7a-8a72-9f7a68a19887",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa4b2426-7810-406a-bfd9-383120a42054",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfc3f16-15bb-4ab4-b7c7-8880c083e2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2f406db-b72c-4f61-b705-aec6ba8bff07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a96752-2826-4ef8-a842-3536c7d5ff64",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ffdde7e-2d96-4aec-ab49-2a90e78091b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bddc67ba-79e4-4d0e-9dfa-60a831b75a80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52ddce40-c4fd-4953-acd0-4893d5790577"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b91e8a7-1bf5-44a2-9fb0-26923d052a52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6dc31199-a1b0-488e-bda0-f960e08df188"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6e98e32-d4a0-4bc4-83ff-6f124ebd01d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "53dfcc6d-b3a2-4bc8-80d4-914119449056"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "df5af728-a90c-4f1e-af91-68f0f576c95d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb07247a-7cd0-412f-9d8d-38791de98678"
                }
              }
            ]
          },
          {
            "id": "289e4e21-6da7-4903-bbe2-d5c707394208",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7a025758-1f02-4c9a-a91d-1c86d831299a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20d3f219-1295-404a-9003-0b365c878383",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b31d6e54-d35f-45a1-ba1c-97a34d6bd459"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c746b17-de43-41e5-8c69-2dfa251f073c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0b2c9db0-a07f-45a7-a65e-0c44f1a03b2e"
                    }
                  }
                ]
              },
              {
                "id": "1e7133e0-5786-4725-aa4d-1eebf59f7c6a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38b891fc-18e8-4d4e-b449-5bde7a8384bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7053b3f5-687f-41d3-99f6-affed4eb9068"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbc390de-fbca-4681-9273-7bf7f1709e1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "13642de5-f375-408a-a697-93aa31fb52fa"
                    }
                  }
                ]
              },
              {
                "id": "9fbd603d-469d-4e4b-8ce2-d5c4838b8dea",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2c6f7e5-7253-42dc-a180-19b41e408956",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d666f4e1-ffca-4d58-b29e-85dd566baca9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5ef0fd8-8769-44b9-92d6-cdd3dac87c86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4f478653-141f-4f08-85dd-98252bdf16e9"
                    }
                  }
                ]
              },
              {
                "id": "825d00fa-d1af-4914-8264-52b7e95505d1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14e364b5-5301-42dd-847e-1eac64394596",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d98be989-937f-4767-9bbe-dc0fe7a8ead4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92311ab2-612e-4534-b05b-b5e331a8fa6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "03d6f863-f19e-4138-b5be-54388c424586"
                    }
                  }
                ]
              },
              {
                "id": "0d63447f-8ea4-4095-8814-b57b99fa138a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44859597-fcae-47a8-96f1-a9c3efc4d8d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2b38639-d2c5-4e13-8e06-f731d0b1cf41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b7840a1-40f1-4104-b67a-39434479cbac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9518b6e2-91fa-4d03-a66e-fdf966741140"
                    }
                  }
                ]
              },
              {
                "id": "61c1a83b-dcc3-4647-9a8d-672bc49f1b6f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f89481b8-c99f-4670-b98b-5c7fcf5acb94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "678816ae-eb9b-4e48-bb6a-2a47525f89ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "393a8bf8-b482-46b1-b56a-b8d203f60af2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4f0dff5b-dfc9-4a74-b59a-89afd2b6f41e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "813aa356-629a-488c-b110-ed45900f70d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e41fcc1-7c86-48e1-b18d-b64a2165b3e4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "14de11a1-6c9a-415b-8873-2694f7a6c40c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e11594f0-e715-4553-a2e5-0706929cea99"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97c3fe22-e27f-483c-b4e6-3dfd6e0f0f32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5f45af80-72c2-40c1-98aa-81e3db568c31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8f7c049-c724-4d2f-9e36-5ea4e7818852",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9fb1985-256d-42d9-9088-471df5a02081"
            }
          }
        ]
      },
      {
        "id": "00c406b7-8d7a-46a5-81de-f11b74c8bf51",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3fe37aa4-83a2-4fc4-a3f6-05cc0e980059",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf791e9b-2115-4f0c-8c1f-2891a5f31958",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d128e5f7-d50d-42da-8175-9cd55127d3f6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688c5d10-e39e-486d-bcc6-33ce6f0e8e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2058a69-362f-463e-92c0-ad69119d017d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cee7dc-d7b8-4f61-b5fc-293b8f02f115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "96bf2c40-cd62-44a8-9ac0-44e354c989d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8af96b-615b-4c03-95b1-93656b98bcd7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc78c820-478a-4645-a7e8-e47aba4d5ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ce2868-e3d9-4594-840c-ad945dc735e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e4105b-3974-44f2-a301-2b7cadd5654f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1f6ad4-939b-4995-8a34-0f77289f4a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaea7e70-cb82-451b-8cb8-dceb3938f20e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4f521e-3451-415f-a8ed-e1cff19fd437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58313526-e1c4-4564-b0c8-2214bcc97569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03987a5-b70e-40d6-8c2d-89cb855000ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eab6843-347e-47de-a1b3-13bc9cff1dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30075a36-e4d9-4cc3-affc-f587917f3944",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f5df48-67b2-45e0-ab39-1aa302a48596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6a5a11-ff32-4e96-8f31-db7a77407200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005b800a-a166-431e-9b45-25e6a3da4e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f9b777-ca79-4d94-9f0e-c3e1967f3254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533cb63d-1107-44f8-8507-426f12d6b5dd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b0d713-95c4-41d1-a0cc-7fc471871804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7e456f-8db5-4d0c-aa70-c1efa86e5ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6cd28b-7f03-4b5e-a6e7-d2c69356def6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8884c0cf-319b-487a-96a4-346ed85aac21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8923d9-dbed-4626-a8dd-753900f7ff99",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3cc0ff-2f7e-43e9-8988-ccfb107f834b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488e9bda-b6cc-4a00-8d9f-843f4ee1428d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4e6d65-2858-428a-8537-9a6e32f2837e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b26f1bbc-f394-44de-b9be-06a4d80cebf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341f7d47-5578-4820-8894-18c714941dc7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449d922c-6a8e-4065-acd7-8cb2406572a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a377ba6-9310-482d-a75d-f5f1e0be01f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f20cd2-a752-4992-9f15-5b6dc4c6c432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1feb67c-1bcd-4b02-9e3f-5b0500b1f1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a67f55-d0f3-4046-8aac-36c476479e85",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88be864a-a7a1-4e66-b306-d31a35b4c0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e8c1f1-99ad-470b-b942-51b09f35383f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5dd2d3-191a-4ac8-84e1-a7621078ca28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02bf4e93-1a0c-4dfd-ad68-cdbb3bd7b384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5d7318-3451-4b1c-8313-510c6273507c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291add52-9ab4-43e0-9c41-8278cc3f9e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7649436-dde5-43ce-8062-401a480ac892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe25fa0-1eb7-46a8-abc2-48fc5a0b5341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe78be40-9846-4e52-ae6a-c408a0eb86e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bb11c2-62dc-4341-97fd-40edac9607d4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d7b81e-bfbf-421b-9aa4-8e1b600d4e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4257762-6be1-4ffe-ad06-f9216e0cacf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b59d8c-fa32-4cfc-a55e-a9c2253ba70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7518132-83c8-4cfb-bbde-c0c727cb98de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262b54a4-fb45-4095-80eb-203c005c60d2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672f6bd3-266b-4044-ac7d-8c3b005833ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d539f3-4b6b-42d3-a239-a7ef70ef1e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286aff8f-222e-4112-995f-c9368e1d5186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4686c4-9690-4b59-9d9a-be1b1a3ae8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96609be-d861-435a-ab69-5570a3be7f5c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0444c6f-9d1e-494e-9ca8-7c61fd178999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd4702c-d486-4609-8ea7-ecbb20dc02ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee342155-1076-4aef-b88e-4d26832585ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a71273fc-3269-4ad0-b3e2-85d81ad74239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffb1866-0faa-4ad2-83ad-de41d117c3ef",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e705e91c-c5f1-4de0-9578-8a11cf4dc0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab36c09-8228-4626-bf3a-2c294f7f7e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a86929-12ff-4735-8699-92d97d2f61c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff02c23-ae9b-4255-9367-455f800035d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f0ccdf-37b9-4e4b-9417-631fa63096cc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a427481-7a97-4a3f-a71a-b343d59f7b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19721af-053a-4f92-a983-23d809c9b0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef0d21d-120b-4f75-a98e-e8f4f14f1e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1e821b-bfb5-42f9-bab2-5f0cb130f797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6102b185-f0fd-41c0-b33b-8f27237b5d99",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbb57ea-b8e1-470b-9861-d061659e50e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ca42f6-12a2-466c-8212-f07d38758c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15625de-4b9f-4732-a0de-39a52f3b6e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4939812a-5a9e-4e47-9a32-26f046c6dd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d595e689-df34-4d5d-a6dd-75d429a828ba",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfc38bf-1a3f-4d75-88f6-17a552c080dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78a898f-daea-40de-9ab4-c46938dc8914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ccdde8-cf89-4bd5-9f3a-887a2d8f1cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d334503e-c0df-430c-936d-f785d8457cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e89b782-5b88-475a-bb8f-8b508a97f96d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a97c511-9720-43d1-84c1-8ce11cfa8073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6092b8-3326-4266-82fe-f84e42500c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac536a79-3861-420b-b6b3-68eb89807174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc4da79-4740-475c-b767-b957264746a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a3b86b-312f-4046-b690-4d906c2a095e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804acd65-9da8-45f0-8582-2a1a6b7a12fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcda00bc-dbed-411c-846d-31624526a70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeeb26a9-0bac-4164-aa27-f67603297bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "022e6179-2eec-4926-b74a-6ee6409e3084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7904afcb-f7a8-4152-9b6f-f4c7a8c7e7c6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54490a1-ed02-4f87-ac68-113438003014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8877f2c4-2677-49e6-872f-4708fca21b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915b5520-8a08-437b-af6b-e330bf4bdaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c83779e2-c625-4678-9109-8a20d38be7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4133f440-96e8-4b62-ae73-2ab9722d6b48",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9ea913-1587-4470-87ef-3bd0d6bdcd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770c3842-6d45-4fa5-bb4c-92b151bc532c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f0e0cc-ca8c-4c2b-b5f4-f01405ffdbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "352dea21-8c81-4e9a-a374-3ac1418531a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45954209-eec1-4165-844c-ac5110f4f5b8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4713b2d4-37ea-43cb-a4fd-68c7797bdbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2fac49d-54d7-4a23-b5e7-138a92fac9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771da25a-d627-4eaa-82c2-f1ceff42ba19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5877f32a-4dc9-4ad5-a5ba-8b6bc3597172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b2705f-352b-4f07-a3aa-c6a290484264",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602fb246-d768-4327-9e91-b74dad28c3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1e66d2-ef47-42cc-b615-23d626369492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a573b56a-bf62-4e88-816a-b7b28575b1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82e20446-c0d9-4555-8869-cd0f55acfefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7072119-52fe-4570-9c52-82615486b7b7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f4c15a-23ed-44f3-b73a-e9d86fe10840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc9c63f-f0d1-455f-98b7-3e3bca2e75bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2681f05-202c-4ab3-808b-32d68ea043e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3364ebdf-36bf-463a-b783-54750dbd5ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff7b0c8-0ec1-4a4e-b981-3219af73f34b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319a70b3-b647-4842-acb2-7e30055d8f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf9efaa-9589-4371-9d83-2d18139990cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9ac846-5f78-47b9-bdd6-e1eba5bbc5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "874ca30f-1d84-4de1-94ab-994606a5ddd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f60ba0c-5682-4a68-a36f-e575e2bf0cbd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fa1848-af31-48ef-a257-0a35398be626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d2d164-7f30-4e92-8ba3-22d5758ff675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da0b2bd-f7fa-4333-a04b-c8ff2dfb933e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3133c0f1-71ca-4200-984c-9bc17edfaa85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036a9cd3-4fc8-4c06-83a4-9dea0328304b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b082f6-8ee7-4641-a952-653307c96720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6321826-add9-454f-8d2a-582419501c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed16e79-fd58-4c2f-ae3d-6c18bd2d4b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91c7af15-17cf-4e7b-ad18-ac3826809a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03401fe7-b3a3-4135-9f3c-767127b6e0cc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec11290-a9a5-4334-9486-3a057b69b268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe2944c-8a61-48ff-a57d-29b17c8f906c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ba0edb-b4e5-40eb-80f8-4d2a2ee32ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38c5c7b3-3b82-4bff-8e57-8f69bd01dd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1062e784-0180-4dbe-91b9-3c794f7272d5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef5f584-c2db-4fb5-b495-2cf58cce7677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f93f12-f7b5-48d5-b01d-4bda966a8050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f73ac3-fea7-4684-a8e6-fc288e0b537f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a333aca4-55b4-4cdc-8004-4d006719de3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1a8cc6-fc59-4e5f-b094-84b362ccbd84",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72190b90-97aa-4dad-b876-1ace673e2d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bb991c-1949-4687-b8af-5885e7bf6a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8b990c-78d0-4c76-b9c6-54d4fb649ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f312fd8-f8ac-4319-89bb-61ebe9f15d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83afdf43-d202-4b3a-b593-d91b9018affb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82e5a2c-06bb-4340-8559-9cce59fd587d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09313eb9-9afa-4c07-8a3d-6683d34be99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd97703-a909-409b-8780-455c493b310c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4bf87c-ec9c-4263-ac20-c4716fa6fb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b514e94c-a806-482c-893a-7e6ffc78300f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ae538e-62c9-4705-8d23-de7cab0fddaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d36cf49-7aad-4e4d-8e4f-c02ddd9802cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73deb0e9-1ad5-437c-8c5a-79d54521ea80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb19b92d-83a1-45e5-9eb0-e30126d489b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3899395d-efa1-46a6-9ba2-913cde42e47a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b04c21-c317-4e7a-b2e7-24067fc5f522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b6de40-48d3-4685-b964-ec23fbd25fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db881ea7-6326-474e-9522-2921b6f758dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7529035-c627-4afa-94e0-f6a854b61392"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "16d4a209-dec1-4a60-8e7b-64f226f21a06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75050eb9-bccf-4322-82cf-9cd2babf9e8a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec5876b-0856-4071-a4b6-0f36dfebfa82",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2035c0a3-61de-4700-8b15-44cdc8a08874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c266868-3686-4f15-8443-8b37867f53c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80d30ca8-6a43-43aa-b7e4-8436b2ca5b4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c110bd9b-390b-42e6-bb4e-1fe80b467dfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "586e204a-a184-4288-81d6-92effce6088d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1021d87a-e494-4980-bf23-9f3acc4d4a6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41968333-ce28-459b-958b-0fa59e706b0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3417f3bf-f38d-4f81-b430-a4f35dd2724a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4bc23ca2-faa6-453f-80ef-188450264487"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25d59e4d-fe60-4cc5-b4c5-4f393e382433",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c14b029-6acf-4816-8412-48436973eb3d"
            }
          }
        ]
      },
      {
        "id": "fbf96fe9-3eb8-4572-ae01-1405314ee9f8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9767e325-8d8d-465f-8ab5-cb4a372f3eb5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c262818-c153-484a-8b4f-6bae2d9c64ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b78438b2-573e-4ccc-b7b3-6dbf9146910d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9942eb6-3f2f-467d-aff7-42d47d23d5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc54ea2-b294-4dd3-b00d-9985ebe41f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf0033f-2cae-4103-99ab-6f211e9379bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3136cf95-97c1-4483-80cf-4acd998ac5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3224b7-d498-49e2-907e-6ce6db18b365",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734d3ef5-f58c-4129-a91b-2b6b98007da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea00689-3043-42f8-b4c7-9938712fb868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cef0291-8aa3-4646-a825-e0739d131da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84460e4f-ef79-4e8f-a5bb-4215217fd969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30c2c41-89f8-4b3e-a8b4-b4cffa66ad6c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920b9fac-b786-4a39-88d9-b110a7c1eec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1bea50-ba2d-405a-8605-153a45b83bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad59a3bf-5921-4f33-9d66-ab2d0a878648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18174c46-b0a7-43c8-b272-6fa2c4ad8954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f915b01f-7f25-4753-802c-f08ebd816ab1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d74b6e-95d1-4db2-9ab2-e1b83e4bc102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451ffc13-6583-4bfe-abed-98db861365ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c13714d-b185-4c15-a813-c5501319644b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8928504-648f-4c6f-b598-3a168f4cdefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32815f9e-692d-4a75-bfc0-89f3842275e1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839906db-e0f0-4cc7-9d94-20afe74dcd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85bfba47-aecf-41ba-866f-594d38d68c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8993a467-c3b8-4ddc-b49f-c6a7b7136136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6813c37-6910-4504-8fd4-e80f3cdccee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f138c4-8b58-4104-9d84-25908111c075",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c13ac5-b699-4af9-af4f-8b49a877273b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a068f15-cdda-443c-b13e-4bd33ef17d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6628252f-54d8-4fd7-9767-ad703c624b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9e03f7-7186-44a2-a8e4-42653b0df635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3744d9-54e2-491d-b4a4-f99c120e309c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f37910-8ecf-4c77-974a-bf30153c9872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c086f884-482f-43a0-aeb5-37dfea6f6b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3813b3-3a2c-4426-8af9-ed2dc25ec2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c251672-56a0-4912-aa4d-45e5450157f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3f1f1a-53a8-4e79-be67-42aab223d6a0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea399488-3ece-4ef2-aad6-cdcbcf4da10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "515ae19a-dec2-4c3d-af35-f4f6142e4fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af904c23-d872-41ef-ae58-c7f0e9771c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6c8086-27c0-4308-a814-89e9886f3fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1c44b1-55c1-4367-ad99-09cd127f4a68",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b166a2-5deb-40d5-bab2-02b02332ec63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe85d52-3320-4e15-a8a7-9eea75c799ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e3e4f9-850e-408a-b982-af80e12b9366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "851a3fa1-c3c6-4bd4-a13e-af58c5409867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63599eba-6e05-40a6-9727-b4e5f4296509",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0b08ec-4fe7-4d92-9b3b-fbbc024d71ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e410d585-2ea3-4d90-b89f-858baece9551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b17bd8-4e89-428a-9576-2332c5eaa826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aca0fb6a-694f-4544-9217-361f8c2f2f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3beeb69-bd97-4d24-8a10-5c113230ef1c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76dde32-ae17-4238-85de-fd7be2aad49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66dc30de-76f7-40e2-be4e-82ccf2d90889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7708e279-b63e-4156-88a6-45629269a3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3ac38e-e155-4fca-8dcd-f3eeacad5019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f9b74e-3558-4a66-a12c-6c325d56c377",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cc0f13-7758-4322-8f20-a7347cab1e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a7e67f-9fb2-4907-a417-abab6c6b83c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5811a1a4-76bc-43f2-84b3-7e55e93bcf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b60504bd-9e35-4cbd-bb13-6b635bc48473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b907ef14-1f7c-4c3c-9119-61f8ab5657c9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309bfe4b-18ee-45e7-81e1-f939cfa51fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e552e02-5f6e-41f4-a29f-ab0923bb4d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ca2998-226d-46d8-aca0-685679359aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c101a597-8561-4ac0-b3fa-c56c1919e6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fef462-b9a5-400e-ad6f-75315c064aee",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e7658e-7903-4c1b-b35a-2a0d32b2fce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcffede8-1e01-4354-b0f4-d169324c9fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3f8857-9409-4afa-b3ac-29de3d3f03fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f265302-5c32-448b-bf00-3d47180449da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99dcc61-f569-4eac-8bbf-c76e14a98916",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aca38ed-c764-4ec8-802a-d1194e28077d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9afd28-1c9e-42fa-a502-651b1084ebf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc50f37-a591-460d-b142-7834fbdddcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "99aff289-96f7-4f48-b7b4-dfade2f7c00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1af5d8-6fa1-4f31-a190-12a5f5b1e205",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6b75f9-e98e-482e-a612-cca8d947fde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ceeb417-56a7-450b-a338-7c08d4c258fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c758062-7604-4b4f-aea8-c8f7e58292e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "22c78c39-f87f-4385-9f49-d32cebb2fb90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67011c2-2878-4338-aa7e-f0f00714479b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f48d81-1713-4ed4-93b2-a87778a9be96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94fadb45-6f62-4a00-96f8-264e4f6f51d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c26041-2012-4c64-94cf-af7aff4d930f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4da8f691-ec94-4c77-a701-e24515b21162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb543c5-f8bf-4e65-9742-a0cfce9af282",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d3636f-fd3c-476a-a01d-f7f161e767e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4370393-057f-4dca-a691-da9096c67859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cc4c80-24fc-4f64-81fe-175cb4057132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e69c1822-14df-442c-8e7d-f7e31c9d4f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dab968-605a-49d9-8b9b-5c59b5f50619",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f10414-ada3-444e-aa3f-20e8ac5bf78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb4cfd8-eb76-40a0-a953-40f0d7d92dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7868c98-c972-45ce-bac1-4c1e4df31657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65fb8781-cda7-4742-b557-87dbcbf8fd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba40deb-76dc-4e44-9a3e-f8a15555a0b5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f771a84-a201-4962-8629-77ad55ace0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee637bf7-9b9e-4f9c-9bac-92500f034693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead6d0cd-677a-4e98-b013-fc5b229d811a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b46e0b9-5daa-4baa-8718-37c13f1a0786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936f875f-0b6f-4d1c-97fb-cec8b798668f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c2baef-9962-44db-a157-9b66ffd3e47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be86140-1e6f-4526-adfe-e5e87c99baa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf7e64e-4e93-4480-8752-e4bb629f26fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08f890f7-de98-48bb-9142-3b8478ca391b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2f5932-e737-403a-99a3-67f69f519d43",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8f8067-16de-4bb4-b390-403047becc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04a2732-e761-4b36-936d-ab83cee700bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bd2fb2-3f92-493d-a31d-9170cb0065ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf41615-09ae-4f39-a4e8-db3a5f7b6312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c401e2a-a211-46fc-8410-761301288a1d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfec408-1f33-4625-a25a-63f56f15bae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c04dbb-9e86-4d83-ad19-4f1e15551b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f920dab-df9c-47d8-abd4-ae4f144d80bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9b16dc-aa2a-412f-8886-7a642d16a71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841ca632-4eb3-4aed-8353-c09c0c9d86f8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b70c99a-3ee7-4194-93fa-3b450e8f6cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206ada83-7194-42cc-aea7-b4a45651ac12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a920f9a5-187f-4b2d-91b1-1532e07eebf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ba6383-88c4-43d2-b242-127559603c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ae727b-da4a-41e0-94cf-c15dc73cf1ed",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a15478-585a-4323-9b53-84874e0b55e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99312c4-ac38-492e-b7ee-8cf0d815250d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec97653-fe60-45b6-8be5-9aa982827c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3ca9ed-343d-4ba3-b4f4-5f08f29c4c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1606b8-39d1-4b60-89b1-ff5889cfea01",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d394e5-060a-47a4-a03e-4e905789ff2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97eae5fb-91e0-4d93-b1af-46a1303145ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e654543-ca80-4097-9b0f-9f911734f338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7624d7c6-ce9c-4690-8519-cf9cfa9b5cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62892b65-561c-41cf-a0ea-85d0ffb06f97",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279c2601-a81d-401a-8c2e-fafad7252b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f8a26c-3a57-4176-a588-39013f24c8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ab9151-f9bd-40ec-a069-f3551923b7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd5e809-675f-4ac1-b8c1-f8b37d0188f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bc0b36-fe00-46e1-a2bf-b4140a4a35aa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c859ba61-d7e9-438c-8dc5-087c6bbfab44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c2835d-5ac3-4f3d-9444-5242c3e1b282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbc29eb-d0bd-4cf1-8dd9-4f201b918d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2eceee-67fd-4484-8dea-a52823f93e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca227d7-73ed-4184-bdaa-77244fb53eaf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b2cfd9-e4ba-4313-ac1f-aee91871adbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1c6a16-df7d-4221-8298-f6f319a4d60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1d1206-13d1-4446-8c45-44f9be9674d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7f6435-c771-43a4-aaeb-2194fe43f346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98467a1c-fded-4cec-a716-7a100e679ecc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae8c750-bdf4-41e6-83d4-ee8e018794e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d22e2b68-5b13-4ccc-b451-c1f19a671920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435fe7d9-5737-4860-89ea-436970d64f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe66db3-8f7d-4246-837b-ab69497bdc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6865b49b-835f-438c-95b5-163e70807808",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a578a1-638e-4553-9e5a-b7e702338bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a68705-237a-4469-8570-d2c056351254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efaf94c1-4d22-4049-8c0b-a0ede053a709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37c8e702-2469-47ce-9789-b6592864d2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7b4a76-7d9b-4ec5-b2cd-67c13a152d38",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66795501-0e5b-4be5-9b98-b69d7e0c9184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1f6692-4a29-4cef-993c-a99e1bf27fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4aaa894-f64a-42c9-9d56-80784e4b4dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16f9329e-4132-42b0-82e1-254102b5353d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05fdb23-4e8c-4190-ba20-5c0415ddec8f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18598758-cef1-442e-ae87-f47355f5a04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc8f425-3e66-4959-8aff-983a68b2a474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f85b6e-568c-42b5-a5c4-9852480a6f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abc19d59-2972-4d76-adf3-a3bdbad69e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f3f23c-d244-4a96-8ce7-dab41115c464",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe0a562-ac75-487b-85b7-88b1362021a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5271bd33-88b8-4b1f-89a8-c1e55efa14d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8614dc-e83c-4f48-a1de-8624b0d458d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec67c908-e122-4c6a-9638-0e1040ddc775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfaeb58-7afb-49e1-be0c-ec68d126cf1d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2c0de2-2abf-4cd5-922f-ab6b6a15d7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783f8806-de6d-4840-aba3-e034f2b3824c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775e27ac-e034-4215-92fb-bfcc40c79ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52e14494-ed61-4902-8c3a-700c2d186d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc834552-7f7c-41fb-82af-dd7f7204d5a3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6615d8-c441-4e21-a415-278274f862d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945d3202-f43d-4298-b2af-360397b45cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764158cd-e4a1-4445-b3b3-984e7f889d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2086c6-84a8-4ea5-a61f-808bde1fef57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1267bf30-33fa-41d8-b1bc-347418f6090e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36c0e98-f7fa-4fd7-b352-bbf85540ed2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce71e00-6b32-43c9-ab35-a1f7577b1502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ceef10c-4056-4bc2-ab1c-e36ea64608dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3dbe539-8f99-40dd-b0c0-bd01e827b7a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7bbd88a1-aa76-4f79-8a5e-ba0ffda10dc6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7b2d93e-079d-4c91-95ac-e9cc6f29c9d9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccf75f7-0848-4589-a362-ca349b0a6890",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b1eef3f7-48da-45eb-8acc-3801337aa0d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238bf0f6-4d64-4bf7-a674-2deb52650d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1ccff10-8b4c-4778-b6cd-0b53ef64a354"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "718bd697-0900-4ca2-b909-ca9fbbf3fc1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63667a47-cc68-4b73-8294-3e950ad97ef2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d280149-416f-4468-b72c-30a35cb57d46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a2fdcdd-0bff-42ca-8aa4-bbf1d0b4d203"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b314faa0-bdf5-4ae9-b9ce-0b0ec0300d9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "14c4f7c5-bf49-42ed-8acb-9568e6e82b92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76c9dd53-f989-4034-8efc-e049267a2b7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "899756ec-102d-47ce-af45-5bca7bc8f3d1"
            }
          }
        ]
      },
      {
        "id": "b7136525-7bf6-4de1-b602-876c010287da",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "43aabaa9-41ea-462c-b065-3528ec531ded",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fa11cd1-30b0-4267-9f10-19822958f67a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8533d143-4f7c-46a9-9fba-8d9fbabf7b47",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e527fdb-8e85-4d31-b3e8-be6c26693507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f5ddb5-ee35-4700-91aa-bbcb9c80fcdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256f3b64-7cc5-4a03-9b06-691897317b2b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1e4722-fbdc-4553-9cd9-9a71994afc97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613c36dd-7577-4273-b449-4ac2ce415833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abea8d0b-dcc3-49c6-a80e-12f07b22737f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0aab6b-2c0d-4be4-a377-814d3d8f7196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3041e2e3-b283-4260-b99f-8d5ad0c9aae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7370fb83-f274-45c3-9aed-c103a571ee72",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640b4d4b-bff5-40b9-9656-4452033da501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e677140f-7a99-479e-939f-87ec5df0101b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d480e957-d9b1-451e-b965-efb3ac25c64b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc99d4f6-5112-426b-a90a-b9e5aadc6ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf46af39-1595-4884-920b-53541bacc43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf491233-06d2-468c-a2a8-e9640baf4347",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44e7842-d0d8-41fc-b5dc-dc6eae979b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff908f08-2378-4455-918d-1c7ca5f6610e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605b83fa-8e2b-4aa3-8960-1f1e10144759",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311eb7e7-91a5-41d1-bd68-faa1c0d46139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f8faee-bf00-4f35-a369-a7c2724dfc39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24b09a9-530b-46f9-aedf-aba01d2cf3ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d99359-24bd-4e8c-afd9-dca70bcd4e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f0d169-2ea1-4454-a59e-8e2a22298c73",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c368a70-5e81-4ccf-836c-5556eb95ab4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38960c0f-bf88-4fe5-a6fa-856b0abdb38f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a5f6aa-f02f-40c4-ab11-0d22923b14fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75684db6-5d8e-4cb1-8791-1b9fe0185aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813f65da-c60c-4359-8852-9c4af2ddc321",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba47f327-b315-4205-a331-08fb252b0d19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c8dfea4-fa56-4d45-bd59-68ed5fb56d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512a51f9-aa9d-44b4-8f14-b05257a017ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec91baf5-55d5-4e21-a75b-e8a69cc21b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81623cd-7184-4813-a370-9440e9ee93b4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5a6f4e-56f7-4750-8e84-a703f69911ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2db15ce-25b6-4424-975d-dced85475fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0112f644-3895-49ef-a325-e7b40c15e2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0739f774-13a2-4635-9df6-4ffe8c740bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716e5e30-8a63-4076-acca-f8699e51e14c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48329cb-df17-49ec-840e-4374f232e803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88db8438-28ca-4ceb-a435-fd6f3fd601d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5930a24c-3dfa-45bf-ad36-d15f1069610e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbab492a-61fa-444b-a748-ba759f6ea5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b88064-9ae8-4a90-89d8-7d9fdf4adab7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dce5d67-008b-4893-aecb-d5ce48ea8581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9aa77b-4174-44fa-8c64-39138fcdd7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc07427-079b-4041-b37f-e2af8fc9d2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0148e426-4b1d-438c-95f6-a2509747cf34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a3de81-61c6-41f2-b551-c9b96600611f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7138fcca-bd15-4b8e-b0c7-e978021f03cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28209044-2a4e-4d4e-870a-a1a29e7f7337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30746083-45e9-4d5e-8647-7b975a5f0011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9eb7ae-13e1-4f80-8ecd-1672e25ae4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bd5960-a986-4005-ad8e-62fe02804f75",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5c4ba6-ca38-472f-8904-223e15caa594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67a7e9cc-89e6-4ff3-be09-7cb160614c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05152b9f-4cdd-451f-ad2b-82d632590749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0bb76a-b903-4850-bdc2-52050c31e694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1783d4-9471-43ec-80b0-940d27aa5156",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff66d4c-2fe3-4b32-9f1d-b5c2a8f875c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "307e2e2e-e878-4e48-b5a4-1b5a1340e613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27555678-388e-403b-bab5-64244e391db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fbab33-fa12-437c-95be-038fa798b616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fbe4aa-66b1-474b-8261-e9606d34cabc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa5a799-312e-4f23-8658-0cb46cd95e5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dc22d16-1d73-465d-bd96-cc2b863a7957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44b8416-1243-471d-b63e-3c551a985b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6c16c0-edb7-421f-9d5e-e44f9c886bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a158e51-2c30-4ab3-b7a2-7f06985c7736",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0509c15a-3e4d-4aa9-abb8-0f9a44613add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10cca96-e773-48c7-b4c0-45702de54f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13eea14-2a8c-45da-b020-2c35b2a99a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747efbb3-baca-4313-b04a-d5516bad63db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13fb3578-1fed-4362-ab7a-6a5b51472c38",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71bd5b0-5363-43c0-9b17-ac257e4237db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78110a9a-5754-4227-919d-050c78345499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f41dad6-1194-4676-84ab-bb7f81deded8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff719c5-1889-4c6a-a2e7-0e0768157cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d5cf9f-5f2f-461e-94a9-c94501092cc9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4be711f-0fd5-4c3e-a81c-9cb9c51e4d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1855a4-0040-41f4-8c11-29b8160d137e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "193ccd76-f2f3-49f6-acda-85f4940dd628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339a8de7-eba1-4bdd-bccc-d298b805b836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112e25cb-1073-4755-8834-bad3cd0843a7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9e8a60-686c-4873-8bc1-6eefe4051c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1bdd9fd-bd07-4e6d-a844-7282960e3c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1baafe17-87e4-4c58-a896-8eea6d1e15e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420589ac-9375-4b7a-9710-d83fdce55673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49de2e00-3873-43e2-b301-7f51d162cbcb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30786372-6bde-4b40-9aea-4a291c09ede6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e73ddd-83c1-4613-909a-74ba071fe975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80b6550-3fcc-48df-960e-cd9e7ce85985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5758569a-3334-4a19-a2a7-adfe0a1f5fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2220f7af-9ce6-4373-a454-1972985909dc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8344b557-1ab8-4f42-a82a-7438c9740681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096b6639-80ba-4cd5-ac6c-b242ad951e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2345c0d8-b0ae-4257-88c8-fd56696f80dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea30060e-74bf-4fde-a6ec-732dcaf58ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2540e102-15ce-4e49-995b-b444c98d57ef",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0fcbcb-855f-40c8-a070-5359257d6339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bcf7608-f609-405e-b380-8145dfa0f4c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7731c8-5ac9-40b5-a9fa-e25ad6e846c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16181bb-8a76-4ee9-97dd-b3ba5b601e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37c60b5-9c37-40b1-ab22-fa57ad463f52",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74db768b-0090-4583-84a7-4c7674f9ce29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bce763af-f9f5-4474-b2eb-c858e86f80ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d201b31-5121-4fb2-a9dc-1f83674b79c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54838a5-3a50-4f84-ba8b-67e225ec0ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9af38e-9d45-448e-bf83-cf0bb08e3afa",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f459ca8-8e63-41fe-80e7-6184dcdb83b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ee7a8f1-480c-4e43-9952-91827424a006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0400b805-2a68-4864-b762-6185027c47ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f610367b-2dc4-4149-b1db-2767d737ca53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9580e5-fb87-46f6-a8e6-cce9c718153e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c200963-62a8-4f91-a903-971e95d93eb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "998aefca-282a-41ef-9997-78fed278b460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2357d7cd-851d-4944-afba-928dfbc3b6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3086b10-1741-4ad2-9529-a35627e25d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc603b8-6235-42b1-b126-49c41aade16f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74470e2c-c4f9-4e39-9f35-aff137cad5f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "180cdb90-a73d-4d75-b0ae-f9ae54a9ec21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf51829f-5e4f-4789-aacc-ff711d75b30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c664e1d9-bed1-4f60-a5c8-73fc062ba058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d0cfd0-73f5-4980-ab34-7d0f453a1503",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f213aba-c9cc-4483-b729-2def2ea6a6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395af942-cb45-472a-bc48-69fe53ff8957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daba0e4-8b99-4187-9e0b-df3ec66301e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdcf3b1d-e2ff-456f-a8fa-f640979f8d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002902c5-15ce-40ab-9e67-84e4412ca999",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526df188-9e0e-48e2-a6b7-eb692c380995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89bac35c-cc34-4e53-b505-147788a019d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3fcdfd-e6ee-498d-bf22-b463e65b4210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b69c65f-0641-41bf-8c73-94b6f5ae121f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a70b088-8bbf-4a54-9512-71c851884009",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677c400d-8aa0-41f1-9e30-121a615d5c0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8487a0d3-e113-442e-9968-3a389f303a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee30b3d4-f700-45f3-aa04-7ccab46b0d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb09b1f-31b8-4d0d-aefb-4b75ccc73183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d433dff9-a903-4a85-b75b-c87f9284bbb0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9269ae01-2b51-4810-a3a0-20b6123a3a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04c78fec-7525-4490-b0c0-c9426edf1308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5005659b-2fc7-48ff-9aea-9d02a465189d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6577e08c-6bcd-4f23-b68d-e1f84d67b2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af356d41-d3b7-4dde-a677-9382bee88e28",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a95444-7df8-4938-a5a2-15d6c0fd152e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45bf70a7-3aba-4002-8c8e-2e21b3f8b952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0df588-b26c-47b6-9f78-446ca8d66a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a9b76b-4e5e-40c2-8398-1bcda67e6153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b157b8f-0c7e-4b32-a923-20ea475e1d56",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4cd2a3-b3b2-4ee7-a780-fe2939e4c5ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "924ccb13-4e2c-4eb5-a97a-915fc95b801e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dd7d0f-3ade-4951-ad0f-83121f3def08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d54fc3d-1e57-44fd-bdb2-8d9dccf68b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df55732-194d-44ba-9257-cc1b287ab9d7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0219d5-73b6-4831-aced-7418806517d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cde08b92-0050-4c0d-be7d-159a6f493b19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1837e1-3eee-4eee-a89b-1820ce14dd89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d048a2ce-e085-44b7-9c3a-5e452cc56693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6832917e-2889-45f7-9170-67bbadd20842",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6294b46-74f2-4fba-a37f-0c82801a266f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27542d9b-3287-4a31-9888-bf8eb72833b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cc844a-62e0-4c3c-885d-73e78855fc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf932783-b55b-4e31-8bcd-82da7b9ea3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dbd102-3d16-4243-bb9d-976629758647",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9141098f-5829-4582-ad89-753470fd4044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07cbc6c-a4ef-4c7b-90d3-c0ee2a362b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "225b4ecc-90af-4b51-b79f-43dae81bca37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34a3ac6-b604-4d23-ac3c-e1b893a28367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37aace2-ccc7-417a-bac7-9aa1ff7343ff",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53791eb5-482f-4151-9e99-5b4e45dbe816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed579fa-1b31-44d0-b395-6a2fc3039601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6eb914c-a758-447b-851a-3fc07bb5a9b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be03c4b9-3928-4d72-aaf4-8031a3024073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b306a70-a502-42fe-97d2-3df30e128869",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bc69da-20f5-46de-9163-e004ba0cd92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ae5581-8e53-4240-8d46-7934920e2133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aba544b-9406-4794-8906-3495cb589b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce430a96-3d66-459a-9b9b-b99420fd7650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c0d68b-89d3-4fd7-b70f-a69b1d39c65e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b51bf4-44c3-4f16-a6f2-64523623f762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1076eb8a-0895-4f81-a8cc-dadf58dfe5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c188c26-de81-42ef-86e1-965cd54f4367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e087a5-84d6-4208-a197-91cc49bb34fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9766593b-63c1-44bb-b167-b2d089d17374",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef816e9-f15b-4adc-9f00-9ef6a41f4565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a389cda-5c6f-4568-ad14-5382773aa533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcec1672-b60f-41de-b642-9753e60645d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1cf388-5e40-4c1d-aa67-d8f8188d7575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1e51a7-03b4-456a-9aac-faf837c96151",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7716440e-04b1-428c-b6b8-861bcad46247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c8da9e-5720-44a2-8348-6159f13ba809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b041da7-76ce-4e83-8d7a-d438c4d13145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a361ba-0e7a-4198-b1d3-bd39884c14b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d902408-bcf5-4d5c-8c5e-ca3652583614",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40894589-123d-41a0-957a-d19020691455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ff0f34-135a-4995-a43e-9d12af1daff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fd13bf-5ee6-4744-87ba-401de0cbe774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b11f97a-9ce5-4736-ae1e-7371f247df98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46022530-e6d1-47dc-bd0d-705c943608d5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd7059b-33db-49ae-8c23-1dfbef10e960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca459b98-598a-4dd7-9b90-8c555811a61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89851393-b731-4e5d-b6c4-0087d4ab51b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbffc931-b863-4551-9b6f-5dd3acf0e409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f070397-00ba-4706-938a-0e5c55e062b6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f076f1a4-1b25-4aa3-b1a2-e2aeb7e196b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874f19ef-b68e-4d4a-993f-782852d6f74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a5303c-5a0e-4db9-a5d4-a7137201238f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360230f8-1269-48fc-876c-9c71544d3835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f8693f-9cdd-4e9e-aa99-dd22196f72c8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf53096-1606-4d3e-94c9-207a1e409911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b497fbc2-e96e-491c-b5d8-a4fa438f2ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c609c12-541a-43bc-bd9b-6df7fd8d37d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e68a6e-3227-46c5-9c6e-f89199d26da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0e5b13-6cac-4521-94c3-69d54be7e0a2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a064ae2-6d2e-4768-95e9-cc189355bc19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a03cf4-bf12-44bf-b087-bad44a028d8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efe9576-324f-41bd-a14c-230db9821494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6474abc-3ea9-4ee4-9b1a-ecc29ff3c371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5699fa6-ae92-4965-993a-a59750fc4dfc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe47f506-1ab3-469c-9e45-e74e8531ce47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75259a6c-5da0-444c-ad8b-2e205694832a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b28617-5be7-4271-9db2-b25c5d2d3736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd3b5c2-a9aa-40f4-9b4b-a6479b660fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e46e069-a87b-4426-a403-44d7a791a1a4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf1f642-abe2-468e-b73c-d2ef1e335dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9908f518-76b9-4f8b-970e-5415cdca3c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5ca976-327d-4a21-9930-adcfe6a3c15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40553f77-5ee6-4c78-911f-4ce63debba1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cf33b3-375d-43ad-8926-4d4dc055e06f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66897e31-654c-4327-a2cd-a271d750a4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67a9eb2-e59f-445a-85fe-82e97253f5e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4650bc-faa2-4a0b-a779-3d4228100e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313b7b9e-2c60-4de8-8521-f0a4885a4a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564e37d2-bd70-4006-a429-92a9645155b4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c9ad70-e5dd-4088-ad07-c4e44598ce4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285983fe-aad1-4673-bf84-9a6e17fa12d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fc6ff2-671f-4eef-97b8-b4fddfec8983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c61055-0381-497f-9288-84ada0b68e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd63e20b-4d24-4ea2-a65d-56c86c3ae129",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b843a379-7c67-49b7-ac76-8aaef4229b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f659532a-d60a-486e-a85d-e27b608b8652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc5006d-3e89-4842-9f7e-b157aabf4f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94aa5ea-1e00-412e-9e40-2f2a0fb9d133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4c38b8-01a9-4582-8eea-bc88d6c29a6c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03aac6d-e66e-4fb0-94e6-01c54f139bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5754de3-2708-42a7-a029-1469dc01f49e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88771488-6a74-4ca3-b4b8-8583a388ecf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152102f2-c265-4baa-bc29-e1988f4fe24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b89c3b-63b8-49a8-9698-c6b6ccfe5e16",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9b7b21-7a5b-4ac3-9711-3bb5a81a119e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdff23b6-86bf-4dcd-a29b-e2ac2d2582c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb7166c-f1bc-435c-8ed2-dbe0b0584a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e20645d-b450-40fe-acae-b691cf0b46ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4c3efa-cef3-494b-9603-c9de9dea8983",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafe3fa8-413f-449c-976a-716e41b6351e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c30387-0c6f-4d8d-9013-9f803e863526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d949d23-b134-46de-9128-aad93022e6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01160fca-6bc5-45c5-aeca-94173083d3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db95bac0-16ff-4531-8ec9-1978fa2bf647",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6215fc47-79d0-41aa-9918-071cd8a5241b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a68cab0-30f6-43bf-a806-0b42d3953927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988da42e-51f2-44e6-912c-ee8de07d654e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9becd39-044a-4f8d-b4aa-6f689e0e610d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a85316-b05d-43f9-9bd4-288242177513",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582821d4-95df-429d-b72d-d35048e4d7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f44642-265c-4864-8ea8-74ad188ecb73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abc5a83-d76a-49a7-b03e-74f3a0f98395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f295f5-60ce-4069-a8bb-60f900af6d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcba58c5-a344-4372-a5dd-14c0d1b5fa9c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6601d9-c34b-4ee4-9ae0-a12c6130887b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dfd1aa6-424d-439a-8015-79d1596fb4c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f980037b-5183-4a21-bd73-b5bfcb62c625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367e2d17-7777-4695-b7ce-82dc810355e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc671cc-e28d-4dc2-9188-8feee1e7b91c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5dca00-0f1c-4064-b04e-58fe8339f0d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8732dd1-aa44-4051-b89e-9ef1936e6ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f94a00-4e98-4e9a-9d66-5ef868cb2d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50068c16-b91c-4b3a-9f3f-378491e2e595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26815f86-59b1-4a6a-9d50-8ebbda144af1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1729b3d8-cb03-45dc-b996-004fd306b5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4efe80-78d3-4bab-95e0-1fe37e4928d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b3b6c8-581b-415f-b3f4-2de9502d1e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7d1bb2-ae80-4eb2-840c-59f242cef581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2e3b1c-5c09-4e16-bc1b-3b291f3ee87a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2d397f-c7c0-4cba-ac24-60dcc0fa4672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d06bfd6-8a0d-41a7-b70f-7ed367f67f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0679d69f-8718-4049-b02a-97f7c6a0cf61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af1a7f1-1894-4502-acc6-aef3ed0a84de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7e9206-2dc2-4e69-b12d-517d78ccf76d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29bfce5-4fae-4842-b42b-499694f7e584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c1e997-5d6c-42ee-97c3-e9ad84790592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748d5bcb-da30-4711-a6a0-298c3fc4ef8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f09bc47-23fd-4f59-b1ee-cad3b852f36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81049a35-cd11-4f1d-8f44-e54ac581e6fe",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b392d1-5fa1-4bde-8eb1-1fe87ab15f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152107dd-c72e-4ec7-b238-fb0623330d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3684a011-e561-45ba-9d1e-a059eb443e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec7080f-9452-4330-9b02-592b2c923d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b6ab43-a94a-4d34-8917-e97ebfb67b2c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3fd44d-1c7b-4e40-b724-5a84f058ee41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5cd0cfe-8563-47bf-81a0-bfa623cadbab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e12bfc-635e-449a-92c8-b870ffa46656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140fc384-4ca8-4373-aaad-697f29c55bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083f2dd8-5822-401f-9eb9-29801696ba1b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d351cce5-e5d4-4486-ae26-71afa4ed2cb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "383cb002-e169-4531-815b-1f9d483226b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c25c35c-fe42-464d-a25f-6ea4fc8f9751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cafd19c4-5309-41ca-b185-df11a37f296d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb784f0b-0207-4a56-8d3d-23a90a5eaa5f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b0c1f2-1511-42e1-9a09-b8e4bf80b213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d80004d2-7885-4aa3-b36e-fcb7a37c93c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e03473d-999b-4d3d-aa88-38733e69922f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c72978-b7a3-4b26-92b6-b2abc27b839b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a278b224-fe9b-4679-bd94-baa17c0203ab",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9944713-2933-4ea8-9345-c1a42fc5ca33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ab2f278-4f43-4e67-bf23-7ff120c7c44a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ffa46d-2b04-4ae3-8910-f1cbd2ef8cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9636bd57-09c6-4366-a5ac-dabcc3cc2f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9eccac0-fe3f-428e-a57b-a3b034643139",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad4ab81-7727-4144-8bae-6725e1910688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e8715fa-e70a-4477-9acc-bccd72f1ef78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c36c786-9832-4502-819c-50daeaca279b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b86406-dae7-4468-970b-0c8812d8564e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359d44cc-0928-4da3-b169-a3c7da9b62fa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e3bb5d-af20-4627-b85f-0a6941f25f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61c15919-e959-41af-8fd0-93c381e5b53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dba661c-4fb3-403d-9dd4-02dc52540ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b6c980-ea26-424b-ba39-37b0907bf4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce7bba1-649b-4bdc-b413-b7e0d3650443",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d45bb30-46bf-4b5e-837f-4f2546128703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d379a94-86fc-4324-bed2-364ec3de0d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7d5ea6-e335-4ec2-98d5-dd56388ec7aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60a1622-c6cc-48da-b88a-dfa9547d5113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adeaafc7-e2f4-42a2-bd58-907384f6de25",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9c70bc-6067-4334-ae2a-9187a28d84c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "807b23f0-e136-46cc-8023-3e7005b6cf13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c56fa77-84cb-4d4a-884d-3caef9760dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a2747a-803a-4102-9010-4aa7d5fe700a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfc31c0-6541-4578-a6bc-8742500c3ecb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a78d6da-f603-4488-96ce-974eaab55f9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8eee3d7-c85d-4ae1-96cf-e44965bd2e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "144e395b-fe4a-4a92-a7b3-83e61dbf4eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136eb50b-651c-4da7-80b7-608a50778949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f575af-1872-4f23-8b89-a20ffe56fb38",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ebc24a-6460-4c8d-aff6-19b8b5a3ea59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f5032a2-25b8-4b52-9d98-1ff7b7909565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "936d66cc-4bf7-476a-8613-d0806d299e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d531af5-8de3-4aaf-aea0-0f9e728a60b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d75297c-e6c1-4f60-93f8-4a536dde2947",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bfbd7b-3cfb-44d3-b4fe-c1a82b979d6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0e8b072-6e1f-4da3-86a8-21b1f2e16bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa1ef45-9bc0-4307-bda5-fd78c219025e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1083f4-b84f-4d26-9a00-28ec373dec3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27aa8d23-ffd2-4eb5-887f-c3d4eaccba4b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243aa067-7ea0-4b2c-928c-95e34b3643a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30cccb8f-e3f6-4242-88bb-b0c15319cacd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c0f84a-6dbb-4114-9624-941781a3f8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce4141c-6261-4681-bcf2-536670c30f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a10818-e851-4f8d-b356-dc76b15e60b0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44df1853-8ec6-424c-adfd-bb79e025585c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97d2bc6d-d759-408a-a350-d9e3cff2b9b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5ec0f9-1af8-4a90-bf90-bf99de65285e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49900683-1751-44f5-a979-a72adf5cc2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e813b94b-d9b0-4489-bac2-36b23d831934",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bff5d4a-5c4d-4749-ac76-90cdafc867c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43c56f91-e012-4123-8006-27175503264d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c94dc5-307e-40fb-9eb6-937fcc0825c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbe7405-2b23-4523-b9ba-5c6cd654f1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3793ef79-f420-426d-9780-005a3adbd10c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4622f2-ab96-435f-8114-dba02dc7addf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39133390-4247-4e2d-9082-235cf284e677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e6641d-0d68-408a-8319-1c30cef29475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c287e9-4d01-432e-bb51-5ef4e5cd6f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634501f8-8c2e-4571-a348-46aa61680c59",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d539d5e-9805-4c22-a962-55b355df8f6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9eb7d89-ce94-44c4-9bb1-ee3e7b4f4760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2cc0d5-94dd-41d8-8b36-ff2cfa1f5a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5af1ae-f1d9-4477-9fb2-f55b8e260268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4420bf23-d7ec-428b-9d10-7b6b965e3a40",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5110cf8f-2245-41fa-8f6f-551663dacb07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69c600ab-96e3-4ed9-a720-f951a7ccec18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfef541-0f1f-4793-ba77-73b7529d2b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22292ff-721e-4c2d-97ee-cbc2ee9bd2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733f2d71-bfc4-480f-a512-bc12983f57f5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53fec34-c76f-4cb3-ab11-27b11a7c36fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7784ce4a-a761-4dab-a43a-f5d5e9b93491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6679cc6-1585-4ca8-9d9f-8c038f4bfdd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d23237-7e57-4e36-9e9d-cbe367eecee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1075407b-17c6-457c-ae94-1cf474cae041",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a592d3-d519-4bf3-8404-47e378febfc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2d7fd77-c0d8-4ced-a3d0-33f7a7ba1afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c79f5e-2df1-43a7-acdf-84a284dfd308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b679272-b725-4bc7-826b-a0bfefe0ecda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0751b94-abda-4034-ba2d-63dcf977e349",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c9df98-73aa-4c71-b7e2-c54b1a6dcd55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1e518b2-870d-498e-8abe-b08fe225dfad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed894b3-2014-456f-9d22-051255ec573f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0580dd-2759-4d60-ab8f-47412d7ef88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b637bd58-0c2a-474c-8d7b-8d4d702131f0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff6656c-d472-48ab-8003-f686ff1de5f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8645cd8f-89fb-4eae-9488-d3c1a473f0f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccd6e24-4fc7-425a-bbc1-26bf7b8e47fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ef73e1-0ef9-445f-a10e-85727dd03c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2987b5ff-9911-4ffc-b5f8-63cd911219db",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc3815a-02e2-4f47-9720-95477e38c7cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ed4c3f-4a91-4dc7-aee1-23ace084790e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c687a9-b24a-405a-9161-5cb5b0d89ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72180f2b-3343-4892-a469-8a1455fa7399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed95faf-b485-4b4e-8180-8c86c1ee2f81",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd2ab1a-9665-47d0-b15f-ae4c7a23c6ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b42fd818-2f5d-418f-affc-8b1d929781ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebb2d83-cb5b-41fd-9ed9-7f127d8cb416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a3e5b0-7357-41d7-93fa-3c2cf9a132a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a827a2b3-54a7-405d-a846-4d89e64faa00",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac9da61-edc6-4107-8091-6f2a66247e34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62d73a52-0ecc-45db-8789-2adc68ad5ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78305911-db5a-495b-82c0-63c54eb47941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3c277a-f530-4a4a-88ae-77924b1a0bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56fb9a5-2079-4564-b93c-5c7be02690c9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689da8ab-6c3f-44ce-a0e4-b19e96ea3750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9f967b7-1cd8-4a28-885e-779bf11d5677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4192ff62-c370-4520-9e4f-7bc9dd32bd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5a59f4-0df1-4098-b5e8-5b34cd82eae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338b472f-9070-49b5-ba99-2c154cae0810",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b73dac0-fdc8-49b6-a367-2c0c6e7422f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "853597c9-d710-4401-800b-d7a146b4504d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7290cfda-2ebb-4bc4-a7b4-012e796a2b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc90d666-5eb6-4eb2-bde7-c8165ca1823b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d31f45-42bd-4ff3-8111-9d9fce2b1abf",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebfce4c-cc1a-4aea-a4fe-75e4e3c86d94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a055ee-0b16-49e4-bc22-7c007682014b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20451ca7-ef90-46cf-8816-ed1c584510b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb1566e-7155-4ef2-9bd6-960d5914b316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c783c6e-c1b7-4a53-8362-5f03aa5afdfc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3967c4-44e2-49de-861f-e91f548f0b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31c6c6dd-b96f-4218-9301-07997a64f3e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5eb2d6-25bd-485f-87b2-8b16f1035f0a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087bc172-88dc-4796-a394-3e35a1254a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e21ec6-0971-43be-81e5-56f1ce5e8d20",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1c3bea-cc2b-409a-a089-1e7abc6a2199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37bd78e7-0fa6-4300-838d-b7ddd9d02cae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b7206f-938e-46a1-a94c-b684b0948167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d4f17f-adb7-42fc-9b70-cf5aaf52729b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91aeea0-505a-4a22-b940-5a0f6a033475",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603d9852-dedb-4ffe-a2f3-d18d46013a64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "735ebfb0-3202-4b1c-a8b1-a9a40b4ab7b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c659d8-9269-4689-ba9f-0eb684332313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a53adad-ba3c-4c8f-985e-654a6879a6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fcb846-d522-444d-beff-45b40c24f720",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5510c5f8-d006-48b9-b73b-1ced31ccc55c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74e99b5-5887-4777-8d30-85f18eb31970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8a1815-e0af-4028-ac72-4f9cafbc76b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8def0f4b-b549-4a49-a422-b7811e2383f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1117af-1d64-4349-82e7-2578d8b68518",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed42166-14b4-49a8-a0fb-d3f428c2dd6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "062a0cd1-3e57-443f-8ade-aec897b1cbfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3125060-bf86-4858-8602-c068edb07ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612570da-4938-4fb9-9a56-e7fdfdcbc916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e9ccc7-1549-44e7-9342-e32507d57d72",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2899bd5-82ea-43e9-b2c6-ecbeb99de160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9887c434-18d7-4e83-97b4-64e0b807d52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "957179aa-a539-4212-abb8-fd20beb0fec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cceecfbb-6979-49f6-8e4c-5a6c8462747b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9978e30f-1a68-4d5a-94a2-25d784e84efc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faf8b7d-4798-4c21-b91a-04863619830a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e1d3148-e551-4c29-90c4-3562f0ea18b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4c1945-f0ee-47e0-bf8b-3f60524153e3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9e497c-23f0-4114-94b2-2c5d78c59731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79467e6-d788-4d65-b5cf-3e8fcdc71da5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467d6a70-76e0-4c2f-be34-ebf6346e61eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67d81fc0-131b-46ca-8511-b7bb2a11e176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd007f1-0a1e-48ba-a8ec-25f808837286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5f3bdf-76f6-48a3-9372-0fe46e647a09"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1079d59-2d2d-4c4d-a1af-e4cd6107dbd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8dd56d70-aa0b-4427-a15d-b0dffa25f3be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2b88612-dac9-4a9d-bf51-b224e8253a51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98dd491e-ca1d-4c4a-9cfa-496e70c75d97"
                    }
                  }
                ]
              },
              {
                "id": "97fe5224-190a-42b0-83a6-e4e63e7f05d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3908a9a-279e-4e71-8a09-b5fd7d5b29ad",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90134dd2-ed0b-4161-9b31-1d377b98ba2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e4c7bdf1-70c8-4593-a251-47c2e68b9ae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f19dfac-8f0a-492b-aade-4dca371e5205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ea148c0-1a6f-4d87-ac9d-8366a2c03a38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b2a5538-e018-4de9-9839-df41bb44a43f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b00bc79-4a79-4b54-bae2-e86a8e664bb2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6230446-8348-4f62-9f34-dfb85020998b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff5de99a-5174-4173-9d79-bf97f0131b41"
                    }
                  }
                ]
              },
              {
                "id": "be41f569-d7b0-401d-9fa7-d8410c4d51a6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f7b9ba7e-0f60-45af-823e-38a6f8c1ffc4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57662250-6eb5-4bef-a5e6-2334728d77e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1273e105-ed3f-4cb0-bceb-3361f75cb446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b760b8be-c4fc-4217-be8c-4d1aff9871f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72af3e89-bd3f-46d8-8526-c209783a31d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "71b8be0f-0300-4b84-9e7f-1c020ce50e40",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c3fb962a-0fd4-415e-9584-ab0970c53bbb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b64b4dc8-2bc7-4ee6-b313-11756b501559",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "83088d70-1911-449d-82df-e6b8fe5ec10f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a978c517-7fe6-4973-8070-ec29d1fa2389",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a275144-519b-4f18-8df6-2a563c1de057"
                    }
                  }
                ]
              },
              {
                "id": "fd28ad9b-5f91-40f8-bd01-11d848eba7b9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55c5aa84-7734-401e-8194-1db471a0d962",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a07de840-6bb6-43e8-a7d7-c28dbcda0000"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d83a1aa-13d6-473b-8ab7-b0c667ee1489",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a30248d-a20f-48c3-a37d-82f975221e1f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d852a46-00ad-4be7-995b-579506437a7f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2a9f91cb-c767-4dc2-8739-dfd561cc4997"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ae90bb2-48c0-4083-b7b9-8fe022639877",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df6cc0de-8e20-4278-a070-a491ae6f49f2"
            }
          }
        ]
      },
      {
        "id": "e138c6d4-b6ca-4049-8f17-fc7e3938224f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "57395d90-1ebd-4fdf-afda-c7864f658f8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e4d8de6-2367-45f9-9840-ea53a5bc6210",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b05c7178-abac-4f91-9355-84053a0cea89",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a53b33-8ca9-4398-afc0-870a2dca83db",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aab93fa2-1154-4780-9364-7393ff25d4b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b16da1-4d90-4ea5-906f-ac8e56392a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46100a79-8029-477a-82db-84aa135e72c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dec3047e-ec4c-4a39-b3c6-4af1025c0b98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d5226be-c36e-46be-8155-e34b107d8dba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e0b76e6-af3f-4940-ae33-965c5b114dab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8af5f4a-2059-409a-94be-b5cca6395fd6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7031311-c4b5-431e-9549-50f19847d77e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4a2064c9-571e-42db-abf9-18f21dd82203"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5b02df3-525d-4743-8b6f-662787e10e44",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9cc6f8f3-d5e9-420c-b1d3-7493b956cbc2"
            }
          }
        ]
      },
      {
        "id": "494bc3fa-f2ea-4ebc-8396-6b283107f192",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0d65c635-0596-4a6c-8c4b-f1e4f5eeb7ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1e2bacc-8a40-4e15-a025-8be8e7458bb4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd5ef5f3-4bb3-468a-9d3f-05771910c81c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246f2282-9342-47e0-afd8-ecab2af2beed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82c37d47-56f2-464e-b0ae-11fb5c31d569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dad01b-17c0-4549-8801-24977f00ca55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6c8fcfa-f934-4927-b91e-8ed67f53f116"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d847da9-e37c-4806-8e46-f64656d26206",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62a2699c-3c92-40b4-b6c8-9230dcc5ff3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "319f4eaf-4539-48a5-bfce-31c0337eecde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed0b7343-6e8e-4245-a869-d5a527f8fdd1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "519b4ee4-ade5-4c9b-8e49-e5e297f5336d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fa791e64-cab3-40c9-b6d4-342f69f64500"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0bae0f2-1499-4ecb-a882-141c0af35eb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26adbb65-dfe8-4041-95ee-474bb07537dc"
            }
          }
        ]
      },
      {
        "id": "1f21bcb7-b832-4abd-a18e-ce5839e53e8a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b2d862ce-b15a-407e-bc63-01e10604186c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "071c5912-238b-4b79-827b-01c70e64cdb5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80377dc4-ea9d-4daf-8588-f6bb285eac68",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380bc3bc-9afc-47e1-b4d3-c5fcbbffbab8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7de632b6-2785-4e67-a5b3-4371829f6181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba80aed9-51fa-4e2c-b0e5-48907f0c0aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b7e7c7e-9854-442d-890e-e4be39a7116e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4af02cf8-f4dd-467f-ba9f-9bd61a3b09fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e88e4984-f12f-4044-b69a-30f4a10335e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2227f05-0182-48f9-8243-ae01842683f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf838f45-1615-4d9c-b25f-9ab28768d1e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0156db6-d995-4517-80d6-4164313acb66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fade94f9-acbb-4007-80d9-82de11b142ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a45d864b-398b-4015-8fe3-71cd0ae34854",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6efe5d63-fbe5-40b3-a78f-8d49bb29194f"
            }
          }
        ]
      },
      {
        "id": "c23395da-2109-44eb-b8ba-6f647026d51e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ac91012-1879-4b03-8f3d-54c01bdd3062",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e1ab751-f693-42b2-985d-c13fac2607a6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e8e7d623-2811-4026-8e76-95d769454bd8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "125af647-351d-4103-bfa5-0a7d6a453bd3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de4328db-a8c9-4c58-b156-1eed6647547a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.422535211267604,
      "responseMin": 3,
      "responseMax": 245,
      "responseSd": 20.242830044748935,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687394547334,
      "completed": 1687394560680
    },
    "executions": [
      {
        "id": "5c193b29-8829-45a8-8ca9-3506e3426ea0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5834648e-5e41-4cb3-a87d-27a455dea44a",
          "httpRequestId": "0acc70ed-7e16-44c2-a6b1-4b5eeb95b7ef"
        },
        "item": {
          "id": "5c193b29-8829-45a8-8ca9-3506e3426ea0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "833dc55d-233b-4a1b-a618-ad6d069f51c9",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "fe3c66ce-2687-4b6e-ab30-2e1e924e7ff2",
        "cursor": {
          "ref": "2dd44e40-cd90-45d5-b6ff-b1e298190101",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e48afb9d-e553-4f67-8030-5086adb06205"
        },
        "item": {
          "id": "fe3c66ce-2687-4b6e-ab30-2e1e924e7ff2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "11909369-c4ee-429c-9d32-32ba00a73457",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "d82ee6c7-e125-43de-8b86-586dfdff456e",
        "cursor": {
          "ref": "7c731be8-a71d-40b5-804c-270dcf4e0303",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6bc75430-a821-4837-92a9-f00fb7210dea"
        },
        "item": {
          "id": "d82ee6c7-e125-43de-8b86-586dfdff456e",
          "name": "did_json"
        },
        "response": {
          "id": "a9e7e90e-fe8b-4974-b5cd-588c80d9fd03",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82392c33-3fd4-4b93-83ea-173b951e0f64",
        "cursor": {
          "ref": "da6d9ee5-7641-4df4-8dc8-f963ef622a02",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ae3005f1-8583-4372-a116-d3a3d4b7a23e"
        },
        "item": {
          "id": "82392c33-3fd4-4b93-83ea-173b951e0f64",
          "name": "did:invalid"
        },
        "response": {
          "id": "1024fe00-4f2c-498e-9c6c-c19afbdcdc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82392c33-3fd4-4b93-83ea-173b951e0f64",
        "cursor": {
          "ref": "da6d9ee5-7641-4df4-8dc8-f963ef622a02",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ae3005f1-8583-4372-a116-d3a3d4b7a23e"
        },
        "item": {
          "id": "82392c33-3fd4-4b93-83ea-173b951e0f64",
          "name": "did:invalid"
        },
        "response": {
          "id": "1024fe00-4f2c-498e-9c6c-c19afbdcdc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bfca35-5d82-4849-9939-9e6445abdf1b",
        "cursor": {
          "ref": "3b6fc8a1-3af5-4c59-994e-1191eaca113b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "50d8bed1-38d5-4235-9e2a-5ba54daecd45"
        },
        "item": {
          "id": "a2bfca35-5d82-4849-9939-9e6445abdf1b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "406d547d-5ea2-4789-86e5-67a85ecf2902",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea1c9db-9723-4580-b890-cbd33906b1c9",
        "cursor": {
          "ref": "e04e6bbd-1360-42d0-bbc1-873bf9d7632b",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e31bc71d-e875-4d5d-bd4b-0ffcf90438c3"
        },
        "item": {
          "id": "0ea1c9db-9723-4580-b890-cbd33906b1c9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d25fe126-da82-45bd-9343-b303c1ea420c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1061cea7-7d4e-40ea-b8d4-2ef931903572",
        "cursor": {
          "ref": "0006cee0-c482-48ea-b8b6-4e45fc87931f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9514de08-9f14-408e-99da-19833ef85e50"
        },
        "item": {
          "id": "1061cea7-7d4e-40ea-b8d4-2ef931903572",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8cf164f0-9183-4e99-b437-f3830aef2f86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e428a785-7dbe-4402-ae42-6ca30bfa36a4",
        "cursor": {
          "ref": "0524b8ee-2ebb-4ace-b784-17edd74b2dc2",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a87cbb3f-65fc-4c30-b016-7279c30dd475"
        },
        "item": {
          "id": "e428a785-7dbe-4402-ae42-6ca30bfa36a4",
          "name": "identifiers"
        },
        "response": {
          "id": "fcc6a0df-4619-41b4-aca2-1a4e17e75418",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd3abf0-4720-4223-bb07-395f8ca0fc69",
        "cursor": {
          "ref": "ea9dac87-ac1d-4fab-b2ca-91a345383a70",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2ae30898-f1a6-4ead-919c-30eaca4a4359"
        },
        "item": {
          "id": "dcd3abf0-4720-4223-bb07-395f8ca0fc69",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "95229dd5-dd22-414e-89eb-b8f2e92ef817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffecc142-b625-427b-9f9d-010c2545e9c4",
        "cursor": {
          "ref": "46f2ac79-5c2e-4b77-9301-7f072b46235e",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "03755e0c-7ff0-4731-97ff-e9a82d9b408d"
        },
        "item": {
          "id": "ffecc142-b625-427b-9f9d-010c2545e9c4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a5e06214-5312-400b-8fdc-f63ab655b0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc31134-96b0-4aa3-9508-fb3cade87447",
        "cursor": {
          "ref": "a19a4f02-1f8b-4b99-bb19-99b1dc64348c",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c13c8479-e537-410a-9b69-5d836548796e"
        },
        "item": {
          "id": "7dc31134-96b0-4aa3-9508-fb3cade87447",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e95e41b4-1b5f-44ad-8459-61aa9efee3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f777cd06-a0c4-4f74-875a-b71061f7ba24",
        "cursor": {
          "ref": "9b7b5b40-8f72-4860-8c4d-24a679a1b7d3",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "68b60f69-41d4-4b6c-9155-b1aa6813cc49"
        },
        "item": {
          "id": "f777cd06-a0c4-4f74-875a-b71061f7ba24",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "45dc9971-5c47-4d6d-a836-3bc9ef446101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158f4d09-69d6-468c-aa83-6dfbe08b00de",
        "cursor": {
          "ref": "4440993b-e95f-41e7-b318-dc94127ad54e",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e7f9494f-50be-4cb2-9b05-dc8b77b7e658"
        },
        "item": {
          "id": "158f4d09-69d6-468c-aa83-6dfbe08b00de",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bd681728-3517-479f-88ec-fa927b2ecbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0f23dd-564c-4a97-b46a-6bdbb822a4b6",
        "cursor": {
          "ref": "81dcf036-3962-49a6-804e-c1e633d911c7",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2b8fc657-2aa9-4cb8-b324-1b53c81d3cad"
        },
        "item": {
          "id": "ed0f23dd-564c-4a97-b46a-6bdbb822a4b6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "05b8d15a-578c-4f36-ae58-4462e964135c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dce74f5-08c0-4e33-9e64-458739a38823",
        "cursor": {
          "ref": "b218dd3a-75fb-49a6-acd3-abb252df9cfd",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "130339e3-8c3c-4b6b-b2b4-bc7be263c4ea"
        },
        "item": {
          "id": "5dce74f5-08c0-4e33-9e64-458739a38823",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2650e696-b31a-429b-98b0-70ab0f754147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3df090-6065-4edb-9ae3-3c20527af83c",
        "cursor": {
          "ref": "c0837358-a077-403a-9123-7d5d73eba552",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3b9da651-b265-42be-9705-755f7a67c75f"
        },
        "item": {
          "id": "bc3df090-6065-4edb-9ae3-3c20527af83c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "967402f4-afef-4768-819b-c629ea0f8613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d569505-3de6-4e80-bfba-795faf0dd2aa",
        "cursor": {
          "ref": "41ffac74-bcd0-4c13-b892-e1d8025155e7",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "325269cf-e0aa-499a-90a5-af7e0d31e6c7"
        },
        "item": {
          "id": "5d569505-3de6-4e80-bfba-795faf0dd2aa",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "781ac1c6-0c7c-49d1-a603-29d2a1943d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8ef1ac-cb6d-4f1f-b5df-dbdbfd0ed193",
        "cursor": {
          "ref": "cdb0e88f-2298-461e-8d96-d119462f5001",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fa0921f1-abef-4db0-8b77-42feafeecd27"
        },
        "item": {
          "id": "fa8ef1ac-cb6d-4f1f-b5df-dbdbfd0ed193",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c999a06c-ff9f-4f78-a21d-10d0dec992fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454b95f7-da4b-4bcb-9b89-04dc55b6a48b",
        "cursor": {
          "ref": "2e5011eb-699e-4e34-aaf1-1ff5406fe720",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "438d4d1a-14c7-4c70-8226-15423677821a"
        },
        "item": {
          "id": "454b95f7-da4b-4bcb-9b89-04dc55b6a48b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fd59e73e-eac2-4a43-9adc-722e5ebdd8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b66ee8-f707-48dd-8327-2b7451cfc504",
        "cursor": {
          "ref": "428871c7-403f-4932-b2b6-5657b719e03f",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fd8ddadf-617f-4142-a703-bee12b402db1"
        },
        "item": {
          "id": "a6b66ee8-f707-48dd-8327-2b7451cfc504",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3d0e90e2-28df-48e2-8dd9-c37fa17232ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e172b4d-89a0-4d59-bbe8-90b9804e6bee",
        "cursor": {
          "ref": "e0329052-fed6-4586-8667-19a0c27f79a0",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1a63b53b-16c6-4bc8-9751-68cdcf9b688f"
        },
        "item": {
          "id": "4e172b4d-89a0-4d59-bbe8-90b9804e6bee",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3ea98e01-80e3-4990-83ce-7703d0a4ec38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4290a292-f9de-4d44-8a2d-2a338ead5195",
        "cursor": {
          "ref": "5c12c17a-ed58-4b97-8188-200bdf916353",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "309a028d-c775-447c-bb42-6d9c4d8789e2"
        },
        "item": {
          "id": "4290a292-f9de-4d44-8a2d-2a338ead5195",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5d66bf59-832a-4978-b6c4-b0f5fcd8e90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3572484c-a076-479d-853b-62b4d1eabae4",
        "cursor": {
          "ref": "0aeeaa36-52ed-42f5-8b5c-3fb28fca8502",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "15d40f38-e85c-4e58-a77b-ad8e58f65e0b"
        },
        "item": {
          "id": "3572484c-a076-479d-853b-62b4d1eabae4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ef71d09d-f3ff-4bde-af32-747de58d0ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452f745c-9fbf-455a-b256-395fd4280905",
        "cursor": {
          "ref": "7d58fa8e-199c-45e2-93f9-8a462b53aa0b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "10810f95-6790-42f3-b17f-d04d11ca63f1"
        },
        "item": {
          "id": "452f745c-9fbf-455a-b256-395fd4280905",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "abb40527-4eef-4999-bba2-459aeed15c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f1d05b-c6d3-426e-95dd-9d9dd0bdfccb",
        "cursor": {
          "ref": "3be35503-b99c-47ec-8664-3e809dc2e137",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a9a85bfe-61ed-4125-9281-ec67f507bf5b"
        },
        "item": {
          "id": "f5f1d05b-c6d3-426e-95dd-9d9dd0bdfccb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "47ff9dbf-bc1f-40af-8d21-5e52e6cccf00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520f8098-4759-4c01-9aba-90eae0047464",
        "cursor": {
          "ref": "8954d64e-b193-4327-90d7-0db48ee6384d",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0e101140-3838-45d4-b403-0734b734f8b0"
        },
        "item": {
          "id": "520f8098-4759-4c01-9aba-90eae0047464",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e9cb4efe-4432-456f-b348-1c2300b52497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5e9f70-9a13-479c-9111-0dd4e531195e",
        "cursor": {
          "ref": "30127553-e93e-4e1f-97fe-99bc64cdf2c9",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2573e0ec-2683-4222-8b47-422d5e2e5b3b"
        },
        "item": {
          "id": "5f5e9f70-9a13-479c-9111-0dd4e531195e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0d409bb1-9348-4e28-9868-68118c552ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8492d6a-959a-441d-94bb-46c52f086c9e",
        "cursor": {
          "ref": "ff7292c9-b250-417e-9adf-2f5f1275f5f9",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f6e036dc-2a04-43bb-ba7f-cbbf76ae82ac"
        },
        "item": {
          "id": "a8492d6a-959a-441d-94bb-46c52f086c9e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7c01367c-aac1-4765-a2a5-178389ace6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fed898b-4496-4e2e-9726-4abcc0906562",
        "cursor": {
          "ref": "253b0cda-155a-400d-a097-1c7e8849ffd3",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8db458c0-dbe8-4c25-8e62-1a71c68d4f85"
        },
        "item": {
          "id": "1fed898b-4496-4e2e-9726-4abcc0906562",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "474a0269-6eac-421f-80cc-f0551f18501f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bf3dbb-618c-4c49-9788-3c06251abb67",
        "cursor": {
          "ref": "e60ebdf2-855d-46fb-a7f3-ce5c7932ae46",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "25c837ca-3946-4526-b302-9b4b646dca10"
        },
        "item": {
          "id": "c2bf3dbb-618c-4c49-9788-3c06251abb67",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a26d1e9d-e9ce-4994-82e4-8556d6257c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347846a9-5e49-4bff-bc34-86601731f444",
        "cursor": {
          "ref": "36499464-f154-4733-9987-ecc8e3f7ddcd",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2b5e3cdd-3e40-46ce-8b93-11817bdfa8c5"
        },
        "item": {
          "id": "347846a9-5e49-4bff-bc34-86601731f444",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8e3f7e7a-4013-4f7a-bdb5-3343eae43691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0f7030-3937-4bd9-b278-a6fc45d58147",
        "cursor": {
          "ref": "78670678-532a-48a8-81dc-486b4aa4bbeb",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "75b128f8-f6e1-46b6-a90d-532790b273a2"
        },
        "item": {
          "id": "fa0f7030-3937-4bd9-b278-a6fc45d58147",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cd53f405-c215-452d-875e-7898525598fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db37a38a-12e9-45e9-b760-ce3395ca59e7",
        "cursor": {
          "ref": "dc33736f-43ee-4578-ad1a-742e0722b1fb",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ea1b5f35-00f4-4317-9263-aa8109198270"
        },
        "item": {
          "id": "db37a38a-12e9-45e9-b760-ce3395ca59e7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "787f89a7-ffde-4739-be93-6cfd430144b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cbc2f5-399c-4188-bbbc-bbc16eed57be",
        "cursor": {
          "ref": "a4df806a-5c53-40df-9d11-e237b91f98d2",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "da9357b9-33b9-401c-83c3-e269703bcd23"
        },
        "item": {
          "id": "83cbc2f5-399c-4188-bbbc-bbc16eed57be",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ffe8736a-e2e6-400a-958e-7f63e27eaaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c1650b-a80a-4170-8026-a475e35c01c4",
        "cursor": {
          "ref": "871d513e-71d4-449c-b76f-28725e658617",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8617a068-23bd-48f4-85e5-a758e6fd14cd"
        },
        "item": {
          "id": "79c1650b-a80a-4170-8026-a475e35c01c4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "24694a69-5ddd-400f-b96a-27f99103716d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae19e508-5698-49b8-9027-095e1bcac1bd",
        "cursor": {
          "ref": "d08500bf-1f90-4bb3-9ce7-92e5f7e03ec1",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "896a5646-ff3d-4842-8b41-b115405b532f"
        },
        "item": {
          "id": "ae19e508-5698-49b8-9027-095e1bcac1bd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0d230893-0266-469e-bf77-75ce977fbf3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f994837-af8c-4f6c-bd6c-94a0757358f5",
        "cursor": {
          "ref": "519ea246-8127-4632-a3ff-675921dd8477",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a3f5dce3-28c6-48a0-b70d-2a6db0549ae0"
        },
        "item": {
          "id": "0f994837-af8c-4f6c-bd6c-94a0757358f5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "94f7d627-cd9a-4148-911a-7b81a9c36c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3e48a0-f7e6-4e3e-8379-0028cbc41a61",
        "cursor": {
          "ref": "d64af1ee-44b1-4c8d-acd9-85898d4fa229",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e81121e8-cf0c-4a01-b5b9-89da4da9ec7f"
        },
        "item": {
          "id": "de3e48a0-f7e6-4e3e-8379-0028cbc41a61",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4d9fb3cc-3125-4a14-a6b4-ac2cc122a01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fbebdd-5bf0-4fe4-8017-b5d713769249",
        "cursor": {
          "ref": "893fe83f-7d17-4e7f-8fea-c6dc4687bd4e",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "075229ce-3ac2-4fd8-9b72-8b8aee86080d"
        },
        "item": {
          "id": "74fbebdd-5bf0-4fe4-8017-b5d713769249",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9d012065-484a-4ff9-8ff5-696092165ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633c7afe-78db-4bbd-b3e7-af71432c941b",
        "cursor": {
          "ref": "02586eac-64d3-49fa-9362-3c75891fcc24",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "46c0ae9f-4d1d-4e1d-a0eb-3d90e6ff8385"
        },
        "item": {
          "id": "633c7afe-78db-4bbd-b3e7-af71432c941b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fe9d37a5-61e8-496c-ba9a-ced9cc4c1f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f2a1e3-cd16-4f95-87fb-ffe4bcdddfa6",
        "cursor": {
          "ref": "949ef71c-e5cb-4066-8434-6fd539577591",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fe72ed0c-5969-4fbb-86af-6bf9dd1c5a8f"
        },
        "item": {
          "id": "c8f2a1e3-cd16-4f95-87fb-ffe4bcdddfa6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b37a1ae6-ef13-4bc8-8df4-4f5e2276f48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11335574-7194-4c35-b8d7-81e6d6fd4e34",
        "cursor": {
          "ref": "4278ed8a-3b60-4f2c-b54b-358b64cbd821",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "96605720-f2c9-4da8-b3c0-3d0dae271d9d"
        },
        "item": {
          "id": "11335574-7194-4c35-b8d7-81e6d6fd4e34",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "60bfe13d-1764-4352-947e-da1b987fb332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0256076c-ab2f-48f2-a646-3b5986706b6c",
        "cursor": {
          "ref": "234cd4d6-3d8c-4cae-8edf-a91dec6821ec",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2cc3b45a-c64f-4ea2-88f3-48b5501b1789"
        },
        "item": {
          "id": "0256076c-ab2f-48f2-a646-3b5986706b6c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b005ab83-c721-4f7f-8eb5-c55a0b857575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf915291-6c05-4f80-8628-28f6eb046c55",
        "cursor": {
          "ref": "5ba32996-9719-4ed3-8cca-5edc81ba6f77",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cc964291-7e70-4f52-9fff-26e6e1c3a99f"
        },
        "item": {
          "id": "cf915291-6c05-4f80-8628-28f6eb046c55",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9ce93faa-ceb1-4957-8db3-00d5d502db28",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f723f95c-24d2-40ed-91b9-3b28ab31429d",
        "cursor": {
          "ref": "726c5e08-0a1a-4251-996a-1d5054b5dab0",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "14cdb451-4737-44c0-ae6d-767e4b17d220"
        },
        "item": {
          "id": "f723f95c-24d2-40ed-91b9-3b28ab31429d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5265f8f4-2a24-411a-a825-b814b7fc53d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899bac98-f7f6-45b0-9ea1-41c87c203e8b",
        "cursor": {
          "ref": "7e48e092-68bc-4a63-817e-1b6bbe600fb9",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e89843be-6768-42b2-9014-457cf90531c6"
        },
        "item": {
          "id": "899bac98-f7f6-45b0-9ea1-41c87c203e8b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7d1408f6-ef04-4107-bad3-6ea6faa5186f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d474ab9-04db-4ca9-847e-79e94c1e77fa",
        "cursor": {
          "ref": "44f5b161-5c39-43ff-8af6-c9cfe4e45f6b",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "db952798-0580-4a61-b90c-a7798d72a2c0"
        },
        "item": {
          "id": "4d474ab9-04db-4ca9-847e-79e94c1e77fa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7f28dacf-93e2-4099-8282-2659754b9fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ce2c2b-082c-44d5-a97f-d2234f4e50b5",
        "cursor": {
          "ref": "27063d15-1b43-4c31-ab25-d368d68cf8ad",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1e7003dc-9ea5-47d4-babc-5b0bcf57ac45"
        },
        "item": {
          "id": "79ce2c2b-082c-44d5-a97f-d2234f4e50b5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d1f7d204-9e9e-4e5e-ae72-6a99835f6331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4655ee9d-8272-4763-81ff-be3f8eaef9dd",
        "cursor": {
          "ref": "194ac647-721f-440f-9924-c912e1a42ec9",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5e082de3-4ad3-4f7e-a7c2-edeeaa348fcf"
        },
        "item": {
          "id": "4655ee9d-8272-4763-81ff-be3f8eaef9dd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8302dd03-4bcf-42d3-8fe1-ec73a26f555d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05e6788-14fc-4616-b755-177e4a4f24d7",
        "cursor": {
          "ref": "425ef47b-7ab8-49b1-916d-462b8538ceec",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "14716502-d9cf-445b-9e58-8f4217a8619c"
        },
        "item": {
          "id": "a05e6788-14fc-4616-b755-177e4a4f24d7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e831d764-c4cb-4b0a-9de5-a5b95679e7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adaa4e4-14da-4fbc-b47d-4b0e3970d101",
        "cursor": {
          "ref": "92c18038-91a7-464f-b63d-9eec6f5ba0fc",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "02b2e833-31a5-4f3e-8e4f-2c7f090d9a02"
        },
        "item": {
          "id": "1adaa4e4-14da-4fbc-b47d-4b0e3970d101",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f779e45d-e296-4c34-a1f8-5944178d725e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a580859d-453e-4c1b-ac1c-fac62c39685f",
        "cursor": {
          "ref": "0f4dd4f4-312e-45bd-91d3-9da082bf792e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5e9a1f8b-c158-4db6-b058-e10c2d2d60d5"
        },
        "item": {
          "id": "a580859d-453e-4c1b-ac1c-fac62c39685f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "609ffb3d-830a-48ed-84e3-18cb74e8ad72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4105df35-514f-4f83-9363-def799b831a5",
        "cursor": {
          "ref": "0cc3949f-9192-44dc-a731-bca6cc1acdc6",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4e5d8c44-8fcf-40a2-a5c7-528a34ccad9c"
        },
        "item": {
          "id": "4105df35-514f-4f83-9363-def799b831a5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1523e2e7-e220-49b7-b4c4-20ac9bc6bbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626b627d-948b-4798-b1d5-f1f2a708539c",
        "cursor": {
          "ref": "33a2823c-6807-4015-a507-02bdf1cd629f",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e9dc9cdc-5be4-4302-ac97-c299c11ac4d0"
        },
        "item": {
          "id": "626b627d-948b-4798-b1d5-f1f2a708539c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a555abac-e250-4c28-b8f8-18a03f191860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150bfd6d-28d4-4ccc-a059-ea849dac7473",
        "cursor": {
          "ref": "391dfad7-06b1-4b11-a0ff-8661a4ab003a",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dcce63e4-6899-4c17-9e8e-78a2a7dedd19"
        },
        "item": {
          "id": "150bfd6d-28d4-4ccc-a059-ea849dac7473",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6d1d5253-6854-44ad-a2ad-ff2e33952c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d616d88f-5dbd-49eb-bd68-538c2041b9ab",
        "cursor": {
          "ref": "97d7ac08-2890-4dec-a28a-924f55c5e090",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0b8de5aa-d742-45ea-9d9e-32236c4ade47"
        },
        "item": {
          "id": "d616d88f-5dbd-49eb-bd68-538c2041b9ab",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "11234c0e-6c4f-48f9-899b-83d54a7f46cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968bf015-aec7-42df-9d88-332fbeca1d76",
        "cursor": {
          "ref": "54f33221-324b-4eb9-b164-88cc10b13109",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f5c30b0e-4c48-471d-8f71-d2fe61505ff7"
        },
        "item": {
          "id": "968bf015-aec7-42df-9d88-332fbeca1d76",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "eec79d3d-5ed5-409e-89d6-6fa42993e847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef568ca-35c8-4f21-85ca-260d0c4f8adb",
        "cursor": {
          "ref": "9365b2f4-5ead-4def-961e-5f365d353ffb",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "257f4a9c-f658-4cb6-9c78-65ef9139e94b"
        },
        "item": {
          "id": "cef568ca-35c8-4f21-85ca-260d0c4f8adb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c95252d3-5f1e-4f84-8d31-52a590c4fcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03913a0f-91fe-4812-acc6-0aa160ce8894",
        "cursor": {
          "ref": "d251677b-381b-4757-8929-601d1e83a81f",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f004d15c-f09d-4293-9bc2-d743664b5630"
        },
        "item": {
          "id": "03913a0f-91fe-4812-acc6-0aa160ce8894",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "12828316-9926-411b-b171-92a8fb38a4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba64b4d4-ac38-48e2-ac81-4ab914dec12f",
        "cursor": {
          "ref": "38f85a74-20c5-4b42-8144-8c59aad7f45a",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bf28c9fe-8e04-4334-969a-54d5d328d957"
        },
        "item": {
          "id": "ba64b4d4-ac38-48e2-ac81-4ab914dec12f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e5e6881d-59fc-4329-b9d5-11024ee72bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c586269a-53e1-4a65-8020-0d013ab9dcfd",
        "cursor": {
          "ref": "02d339d3-ea93-46dd-8d90-44b980bcb421",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b2bcff15-02f8-49de-88b8-0e81c5190391"
        },
        "item": {
          "id": "c586269a-53e1-4a65-8020-0d013ab9dcfd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a8da6adb-0c5d-490d-b79c-182e11531652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b61f0f2-b3d3-4d6b-9c0e-09f6d8498cef",
        "cursor": {
          "ref": "8b7f4947-0259-4b59-b5ad-edcad8001633",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "89ce0c43-4fe8-4e81-97f0-42e104600624"
        },
        "item": {
          "id": "3b61f0f2-b3d3-4d6b-9c0e-09f6d8498cef",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "81146eab-cbce-452c-ba55-6a76ca162f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027d0cfd-4c5d-42ec-af43-e972d4e7dcbc",
        "cursor": {
          "ref": "3c4f2999-a009-4321-a6ce-69831966ac27",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "242adeab-7ebc-404e-8513-d892ab1e37f3"
        },
        "item": {
          "id": "027d0cfd-4c5d-42ec-af43-e972d4e7dcbc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a39a558c-7df1-4554-81ac-e81fabae6e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf7c4b0-d465-4ca9-9563-4926a39d4af4",
        "cursor": {
          "ref": "f351c425-3567-4ced-8458-a24461f275d5",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e405e030-e7d7-4b5f-8437-d7ebec49c568"
        },
        "item": {
          "id": "fbf7c4b0-d465-4ca9-9563-4926a39d4af4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "78db9976-f4f0-4ad7-bd58-8b3f015f5046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f68f9ea-1f3b-4395-a791-e1d103ce7603",
        "cursor": {
          "ref": "d43cdc05-448e-4d1f-8bed-c94935aa61c7",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "38a9e05c-18b3-47c0-8d14-660aa2b492cc"
        },
        "item": {
          "id": "4f68f9ea-1f3b-4395-a791-e1d103ce7603",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d4b11ba8-42f5-49fa-ae78-ad0e7e5b3239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1763b03-16ed-4f45-89bb-7dd5a3ee9c5f",
        "cursor": {
          "ref": "33dd0379-3195-4780-be3e-facd998a9604",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "289dd3ef-6bfe-4fe7-850d-167ba2c617a2"
        },
        "item": {
          "id": "c1763b03-16ed-4f45-89bb-7dd5a3ee9c5f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f4a86bd3-a361-450a-81a1-0e91342ecf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72d9187-8c3d-40b2-b5b3-b83b41ea30aa",
        "cursor": {
          "ref": "263ff8ab-52bc-4b2d-b175-534627a051a6",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7fa35dbe-9ea6-44dd-86b0-bc92df42a255"
        },
        "item": {
          "id": "a72d9187-8c3d-40b2-b5b3-b83b41ea30aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "25ddf777-9904-4b8e-a741-d56042ced933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6257c5-1db8-4078-ba13-a65df378b257",
        "cursor": {
          "ref": "48d732c3-6855-4056-9438-52617a7f8b81",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "34f09476-21b1-4ee3-8009-28f2e56af4d1"
        },
        "item": {
          "id": "cf6257c5-1db8-4078-ba13-a65df378b257",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "40d271ae-9798-49b8-8d46-e4d80d120bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34583e5a-49d8-4224-ac87-0d829e23a65d",
        "cursor": {
          "ref": "5e0fca86-7ed1-4f68-8d9c-9b941d04e4d2",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "67256a23-1838-4175-a9b0-90beb8fca9e4"
        },
        "item": {
          "id": "34583e5a-49d8-4224-ac87-0d829e23a65d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "67b74585-b178-494b-a427-51f9b559ca91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb8dad0-c4c8-4ba6-a897-49192baa3614",
        "cursor": {
          "ref": "b2a4500c-dbdf-4e39-890b-11f84430c151",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c54460bb-d377-4993-b8d8-82f370af94c5"
        },
        "item": {
          "id": "0cb8dad0-c4c8-4ba6-a897-49192baa3614",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "43d83179-c24a-4f6d-9742-d6b23da2deb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0005d7-e275-4b4b-bbfb-c719e5787911",
        "cursor": {
          "ref": "e2a5187b-199a-4f47-8f4d-354e652d4b29",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2a3c2e8f-8893-4850-afcb-cef0371e83c4"
        },
        "item": {
          "id": "ce0005d7-e275-4b4b-bbfb-c719e5787911",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9a26b0bd-5a92-43e3-8d9d-29de449e9cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d41ebb-6600-4744-beca-9ab162186174",
        "cursor": {
          "ref": "591b67bd-ca61-4c4d-860d-2fc875847542",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0b043e71-9606-4aa0-ad7f-4310403faa5e"
        },
        "item": {
          "id": "f8d41ebb-6600-4744-beca-9ab162186174",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0679bba5-d40b-4897-8c0f-9e645111ef2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c99e149-3d78-499f-bafc-515fa0191655",
        "cursor": {
          "ref": "f1de032b-d95d-490c-895a-731676e49242",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "de4df6e8-a9b4-48cc-9317-49bda9f3e38b"
        },
        "item": {
          "id": "9c99e149-3d78-499f-bafc-515fa0191655",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "711daa4a-3527-4f06-ae53-7f00a52dea0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc41d87-f73f-43dc-989e-31943e35a73a",
        "cursor": {
          "ref": "95e20486-ab55-4482-baa8-0cfb2fb7d89b",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "45c4c4bd-dddc-4cb7-ae24-31e74491dfe4"
        },
        "item": {
          "id": "9fc41d87-f73f-43dc-989e-31943e35a73a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "258da48b-4169-46ce-a0fb-51c2db0c34a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d6d500-72f9-4838-a2e5-3c5d7cbe4566",
        "cursor": {
          "ref": "91112e0a-19f7-4a1a-b84b-c43e8c4e771c",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7657d0af-6dbe-45da-82c6-af00b34e8eba"
        },
        "item": {
          "id": "43d6d500-72f9-4838-a2e5-3c5d7cbe4566",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "31481b71-f998-4e9b-8d6d-b752d6b36ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ab2fbf-b514-4bd8-a082-a47423dcec05",
        "cursor": {
          "ref": "87358803-23a8-418d-8636-0a3d0f339fdd",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "520bd74e-f82b-4a37-a6df-058b3b457228"
        },
        "item": {
          "id": "17ab2fbf-b514-4bd8-a082-a47423dcec05",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "84513498-7149-4354-a030-97b9edbb8149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd908db3-b146-435b-94c1-38f78b18b9e3",
        "cursor": {
          "ref": "7354926a-9086-406a-9f47-4f45eeef7ef9",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "68ee2a33-b824-4c9c-8104-76058fb228a7"
        },
        "item": {
          "id": "fd908db3-b146-435b-94c1-38f78b18b9e3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9a326653-c044-429e-83f6-7d9af0837cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21707ffb-2dbc-46f0-a670-952f5717343e",
        "cursor": {
          "ref": "c1553d43-68a6-4a6d-88a8-1418dd26962c",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "631f0c22-44ac-465a-b842-81a76ba488fd"
        },
        "item": {
          "id": "21707ffb-2dbc-46f0-a670-952f5717343e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2aac0c41-c8a3-472b-b454-20a94eb4463a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a63ec5-773f-4764-8063-e3cae2dc9323",
        "cursor": {
          "ref": "88829319-d244-4cf7-b505-6432bc8861cb",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "52e12110-1c1d-45f3-85c9-e6c239463c86"
        },
        "item": {
          "id": "b9a63ec5-773f-4764-8063-e3cae2dc9323",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c813451d-7011-486c-9a42-e9223c58f558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4b3b21-6431-49b4-8619-48466d6b21b7",
        "cursor": {
          "ref": "715a52b8-a407-426c-92fe-3341b92dfcd1",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a90ccd62-402f-433f-b7c6-30866c262f51"
        },
        "item": {
          "id": "ac4b3b21-6431-49b4-8619-48466d6b21b7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2e5a87d7-6d4b-4f51-9c9b-ed81fb266710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c15eac2-f371-439a-87a0-cfe3368a050f",
        "cursor": {
          "ref": "67455bab-7319-419e-b984-5977954eaa62",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "01944185-1f18-4009-bbf5-05f1fc51651d"
        },
        "item": {
          "id": "5c15eac2-f371-439a-87a0-cfe3368a050f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0a54db41-a17a-446b-a276-935ba36f044a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b165299a-b97a-4539-88c8-6227fb680945",
        "cursor": {
          "ref": "6cd5004c-7753-4fab-addf-f39e9e3da834",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1e147603-a9ae-40fd-9521-d587c79a90eb"
        },
        "item": {
          "id": "b165299a-b97a-4539-88c8-6227fb680945",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "314aa15a-4db3-477e-9fdc-c1092b4bf22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ddbcf8-e908-4f4d-aed4-0d7beda58ece",
        "cursor": {
          "ref": "9c65d2ed-c00d-4eba-ba72-873e828b59d3",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f02b38c0-1ad7-40b3-99b5-0a2802b859f6"
        },
        "item": {
          "id": "24ddbcf8-e908-4f4d-aed4-0d7beda58ece",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "046afaeb-4b5e-4061-b777-96fce594e37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9328cd-04f1-45e0-9b08-face5c63e23f",
        "cursor": {
          "ref": "289612eb-8306-42f3-a270-a2338db9537e",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f3215c1a-a1c9-4461-8ac8-448f2144bfb8"
        },
        "item": {
          "id": "9a9328cd-04f1-45e0-9b08-face5c63e23f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7483be7a-eda6-4e2f-a5bf-28912f7debc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d1db5f-d585-4a23-9096-803fc7022e8a",
        "cursor": {
          "ref": "637ebedb-b649-4502-890a-dad3c5161159",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "990ac7a4-e6a2-4bf9-81fe-7e72e7393dac"
        },
        "item": {
          "id": "22d1db5f-d585-4a23-9096-803fc7022e8a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a845e5af-fde3-4f35-8360-be7ed64c7eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794281e1-a73c-4e2b-b2c6-ad5ead6022fd",
        "cursor": {
          "ref": "7659dc28-76d1-4214-8cbf-8bb2bcb14c11",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ce4c0acd-2079-4f3f-8526-88b0c7379dbe"
        },
        "item": {
          "id": "794281e1-a73c-4e2b-b2c6-ad5ead6022fd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "307ec720-da6c-474f-8fb6-1dd76acc7502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3feffa33-6558-46c8-b684-20e699b89934",
        "cursor": {
          "ref": "cbcfbbd9-d54d-4eb2-a757-0e4e472514a1",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1ee9fa1b-cb33-4046-91be-01ebceeba53a"
        },
        "item": {
          "id": "3feffa33-6558-46c8-b684-20e699b89934",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "75a86bdc-4a4f-4323-b6bd-9de8c3c624a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c8e9c3-2e1f-4d29-8588-a25b95ccd006",
        "cursor": {
          "ref": "17ce8bbe-13b2-47f9-a3da-cf0395163d89",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5714e055-42ac-46d3-bdfc-e5c6ed167aae"
        },
        "item": {
          "id": "43c8e9c3-2e1f-4d29-8588-a25b95ccd006",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0e04c5af-74c5-4df7-9d65-547f124385e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14534cb-7f15-4a0f-952c-9ffad7842b06",
        "cursor": {
          "ref": "e9ef753c-3842-4bd5-b80a-6f2478cd0678",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4ff8b0c7-d52c-4c9b-b7ce-3d8260b49e50"
        },
        "item": {
          "id": "e14534cb-7f15-4a0f-952c-9ffad7842b06",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b02bba1c-96d3-4a5a-ad30-36dcf83b8649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a598be62-a4b0-4e79-8bad-c2ec615edb5f",
        "cursor": {
          "ref": "7eb1fe4a-f9e9-4e04-8990-46eff2e24627",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "85c011bd-2f01-43a1-913e-aa70d536c14d"
        },
        "item": {
          "id": "a598be62-a4b0-4e79-8bad-c2ec615edb5f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f3420195-7923-41e5-ac8d-75b3424b73d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10230f11-be3c-4142-9fd5-b20aae7f986a",
        "cursor": {
          "ref": "420cd4cf-95f5-42cf-b38a-fa20187d4a82",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "71200516-504e-4491-a1d8-6099023a3716"
        },
        "item": {
          "id": "10230f11-be3c-4142-9fd5-b20aae7f986a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bd74daa8-6517-49bc-ac09-efe6ca1fa20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8168c1b-4b56-469d-8bf1-b6c2c640d1ac",
        "cursor": {
          "ref": "f3314796-3525-46d4-bbac-876d4e25e974",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "56465115-707b-4648-81a8-0d701592c37a"
        },
        "item": {
          "id": "d8168c1b-4b56-469d-8bf1-b6c2c640d1ac",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7170d4c7-bcad-49c4-8bfb-82c3d007ecbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda90812-b93e-4488-871e-4f58872e176b",
        "cursor": {
          "ref": "c8815cf6-3184-47b8-8847-ca6d1ee39781",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "870f2589-c762-4a89-a2ef-9fa958719fef"
        },
        "item": {
          "id": "bda90812-b93e-4488-871e-4f58872e176b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2cf1239e-6d4b-4b6d-8714-6905ace85f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71f9598-13f5-45a5-b69b-7f018786ca87",
        "cursor": {
          "ref": "d340f509-585c-44f1-8781-c3814ba2b335",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "94366da8-4316-4160-b658-87f39ff90c4a"
        },
        "item": {
          "id": "b71f9598-13f5-45a5-b69b-7f018786ca87",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "805df618-36ac-4248-b354-0730cd0ed01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e14f661-3686-4d52-8962-62c07421475e",
        "cursor": {
          "ref": "9cab08a3-0c43-4a62-a5a1-33698099e940",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9559f499-4273-4619-9095-eeb04f9206a5"
        },
        "item": {
          "id": "3e14f661-3686-4d52-8962-62c07421475e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cc22e306-84fa-4c08-9617-3558a44695c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8240f2-b39b-48ee-a01d-2c0b8c133490",
        "cursor": {
          "ref": "2485a583-3f37-40cf-942c-b4459c83b6c6",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a11e8111-1c0a-45ba-a872-db2a1580029d"
        },
        "item": {
          "id": "af8240f2-b39b-48ee-a01d-2c0b8c133490",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1643a832-7bf3-4f4e-9646-3ec9ccfe71e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ff1fa1-3203-4855-a337-25d814720fbd",
        "cursor": {
          "ref": "c2818c57-94a6-46f0-b6c6-765bde4d3135",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f0821a58-d8b7-40a9-93d5-5e72640a0166"
        },
        "item": {
          "id": "e3ff1fa1-3203-4855-a337-25d814720fbd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4800104f-1746-4688-86df-02488cb22bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc235b5d-6374-4edc-bcd4-d39bac37baf4",
        "cursor": {
          "ref": "9291b8c1-5dc7-43ce-b6ee-290bf1e3718f",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "70491ee1-df4c-40a0-9393-ad12fb9bc68a"
        },
        "item": {
          "id": "bc235b5d-6374-4edc-bcd4-d39bac37baf4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "56c18694-7818-44b1-afa6-df52f783d284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b7e25c-cef2-4393-a4ca-ce18ddcc138b",
        "cursor": {
          "ref": "745cbb46-4acc-488a-a6dc-88283e179afe",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "13d1b79f-40c5-4195-8c0a-7bdcd4f55ba3"
        },
        "item": {
          "id": "08b7e25c-cef2-4393-a4ca-ce18ddcc138b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7f65b641-10bc-4228-8176-887a22c694bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b367f00-6d0f-4452-8939-b85d381a35d8",
        "cursor": {
          "ref": "a8ba4774-2a39-4c50-b52c-4a12535133e4",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5bee9572-09bd-4595-a6ea-6ee44a9d24f3"
        },
        "item": {
          "id": "4b367f00-6d0f-4452-8939-b85d381a35d8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4b23653b-ae1b-420c-a758-b846d2d382b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4b2426-7810-406a-bfd9-383120a42054",
        "cursor": {
          "ref": "29190d23-1d96-45c1-a8fd-aaf50bec6a44",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "45295aa4-a25b-4480-9003-b00dfe00bb03"
        },
        "item": {
          "id": "fa4b2426-7810-406a-bfd9-383120a42054",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "82778b3d-32cd-4998-8d2d-b349752c66f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a025758-1f02-4c9a-a91d-1c86d831299a",
        "cursor": {
          "ref": "2c932ada-31c7-4f18-9197-b5b1118c3f99",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "47da3b5c-4699-4145-9df5-236d95650f79"
        },
        "item": {
          "id": "7a025758-1f02-4c9a-a91d-1c86d831299a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "524cdebc-69b7-494b-86fa-17a9170a7229",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7133e0-5786-4725-aa4d-1eebf59f7c6a",
        "cursor": {
          "ref": "95f9b13a-4d6b-4e80-ba57-9c6d10b26874",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "173f5cf7-efa9-4c2d-a4a5-9beede5d33ff"
        },
        "item": {
          "id": "1e7133e0-5786-4725-aa4d-1eebf59f7c6a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a7394d2c-9687-4e80-85e6-b09ae0b3d3e7",
          "status": "Created",
          "code": 201,
          "responseTime": 44,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbd603d-469d-4e4b-8ce2-d5c4838b8dea",
        "cursor": {
          "ref": "fbdc9e26-d454-4287-80e3-6874b35e2926",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "72a034dc-f5f9-41f5-9f34-b5ff880752d4"
        },
        "item": {
          "id": "9fbd603d-469d-4e4b-8ce2-d5c4838b8dea",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "219b8b68-5f4c-4cb0-a719-05d2a8bfe7a6",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "825d00fa-d1af-4914-8264-52b7e95505d1",
        "cursor": {
          "ref": "6587f786-feb5-4789-921d-439c2ee7c193",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6002b9e8-ccaf-4226-a312-c7aadd695e8f"
        },
        "item": {
          "id": "825d00fa-d1af-4914-8264-52b7e95505d1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ec9bc29f-12d8-41bc-9362-a4cfcd32d8a0",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d63447f-8ea4-4095-8814-b57b99fa138a",
        "cursor": {
          "ref": "07ddec5c-6ef6-4b98-8bd6-a247472359ec",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b1bba44e-4fd3-4e20-a4dd-f88b8f80f33a"
        },
        "item": {
          "id": "0d63447f-8ea4-4095-8814-b57b99fa138a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7ac6a82b-b24b-477a-a77d-7d214358fe12",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c1a83b-dcc3-4647-9a8d-672bc49f1b6f",
        "cursor": {
          "ref": "7ae7f432-14aa-4b81-9e31-82072ba0b022",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cab8cab3-4543-4df4-9e0c-199d93a44e50"
        },
        "item": {
          "id": "61c1a83b-dcc3-4647-9a8d-672bc49f1b6f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cbf2a6f3-4685-4978-b760-dfed3821f4e1",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d128e5f7-d50d-42da-8175-9cd55127d3f6",
        "cursor": {
          "ref": "89a71ee0-fe93-44b7-be42-1aa31e7d1380",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "67c47adb-c989-4b65-a4af-833c5c73cf47"
        },
        "item": {
          "id": "d128e5f7-d50d-42da-8175-9cd55127d3f6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6fea2ee9-469e-4386-83c9-f934b11ed6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8af96b-615b-4c03-95b1-93656b98bcd7",
        "cursor": {
          "ref": "9dbd1591-9c07-483c-803d-4cda188670e2",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0d70c116-f8d6-4702-8d57-5ebc7297a6d8"
        },
        "item": {
          "id": "8f8af96b-615b-4c03-95b1-93656b98bcd7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0b145adc-83ca-4508-bbde-3e54b00af598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaea7e70-cb82-451b-8cb8-dceb3938f20e",
        "cursor": {
          "ref": "62e9f342-8c30-4f06-a672-818c09b1c9d6",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "42622f38-e70f-4e47-8319-70ad8a8a7c12"
        },
        "item": {
          "id": "eaea7e70-cb82-451b-8cb8-dceb3938f20e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9a9d6104-32df-4bb1-b682-ae2c63f15d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30075a36-e4d9-4cc3-affc-f587917f3944",
        "cursor": {
          "ref": "578f1b14-d583-47c9-b39e-eb090fcee300",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "539d143e-f2fb-4576-9d6b-14aab24cace1"
        },
        "item": {
          "id": "30075a36-e4d9-4cc3-affc-f587917f3944",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5ec6f5c8-c084-4aa8-9dc2-840fa2908bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533cb63d-1107-44f8-8507-426f12d6b5dd",
        "cursor": {
          "ref": "e81bdc7d-3485-46e2-a85d-5c47fd7b15f1",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e2c3afb8-8078-44f4-8b86-28ec65fdb25c"
        },
        "item": {
          "id": "533cb63d-1107-44f8-8507-426f12d6b5dd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "85cef728-5b53-417c-8a45-aef4846ad29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8923d9-dbed-4626-a8dd-753900f7ff99",
        "cursor": {
          "ref": "9bc1b96a-e7f7-4ec9-8483-ca26080c852a",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c61d1d24-561f-4472-9cbd-6aeec9505610"
        },
        "item": {
          "id": "bf8923d9-dbed-4626-a8dd-753900f7ff99",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1ef45d34-28a4-4261-aee5-d87787f6eee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341f7d47-5578-4820-8894-18c714941dc7",
        "cursor": {
          "ref": "751ca2a8-ce8d-410c-9e30-08f2c0ac066c",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "313a7cb4-99ef-4365-907c-2cd137c925fe"
        },
        "item": {
          "id": "341f7d47-5578-4820-8894-18c714941dc7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e4565a00-ebca-4b58-8f76-1cc029e75b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a67f55-d0f3-4046-8aac-36c476479e85",
        "cursor": {
          "ref": "ebd89fd1-b3ab-437e-9ea8-836c0866cfd1",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3d8177b9-e4d3-4497-b62a-191067ed49f9"
        },
        "item": {
          "id": "88a67f55-d0f3-4046-8aac-36c476479e85",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ddefba30-4f2c-409d-8dca-80f7ddb6a80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5d7318-3451-4b1c-8313-510c6273507c",
        "cursor": {
          "ref": "231c9337-7ca7-450a-a44f-2d8187a99b9f",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bbd6c50f-307d-4b39-b493-db36b397d7ab"
        },
        "item": {
          "id": "9b5d7318-3451-4b1c-8313-510c6273507c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5314f522-584e-4e94-84f8-0b77e4c817da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bb11c2-62dc-4341-97fd-40edac9607d4",
        "cursor": {
          "ref": "3a38f1db-a3d4-4ff5-8967-d436888d719c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b2f7c01b-b2b4-4584-9dba-47b431cedf77"
        },
        "item": {
          "id": "d5bb11c2-62dc-4341-97fd-40edac9607d4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cd37cacf-a4a7-45ef-9393-f40c33b7e7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262b54a4-fb45-4095-80eb-203c005c60d2",
        "cursor": {
          "ref": "79b679f4-4d1b-45ed-9b87-d759261fc023",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "eb6f574f-8e78-496c-8395-c7ec047e3de3"
        },
        "item": {
          "id": "262b54a4-fb45-4095-80eb-203c005c60d2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4d032fc2-2854-4d00-9bb5-ceb6fa3db0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96609be-d861-435a-ab69-5570a3be7f5c",
        "cursor": {
          "ref": "25f73843-5aaf-4d1a-a77f-197680c414de",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a1fda616-f46e-4f6d-9d62-57cd944dbe93"
        },
        "item": {
          "id": "b96609be-d861-435a-ab69-5570a3be7f5c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "21368bb9-464a-4554-a9ce-f1739b3de883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffb1866-0faa-4ad2-83ad-de41d117c3ef",
        "cursor": {
          "ref": "9fb50aab-e8a0-4d22-976a-3c9ae020ab25",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2b38dda2-7d6c-4062-ac3f-d7c22744e613"
        },
        "item": {
          "id": "fffb1866-0faa-4ad2-83ad-de41d117c3ef",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "04e4a8a3-b4d8-47f0-a6de-e1844993f3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f0ccdf-37b9-4e4b-9417-631fa63096cc",
        "cursor": {
          "ref": "d0ea0c91-c704-4253-8fcf-4aedfa49fcf1",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "64ea2114-6587-4163-a44b-5d2ea70f9e17"
        },
        "item": {
          "id": "69f0ccdf-37b9-4e4b-9417-631fa63096cc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9158519c-6cfe-440c-9d12-53b685e8abdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6102b185-f0fd-41c0-b33b-8f27237b5d99",
        "cursor": {
          "ref": "00d54a86-f580-4a54-8505-f8a389fe1ee8",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9dc5367c-dd6d-49b2-b70a-01f82c9ccf17"
        },
        "item": {
          "id": "6102b185-f0fd-41c0-b33b-8f27237b5d99",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0c808588-8380-40f1-b095-24a8ca5b6268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d595e689-df34-4d5d-a6dd-75d429a828ba",
        "cursor": {
          "ref": "6f58c24b-a80c-4ac6-931e-6029a462afa1",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "732593b8-7b45-41a6-89e8-cafbeae04d41"
        },
        "item": {
          "id": "d595e689-df34-4d5d-a6dd-75d429a828ba",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a228a68a-f221-4e02-8fb2-dd9b8d04a7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e89b782-5b88-475a-bb8f-8b508a97f96d",
        "cursor": {
          "ref": "c5de1238-7584-4098-99e3-3899c19f156b",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "aee289f7-333b-4ce9-a1be-7fb9ba871d29"
        },
        "item": {
          "id": "3e89b782-5b88-475a-bb8f-8b508a97f96d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8531bd2f-73f0-4b56-98cb-74c3117a6074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a3b86b-312f-4046-b690-4d906c2a095e",
        "cursor": {
          "ref": "1c5821a2-d91b-44ad-acf8-b065bf96dcc9",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f5674d92-b32e-44e4-9c0b-c3ea9f3fbe8e"
        },
        "item": {
          "id": "d4a3b86b-312f-4046-b690-4d906c2a095e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dc3f56e6-0cc9-4d06-9077-f739ff9bc03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7904afcb-f7a8-4152-9b6f-f4c7a8c7e7c6",
        "cursor": {
          "ref": "0b0e8b12-f49a-4dd3-b366-8c7d436d6d5b",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4a9d9e9a-acb1-403d-a734-06d9b5c0e253"
        },
        "item": {
          "id": "7904afcb-f7a8-4152-9b6f-f4c7a8c7e7c6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3a8a0418-2043-48ab-9096-d51ae130b214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4133f440-96e8-4b62-ae73-2ab9722d6b48",
        "cursor": {
          "ref": "dbf4aedc-7246-4360-8fb3-ac1ccad24f5a",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "33f94390-399f-4806-b974-4a5ef547b4ce"
        },
        "item": {
          "id": "4133f440-96e8-4b62-ae73-2ab9722d6b48",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3cf35c59-3bf0-4a51-a87e-6b9ed49f74d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45954209-eec1-4165-844c-ac5110f4f5b8",
        "cursor": {
          "ref": "b887a553-7918-47cc-8cf2-c9eb59e847ba",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c24d69b7-3bc8-4af4-be4a-e09ed7ff9393"
        },
        "item": {
          "id": "45954209-eec1-4165-844c-ac5110f4f5b8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1d488195-9ca7-49bd-9cc7-c6816f3a5b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b2705f-352b-4f07-a3aa-c6a290484264",
        "cursor": {
          "ref": "1d26fb71-302a-4705-8a52-f60b18e16db9",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e2133239-bd69-4b72-8c82-03983aeb7b52"
        },
        "item": {
          "id": "15b2705f-352b-4f07-a3aa-c6a290484264",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2ac0d5d1-785b-4616-bb9e-c97b3d5052eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7072119-52fe-4570-9c52-82615486b7b7",
        "cursor": {
          "ref": "40c62b8b-7653-495d-9c78-43a572a29f96",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cda83b2f-354e-44da-a588-452a1dac95ec"
        },
        "item": {
          "id": "c7072119-52fe-4570-9c52-82615486b7b7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d41c43b2-e230-4bc2-8f93-b5dc6289dacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff7b0c8-0ec1-4a4e-b981-3219af73f34b",
        "cursor": {
          "ref": "508be8bb-afa8-45e1-9293-48b3cf1d664a",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "91cff94b-ed06-4628-9178-27fb68fde174"
        },
        "item": {
          "id": "7ff7b0c8-0ec1-4a4e-b981-3219af73f34b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6cc86f51-adc2-4d3f-aa19-3f9f4cfbf79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f60ba0c-5682-4a68-a36f-e575e2bf0cbd",
        "cursor": {
          "ref": "dfd16e6d-c31c-49de-b8d2-bd7064b53161",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3edf514e-3b69-476c-a74b-639ef0621b04"
        },
        "item": {
          "id": "0f60ba0c-5682-4a68-a36f-e575e2bf0cbd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3c407418-b486-428e-b688-0e1e9c1bde2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036a9cd3-4fc8-4c06-83a4-9dea0328304b",
        "cursor": {
          "ref": "03bf5396-4bf1-4c3c-a90a-7705e890791b",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b0344c53-d43f-4dce-b21d-b14b0e32cecb"
        },
        "item": {
          "id": "036a9cd3-4fc8-4c06-83a4-9dea0328304b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "71ab7557-18ec-4aad-8271-eed8dcbe7340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03401fe7-b3a3-4135-9f3c-767127b6e0cc",
        "cursor": {
          "ref": "c4a450b4-1703-452c-b5fd-0c6e58a606f5",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "785c84c3-bfd1-4b4f-9090-66ba5367a409"
        },
        "item": {
          "id": "03401fe7-b3a3-4135-9f3c-767127b6e0cc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "19d69147-55bb-4aaa-b902-935b53676e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1062e784-0180-4dbe-91b9-3c794f7272d5",
        "cursor": {
          "ref": "8a506273-4cbf-4624-b9d1-ddfd92b3a827",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "32c8a8c0-2bb3-4b7a-adf9-875261f352af"
        },
        "item": {
          "id": "1062e784-0180-4dbe-91b9-3c794f7272d5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "534c422c-f87c-4e80-87a4-372e1997f5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1a8cc6-fc59-4e5f-b094-84b362ccbd84",
        "cursor": {
          "ref": "fd5d9afb-a2a0-4dd7-8770-fafd52b12fc2",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "25af7b30-f0f9-4cc8-a61d-ca52106dbffd"
        },
        "item": {
          "id": "0c1a8cc6-fc59-4e5f-b094-84b362ccbd84",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4167f288-a6a0-4b0b-8448-8d57e5b051d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83afdf43-d202-4b3a-b593-d91b9018affb",
        "cursor": {
          "ref": "d07d089d-bbc8-49ad-8b88-adbf9c03aa90",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d65d8621-c0f7-43bc-895a-9569af5d01c2"
        },
        "item": {
          "id": "83afdf43-d202-4b3a-b593-d91b9018affb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3dc504b5-b605-4ba6-aae4-ada0b9051c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b514e94c-a806-482c-893a-7e6ffc78300f",
        "cursor": {
          "ref": "b4b97a3f-7326-4d1d-af83-9b6cbdc4df4b",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5f960aee-3346-4ab5-9d7c-4e5bc8d5bdf6"
        },
        "item": {
          "id": "b514e94c-a806-482c-893a-7e6ffc78300f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dc4cca84-ae1c-4bba-84de-cca622eafe90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3899395d-efa1-46a6-9ba2-913cde42e47a",
        "cursor": {
          "ref": "5056b35c-e9b3-46a8-8069-18a99b0f488b",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e154f68d-817d-4b66-aa57-ded166e7de54"
        },
        "item": {
          "id": "3899395d-efa1-46a6-9ba2-913cde42e47a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2ba58bbb-9d32-4909-ad9d-ad618328c70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75050eb9-bccf-4322-82cf-9cd2babf9e8a",
        "cursor": {
          "ref": "5e50eb5b-344e-44b3-9745-cc0a14571cf2",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "beedec34-ad4f-43b8-ab6f-131b7f305be8"
        },
        "item": {
          "id": "75050eb9-bccf-4322-82cf-9cd2babf9e8a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6e90b932-e751-4e00-a370-621b396656c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78438b2-573e-4ccc-b7b3-6dbf9146910d",
        "cursor": {
          "ref": "521e50dc-b1cc-4a80-aec0-c303a7f12c8f",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "da06b4e9-8002-4ba6-962b-669ea9867947"
        },
        "item": {
          "id": "b78438b2-573e-4ccc-b7b3-6dbf9146910d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "badb0de4-f5cc-4955-a7bc-50763b6db037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3224b7-d498-49e2-907e-6ce6db18b365",
        "cursor": {
          "ref": "e584388e-ec7e-4cee-8880-388f1b3af6d7",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a79ef31e-22c2-43bb-86d3-9c91e50b46d7"
        },
        "item": {
          "id": "6d3224b7-d498-49e2-907e-6ce6db18b365",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "03fa5b94-d56c-4a11-9c58-8a6a97d377db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30c2c41-89f8-4b3e-a8b4-b4cffa66ad6c",
        "cursor": {
          "ref": "4291c6a9-28a4-41a8-bb73-46d5d3641684",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cacec7c5-d492-42d4-a80d-e92f4d6bf2ba"
        },
        "item": {
          "id": "b30c2c41-89f8-4b3e-a8b4-b4cffa66ad6c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f82d5e74-1c07-4bb0-bffa-8d9eca733142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f915b01f-7f25-4753-802c-f08ebd816ab1",
        "cursor": {
          "ref": "4513be3f-0b22-45db-8c7a-661cedbf7102",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ccd78834-84f0-459e-8b68-79cd6ba46f85"
        },
        "item": {
          "id": "f915b01f-7f25-4753-802c-f08ebd816ab1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "da5fb5e4-07df-4311-bb5d-08c9a3d6d384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32815f9e-692d-4a75-bfc0-89f3842275e1",
        "cursor": {
          "ref": "17d3e20a-9806-469d-9d5b-70fc47fd2532",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "23707f69-918e-472e-a39c-32b145fb2d87"
        },
        "item": {
          "id": "32815f9e-692d-4a75-bfc0-89f3842275e1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a200d47c-5ef4-4b72-8ff4-06343e3b5128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f138c4-8b58-4104-9d84-25908111c075",
        "cursor": {
          "ref": "8fbb0993-5fea-49ae-9b90-422f47f993b2",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5c28ad63-1ff7-4cda-b472-d4dea0dd650a"
        },
        "item": {
          "id": "a4f138c4-8b58-4104-9d84-25908111c075",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "671eebc5-0dca-4b9f-8a11-848ba7037358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3744d9-54e2-491d-b4a4-f99c120e309c",
        "cursor": {
          "ref": "f94b386b-2ad4-4260-9c5d-185cb6796119",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "dd17a4b1-ca77-4182-9768-c7219cf95c5b"
        },
        "item": {
          "id": "6f3744d9-54e2-491d-b4a4-f99c120e309c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6f9e7785-142d-4928-9b58-ee6af918f94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3f1f1a-53a8-4e79-be67-42aab223d6a0",
        "cursor": {
          "ref": "d7dbd21f-2775-4e01-9a9a-153f73537f23",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b63e9898-662d-4ff6-b5bc-687023a38abb"
        },
        "item": {
          "id": "dd3f1f1a-53a8-4e79-be67-42aab223d6a0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6b5a44c4-9c37-41d9-b746-95d900ffedd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1c44b1-55c1-4367-ad99-09cd127f4a68",
        "cursor": {
          "ref": "5fc17b48-3019-4fd1-adc8-7da9b4e2cdc8",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b1fba208-9100-454f-84e4-e48bfc99a501"
        },
        "item": {
          "id": "6b1c44b1-55c1-4367-ad99-09cd127f4a68",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8d329957-310d-4c05-bd73-f7b4f5c8aa63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63599eba-6e05-40a6-9727-b4e5f4296509",
        "cursor": {
          "ref": "0d48d908-5936-4a4f-a409-4fed2210960b",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "435bf94d-2a90-434a-8547-6b9a4e3a5676"
        },
        "item": {
          "id": "63599eba-6e05-40a6-9727-b4e5f4296509",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "814df759-91e7-4a52-b6c8-49fd54df7363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3beeb69-bd97-4d24-8a10-5c113230ef1c",
        "cursor": {
          "ref": "8c17378f-302a-4993-8a45-d78cd5a543ee",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2f61544b-8ccd-4690-9941-45ff9f8bb97c"
        },
        "item": {
          "id": "e3beeb69-bd97-4d24-8a10-5c113230ef1c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "716c8d46-f274-497a-bc39-d32d987a07a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f9b74e-3558-4a66-a12c-6c325d56c377",
        "cursor": {
          "ref": "1628881f-3549-4e6d-96f5-981d5152505b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8fe8a264-19e0-4d93-aecd-a41425bd1eb7"
        },
        "item": {
          "id": "f6f9b74e-3558-4a66-a12c-6c325d56c377",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f2dc252d-f9ee-46f1-bf16-dbe3c35d8524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b907ef14-1f7c-4c3c-9119-61f8ab5657c9",
        "cursor": {
          "ref": "1eefb57b-8878-4bce-903e-4385bf40b6d6",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d4bee796-201a-4104-ad32-741ae51d1172"
        },
        "item": {
          "id": "b907ef14-1f7c-4c3c-9119-61f8ab5657c9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5cd64151-6c46-4e90-99ff-9d3bdfceb6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fef462-b9a5-400e-ad6f-75315c064aee",
        "cursor": {
          "ref": "8a72421a-62f2-415d-ad7f-37020f0b7ff5",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a85953b0-13ac-4ced-9608-90eb7c86084b"
        },
        "item": {
          "id": "71fef462-b9a5-400e-ad6f-75315c064aee",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0157b595-2a2f-4e2e-b705-13cc8a029b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99dcc61-f569-4eac-8bbf-c76e14a98916",
        "cursor": {
          "ref": "70f2c834-4e95-4847-9fef-798e5fca557e",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b87958a1-bdc9-4251-8168-c585a1cd30b4"
        },
        "item": {
          "id": "b99dcc61-f569-4eac-8bbf-c76e14a98916",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0bb85ea4-d90d-4766-a0e0-aa3e15080ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1af5d8-6fa1-4f31-a190-12a5f5b1e205",
        "cursor": {
          "ref": "fbd8cfb9-600f-4e04-ae1b-d3c559fc3300",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d2e2d604-7e4d-4963-a55a-a9a5f9ffc3f2"
        },
        "item": {
          "id": "eb1af5d8-6fa1-4f31-a190-12a5f5b1e205",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c65447a2-1f2a-4701-9835-d65520b04668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67011c2-2878-4338-aa7e-f0f00714479b",
        "cursor": {
          "ref": "db2c493c-3900-41bf-8e23-4bf6f097a4dd",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a4928ab7-2973-464b-9494-6eea3cdd3ad1"
        },
        "item": {
          "id": "c67011c2-2878-4338-aa7e-f0f00714479b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8ff756fd-b7c5-4d54-8008-8c12022cc64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb543c5-f8bf-4e65-9742-a0cfce9af282",
        "cursor": {
          "ref": "e060f3c3-258c-4035-87ce-15e8d24e25ff",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b4fdbb1a-fb76-4e42-8444-dff056e469e1"
        },
        "item": {
          "id": "7bb543c5-f8bf-4e65-9742-a0cfce9af282",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "eb3deba3-9894-4d9b-acd0-b8a077c21bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dab968-605a-49d9-8b9b-5c59b5f50619",
        "cursor": {
          "ref": "0bdacda4-a1b3-4f49-882c-2d25fa2ca369",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e2cbe07d-3faa-45ab-95f1-93657b8c226c"
        },
        "item": {
          "id": "c3dab968-605a-49d9-8b9b-5c59b5f50619",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cab71200-d9ed-4248-a815-a66d5296b484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba40deb-76dc-4e44-9a3e-f8a15555a0b5",
        "cursor": {
          "ref": "734cdd9a-0d92-4904-a362-394f368e717a",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6c224224-fd72-4495-9323-934f8f81929c"
        },
        "item": {
          "id": "6ba40deb-76dc-4e44-9a3e-f8a15555a0b5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "861eaa1f-2df7-4bdd-9672-0b2059ddd6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936f875f-0b6f-4d1c-97fb-cec8b798668f",
        "cursor": {
          "ref": "f31696fb-9a4a-4424-ac3d-29d5c03676d9",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "48cfd3e9-be46-4dfa-bf30-c84af091bd49"
        },
        "item": {
          "id": "936f875f-0b6f-4d1c-97fb-cec8b798668f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "77893f57-4ef8-4f43-8663-37c7bf68d57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2f5932-e737-403a-99a3-67f69f519d43",
        "cursor": {
          "ref": "438dfb3c-1eeb-4318-a613-3c5c30ae8f6b",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "04a5ab00-da66-4ff7-a24f-8e1fc80d1f67"
        },
        "item": {
          "id": "6f2f5932-e737-403a-99a3-67f69f519d43",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0ded01ea-5478-4d0c-870b-62016f88204e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c401e2a-a211-46fc-8410-761301288a1d",
        "cursor": {
          "ref": "aa14a0ff-4849-4f89-b96b-1d54f27c02a4",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "57934934-b7c0-40a5-b4ba-fe5f53485350"
        },
        "item": {
          "id": "7c401e2a-a211-46fc-8410-761301288a1d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d3711c4c-3c30-47c5-a016-0af8187352bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841ca632-4eb3-4aed-8353-c09c0c9d86f8",
        "cursor": {
          "ref": "cff097e8-d46d-4d3b-954a-1c43a07b2c0f",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "38b0e785-9edb-4eed-b0eb-fc8d6b8591e3"
        },
        "item": {
          "id": "841ca632-4eb3-4aed-8353-c09c0c9d86f8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cc002179-c27b-492c-91f3-310b9beb9c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ae727b-da4a-41e0-94cf-c15dc73cf1ed",
        "cursor": {
          "ref": "486d5389-1cce-4af6-8818-2d4ccd9339dd",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "85517ece-a600-4701-802e-d1a0a2e45ac5"
        },
        "item": {
          "id": "e6ae727b-da4a-41e0-94cf-c15dc73cf1ed",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d8269cab-0d9e-4a5e-a17c-72fad5c2381c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1606b8-39d1-4b60-89b1-ff5889cfea01",
        "cursor": {
          "ref": "9ad5b87c-9254-4ac7-b057-4e61edaf19a7",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5af76d89-7ec7-4d01-a56b-7deaf59fb1d7"
        },
        "item": {
          "id": "3e1606b8-39d1-4b60-89b1-ff5889cfea01",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "68dd8ba5-b655-40d7-85a0-1d2ec1b5ca4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62892b65-561c-41cf-a0ea-85d0ffb06f97",
        "cursor": {
          "ref": "516cd9fa-0d3b-4af6-901d-f6915cebfdbc",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b8b20ae2-d4aa-448f-9206-f71913510be6"
        },
        "item": {
          "id": "62892b65-561c-41cf-a0ea-85d0ffb06f97",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3db66439-faef-4513-8f02-02bcf5269e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bc0b36-fe00-46e1-a2bf-b4140a4a35aa",
        "cursor": {
          "ref": "c934f13f-466f-4480-887a-73694be6469e",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c8770849-aab2-40b2-a1b5-e54470a9105b"
        },
        "item": {
          "id": "10bc0b36-fe00-46e1-a2bf-b4140a4a35aa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ccfc3394-80b2-4eb4-b3e9-83f6623547e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca227d7-73ed-4184-bdaa-77244fb53eaf",
        "cursor": {
          "ref": "842b7eeb-0553-46b9-85d8-3f5150f65f1d",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2cd7c674-edef-4642-b1e5-ad14f6301962"
        },
        "item": {
          "id": "0ca227d7-73ed-4184-bdaa-77244fb53eaf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7dc5f247-1805-473b-83d5-0b854fbfd064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98467a1c-fded-4cec-a716-7a100e679ecc",
        "cursor": {
          "ref": "29ab35c2-b508-4a9b-8bad-b2cdf07f06cb",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "58bcb949-9cd1-4360-92c4-d65df0300edc"
        },
        "item": {
          "id": "98467a1c-fded-4cec-a716-7a100e679ecc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b70fbe9e-f36b-4012-b845-a1b90e336dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6865b49b-835f-438c-95b5-163e70807808",
        "cursor": {
          "ref": "9c3b179e-ce75-4f00-b0db-53b13cbe52de",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1bb15f45-31a7-4560-80f2-8fb3ad19cd3b"
        },
        "item": {
          "id": "6865b49b-835f-438c-95b5-163e70807808",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3bf754d3-9b9e-4f26-be23-970cc46ab940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7b4a76-7d9b-4ec5-b2cd-67c13a152d38",
        "cursor": {
          "ref": "c066a6e5-1c7a-484c-9273-cd21e49b7826",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bd1aebeb-1da0-4b05-a6c8-bf3a7b87987f"
        },
        "item": {
          "id": "2c7b4a76-7d9b-4ec5-b2cd-67c13a152d38",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b178b48e-adf2-42a9-b019-468ce34261aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05fdb23-4e8c-4190-ba20-5c0415ddec8f",
        "cursor": {
          "ref": "90f5026e-c317-4688-b284-307ab1e3963e",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a2fa4dac-6013-4eba-90cd-cd12c4a4b192"
        },
        "item": {
          "id": "f05fdb23-4e8c-4190-ba20-5c0415ddec8f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e20af239-b002-4ef7-8239-5a62d1eabdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f3f23c-d244-4a96-8ce7-dab41115c464",
        "cursor": {
          "ref": "ceedfa2b-d5d9-485f-b1e0-c3e295236f8b",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d174c416-fa9e-4ede-a4f4-6e771ac549cd"
        },
        "item": {
          "id": "86f3f23c-d244-4a96-8ce7-dab41115c464",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "64a00f56-dcd4-49fd-bf38-51f6f5b79156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfaeb58-7afb-49e1-be0c-ec68d126cf1d",
        "cursor": {
          "ref": "3bf64ab7-3f0d-48fc-b238-66c48d688398",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "57d928ae-b9ae-4f17-a546-9320b5f3f0a9"
        },
        "item": {
          "id": "4dfaeb58-7afb-49e1-be0c-ec68d126cf1d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e7f6a31e-c210-46b0-93a3-4f670158c56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc834552-7f7c-41fb-82af-dd7f7204d5a3",
        "cursor": {
          "ref": "bb138ee2-c70c-471e-894f-782ff4006548",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e37119f5-7193-4159-b549-51eec8f75200"
        },
        "item": {
          "id": "dc834552-7f7c-41fb-82af-dd7f7204d5a3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "bb92f8d2-b88a-4b2b-b79b-8100c422ffb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1267bf30-33fa-41d8-b1bc-347418f6090e",
        "cursor": {
          "ref": "b185ebcd-b1e5-46c2-88b1-b46a782fed2c",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fe97ed16-e56e-4be2-8002-f57c363577e2"
        },
        "item": {
          "id": "1267bf30-33fa-41d8-b1bc-347418f6090e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d11a573a-8aa0-48c6-b7d2-a41f2300e9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b2d93e-079d-4c91-95ac-e9cc6f29c9d9",
        "cursor": {
          "ref": "38ed42e7-3d25-45fc-9e76-042955925066",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3ae3399f-f46e-411f-8413-bf5e6f2c2dc0"
        },
        "item": {
          "id": "e7b2d93e-079d-4c91-95ac-e9cc6f29c9d9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "57923c43-089f-4a11-ba76-712886307274",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8533d143-4f7c-46a9-9fba-8d9fbabf7b47",
        "cursor": {
          "ref": "9e22faf8-ac08-47e1-877c-554faabd369d",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "237b8ac1-87b9-4bd2-92dd-2691fee609f4"
        },
        "item": {
          "id": "8533d143-4f7c-46a9-9fba-8d9fbabf7b47",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d681a236-d786-4c5a-bf62-a025c803de9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256f3b64-7cc5-4a03-9b06-691897317b2b",
        "cursor": {
          "ref": "cd88de4a-09ff-4868-b089-755d66109b4a",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "00806dcd-f997-4abb-9dc6-e67d8acfb17c"
        },
        "item": {
          "id": "256f3b64-7cc5-4a03-9b06-691897317b2b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8339ab25-26ae-4d6b-812e-8191324bb2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abea8d0b-dcc3-49c6-a80e-12f07b22737f",
        "cursor": {
          "ref": "b61fc5c1-61b0-4013-8776-8ab5b11fc681",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0b6c9869-d77c-4e82-9092-0a53fd6c588d"
        },
        "item": {
          "id": "abea8d0b-dcc3-49c6-a80e-12f07b22737f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "44ce8bdc-f562-4506-923d-4efa6ea5d25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7370fb83-f274-45c3-9aed-c103a571ee72",
        "cursor": {
          "ref": "3a69813b-50f2-4bfc-96fd-b75759d296f9",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9ac21bc1-7fb2-4d25-b7d3-c84bf01c7599"
        },
        "item": {
          "id": "7370fb83-f274-45c3-9aed-c103a571ee72",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0c58e92e-d8c6-473e-93fd-841401832ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d480e957-d9b1-451e-b965-efb3ac25c64b",
        "cursor": {
          "ref": "3d53e281-fc14-4fb7-ac4a-249992ed0338",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3ed6efd6-fbc8-414c-8a6e-129013967b50"
        },
        "item": {
          "id": "d480e957-d9b1-451e-b965-efb3ac25c64b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "14c2c1f9-f7ca-48c4-91e2-94ac0f5ef3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf491233-06d2-468c-a2a8-e9640baf4347",
        "cursor": {
          "ref": "da0b5b49-7b94-41dc-8030-911acd57317c",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ed813954-d585-4e87-ac5c-f07d69be9ded"
        },
        "item": {
          "id": "cf491233-06d2-468c-a2a8-e9640baf4347",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5805d48f-c5a5-4b95-a879-95e256e7b2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605b83fa-8e2b-4aa3-8960-1f1e10144759",
        "cursor": {
          "ref": "cb8b985a-dd03-4895-a9d4-1bc642266166",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "528cc261-a2af-438a-ad78-57afce97e598"
        },
        "item": {
          "id": "605b83fa-8e2b-4aa3-8960-1f1e10144759",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fe67ea38-0519-4dd0-b892-246bee550ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f0d169-2ea1-4454-a59e-8e2a22298c73",
        "cursor": {
          "ref": "bb2c4891-76b9-4303-8f53-4dbca1eb1f51",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bb53494c-473a-4127-a9e4-a613fe6c8b43"
        },
        "item": {
          "id": "e2f0d169-2ea1-4454-a59e-8e2a22298c73",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ed75cafc-ac95-473b-b78a-33cfce7e1443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813f65da-c60c-4359-8852-9c4af2ddc321",
        "cursor": {
          "ref": "75d440df-657f-4b8d-8d1d-547353e4cb30",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bdaccca4-34f6-4a6b-a16b-f5b1de14ca30"
        },
        "item": {
          "id": "813f65da-c60c-4359-8852-9c4af2ddc321",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e9f522b0-882f-4782-a141-5096b381816a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81623cd-7184-4813-a370-9440e9ee93b4",
        "cursor": {
          "ref": "d47d4219-67fe-4a21-9859-cb8adad3f29b",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a2f3bb70-0b33-4281-828e-24b370b073f4"
        },
        "item": {
          "id": "b81623cd-7184-4813-a370-9440e9ee93b4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4f41c16d-0fb5-4c88-b34b-f8eb237f3f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716e5e30-8a63-4076-acca-f8699e51e14c",
        "cursor": {
          "ref": "d1e5a3d0-b4a6-4576-a57b-f0945ad9ccd9",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "02a280d0-b670-4279-8fdc-6673dd5086e4"
        },
        "item": {
          "id": "716e5e30-8a63-4076-acca-f8699e51e14c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5ccea7c2-5514-42fa-9720-81966c7f21e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b88064-9ae8-4a90-89d8-7d9fdf4adab7",
        "cursor": {
          "ref": "11d04282-1531-4017-a1b7-721f58aa8174",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "24b97346-1e51-4b1f-810f-511e1eb51933"
        },
        "item": {
          "id": "e5b88064-9ae8-4a90-89d8-7d9fdf4adab7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "14a24356-4531-4355-9fb0-3c8c39a3bc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a3de81-61c6-41f2-b551-c9b96600611f",
        "cursor": {
          "ref": "30ae186c-c9d0-4bfa-a967-75a186037c35",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7acde22f-d7dd-4304-9b16-e750f0884e31"
        },
        "item": {
          "id": "91a3de81-61c6-41f2-b551-c9b96600611f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3cc5219d-9d39-437b-8d0e-f7e5550a3314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bd5960-a986-4005-ad8e-62fe02804f75",
        "cursor": {
          "ref": "7286eb63-6dbc-46d6-85b7-d68b577d0b70",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "098b6086-7656-4055-a65f-5582c80ac109"
        },
        "item": {
          "id": "48bd5960-a986-4005-ad8e-62fe02804f75",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5559aae7-1277-4d08-8628-8ce8a9b50574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1783d4-9471-43ec-80b0-940d27aa5156",
        "cursor": {
          "ref": "8ab82b49-4fef-4f5f-b743-ad8d0cb089f2",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7a94fb66-21de-4cff-b248-e424ebd58c43"
        },
        "item": {
          "id": "2d1783d4-9471-43ec-80b0-940d27aa5156",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "39359218-584c-4b84-ab14-8e03cf22d92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fbe4aa-66b1-474b-8261-e9606d34cabc",
        "cursor": {
          "ref": "f0b0a98d-ed1a-48fd-a014-a0661eda17da",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4c68abd2-8647-407c-8b4a-a250de826446"
        },
        "item": {
          "id": "f5fbe4aa-66b1-474b-8261-e9606d34cabc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4487afb4-64fc-4bd5-a24f-cab47f495f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a158e51-2c30-4ab3-b7a2-7f06985c7736",
        "cursor": {
          "ref": "2fc093e7-1369-488b-ba59-384376a9a071",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "07485487-9dc9-4809-b5dd-e0311ca50caa"
        },
        "item": {
          "id": "4a158e51-2c30-4ab3-b7a2-7f06985c7736",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8d3eef9f-64ce-4c02-983b-96f590afa921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fb3578-1fed-4362-ab7a-6a5b51472c38",
        "cursor": {
          "ref": "6e79d5e5-9581-457e-9138-1d98de7996ad",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9eed8f66-104b-477c-8b7e-2feacfac6e88"
        },
        "item": {
          "id": "13fb3578-1fed-4362-ab7a-6a5b51472c38",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "36107957-aa25-4c77-949b-a708731180df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d5cf9f-5f2f-461e-94a9-c94501092cc9",
        "cursor": {
          "ref": "2daff23f-f337-4e7a-ac03-10553c033c47",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f712e126-3c46-4a4e-ba52-00ac4c7db1b7"
        },
        "item": {
          "id": "77d5cf9f-5f2f-461e-94a9-c94501092cc9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6c51f89a-7497-4104-911b-cdf57305495b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112e25cb-1073-4755-8834-bad3cd0843a7",
        "cursor": {
          "ref": "bba0a392-cdaf-45bc-9283-4085053b87a3",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0897aaf1-3bd7-4e5b-afca-55f509495254"
        },
        "item": {
          "id": "112e25cb-1073-4755-8834-bad3cd0843a7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "71a9bd1c-ebaf-4318-ad39-6c1e27715b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49de2e00-3873-43e2-b301-7f51d162cbcb",
        "cursor": {
          "ref": "be236612-5761-4262-ab5c-cfa0c329e418",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "29a3f8b0-771b-4c21-bf3d-15098ced7411"
        },
        "item": {
          "id": "49de2e00-3873-43e2-b301-7f51d162cbcb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c4099ac7-a300-4e72-81ec-b75b9bd168c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2220f7af-9ce6-4373-a454-1972985909dc",
        "cursor": {
          "ref": "c4deac1f-d3de-4d23-9665-c5e3ad02571c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cad0a962-5a68-4221-b4d2-f75a41b2b751"
        },
        "item": {
          "id": "2220f7af-9ce6-4373-a454-1972985909dc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "900108e2-453b-4d1c-a563-b2d4f4124fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2540e102-15ce-4e49-995b-b444c98d57ef",
        "cursor": {
          "ref": "4795d875-f093-499a-94ac-3ad60fca3e48",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8aabcc75-b0f0-4255-8c8f-48032e3943a2"
        },
        "item": {
          "id": "2540e102-15ce-4e49-995b-b444c98d57ef",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4bc663a9-6534-41f3-b734-77c1f13f1f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37c60b5-9c37-40b1-ab22-fa57ad463f52",
        "cursor": {
          "ref": "4c22995a-7bac-4f9d-bbbf-d4754fed3f9f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e3be6fe4-f1d2-486c-878f-65c87090f435"
        },
        "item": {
          "id": "e37c60b5-9c37-40b1-ab22-fa57ad463f52",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0cb15fd0-4fb8-4fd7-9a61-e62c0873b973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9af38e-9d45-448e-bf83-cf0bb08e3afa",
        "cursor": {
          "ref": "1a58264d-6e61-4fe5-a08f-d1a39f30d6a2",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "702e5c6b-9464-4582-9d93-be39d3f4af88"
        },
        "item": {
          "id": "5e9af38e-9d45-448e-bf83-cf0bb08e3afa",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "30cd8a97-7558-49fd-a262-a980edab5bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9580e5-fb87-46f6-a8e6-cce9c718153e",
        "cursor": {
          "ref": "8bfb6f65-3725-423f-9f4f-70e254a29aaf",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "09511ccb-c89c-4b93-b861-0dce6c29f76d"
        },
        "item": {
          "id": "5f9580e5-fb87-46f6-a8e6-cce9c718153e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "143f6a36-76cc-483f-8db1-f298ca02f191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc603b8-6235-42b1-b126-49c41aade16f",
        "cursor": {
          "ref": "1e7f2b26-41b4-442e-8a61-d31cd9ad783c",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ae253615-73f4-4bd4-8f6e-098ead9e6022"
        },
        "item": {
          "id": "7dc603b8-6235-42b1-b126-49c41aade16f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7337b90b-5a12-4725-b811-d5b58eeee260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d0cfd0-73f5-4980-ab34-7d0f453a1503",
        "cursor": {
          "ref": "17acf04c-64b9-48b0-bbfa-27d70eb1ad38",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b4ad991a-36af-4ad1-b164-77b002e1c99e"
        },
        "item": {
          "id": "35d0cfd0-73f5-4980-ab34-7d0f453a1503",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "20da4882-877e-4dbe-8ff0-90ed91db1aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002902c5-15ce-40ab-9e67-84e4412ca999",
        "cursor": {
          "ref": "3b92de33-31aa-4d05-95de-c6be980afc96",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1c6a0f9c-10d3-4a3c-88e6-b1be59d9d24c"
        },
        "item": {
          "id": "002902c5-15ce-40ab-9e67-84e4412ca999",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a597eff4-47fb-4ece-8e0c-157af0c323b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a70b088-8bbf-4a54-9512-71c851884009",
        "cursor": {
          "ref": "c2ae597d-bd1b-40d5-94d9-e9362f5c1bfa",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "823c6a01-9ed5-4ca0-8f0d-3e5b07a70d7e"
        },
        "item": {
          "id": "4a70b088-8bbf-4a54-9512-71c851884009",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3f79b6f4-f846-4d14-a0bb-ae96b6c32b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d433dff9-a903-4a85-b75b-c87f9284bbb0",
        "cursor": {
          "ref": "8bf0883b-7f49-49a6-b89a-3977ef9a89fc",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bc43a1f4-0a68-4844-a530-99686f178040"
        },
        "item": {
          "id": "d433dff9-a903-4a85-b75b-c87f9284bbb0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "85998b44-9122-43cc-96f3-58cac6754937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af356d41-d3b7-4dde-a677-9382bee88e28",
        "cursor": {
          "ref": "95c7b22f-b010-4f0b-b414-a15ad7d731a4",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5e256cc1-4282-4df1-a259-1bb7dd30895d"
        },
        "item": {
          "id": "af356d41-d3b7-4dde-a677-9382bee88e28",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "aeaf8cb5-866e-44b0-944d-e7a7f838bedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b157b8f-0c7e-4b32-a923-20ea475e1d56",
        "cursor": {
          "ref": "a734317a-774c-41bf-ba36-c22cf1162c6d",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "97539a6d-f453-4504-a447-e6697f1f08b8"
        },
        "item": {
          "id": "3b157b8f-0c7e-4b32-a923-20ea475e1d56",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1292bef0-6ade-4f67-a328-03abc9406eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df55732-194d-44ba-9257-cc1b287ab9d7",
        "cursor": {
          "ref": "cf66d32b-37b1-4c2c-bd3c-e43ecf6da096",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e24daad0-7c70-4778-a9e5-7f93d527c757"
        },
        "item": {
          "id": "5df55732-194d-44ba-9257-cc1b287ab9d7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "adad7245-7393-444f-8b06-196fc088d834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6832917e-2889-45f7-9170-67bbadd20842",
        "cursor": {
          "ref": "2d25b6c7-a5d4-4d66-ba1c-4072e2214465",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0ec1b4e1-7e4d-4c07-88f4-4976e890ab69"
        },
        "item": {
          "id": "6832917e-2889-45f7-9170-67bbadd20842",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "812e65bd-0029-4017-b6ff-f5f74d8bd5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dbd102-3d16-4243-bb9d-976629758647",
        "cursor": {
          "ref": "98b7a9bb-761e-40a2-9aa1-89f4f111de27",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "49cc92da-8bc7-4905-a743-d89049f0aeb6"
        },
        "item": {
          "id": "92dbd102-3d16-4243-bb9d-976629758647",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d0fa5afe-d524-417e-937d-baf2eb15f975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37aace2-ccc7-417a-bac7-9aa1ff7343ff",
        "cursor": {
          "ref": "48298d46-380b-4c72-a3fe-147ead76d5c8",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e0895f76-2ae4-47c1-851b-7be279312058"
        },
        "item": {
          "id": "c37aace2-ccc7-417a-bac7-9aa1ff7343ff",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0528683d-9264-4568-af19-2e08c973fd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b306a70-a502-42fe-97d2-3df30e128869",
        "cursor": {
          "ref": "ce249fec-226b-4520-a1c8-a08a624884ee",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9ab81527-0208-429e-a13f-46bc5d4f48e3"
        },
        "item": {
          "id": "8b306a70-a502-42fe-97d2-3df30e128869",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bee9ac2b-bb2c-4572-9052-0aeef4ea75f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c0d68b-89d3-4fd7-b70f-a69b1d39c65e",
        "cursor": {
          "ref": "0d55913a-4edd-4f9a-89d9-9b764e21c768",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b7b22543-854c-42ba-a1d7-f154ac907516"
        },
        "item": {
          "id": "77c0d68b-89d3-4fd7-b70f-a69b1d39c65e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "02380576-d70a-416d-badb-9f486a048903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9766593b-63c1-44bb-b167-b2d089d17374",
        "cursor": {
          "ref": "0860ee57-f993-495e-a1b6-a3a86f0db595",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cf049bfa-7719-4256-a899-dd2dc17340d7"
        },
        "item": {
          "id": "9766593b-63c1-44bb-b167-b2d089d17374",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "65181536-6653-4168-8b4d-b68eb6d13721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1e51a7-03b4-456a-9aac-faf837c96151",
        "cursor": {
          "ref": "ae2dd659-8b9d-4894-9da2-053531bf1d78",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "51653b62-6ed6-4dba-b1da-6e57a45d8fd3"
        },
        "item": {
          "id": "9c1e51a7-03b4-456a-9aac-faf837c96151",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4d92bf6b-b4e2-4777-bd3c-3247ae10b2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d902408-bcf5-4d5c-8c5e-ca3652583614",
        "cursor": {
          "ref": "d47d1be4-c3a8-451b-ba00-4bf7b8dbc0c0",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "642c8ecf-3215-4bbc-9b10-d1ec5a82a91d"
        },
        "item": {
          "id": "2d902408-bcf5-4d5c-8c5e-ca3652583614",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b681dff9-3896-470c-a721-f580d44a8ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46022530-e6d1-47dc-bd0d-705c943608d5",
        "cursor": {
          "ref": "c600ee5f-9418-4929-ba0c-79ef1ad0da51",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4837adf9-9f9e-4d3f-a17c-0fe0de463edf"
        },
        "item": {
          "id": "46022530-e6d1-47dc-bd0d-705c943608d5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c4b75ed3-2efb-41b4-88a5-e65517421255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f070397-00ba-4706-938a-0e5c55e062b6",
        "cursor": {
          "ref": "38470e34-c995-4f25-ac3f-84e53c016aee",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "eec6f05d-aabf-4e6a-9d26-3ef9048ec384"
        },
        "item": {
          "id": "9f070397-00ba-4706-938a-0e5c55e062b6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ffa8a5b3-00e7-465c-b3fd-312b72a0acca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f8693f-9cdd-4e9e-aa99-dd22196f72c8",
        "cursor": {
          "ref": "1b13031f-2a7b-42ef-8dea-c66a3c0ad726",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8125a11d-2577-4ede-933d-71f8c6c17af0"
        },
        "item": {
          "id": "43f8693f-9cdd-4e9e-aa99-dd22196f72c8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ebe0ec45-a617-4b1b-ab1b-ab638925730e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0e5b13-6cac-4521-94c3-69d54be7e0a2",
        "cursor": {
          "ref": "021b5780-e406-4648-87dc-7009b26fbd7d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f301dd3a-545c-450e-a7bb-bb833b22bf6f"
        },
        "item": {
          "id": "ce0e5b13-6cac-4521-94c3-69d54be7e0a2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5317e557-15e4-46bf-bb38-17363464f3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5699fa6-ae92-4965-993a-a59750fc4dfc",
        "cursor": {
          "ref": "b9eb320d-0981-48e2-b969-df3271caf182",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b922dcd2-93c5-470d-8c52-41a1809fc100"
        },
        "item": {
          "id": "e5699fa6-ae92-4965-993a-a59750fc4dfc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fb28ea66-bc2c-4e75-904c-c2d2344b4fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e46e069-a87b-4426-a403-44d7a791a1a4",
        "cursor": {
          "ref": "9c4b0204-2bb0-417f-9fba-437685869dc4",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7360a33d-2eca-44d3-9204-7e5696fcd8b9"
        },
        "item": {
          "id": "2e46e069-a87b-4426-a403-44d7a791a1a4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a0693416-f57e-4910-9fff-588993135e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cf33b3-375d-43ad-8926-4d4dc055e06f",
        "cursor": {
          "ref": "8bf42f98-e1e6-4854-9ac0-0adb10608828",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f2576b82-46fe-4584-8a5e-99cafc0a6b49"
        },
        "item": {
          "id": "b5cf33b3-375d-43ad-8926-4d4dc055e06f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f43c5012-8729-4275-bfe9-e04ba33d67b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564e37d2-bd70-4006-a429-92a9645155b4",
        "cursor": {
          "ref": "21b2db81-bde9-48df-99e0-db1f0133725e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "058d9817-0a0c-456b-a1ef-97cfa2378a70"
        },
        "item": {
          "id": "564e37d2-bd70-4006-a429-92a9645155b4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d2c35a28-6641-44dc-b1de-165d0c8d836f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd63e20b-4d24-4ea2-a65d-56c86c3ae129",
        "cursor": {
          "ref": "d50650f3-221e-4848-be9f-1f0b4e76e77d",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "56fa0067-758a-48e0-9049-e5c24bde7388"
        },
        "item": {
          "id": "bd63e20b-4d24-4ea2-a65d-56c86c3ae129",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f4860f5e-d6e9-4d35-b007-efafc1b2833e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4c38b8-01a9-4582-8eea-bc88d6c29a6c",
        "cursor": {
          "ref": "6e4e6990-1f13-472f-a382-6a36ddacbeb5",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "23dfb01b-6f4d-491e-bbde-d59edace7d0f"
        },
        "item": {
          "id": "bd4c38b8-01a9-4582-8eea-bc88d6c29a6c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "42aa161c-429c-430d-9d71-d63ea9b66aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b89c3b-63b8-49a8-9698-c6b6ccfe5e16",
        "cursor": {
          "ref": "8761ef6b-77a5-4c7e-9394-9b8172b3a2a4",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3369080e-eb5a-43c4-b7f4-e6723f0cdb8d"
        },
        "item": {
          "id": "63b89c3b-63b8-49a8-9698-c6b6ccfe5e16",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a2ff585b-cd8c-49df-a015-299c1223bcb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4c3efa-cef3-494b-9603-c9de9dea8983",
        "cursor": {
          "ref": "da3dd5b5-a65b-452e-8575-38e0b1ea318b",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "05b71629-809b-420f-9a16-289d1ee0dd73"
        },
        "item": {
          "id": "db4c3efa-cef3-494b-9603-c9de9dea8983",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "16cfc948-858e-4fd6-9a45-f15ad86160ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db95bac0-16ff-4531-8ec9-1978fa2bf647",
        "cursor": {
          "ref": "284adcfb-977d-43de-b23f-09a33ecd0943",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1fad30d5-0afa-44ab-85d4-8203e3d529fe"
        },
        "item": {
          "id": "db95bac0-16ff-4531-8ec9-1978fa2bf647",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a84a5bdf-4e51-4b0f-be2a-0336a6f3d98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a85316-b05d-43f9-9bd4-288242177513",
        "cursor": {
          "ref": "8a5cf214-3b2a-4c37-9430-ca47dcd97d77",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1817bf91-9309-4b7e-90f9-099bce9e3bca"
        },
        "item": {
          "id": "a9a85316-b05d-43f9-9bd4-288242177513",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "28b9d561-22c4-4a12-b074-d37c10b5ab7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcba58c5-a344-4372-a5dd-14c0d1b5fa9c",
        "cursor": {
          "ref": "6dda7fa7-76cd-48ff-8aee-60fe74629202",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b56b7550-95ba-4ed6-8367-e36c8ab8eb46"
        },
        "item": {
          "id": "dcba58c5-a344-4372-a5dd-14c0d1b5fa9c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "47fbca35-4d9f-46d4-a5e9-da5098709693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc671cc-e28d-4dc2-9188-8feee1e7b91c",
        "cursor": {
          "ref": "f6551c88-9d1b-403b-a8e7-e6e7ac73105b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6e34b353-6b8f-4e7e-9a04-f57f27541832"
        },
        "item": {
          "id": "fdc671cc-e28d-4dc2-9188-8feee1e7b91c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d8e660c0-b61b-4e58-b1a7-35ceabf186ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26815f86-59b1-4a6a-9d50-8ebbda144af1",
        "cursor": {
          "ref": "0fd023db-f43f-477e-b7a5-aa062d7035a8",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7cd0a7cf-4763-4bec-b892-7117af139ca5"
        },
        "item": {
          "id": "26815f86-59b1-4a6a-9d50-8ebbda144af1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "56eacafa-00d8-4e93-8f3a-d5eacf955dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2e3b1c-5c09-4e16-bc1b-3b291f3ee87a",
        "cursor": {
          "ref": "d46e53c4-f9e1-481e-9251-766221dcd01e",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e977e7a5-593c-4b6f-a075-e304cec85378"
        },
        "item": {
          "id": "8d2e3b1c-5c09-4e16-bc1b-3b291f3ee87a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b02e5109-9e9e-46fd-b063-4ee27bfaf10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7e9206-2dc2-4e69-b12d-517d78ccf76d",
        "cursor": {
          "ref": "92244e5c-1fe5-4695-a6ac-e548ebcc3941",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bab91c53-0b09-47ec-a41e-61656677a2a9"
        },
        "item": {
          "id": "6f7e9206-2dc2-4e69-b12d-517d78ccf76d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "930761df-ca71-4d55-8e72-d40332e1c186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81049a35-cd11-4f1d-8f44-e54ac581e6fe",
        "cursor": {
          "ref": "dee5b041-a204-48c3-8865-1b12e732b815",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0a4b9ef4-146f-4d2d-8b4a-1e481560e801"
        },
        "item": {
          "id": "81049a35-cd11-4f1d-8f44-e54ac581e6fe",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9cb35a14-d16a-4d85-bb21-070272239052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b6ab43-a94a-4d34-8917-e97ebfb67b2c",
        "cursor": {
          "ref": "206815d9-1ccb-4ce2-8ae7-696feee428cd",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "be73a7c3-8822-4fb7-920d-50a1e609cef5"
        },
        "item": {
          "id": "c2b6ab43-a94a-4d34-8917-e97ebfb67b2c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f69cbc11-db91-46d2-a068-8403dd866624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083f2dd8-5822-401f-9eb9-29801696ba1b",
        "cursor": {
          "ref": "53f2b555-6622-4acf-b93a-47ee35777175",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "237b1ccd-269c-486e-9d1e-914698a2e439"
        },
        "item": {
          "id": "083f2dd8-5822-401f-9eb9-29801696ba1b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b9529414-0dfb-44b2-b743-aec43bb7996f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb784f0b-0207-4a56-8d3d-23a90a5eaa5f",
        "cursor": {
          "ref": "0e8667e7-b8ac-45ce-9d23-6aa36159ebad",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ccdb605a-167d-4895-a346-88a62be968de"
        },
        "item": {
          "id": "bb784f0b-0207-4a56-8d3d-23a90a5eaa5f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b97feeac-1129-4e38-8e99-009e33b40d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a278b224-fe9b-4679-bd94-baa17c0203ab",
        "cursor": {
          "ref": "f1b0acaf-50dc-4ad3-83d1-be18aa08df32",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5c734fdb-7317-43b4-be1a-b6e130c72d2c"
        },
        "item": {
          "id": "a278b224-fe9b-4679-bd94-baa17c0203ab",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ebe2386c-5cf7-450e-af27-2746c6288acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9eccac0-fe3f-428e-a57b-a3b034643139",
        "cursor": {
          "ref": "021d5b1f-535e-40b4-a4fb-a0fc00f4ed0b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "451b1a03-bafc-4e69-8932-57ed7b497f95"
        },
        "item": {
          "id": "e9eccac0-fe3f-428e-a57b-a3b034643139",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d8f1b8ac-a282-4227-8ee6-a25ed585bf43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359d44cc-0928-4da3-b169-a3c7da9b62fa",
        "cursor": {
          "ref": "8e915633-f2b1-422b-8d34-7ba41fccf471",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8c0545e7-0527-47ca-a990-dfb9453e94ab"
        },
        "item": {
          "id": "359d44cc-0928-4da3-b169-a3c7da9b62fa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4edd9b7c-c2ce-41b2-8ef8-9ae2cd35ba50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce7bba1-649b-4bdc-b413-b7e0d3650443",
        "cursor": {
          "ref": "2df7edd4-ffa1-4b46-b83e-12c08a481228",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e353112d-ddc4-49b0-8ae7-710b1eff0dd4"
        },
        "item": {
          "id": "7ce7bba1-649b-4bdc-b413-b7e0d3650443",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1c215ed7-ea38-442f-91c2-0bd3f19b9ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adeaafc7-e2f4-42a2-bd58-907384f6de25",
        "cursor": {
          "ref": "700f661a-6f41-47f8-a9e7-395101be1625",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "719e934a-81f6-4449-a4d6-7503603e8baa"
        },
        "item": {
          "id": "adeaafc7-e2f4-42a2-bd58-907384f6de25",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "77e9fb6f-783b-422d-8e46-581354ab7e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfc31c0-6541-4578-a6bc-8742500c3ecb",
        "cursor": {
          "ref": "e5127c3a-8c4a-457e-bfc7-4485c283bb8a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "97420af9-11a3-4ecb-a2aa-ce3840e8d431"
        },
        "item": {
          "id": "bdfc31c0-6541-4578-a6bc-8742500c3ecb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a3440148-fbab-44ed-8e2b-b1bd6c61b878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f575af-1872-4f23-8b89-a20ffe56fb38",
        "cursor": {
          "ref": "72f1b42f-6720-46f9-b113-833a7b61bee0",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f1604a0d-7ec3-4dfa-aeeb-5176b34e968f"
        },
        "item": {
          "id": "23f575af-1872-4f23-8b89-a20ffe56fb38",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "efa3e783-c404-4ed1-be66-e070f59b4c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d75297c-e6c1-4f60-93f8-4a536dde2947",
        "cursor": {
          "ref": "b9a3beb0-14d6-4b73-a885-37cd74ce0c13",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "252886a9-e57f-4048-aa7f-064b87fd2a2e"
        },
        "item": {
          "id": "1d75297c-e6c1-4f60-93f8-4a536dde2947",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ed230385-a18f-4cd4-b3ed-437b24492a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27aa8d23-ffd2-4eb5-887f-c3d4eaccba4b",
        "cursor": {
          "ref": "70716134-1655-4420-b653-065dddf668d4",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a24228a3-a6b6-4a0b-8ef9-f1b70cb0352f"
        },
        "item": {
          "id": "27aa8d23-ffd2-4eb5-887f-c3d4eaccba4b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1ce95fd7-c3cf-48ec-b39d-afa0a631706a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a10818-e851-4f8d-b356-dc76b15e60b0",
        "cursor": {
          "ref": "cdbf0bc7-dada-4777-94cb-e1269c667f30",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "61930e2c-a3fb-4050-9ee4-b8348f868b6d"
        },
        "item": {
          "id": "39a10818-e851-4f8d-b356-dc76b15e60b0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d1c77678-972a-4780-bf73-ef712d0ad902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e813b94b-d9b0-4489-bac2-36b23d831934",
        "cursor": {
          "ref": "bc5d1298-8e89-4407-8c09-6c5ac29fe8fd",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8f66bc69-8cd3-4b91-9454-5407c6075c5c"
        },
        "item": {
          "id": "e813b94b-d9b0-4489-bac2-36b23d831934",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8be0ad59-fb0e-4581-be19-3aeaa932000d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3793ef79-f420-426d-9780-005a3adbd10c",
        "cursor": {
          "ref": "a47b4a3e-c6dd-4111-a43c-603539c76e5d",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ba1de502-c7d8-4ec5-85cd-b70ed75846e4"
        },
        "item": {
          "id": "3793ef79-f420-426d-9780-005a3adbd10c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c7d8dec9-41f7-4c0b-88be-ffe19bb1ac24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634501f8-8c2e-4571-a348-46aa61680c59",
        "cursor": {
          "ref": "eb116c96-2c5b-41e5-adbd-0cccce66c86a",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ba9e88a2-a3bd-4a28-8d75-b722e4a70a45"
        },
        "item": {
          "id": "634501f8-8c2e-4571-a348-46aa61680c59",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6d29ad76-9b98-4f1e-a7c8-fab7345045b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4420bf23-d7ec-428b-9d10-7b6b965e3a40",
        "cursor": {
          "ref": "4c26e552-9681-4582-a854-7f87b725bdf0",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "30e02bb4-d0c3-4f8a-90d3-69aa9d7d1c1f"
        },
        "item": {
          "id": "4420bf23-d7ec-428b-9d10-7b6b965e3a40",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1ca7eb89-fe79-4e41-a6b4-9acbab6eb566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733f2d71-bfc4-480f-a512-bc12983f57f5",
        "cursor": {
          "ref": "b7d83a2e-cdc7-48ee-a0ef-9c859d80732d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9794a9e7-5fbb-4f53-806b-4c9494554a11"
        },
        "item": {
          "id": "733f2d71-bfc4-480f-a512-bc12983f57f5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3aa1e76b-ca1d-45c7-a9c0-ed7c4221e56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1075407b-17c6-457c-ae94-1cf474cae041",
        "cursor": {
          "ref": "d073b626-513e-4e19-9b51-45e0d8c889cb",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c96b545f-46a7-4ab4-bb45-ffb9079ea47b"
        },
        "item": {
          "id": "1075407b-17c6-457c-ae94-1cf474cae041",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6f0f4537-e575-4d2d-8578-57c2b98ca19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0751b94-abda-4034-ba2d-63dcf977e349",
        "cursor": {
          "ref": "e0288ec7-1530-421a-acfb-4a3c1240b75c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "83f7adda-6f37-43cc-be5b-f4fa116289f7"
        },
        "item": {
          "id": "f0751b94-abda-4034-ba2d-63dcf977e349",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7df9db85-2c77-4a43-900a-3a97c5e40aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b637bd58-0c2a-474c-8d7b-8d4d702131f0",
        "cursor": {
          "ref": "983bcd6f-024d-442b-8713-f1966338f081",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "434ab41b-2207-405f-be03-bf1db4bcb859"
        },
        "item": {
          "id": "b637bd58-0c2a-474c-8d7b-8d4d702131f0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f44a52e6-077c-4cc0-b249-26d37740f34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2987b5ff-9911-4ffc-b5f8-63cd911219db",
        "cursor": {
          "ref": "12ada35d-9f13-4565-a5f9-1954bb49bb0d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "07dc9395-c529-4c7c-800d-b86041be5e55"
        },
        "item": {
          "id": "2987b5ff-9911-4ffc-b5f8-63cd911219db",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b2d37d44-5058-47e2-bd9d-a5269d68a54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed95faf-b485-4b4e-8180-8c86c1ee2f81",
        "cursor": {
          "ref": "1f3f4e69-5e72-430d-8816-ba0e7f5fea68",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7d22a9fb-b225-4c95-8b6a-d4e759716f31"
        },
        "item": {
          "id": "4ed95faf-b485-4b4e-8180-8c86c1ee2f81",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b6a75048-51a0-4902-be82-32faa94cff56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a827a2b3-54a7-405d-a846-4d89e64faa00",
        "cursor": {
          "ref": "d0faaac5-0983-4515-8342-56b1f9c74cc5",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e4aae9de-c969-42f4-ab29-fc97bbf7f939"
        },
        "item": {
          "id": "a827a2b3-54a7-405d-a846-4d89e64faa00",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2a0d8e4e-3717-4bc5-b3c5-c0f4fab43802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56fb9a5-2079-4564-b93c-5c7be02690c9",
        "cursor": {
          "ref": "68f6dd02-6513-422b-8da6-16b05fd09db7",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "dc721c59-e544-427e-8229-09286af30a3b"
        },
        "item": {
          "id": "f56fb9a5-2079-4564-b93c-5c7be02690c9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7db97c89-4b89-43c8-a5fd-cecb5b066263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338b472f-9070-49b5-ba99-2c154cae0810",
        "cursor": {
          "ref": "ba1bb978-ea33-4031-8205-12ce106d8b22",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ffd898eb-980e-45eb-ba29-4c0cc8785ad6"
        },
        "item": {
          "id": "338b472f-9070-49b5-ba99-2c154cae0810",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c2819a92-1210-4672-bc97-ed0aeaa6dd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d31f45-42bd-4ff3-8111-9d9fce2b1abf",
        "cursor": {
          "ref": "7ca7757c-af19-4a57-855e-23a9544622ea",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "625fad87-dae4-42f9-9c7a-172ac5bcebcd"
        },
        "item": {
          "id": "84d31f45-42bd-4ff3-8111-9d9fce2b1abf",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7cd1ebd8-bc81-4651-a385-df52e5147005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c783c6e-c1b7-4a53-8362-5f03aa5afdfc",
        "cursor": {
          "ref": "53a7a6d7-b146-4e16-82ce-9f610b278f08",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fada87f9-568d-4963-ae3c-442198f5c457"
        },
        "item": {
          "id": "9c783c6e-c1b7-4a53-8362-5f03aa5afdfc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "170cbcba-1157-49a8-aada-1a8977cd14f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e21ec6-0971-43be-81e5-56f1ce5e8d20",
        "cursor": {
          "ref": "81b1d1e9-a7ee-47fb-922b-e2d1e8e6d2d8",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0a0cec34-8618-4c2e-8bbb-6cd645846acc"
        },
        "item": {
          "id": "76e21ec6-0971-43be-81e5-56f1ce5e8d20",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "44d824c6-0545-4165-9ba0-907eefe60c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91aeea0-505a-4a22-b940-5a0f6a033475",
        "cursor": {
          "ref": "4e10f2c4-c7c2-4fec-ab74-b0995ff9ee8c",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "380665f5-1fef-4bd7-8220-e42e96d09a90"
        },
        "item": {
          "id": "f91aeea0-505a-4a22-b940-5a0f6a033475",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ddc364a6-1de4-45a2-8989-e445c950341f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fcb846-d522-444d-beff-45b40c24f720",
        "cursor": {
          "ref": "d14cd307-1890-4fe6-b53a-018f952ced04",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "94e84dcf-05bc-4a60-84d0-b6aece7d92d8"
        },
        "item": {
          "id": "32fcb846-d522-444d-beff-45b40c24f720",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8e93ae7e-f560-44ca-95cc-b4d44796e16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1117af-1d64-4349-82e7-2578d8b68518",
        "cursor": {
          "ref": "0f060a84-c957-4dbb-8ca6-649edc79f15f",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "28f4112b-1675-4dc1-b20c-83c8fc1f3508"
        },
        "item": {
          "id": "6d1117af-1d64-4349-82e7-2578d8b68518",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d8662cce-3810-4da1-a746-ad4dbfa471b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e9ccc7-1549-44e7-9342-e32507d57d72",
        "cursor": {
          "ref": "35d812c5-fa69-4f78-a50f-57439e57d022",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9b8ce030-a2f8-4ffd-8699-edc49fdf079c"
        },
        "item": {
          "id": "e3e9ccc7-1549-44e7-9342-e32507d57d72",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2e5fd040-d368-4f40-b79a-76324ac119e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9978e30f-1a68-4d5a-94a2-25d784e84efc",
        "cursor": {
          "ref": "6de0022c-d4be-474e-8348-8995be5cbaac",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "54131395-bfe9-45a7-a40a-7a880a17159a"
        },
        "item": {
          "id": "9978e30f-1a68-4d5a-94a2-25d784e84efc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f5f3a475-398f-442b-846c-157b50005b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79467e6-d788-4d65-b5cf-3e8fcdc71da5",
        "cursor": {
          "ref": "deac5694-ce36-481a-ad17-fe968f0e02f2",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "fceb8146-4d1a-4e4f-a520-6ec718c00735"
        },
        "item": {
          "id": "a79467e6-d788-4d65-b5cf-3e8fcdc71da5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6dbe3ddf-1635-497c-8de2-ada310457c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3908a9a-279e-4e71-8a09-b5fd7d5b29ad",
        "cursor": {
          "ref": "f70fd1a6-0998-47eb-864e-21bb999f209e",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "022958cd-9955-4d1f-b940-72f73af94e84"
        },
        "item": {
          "id": "c3908a9a-279e-4e71-8a09-b5fd7d5b29ad",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "258f758e-457a-42bf-868c-2a5b2585ecf2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b9ba7e-0f60-45af-823e-38a6f8c1ffc4",
        "cursor": {
          "ref": "6e433e65-5b03-44a1-a993-188b21f0a7bf",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1e0dc375-bed6-4927-a1f4-d612118b780b"
        },
        "item": {
          "id": "f7b9ba7e-0f60-45af-823e-38a6f8c1ffc4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "35627ebf-7f84-4851-b581-e062924c05f0",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fb962a-0fd4-415e-9584-ab0970c53bbb",
        "cursor": {
          "ref": "55acd907-ea90-4ce8-9a30-3643d8f75247",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "dfd7e2b7-1eef-43bf-a3e3-1f8ab723c5f3"
        },
        "item": {
          "id": "c3fb962a-0fd4-415e-9584-ab0970c53bbb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2d5a12bc-0254-4d3e-80e7-737de5bed850",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd28ad9b-5f91-40f8-bd01-11d848eba7b9",
        "cursor": {
          "ref": "8d11f2c4-11be-4b69-9734-4ac77b585c66",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9b6aaf7b-fc9f-4031-ab52-1a06d6116a1a"
        },
        "item": {
          "id": "fd28ad9b-5f91-40f8-bd01-11d848eba7b9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3cdb2032-654a-4b77-9be4-6bab1bc33b12",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05c7178-abac-4f91-9355-84053a0cea89",
        "cursor": {
          "ref": "716f6a3e-d9a0-45e3-bab5-ad6bed8e44cf",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b85a4f75-7994-4956-85dd-542fc3a9fd24"
        },
        "item": {
          "id": "b05c7178-abac-4f91-9355-84053a0cea89",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "57fa01c9-cdf5-4a01-8953-e39899c57d6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05c7178-abac-4f91-9355-84053a0cea89",
        "cursor": {
          "ref": "716f6a3e-d9a0-45e3-bab5-ad6bed8e44cf",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b85a4f75-7994-4956-85dd-542fc3a9fd24"
        },
        "item": {
          "id": "b05c7178-abac-4f91-9355-84053a0cea89",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "57fa01c9-cdf5-4a01-8953-e39899c57d6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5ef5f3-4bb3-468a-9d3f-05771910c81c",
        "cursor": {
          "ref": "e83a5d29-38d6-479f-9b80-3407040b7255",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c04bde53-e5f4-40fe-a200-95a68af26f58"
        },
        "item": {
          "id": "dd5ef5f3-4bb3-468a-9d3f-05771910c81c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7f71ddbe-9b7d-4c4b-8cad-39444f462d39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80377dc4-ea9d-4daf-8588-f6bb285eac68",
        "cursor": {
          "ref": "ca1fc415-78aa-406b-a51b-7f4f2455f9db",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ecdc7091-6ac8-4012-bc55-9cf7764bc5f7"
        },
        "item": {
          "id": "80377dc4-ea9d-4daf-8588-f6bb285eac68",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "20e6bd2c-8bf1-42a4-8d02-017160854e94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}