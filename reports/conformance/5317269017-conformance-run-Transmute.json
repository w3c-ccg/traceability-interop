{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d03b4358-77cf-4798-ae67-6a3ff6d9e790",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ab41a887-bf58-4760-8815-f9a7ea22cb9f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5f72500f-e259-4138-b229-2c8bd3355379",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "90fe0536-475f-4cb2-a739-14bc18a0c635"
                }
              }
            ]
          },
          {
            "id": "bbaddb9e-27ed-4b3b-bae5-fc0c2b0bc462",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "755011e0-5e89-446e-9f35-13c972ec2db5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1279dce8-466c-4a72-9b34-f8f7dd73f806"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e9d0ee96-3b3b-48c9-8d90-653be9a059f1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a5c1bdb4-747e-4df4-aa5f-1d4d75878aa3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "26ea6104-30e3-4279-b79a-6d840634b208",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01a51ea0-4f00-4330-9084-8212fb327a87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e63c76a-9dbe-447e-a382-302f5fb370de"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b04c8d8-894e-46f7-9927-57022616fe29",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42505d25-242f-4529-8893-bca015ff6efc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ce171411-b1a6-4726-8afd-6126886d4d30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79ba2bcc-921f-45d2-abe1-39731c28dd84"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16783ef2-8f2e-42aa-9dc2-d717f2a926d5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f5655ddd-a151-4417-9494-e59c9d6b2f7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4797b06-a2e9-491a-b8a3-9cdf76927128",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "508d73f5-0cfe-4ae3-afa6-6efb92e007f3"
            }
          }
        ]
      },
      {
        "id": "7e0f7bcc-70c3-4d95-bef8-4690edd767b5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c42b19ec-117a-4e10-aaf9-24cfc1696946",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7686ade-9c89-4873-86de-9e11b8c5f904",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d2c48e19-d69e-4233-b83d-3a22b0d4eea4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5966d8ce-600d-4b86-a96d-d728bfbbdca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dae46cc6-6021-4ffd-9737-4da9f1cf2e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d423c443-9c56-4214-ad4e-3df3fb385589",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c90d97-5af3-4d43-9657-64620812b481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4139b516-0907-4975-8e65-411551e43b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b57e37-71bd-4613-a1d9-1ca161581765",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f9a2b8-00c3-4866-b37b-28f0e9f0f7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62098dbc-59cb-49b6-857c-579eaf241d9d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3f6cc7fc-b96b-4ad8-ae06-7ce318e8ba06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9874ff8e-63ce-40c7-9143-3fdaef38c85a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15dc018-bb3e-4d12-89a9-2df09389a10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a0df366-e846-45d1-8b73-7d54eeeabeae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff035404-2179-49dd-b6c0-558e8f64875a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abaab98-4b0f-4b71-a349-dd39866f4561"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bbf2d757-91ad-4c5a-a506-9aba0806f2cc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bc68c34e-fad4-4134-8d6c-6ecb50d1e366",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca66746a-f605-4722-be2c-21aa2364cef8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "867ea8fd-2531-4882-a84d-d403a9d5ba51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4fd0765-9cbe-48c2-a01f-50126bdad130",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1725de4f-436a-44e8-9b15-ced0fa2b8b45"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fb53ee7-be81-460b-b3e4-df9e821e7fb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ede95de2-26f7-4d44-a4a4-26cf0ae3df5f"
            }
          }
        ]
      },
      {
        "id": "4ec15663-aa6c-44b3-add4-7a937e7d4634",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b2fe62be-afa7-4e6e-9ba2-6213c450d1f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c01dd4ce-ca64-4d8e-ae51-1bc1d7f71632",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5a250e13-c3ce-4145-9068-94fe317d2a1a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314a3282-6b46-4715-949b-41ab55c6c8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2d68d0-f01d-42f8-b144-d928d9ccd37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2798e8-1e0f-44aa-8caf-568c5d69c42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ee402b9-9377-48bf-a7eb-49a83281a6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c343e9-5347-4a72-a515-9f30111cfa44",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415eb919-9c9b-42ee-9306-c32d861ccd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b56dea3-8ee7-4c97-9797-69a1d1223142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9658a96-530a-4007-91c6-a4a431a846d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e376bfd4-09fb-47e1-b5f1-c72c6af09569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c11938e-992b-4698-a0dc-2d08e8c0419c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918e4c8b-dca6-4b7d-aaf0-ef8c1cda5397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632b6d8d-e165-4687-bf3d-f039becc1647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a748754-2124-43d8-b3b7-a29ce4e8b4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7307b7e0-02a7-44b5-bdb3-cd20374fa13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae58b6af-79ea-4525-8d93-0a8f9e256d1e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d90cb6-55ef-4e1f-90c6-4378e84f2824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6815895-583b-42b3-96b7-cf46f83cf574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd049e5-f1e3-4efa-9092-41c5a67642b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "430bd78e-c1b6-490b-b2cd-42f535da8505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd01549-de99-44f8-956c-e38c69f9daba",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf87f32-80b5-4f96-8364-b775196a04e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583b4923-1dc1-4621-a9b5-71e7141ccd83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85d90c3-376d-4b6d-bd74-7565a03312b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a08dae4b-8be8-45e7-b08d-665d4525f5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd22f49-4567-4e28-8b13-c37f500edcea",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7110e2-89e0-4427-bb9e-588ec14a3032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14c1c86-5ca0-47b0-9284-16ffb757f461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e737ec-d007-49ab-9793-75115c8c0f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc984ac4-54bc-4ae9-a083-034b127a0143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97c647e-d07b-4603-8340-ba48924a532e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab5392c-3671-46dc-a618-6b468feebe01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4174e37-c83b-4675-b767-1dc65b4495db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c926872-057e-41d4-8b9f-6063bbf535a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1d02f07-303d-40e5-9334-720ae66c02e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565a9918-b823-4d7c-ba3b-20b06e5e40ef",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ba8ea8-5bfc-473a-84f0-cc10c6e094a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c73b88-c1be-4132-a9cc-c9a66cbdf616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ec2625-4306-4bde-bc9d-c25a2ef304b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b4085cd-86bc-4dc7-9a69-c7eda91e71b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830062a9-d388-4e2a-b40f-b26606a120d5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6a1ab2-eaa8-46c5-a175-000861452393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a982c9-fce1-4601-8c87-eaf655ecf02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43237ed-c941-4b1c-8b62-36df333b6727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cbd9245-81a8-4396-ac2a-9a9d8839c388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f9d729-1fbe-4987-810a-5b33f302f5e5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f78ca13-5e78-4d73-bf72-ce720ddd43a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad44211-943e-47b3-af50-39a2eb530be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b469b4d9-0039-4009-b170-d5734aa3f24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "834a8a0a-fe74-42ac-ac4b-72fceb554536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4c947b-a495-4746-82a0-4b408acf4afd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa0aa1d-6720-43e5-b383-60416c59e337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be74369-dd65-4824-847b-b83d8f98389f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebabe8c7-4558-49ac-a061-22bc9a1bb700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc090240-ecff-4665-86b2-1c578675bcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a1726c-c546-4e9e-9039-c389efc3731e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4392bed6-7372-462c-b203-6284be0e6875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae619565-fc2c-4fe0-bee3-25ecfec4939d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b243a5-d7af-48d6-9ec6-dc88cea289dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbe9aead-9c98-4f7d-bc24-276963121733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777f036a-7812-48a2-b6fc-da71d6ad43ec",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d002e567-f5d0-4b15-b7cb-a605f8b20e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc74ee8-862c-452e-aa4f-a78dcb6c6adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059adcf8-afbb-494f-8c47-04d0ce646ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdca2848-18f3-42a5-b249-dc91b5cba556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fc909e-d557-46d7-881c-e2110bd05b1d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867e5a2a-9cd4-442a-979d-54d5f70a91c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21ab7b7-d501-438f-bc96-f1e12c7e42cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1131a40-ae86-4036-b505-ca84c008cb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "744d4548-96e8-4702-a48d-a2468cd531da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8cf0e6-6d96-451f-8954-7bbb38979434",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f776ec4-1a53-47cc-8493-fd0b5f21799a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb9bfb6-f6d3-468e-bff8-d40152ea97b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d07deb-ba0d-4be4-b428-13986176dcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40318d79-f9f0-4d6e-97f3-212190224d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ec7d74-c786-4ae4-acf2-955d5db701ad",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74835877-03a9-4c56-9074-3ed6c19530e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a80d11-e0fe-42d2-83fa-dd0e86a8526c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419021ac-4302-4459-9c92-48be5b6771c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9b9f899-0708-4ff4-9ae1-592ff1f2b9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2f7335-7bca-4f8b-b2d4-7ce024fac1e1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e593fc11-347f-4b7b-8ede-becd7c7ca384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afac076c-4950-4b07-94a0-a5e6c395eddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee4d45c-52b2-4e05-b55a-d38f30729296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4570c66d-848a-4dc0-82a2-bf4bb256a680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00302140-9b23-4ffd-b5fd-3652a88fb141",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15625024-5102-4832-a1c9-9288d8af61f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d36e525-46bb-4e6f-a156-637d9cfa2240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba0b292-8b28-4b65-b923-7438876db658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "37d717cc-f23b-46f3-b1a7-9c3d7c17ba03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0acd68-017e-446b-b675-70f533248ced",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b4d55d-c81d-48da-83f2-547185e027b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5113f340-a84b-4ce3-a117-5b47c62fa06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013746ad-abe7-437e-bbb7-3499a97b7a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab543b0-cc1e-49db-a476-089a7265a24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52bb8dd-cbf3-4741-a867-0cee4e236492",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ea27d2-2ff5-4b98-9b48-62880be280c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461bdb37-8361-4fbd-b3ff-59e68a9c329f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5df56a6-19b1-4da2-b5cc-bc12bb0a6c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66a4d76a-49e5-4dd1-9337-089fe6190976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef885635-b3a5-46eb-97b8-bb85d1e78a63",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4549779-c427-4141-8870-39efeceba263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc5f3f3-9bfc-4ccb-83e2-df6631913c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd03ba7-6a99-425a-ab12-c3a76ff6cd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9b562e-a867-42fd-bb28-05553b67b92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dd36f1-9b0b-4db6-8391-1be626999ca2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f4f4c0-a3ab-4216-8b89-4557d24396ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1316d7e3-a3a1-49b4-93d3-53eecd61c412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b239c2-9f92-4772-af4c-e4db63cd81fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c53941-d6ff-438f-8cb1-008b0e689c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e2fcf5-1650-44e8-a2a7-088d4a002b7a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729a83e1-2e58-4921-ac30-5d04749aa9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6259d63d-b2e4-4dd7-bd01-7abbdd70e201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af58cd4-5a13-4fc4-89d0-4dd28ef4deda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84d03e59-1cb1-4426-9938-31fe6b73cc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d5ee0c-8ac1-42b0-950e-bf4c8604d5db",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b49bbd8-9fc5-43bf-a7da-c64194cdad4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613fd3f2-8fbb-41e0-8ecd-bcfe00bf8fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc534d08-ede2-4fa8-a08c-c340bc87a2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a8c873-ccc2-4805-a1aa-1dfe885f7a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85e68f9-a8be-48af-ac2f-bbd8d44979cb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9c3f31-3aa3-488d-9138-03d16e8d1608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084b25a7-84ff-4099-a8c3-036e4aee405e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c76321c-57cf-451c-9731-449f64e00e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "867b6c77-f2fa-4b27-a2e9-98984ee7f5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64876f6-0dca-4aad-8514-2153dd4030e0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17779a98-e644-499b-bf8b-66a68823c482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a4e1cc-d050-4995-bed6-9e0d74052f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32d39e8-8147-45fc-afbe-ff05daede05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a40e7762-2ad0-4c54-8fcd-e0d3569647d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6f2054-650e-41e6-9976-a60d69c6083b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14fed98-3682-4220-a3bd-124b49c5ce6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7935442-6ac6-4213-8bb7-3ccd66b5ff2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26734b84-e120-43db-8a4b-5ec68f7c9a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf3f39c-93ae-47f6-8600-e14fb7c50513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81bf3d7-c81b-4741-96e0-620a5c4c6689",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9ab2a8-607c-4e1a-975e-a79f64b24649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9455067-2c59-4a7b-b5ff-c1a437188b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac65825-8ccd-4b7a-bbf8-00360e4b954c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c54f6f95-4a6c-4b63-98a8-d7b4ead5d874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8af3e9-542a-4b9f-8f8d-cc047d72967a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698f0dff-09a6-4609-9a67-463f6e5d5869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39466bdc-6cc6-4b7c-bd1d-344132bfd0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adae762-0ee8-43e4-aa77-0234794b708c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "379195e8-89c8-446e-a243-2e396a6921c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb547be-e324-495b-8514-37d0cf8b6ef0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b00b1e-9208-4dee-b3cc-52932ec26079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cee18d0-4fb7-4d56-a1b2-99ee5d018539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed74ca8e-a051-4b6b-928d-5cc3dbae8e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7141b0e-3b6b-4024-a5b1-eec1fd7a150c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2680397-98f3-434e-a19e-fadeb06d6e4a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6874c6ee-6c76-4b86-89d4-0687cc293867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18622821-f8b0-4c0e-a6d1-12ce85082d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbef0470-49da-4f52-820a-2cd4752b1081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c09e9a2-ca79-45f6-981e-cf8ef25895cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21be268f-337f-40b6-b521-e013e0b889f0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d57588-25b4-40f8-8748-a859edf55ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34915e2d-c178-425e-8a7f-9014b5b4b423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0f4658-9a38-46bb-ae91-d47267f0cc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f5eb0ca-21a1-468f-bc58-edeaf0a8e447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4fedb7-d501-4d93-8c0b-726d325467cf",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d43dbd-be37-469d-847c-c7f5aa8bb062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4242a8-fb83-4b1b-b52c-e9096ad881be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca22c1a-6f90-45cb-9dbd-e9eaf0e64ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd75389-8c7f-48a1-ba81-84721c73724d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552fb112-ac4c-4179-b3a9-d0b7c4a80d85",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a3643e-a1cb-4d51-9f9f-efd39e15488e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07966d3-2f79-46e2-a68f-ea98966c6962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdc33a0-bbec-49f2-9f53-b002462d9a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f428f60c-7c98-48eb-bffc-441e65eeda1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea3e146-62ed-426e-9c51-09bd7b15f41d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fa2970-545d-401a-8547-a4623a466717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7447e2b-5714-46bd-a1cb-87ee3b664c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3218c76e-008a-4edd-9e52-5c1a1e657c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5b9f11-c667-422e-9099-ff8ee0354f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95a93e7-e693-4b2b-b2db-740a0a77025b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36146eb4-01e3-4311-9d94-ae57328143da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42c728c1-b22f-4e7d-8081-44ea5683f5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110ff020-a81e-45ac-ad41-51ad17fed181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc775f7f-83f6-4c1d-9d69-a7c810a068ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf97621c-cc86-4bb9-be40-8b9115e46901",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b097ddfd-1867-453a-9acb-a4e92727e78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94bf45b5-ce43-44a1-ae78-b22840a165ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9464cbd6-61a3-486c-af75-582a92320685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbd535a-6531-4fb5-af8d-98f8cbd3fa8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf735dc-4f8a-4c4b-824e-6bad44ae6297",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a68a78-fb89-4713-ae14-9bea0b49e46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1e6bfa-fcb7-451b-97f9-50a9c28b354b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019f7839-7e2c-408e-9944-698e042cc4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "36440836-9f42-45fa-b923-047cad043f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea4bf51-bafe-4142-abb8-80d660945e5d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948ca86b-c267-498d-b273-7333f79d3c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d27daf6-5532-4f8b-aa47-1c76db234895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90658a45-2542-414a-84be-5a4921edf67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e50d74-5857-43bf-8a74-b7461b8a1009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10858b0d-b2a5-4126-9402-0093d4a5b5c4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcc53d4-115b-43ec-9b36-dc3a89b3cf7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b332f0-af65-4a2e-8ad6-74878ad9bb5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41cac5e-0cbf-4817-bf1f-7fd65ba496e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "55075af8-a0ce-4214-b3a0-7e90297e9220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d362a84f-4773-48cc-a368-a297eb8b1213",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd5aa9b-538a-4f87-b0a8-7f6cf133de18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51a36b3-0b78-441a-826e-d18e4c698f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc4bfbb-6c2d-4efd-87cc-eb49baf9cd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a602cb87-a532-473c-999d-f9281b9a99ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4431adc9-405a-4be6-b479-2303ecdfb876",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2396ceef-1156-4331-89ef-8d675f4da67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30cd3ff-f436-416c-bf19-d4075c9144a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3106ee1-94a2-4aeb-a93f-b0c451a2ba4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "102427cf-7679-4e45-8639-eada5fd8a070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86018d1b-eccb-4a10-88ad-475912e5b2fe",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af9b465-0f0f-42a7-ab09-d42400e69e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1836942a-7013-45f9-8e38-d6d2d72e9359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed754a5-9de3-4ec1-861d-99bd0837ddfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "20689f4e-e66e-4529-9e73-fa5f2729aac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32994dbf-56a3-4ed0-8756-4a02bc43d7c0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c267c78e-9cc4-446d-8595-72f492a2e625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08cf97f-bae4-4683-bb44-b74bf8bf8213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf12b21-8da6-49cb-957b-6cc666a36fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "15654055-f7ec-4316-848a-cb0e452dbfad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784cd9d3-a91a-4489-b179-20c8626c9751",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4d8697-5f18-4b67-a96d-4d780a76b747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206f3457-f743-4ed6-b2ca-9d84b7dc230a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6447bb09-06be-49a6-9654-b8bafbc783ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cebccac8-7c69-47f9-b8b3-c74f4e334917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d58f496-b6e0-4d41-b5a2-fb8a4fd9ce37",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29978ef-14bd-4c72-bb5d-7d8e1f5e8a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a055818d-f0af-4e3f-b84a-99ef39989b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a9f17d-641c-491a-8c5b-f8b534137af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f30122be-94c7-46a6-9179-81d26f51deec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1b88ff-b71d-4861-95c1-d9d4c62bb572",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c7c9a0-f258-4820-ae1b-7c7289cc0673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b580fd5-92bc-4b29-b359-cd7987d7ca2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81df49f5-f8f4-4158-9706-f2493e7aefae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41a07820-7d1a-4bdf-b664-faaf8dd2e47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c849c8-2598-4dca-8a33-02532d72d962",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cae498-2978-475d-9280-b2da4728c111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33dab8f-313a-4c8f-9d4b-1044deb8e638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78334c21-a415-4cc1-ac55-d51d1ab2c315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5704627d-6ac7-48d5-b91a-37294dc34c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71b9e07-8094-43eb-b6c6-201caaec449d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e5ad4a-0116-4655-815d-0300eef93c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4c42c3-ecae-48f7-9b70-e0eb9e42967c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e922ebb-d520-4212-a01f-1e1428e71c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0af7318b-3e5d-44cb-a3ec-d148a0eeef15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bf7e3c-974e-47a0-b3ae-7cec6cabb422",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76aa49d9-e7fc-4605-8db9-7ade9ff4f207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660310e2-8d26-4e10-95c2-24ff7d5e223d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2f7b0f-f4f8-48bc-aa5d-cd919a899892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3011c03c-1ea6-40f2-8e26-cfdb8e7b8f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6290e0-cc86-40d2-858b-0f4e950f465d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20292551-93bb-4051-8a64-f3cc1f94be48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6150e418-c92f-455e-a1d2-c2fc1de66fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e10af72-5dfc-4e83-b789-1084321b48b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a9245d-f780-41a8-8645-9196b94cd49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327af46e-ed4a-49fc-a07d-cc15c7a29cf0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61acaefb-6fe4-49ef-b4d3-f0c6bba405bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6387cd-0c59-4ef2-88ed-e5ebbc458517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4330c4a5-931b-48ad-89c8-2d042e3d5caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b6267e-6679-4c3b-8bd7-190c421983c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca982974-3349-485f-84e6-355e5b6c5de3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc27497-9b08-4a97-906c-bb2dfa6005b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e5f72e-6359-4fc2-867d-f7a6a761c76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aadbf41-c31a-4f14-b5bc-8de6f7b84547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "feef814a-4b55-431b-b9c0-a7f0d208df7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1fdbcc-274b-42e7-b9d3-55ac988281cc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb01830-5ee5-46a2-86e3-08e0e175cf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6057f60-f703-49ea-a58b-509b1bf1b822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4414f9-af06-421d-9c6a-5aecff1bc761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a48d31d-42d6-442a-ac7e-796f99161d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5869967a-c7ca-4813-8142-58ab1e75ad5d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c555189-5f36-429a-8272-99e33efe6cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3e18b9-d987-4b9c-ad99-976cd911f0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4837e26-abbb-4291-a8e8-c15ca6a831c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca0e2db-f280-4fe8-a2b6-e48807de0788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b725f859-fa2d-4782-985d-8a0d23f86049",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d88d07-66c7-418a-a5ea-bbfd430f2acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347627a5-a15d-4951-922d-7510e0a0cc2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77aa0ec-c06c-494c-8e61-ab42007d6873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0480eadb-3de3-4faa-adbc-e2162dd9cc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca265bb8-312f-4bf6-88bf-2646bfda4369",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2072e0-f1d1-4e27-b0bb-bda4573976df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47261ae1-43d9-44f8-b215-eebe6e9565c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecdcd85-b303-427c-834c-20e4a0926c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "776337c6-15ef-4913-9b60-4e7fd3eb44f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cec191a-7267-4b94-b9e2-8569c6c55de3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4376bc-05c0-41f6-842f-bf8d078826d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6876d68c-7338-4ad2-8d38-1db20af6836e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d85b4a-553e-4c8a-8734-abce1850f95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "548108bc-29f9-495d-b74a-f453e6d890f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caeb6f0d-156e-441b-8ce8-db2aefddf345",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99071460-208a-4ef5-a8ef-b386770dcb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c6c6c9-6625-4b80-ac1d-6a9ddd14398f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d56bbf2-a1f5-4efb-bbfd-9529da7dc7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "116489e2-28b2-4ba9-ab63-292a7b2e927f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edd49df-0791-4ce3-94ea-43d01a2cf7f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7964aea0-033c-4ffe-ae70-72283632fa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbb6b45-6c0a-4262-b7e0-0b937d489590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf5120d-ac05-42f7-992f-ce4f6529c0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5619c3b9-fd40-40bb-92a1-0244597339e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edad85e7-75aa-4c8f-95a7-fb2849efc6a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1e417a-6f69-4817-9a53-29ec1129825d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ca4487-9e0a-4f8f-8828-7cfe5b17423b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac39986c-3770-4f78-b3d4-27ac6a125374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "256a1fb1-451d-4985-928d-449d5a2d288b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5291b7-e76b-4519-9651-32cf2d84c7a1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24f9768-5fdf-4f72-88ec-a10f429612d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35063328-18c5-459f-958f-ef9047f7da43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a1860f-5f90-451c-93f6-b9eb74ca3e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "52e9b372-3ce2-46bd-b16c-e88c6cecf317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7758170f-b416-43f2-91c4-39495745149e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4e3c97-740f-444a-aa0c-28a983a51462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4af8857-c46a-4615-88df-545b10f1d4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d592842-df41-42f1-9847-995eb1af90c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9459785-8f33-43c7-91f9-eadfa759bd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bdb560-e119-4cc8-bc1a-a5c31c0bf8e6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7e6386-9fc2-47a4-b796-d80af1930681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed20f4c-27ec-47c3-a954-c3f47cc2640f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a516de66-f14e-4e7e-9a8a-cbd3770ef3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8eec13-dea5-4b7a-8526-d4b246b79281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccd0f45-168d-4c76-82a9-65b46208f558",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5985414f-77d4-488d-9819-9c23f538a4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a996322-09a0-4045-8217-940e23326aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459cd7c2-7418-4f76-a90f-0d8ad432ab95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "751b17db-975a-4246-ba74-253eecf4071f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecac9d2e-f897-471e-bfe7-eea5527d822f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1be5a62-dfe0-497f-827e-9ab119258e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb02e7b-28a0-4129-a3e3-4360ac3c713f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9124f0e-5b57-4c14-821d-2ccc855638b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14dac166-76d3-4c27-ab91-273fc5c38fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7329eebd-7d50-4346-b91d-ffca648ba3ff",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21db101-0fce-4e11-ab0a-55413ea09245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97417cb8-13b2-4426-8270-b7d0f9f7dedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da40b18e-c021-499b-a85d-787dde4f0843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4b3492-abaf-4d0e-973d-63e3f3896251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f48f036-fe97-40fb-b771-d301a6b3a854",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131d9e12-bf4f-4b6f-980f-2e7ef4afa3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d9c500-cf3c-4bd7-8dc4-74ca1208586c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000aad3e-5e41-44d8-8751-bef830572989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "31e4365e-ccac-4925-ae8c-6f8e3109fcd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b1401d-37ee-4dfd-9fdf-94cb6f01dabc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e8ff3f-9522-4944-85bf-0e18cf2eeef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8bb81b-5971-46f9-82cb-0345c6430c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82347d86-1964-40bf-bb52-4140690024b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "492cdece-43af-45e5-91df-99f3b2e0052c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4f4b52-b2ba-464e-b2d1-4d79998f5f65",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d40060d-d697-42fd-bf21-c452f4d16a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68252208-036c-4aa8-8435-aa1196211fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99849b91-9d75-4399-b72f-6d4f386f38ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b7be5f-d866-4d09-9efe-60c6174b1e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95740243-3951-4e2b-96b7-7f0df9d17496",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85eeb46d-8a39-4b89-81a3-c6c4a40fb3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9f2ebb-c063-4810-a2f3-49d3e169d5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df982e70-0d9b-44c6-8def-7db8f1eb7c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30741cb9-143d-4acb-94d7-a34b78fcde94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7023979a-924f-47d1-ad17-467a9b7d4af7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e64009-9669-49ec-8714-99c3bea2bb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63383003-8402-40d0-846f-6fdd615c9eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82939703-aa8e-477a-b26f-933bbc114743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "330c99ac-8a97-4768-893a-437ee079770e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06aa897-1818-4106-9105-bf1105094545",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f2f13c-53a1-489c-8f72-f9ad491cc7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72aaa8e-b090-4e72-aa9e-6d15303dd19f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db44b89-b353-4cd7-9ec5-f164ddce0bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9ec17b-616f-4939-ae90-6f8299b0c0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ef0472-eb84-40e1-953e-d889eb0d178c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37a3dd9-d6f4-4ceb-8e75-48778ec368b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4352825b-59be-4261-b8b6-8e79bf76dcff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c187e5-edc7-4353-abc1-35cfac302e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bc09d9-844b-404c-8a41-589711fd4d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219d5d39-2a78-47f6-8c29-943e53ab18f3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91dd66b3-bfd4-4ae2-90bf-4334e7cb6e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5823eb92-f693-451a-ba2b-634a4781afbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594ecf74-2289-4965-a74a-8e94a34a8840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0e55fc-1a82-404e-8cea-72963606e29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e81aea2-3953-4b84-9449-37e04a41f2f9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320b513c-2ad5-4034-b73d-65dba420f3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8710fa-2489-4786-9064-53955388d4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266ce55b-dbe6-4a4e-a19b-98e72126034e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7afd7ba6-79f2-4d2e-afbd-5edf5a0f33a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1fb4af-9129-48d0-a9b1-8beb7acf4aec",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9843e2c-2b08-4c4a-bfbe-034063b5935c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f9fa22-e65a-4a4c-ac43-85966357ac7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266483e5-e229-4697-bc2b-63af06195ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d152ae9f-d07c-4604-a5b0-de4be7d76979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c52cd03-67c0-4904-a5bf-e5dae7c75e9f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1b7077-52d5-4307-931a-dcbd32b43f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1034f0-c908-4f13-ba12-979e66c539df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5b5645-a1f7-47e3-918e-1db214995988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3d5ef6-64ee-4a2d-936f-cf55e09c3dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3285726-2e45-4c3e-867f-3b80690337c9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33412b74-b4a3-4b59-b368-230db2bb4bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76713917-6bd0-4dbc-87e6-2031b87c80bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab67a68-9f3a-42ef-8567-9cd6dd10b763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1585383-cbc4-437b-b1ef-db68259cfda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e102127e-308b-4a81-b79e-8dd497e5a04e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3885be-7bd1-4e93-871e-10a3521541ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee1b669-e11c-4be2-bae1-974641793160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3b0446-fbb0-4852-8255-b7297b9e3b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bae4318-9edc-41d0-928c-ebbbc24460ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1223d8ba-33e2-45c6-9ccf-5e16cb9ac19d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2ab2e2-4039-4cec-bfc0-2cadf09cf2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc9d4ea-3f0e-4a78-9c4c-91ee2f46879b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49929ede-0264-4445-8d6e-bbd8bfe93fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d842d3c6-6c33-484d-b1da-822ef22be8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0752643f-5048-48a6-9d39-a90cd28ea7ae",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98c3636-f334-4b74-b123-4cc835bdbd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e4a507-0499-4193-bebf-37fc6f796e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ffcd9a-b286-475b-b634-f06ab9da4d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbfb49b-6c9b-4d11-a6bd-513595dcf8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543fdda1-3e9a-4046-92a5-0936392ee737",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8122b30-abd5-4f6e-965c-fe3799176083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e18f99-dd9e-4196-8b02-71a2ac3e4e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a70e82-b58a-46c6-9d30-8b20b811c688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd22bc77-e034-4261-bc7b-5c1f6ebb2c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a894bc31-2b7c-4023-9bfa-2d337d83a631",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd49a05-c868-4940-96cd-14b6f5965d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3dfac5-671f-4e69-9341-82121170d233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8384313c-a5ea-4316-b154-5dee7f33201f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9ed9df-9787-41d0-a334-5aa1475794e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde34a02-ad9a-455f-b1c0-0fa3dfc10bbd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c815ae8-08ab-4310-9446-3174c1774bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d8c082-3f59-4379-8cf5-1a883ba5a4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f249ea7c-49ef-428c-bfe8-017465c5b9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "956dcce2-1b26-4d02-8d93-ed44eef14b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066dd9c5-8518-4a4a-8ff6-c55b86c985d9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14de0741-7ffe-456a-a094-a83490e15d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90881e9b-505e-46d3-a413-4eb26b8ad431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62be6cbf-fc20-4a97-bcb2-da838e324b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7bb7ebe-89ef-463d-adc6-e03bcde9dc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ba91d2-ed57-49bd-94da-c14c44025a06",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f310a4cb-a04d-4dc8-9a86-1cb4cc0b97cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb30207-833b-47f1-ab9b-f3a288cb2e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff60362-ad61-42c3-a868-c5dba665500c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "be1f46f0-8132-435f-9aa1-2d1840e3b4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cd1a16-d2e3-47d1-8ef8-1bf8265fae94",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5d29de-7d78-4445-a7cf-46312a59e2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65232329-112f-4a7b-82b5-770c2365b083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c053c0-c34d-4dd5-9a86-a57c1788bee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d23ee7-6e23-40a9-9165-5c3e28494f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a83cd0c-74a8-46b8-b13d-5a534b20ebfc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c501c32-62c7-418e-ad02-ba63c0b0cc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2add527-be19-4a17-875e-1ba525d56cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96864785-50b8-45a2-8a53-b90d6d273340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8460635d-4072-4175-8e77-dd277f254b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988fe192-b10f-49c0-8d49-314d6058eb3f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66ec4c0-3b18-418e-92e1-65e28a625c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24d2452-2991-40a6-b9a6-44a031cf312e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436bd6c0-3773-40eb-8346-610c3a8be8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e200e01-c82e-4788-b515-567c23781942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b2d9e1-0b22-4584-9505-63554b582d58",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44532001-6f80-4cf8-ac6a-fa921c6a680a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c258b0b-9daa-42ec-a26c-2c621ea2b2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554f00a3-2743-432b-9a67-9c427b321913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b187ad92-0a80-4f7b-8219-42de204d34e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6d18bf-98f9-4d78-b32f-b9e5787793ea",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a025487-9179-47a3-8725-4467ef79e383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "45fc1d8f-b8be-4b4b-9a8c-dc7afb1fb91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf258cea-e265-4220-8660-44dabc9c1c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d902c89-1b0e-4575-9e31-bc2ac17fe51b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "88ae785e-040b-416d-ad73-0d9c362c03ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d07269dd-6a8d-42c6-8124-3f181d3048bf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8fed7d-4e17-4fca-a20b-56f887ea8c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d17165e9-3081-4af3-ad08-02291dacb6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285057bd-75b5-4c2e-87bd-e4bb33aecbe1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3357523-0b06-4d08-809b-c82959f18e93"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9be1652-5553-47db-b782-5a4aa6bc1989",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4189dce-b645-4f6b-bc1d-f8a27c5ceca0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1be6bcd-d86a-4459-8e22-e22621a09a29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe1eb850-2c8b-4cf2-9895-dee0bd3b43e9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a322ef11-21d3-47c7-92d5-7f0a54911578",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e57b41fc-8db1-48d3-8742-89b475b00f4f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "368e4968-a88a-43df-8c70-b95aa28b579e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "92f603b4-df87-4cef-8d67-6e2df712c849"
                }
              }
            ]
          },
          {
            "id": "7e0aa072-ad6a-4118-827c-8abadb113b7c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a98eb749-d678-4ebf-a06b-4a364509a33c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "312714a7-9043-4be9-a823-84bf4dd1c117",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aae16c69-03e9-46f3-a762-f717bcc05006"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4c96c23-bc57-498d-ba12-c331097588ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4a3cb4ec-bb35-47a3-8546-9747264412aa"
                    }
                  }
                ]
              },
              {
                "id": "4c285431-6cb9-4903-83f5-43e10f51e4c4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7be1b4b8-663d-4192-911f-f1f5fcc4efed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2dafcc8e-8086-405e-87d5-155eede85207"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31031ef2-de97-4ab6-9f8d-b699e683226d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6838ca13-2c33-4195-bcf8-0c3ebdf0c7dc"
                    }
                  }
                ]
              },
              {
                "id": "2e92f050-9e70-46ec-a9f7-57f08536a9f6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad29bb38-330c-4004-b6fe-c85948cfad78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ea91dc9-6134-4b6f-9d0d-f46d5704931c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23d57300-6645-4376-9548-8f69c39050aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "48593410-e169-4422-a7aa-e7606b20e9c1"
                    }
                  }
                ]
              },
              {
                "id": "335d524c-4125-4ad8-b511-a672551eaf32",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4006eb6c-c7db-4de2-a9e7-52de7048f6f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4eefcbd3-e4b9-44cc-ba96-e35bca8dfc7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c60199d3-21cd-4e1e-8230-533c802f6ea7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "55a300d6-ba29-4eed-9dc1-e51c3538ced2"
                    }
                  }
                ]
              },
              {
                "id": "81e38446-a43f-42dc-be21-a430f46abe1c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3c9a29b-b853-4f4a-8d7e-01f823474bea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "581a96ea-ac22-49e0-ab48-1054b4a9ac06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c5ae4d7-e08c-424c-85d5-29728432ccc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f3f9c5fa-44dc-40d0-88af-b7de88dfc98a"
                    }
                  }
                ]
              },
              {
                "id": "5eaa477b-f245-4a2a-a6af-6d0b3066343a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20c80b14-1c8b-4c67-b127-574fee19c31f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a21fdf07-cf89-4e55-96ef-8b1727596c14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdfd0cc1-46fe-4393-9d7b-83958e51a512",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dc872b57-cd42-41bd-be2c-b76d884e78de"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1de0ec01-fdc5-4f48-a232-a31b3af5449c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "abe7d972-302a-4d74-aa81-c4edee6488c7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f870885a-a302-44c6-8f4f-e014ee44aa61",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e379030-82e8-4f2d-b8fc-9e6b7d20984d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54fc97c9-d69c-4afb-9c68-b025ffdb3841",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f10ebb8d-185e-433e-b09c-b2733a45651d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c853f70c-b7a7-413f-b753-11a4aaf7e271",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c579915-0439-416b-a5c1-04809a105649"
            }
          }
        ]
      },
      {
        "id": "9a8973d7-b7f6-4e55-8f99-b60762535a4c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "36a677c4-3260-464d-970b-c556d02d5dc2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e03b5409-ed35-4fe6-ba7d-a0e2f42d05e1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9fceee39-ccda-4f92-bbf9-133847647df7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac011f11-9dca-4f85-8723-48e268387880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537f4307-67e3-4c1e-be8b-b1f7f2360201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d3f4e8-8a38-4b89-991d-a33a5aea3c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "64b72c8a-ba31-4c85-9890-b695cd8f3cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191d5143-64a8-4236-bd40-875870adc7c2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543c2900-0185-4576-b90e-de5dc7f53bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1015a21b-c32a-4fcf-8c88-35f23076e5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c2c680-3396-4ff4-bc9d-ef3c4da55479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4271a89-7e70-4900-ac43-69d37277cdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe73bec-487c-4481-9e77-97a3e234c8e2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117fcab0-e418-4ef0-b071-212b61015cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8e37bc-7130-4d13-96d7-78cfeb6b7cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b51f295-1ac5-4320-82dc-98ac29815f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a27a038d-65cf-4b82-b88d-303b70103e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586857fa-e22c-45f1-8f28-c1c6c0c36df2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5070b1-defb-4f04-bcaf-26160ec9629b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590494c8-5bb5-4ad6-a90c-f7f56eb72aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841ffecd-3c3c-444c-9498-ae79b4fad3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e15f48f-6093-48f3-8d4a-fac5c7e2ad45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2ac9b9-3cc7-40ed-8274-e0552aea400a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d2f3f0-2095-442d-a7a7-56272ee7ecb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb95a9a-a694-43cc-a9af-cae1040a08ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c025b1-9eb3-42d8-9a88-2318217c5d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25f0d309-2e64-4ef1-b98c-848470f964a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361541a6-0f44-4a30-80a3-bc208d8402d2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbf5306-e1e8-41aa-b47e-4b4bb11acf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e532ee-29ef-47de-9104-c10cd0f74e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84e69fb-61a5-497f-9a72-b3d45f232b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17e267cf-90ba-4844-9220-c2246e4e9866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c283869-06dd-47b7-9b3c-dfa1ee4b8827",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93afff19-ca5e-4e4a-80d0-46961e5c4194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c33caee-0672-4863-8574-60300423bc93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75086e74-cace-4ce4-9af8-102e98f19dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d23b8b6-735a-44d5-80fa-c8fb7c1ce9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a210fd52-fef3-4275-b89c-a6e15e028f75",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d64b06b-af67-4f5f-a468-2e7e7894b6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1500618-954e-4b03-a30a-09641e764b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f430498-2b0f-44bb-af74-33408c018b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "697d5cf4-22fd-411c-b053-cad9677445da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83044444-b781-43a4-ad76-8cad47b03199",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473ee9d5-e375-4ad1-a840-d36f106d5dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d298682-4ada-4f54-9a7d-e18683eec590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93df7d7-76e7-4739-82f0-71a668230986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef01f0ef-ba7e-4ce9-8dbc-421b1f592224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b882e78-80cb-43bc-b933-632ae0df0588",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97cd90e-ccdd-4da7-9253-282cac27ecc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b717b82-90c9-4777-b1d0-672e978cb7bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ffda7f-b796-44cf-91db-4cb9a6fec5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be32e4a5-97da-40b9-9dc9-fe29d4685ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20cf1465-0bb8-4d19-a515-7be347f7b288",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef2f99c-1818-436b-9555-d9371b7d4755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed2c131-3a12-425c-80c0-eb0eab016fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5259979-9a4a-4c0c-ad7c-92d7b1d5c6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "632526ee-5bfc-417e-9e6a-0896f343e5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452bf74c-48b7-46c7-a405-a99a4946fe88",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e96b92b-03ed-4622-84bf-5a1aa702fa43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e60e57b-3819-4b4c-972a-56d9e832e1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9b8789-0e62-4de0-b61b-cd2a575c22b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53a834a2-df3f-4310-b86e-a4a9f8e2befa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ceada43-1ed4-4b8f-8844-3f1e3c3ca05b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3dc911-dfcf-45b9-8da7-39e98121e730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0530ca31-dea2-44db-b8b3-e3d2ac476ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00bad9f-5302-42fe-8d90-63a3c37a0ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17ca17ef-e0a1-43d8-95e2-fae601be4fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844721f5-679f-4d77-a340-bbbb4b428224",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac0722c-6e78-4447-86c7-f12ed3ed31ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658c2fb8-5895-46d2-9c39-b23d4ca37a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc939bc-79cf-428d-844a-7779ec7bed90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e15a483-1a4b-4058-8cde-f8555ab44e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824dfc4e-4149-444b-9f21-1ba386fa487f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23ada2e-3add-4a4b-b97e-c147b0466cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a525dd96-bc68-46c4-8b21-239c3fba86eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cf9008-daef-4cef-9571-aa80a398046c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c59d95c2-a81b-4133-954b-b294e025d2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b42b8bc-7441-472f-a85c-4ab293872289",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7200013b-cd3a-454d-b840-91c300db36f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698f91a3-19bf-4ac7-8f66-6c2438e8589d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66c712b-c0f7-4d56-a05a-fb571ce6862a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "84fb52bf-82b2-409b-a6fe-e6f6d78a5072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8c579f-c49f-4f31-ac4b-ded1f201c5f3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d656aed-0458-49b8-9c67-6be0cfb8fe02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4d2c62-88f1-4f27-a456-a31393e8b911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be6de7e-3cb1-4c8d-a12c-2baa6d7d505a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca15a3f5-141d-44dd-9d6b-3933b5cbbe83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccc31a3-da3a-487b-9fa0-e7a71ee2e57c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88da9382-89a3-4838-a812-e11e303aa9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc8aa02-34d2-4ce2-beb4-21495dcb0274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a1696b-3260-433c-848f-b3ded2ec68c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "443344e1-5b32-4b1b-84ef-5d2586c98ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2d5aee-0bf4-49b3-99f4-6091a0024625",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca73383-aae1-4f69-be6b-2040707378b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f1897b-ef5e-48da-81dc-c372e269db5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a6fc3a-8508-42bc-807e-b41a4ba7e14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d493f68c-9340-4661-9d19-e293c82ec146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4126559c-7bc7-499f-ba61-db84dda7a2ef",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814bfc85-a5c8-43c1-b02e-989a14d6393d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f161648-cf1b-492f-a4a7-f715cbeb43b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3fad3d-b824-452c-8137-54ee309649c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7e7436-9453-43fe-8c32-1faf5af48e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41597e7e-1e47-4955-840e-cbc9279c26da",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e351405-9f31-43f3-bf99-721f340c9ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedbe4be-4402-4d29-a0ba-03aed6c39c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a57442-7a4f-46f1-a082-02477c8315a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "268c090b-a0d2-4376-a692-296de91e6631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9139f1-de47-40a5-a6b2-606866a89a68",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4864b2-800b-4e32-93b8-8597a7921b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed65294-457a-43d8-9940-71cad4ad3f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9292253c-217f-4cba-be36-a8bd53d6881b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b41b01-532d-42d3-adb4-ebe4f30a0f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153bcb15-c515-4a06-a0f8-38499aa440dd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c059bdda-ce88-414a-8317-a594f9124a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206391df-b573-4ae8-97d8-62c12df060b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d6bbd2-2327-4535-8508-f3a50b7af160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4817ecd6-9c11-476e-89d5-60147ca2210b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61544390-eb3f-47d8-81e2-83793fa7df52",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adae65e-0a3c-4867-bf3d-b34537fe2379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e177e73-bf3e-4990-9ce7-cfdceb1686e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b557e7-207b-4eb3-bbf7-ee27632db754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63a0aeea-05e2-4ac0-b1c2-b9bb61c12ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f408b4-b234-4a4b-baf4-c26f65b0bfa5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2086096-4657-4e6b-b11a-51364a021a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947e862f-373e-4fa5-91df-c469403963a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f2de4d-ab69-4d52-852e-128ddf809892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8f8adf-c4f0-453d-b9f7-9004ada67fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e09972-d5ba-433f-adfc-e746e76a8971",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5396d69-7b22-4431-a2f9-39790403d17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e80b09f-a96b-4e68-86f2-d95e94adf197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921a41c6-1ad8-434d-92f6-aab2b9fd03de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1db84ae-ea99-4ccb-aeed-972963b92d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e624a98-3389-4827-99ff-fc0a5d08369c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4974feb7-41a9-48da-830b-eb1817bfea41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcfb635f-469d-49b8-bba9-c193b2170662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb7615b-345d-4f7a-9651-656f50debd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1cead0-45eb-467c-afa9-c9e5dbf24882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aef9015-2962-44c2-8ba7-7068e1b09b9c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8498db-41e6-44ec-b942-f311aa785426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205f4c34-ffbb-43fa-997d-d3190c1316e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa571d10-b03d-49d3-af8c-241b81c024c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c74422e6-751e-4470-97bf-2163594b9474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c1e773-2ae5-4c06-b560-efb51f00d3ba",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea9c960-31f9-4a48-84dc-be5a0102b7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3082a06-2787-4ee2-a7e7-6638742ca367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1dfb0a-de3e-4de9-b1cb-a038f4a4294a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e997b375-8e16-4dc3-a0df-3076a4fd7bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f680453-dd7b-4681-8125-d8c2d20ee342",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d7e4a5-79db-4837-b8a2-5735d54b66e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b434d6e-1997-4f3e-9bc7-e05cb180454a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae02c8c7-4d39-4d2a-aef7-049c724a2808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23f958b7-d9cb-448f-96d5-7c55342f6490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02afb54e-392f-4bf6-b2bd-263b9a63a23c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b643336-8d7c-498b-afad-6b323238ea59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a68e432-afdf-4fb7-9884-d386628ff455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95063f08-bb16-4f3d-84cf-4dac302f7603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1376093a-70e4-4ca6-8a5b-26e95a4476cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c390e458-c6a8-4423-9364-83548688a9b9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35883e03-c161-41fa-81f0-5751f80e19ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016f737b-6b86-421c-a7f0-d1a06f08ea1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2359559b-15b6-4187-99bb-cfc1d260fefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb00f94-c3c8-427e-8c0a-55c664bbecd3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69a6d5f2-0322-40ca-8acc-552813706f7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e36a8415-77c6-4f1d-81f2-e51e6506de45",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe893d41-268b-48cd-9b29-b5b4c7b6b9b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6facc53e-bad2-4322-a89a-3651f291dc24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad299ea-d049-4a01-8172-17bf0e1336fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2415b577-945b-4fcc-a24f-3f8a07a06bdb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd3ad714-644a-48fb-ab26-7118de9e8d9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86416b52-8c20-48c4-a4d4-a00f60395039"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a150104-9645-4ac8-8e95-ac4ab1c940f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b25022eb-6c4d-4b24-ac01-41884307edd9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e415182c-210c-44c3-9901-ccb41451700d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e0af6cb7-b8a5-4b43-bb8d-e230fafc46df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0505f46c-b35a-4ed9-ac42-74ee44af869e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7379695-e988-48a8-bdf3-fa443e215383"
            }
          }
        ]
      },
      {
        "id": "7c5c4760-02ca-4c1f-9ae6-8e2e58da0a79",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b46ffec7-8a96-48f6-aaa8-09a39ded509a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af5bb627-0574-44a6-a912-91dd4aa6a69b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad06acbf-1bbe-4bb4-9756-1d4423dcf0b2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667869c4-3fe8-4ea4-a161-096ff42185e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa2cef9-343b-47a5-ab2d-ded1cca931b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e3310c-deeb-4c07-b098-976cc6be1e40",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e81b035-f825-4b3e-9221-188b49f7e185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7871850e-6003-4c3a-b679-1be66e67bf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d311ff8-08e3-4c9f-ac50-07e33a302c7e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f2abe3-38a7-4e5d-985a-616f7d744a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986747eb-524e-447f-9956-25a46b3a273a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92ae73d-ce86-4ad0-8b25-eb50f02a684e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48da31f5-97e1-496c-8fe7-68e2e79f5b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e22b2a0-bfeb-4e77-8fc2-7ae6a9577cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e5a43c-07e8-4752-a5d4-6662e702e724",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d503e23b-f4f7-42a3-8b67-7eb9bebbb13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6efec4-7d62-4282-8c5d-315a9056d25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f4cdee-14e9-4022-bb8a-0f84c8a1944c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709cce8f-253f-41fe-bf35-4969e16e964e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccfb9f64-b236-41e9-a5ec-2ae9922e1374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af60dc1-371a-4327-a830-1f0294e4bb98",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67857506-d754-47ee-bbea-dffd07aa1ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abb1dd5-8bc2-4451-a79d-42254838b609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56933a4b-04cd-443b-8f3f-788758f13172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0d2d79-6b62-4845-8147-f8d4260b4310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d7bd94-123d-4c3e-8c66-fbf284c7a402",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3076aa-9d58-4c9d-af86-71349aadcf03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f179ee7b-f5ef-4f33-8fd9-0596643afa0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192891ba-97fe-4b88-8ad0-3fa69cd15e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9e5b1e-1ceb-47b5-8cda-65032de1c506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe746e13-e57a-4355-baa4-329ff9c2f541",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00ed329-d503-4092-b534-26f1c1ad1edd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17fb59f0-2849-495e-8f69-27604e6ba35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcfff09-07a3-4bf6-b10c-c14df7be19ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c172be-08c0-44c5-8ada-5d2ca604f60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25883828-a62a-4354-adbd-c4d943d1cdd9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72944a63-3afd-48bd-8ec5-9e48a4f48b66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56ecdeb0-a871-41c5-a815-6844d0cd411b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc7e807-a375-4ef1-888c-414ea63b896a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48edd03d-e26b-4745-8482-17f4fce57c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e4f2e1-6704-49b1-b52d-d5582d347ded",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f074ddd-c371-4502-b5c6-be9aa9c18d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea7565e-4fa7-4993-954c-1243aa32a606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b03d3f8-4c45-44ee-9a0e-e55e45584689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f687bd-344b-4e56-a391-6d7378ac137c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8100b2-37f4-40a0-89ab-028e0549984f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d632268-ac86-4e49-b32c-fc04dc4fe35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20486500-46c3-477a-a230-fe28b69e70e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda14d47-d218-4d2a-813e-2332ac6fc8bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4326272d-5735-4f32-a173-7bbf5baa7079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cf9605-a2d1-4d38-ba3e-c92210d24071",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d888a1f8-2986-4960-b3f8-7b4c6f03958e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "418bdcb5-b775-4b92-81cb-dfca99da6df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db47e6aa-6fbc-4e68-99ec-338a7a9d0900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d198aa-2b0e-460b-9c55-fc78f1e925fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fa6fea-1fba-4da4-aba8-2d7e7bca8261",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b7474a-ecda-452b-8754-ed8b24da4bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b72a5540-2b4a-496c-96f3-32b3ff96b204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7239ca22-1d74-4ec9-89f0-8ecac6e148a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146a0604-aa9b-4cc1-b3b2-e100cbe2596e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0411f6f-7f9f-4347-9435-5cb69709b8fb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0be0486-1d20-43f8-9965-8900e1223340",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee68b887-797d-45e9-b9f3-562bfc099102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba484e6-814d-491f-b449-f80da197f8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a663eea6-08b9-4ed8-9cda-c959ce913615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cdec75-484f-445b-b083-3513e55e5fdc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9826db6c-e655-42dc-b126-49ee85332f2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0c80a3d-8f96-468e-a59a-556a5b1848f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7de077-2ac9-4b6b-ba9b-65341f0bb7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5c7f804-c39d-4aad-ae69-334a7c9b1779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccf402f-d70c-4688-90f8-bac45adc8fc3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3119cce6-e85e-4faa-8dd0-f057d132d39f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad32c2c9-6240-4c83-965c-bcbec37344d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62eaba56-ac5a-4ae4-95c7-8836e704dde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549eeaa3-30e3-4241-a155-752ed5501932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ead4615-33bb-468d-b5ee-0dbc757d7eed",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c819e4-1f8e-4feb-922f-5ef379afed00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01cf4914-39e3-4208-bff5-bc40965abb25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ee63f4-a0f7-4dfb-a398-49da1791530d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307331c8-10f1-4802-bd9c-668434ada9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d3b1a6-7913-4e1e-81fc-e1e6eeafa63d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481d9fda-60fd-449c-9371-e6841d94b1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418f6b15-1e7f-4430-bcc1-71411cc038f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bc10cc-e8ea-4509-a182-c96b14498afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b06400-db6b-4128-96ea-ce9539c308c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa8e78b-f4e2-4db9-a365-b6dab8d60600",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c109e531-04df-4c74-83fc-16c0ff44f38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634910d1-677f-420b-8766-fb654be23961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68f6708-4451-44b6-b4c6-8744ddb10103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aba119f-496a-494a-bb8e-9738ce3b8638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f2646a-4789-4839-84a0-32d5daeb6927",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047f04af-5682-4e6f-a0ae-2e79673c290d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33a5f79-46b8-431a-b14b-364e36e732b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4cf06c-c40d-409e-aa60-5d8a27015477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb496bb-e6fe-4dad-8a8b-34f1d3f18586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5255559-2667-48bf-b199-145a782818ba",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206e109c-d5bf-4e11-ac26-2da8bba89e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83606e7-ff71-450f-b936-e5177178dc64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa78b07e-e3e2-47f7-a64f-5d77c7a18266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d45f2d-8d07-4b0a-91fe-d46591874583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73288b52-6b20-4897-8c5c-063e966fc982",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1979307-db34-4480-88b8-6956deb5c204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42918327-e65f-495c-8690-e657bfcd7a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f2fcc9-9ac3-413f-a88c-a47d86b3c690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563b7210-e542-4f23-a0ed-c8f8314101db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d4b063-c74b-4b98-b5f2-b76183ae11ca",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f87b61-52f7-42d9-8848-337b1bc26f96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d29c2df-272b-48df-b161-b21b29bb988b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1a80a5-f9fc-4318-9837-1dce7556f9a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d963ed3-994b-44b1-9423-911e5fe58012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1840dde3-9ff2-4ed1-b6c1-0c308f3bfc85",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d772873-b076-49b1-aa78-ef1c8e2eca37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b91811b-0984-4c27-861d-fc240aaa3fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d173eaf0-aef6-41a8-83d5-4ed16bc5d3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa8232a-0ef6-410a-9c98-1fde04957271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351dfa33-aab9-471d-ae6b-74a0e43ff56e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee72a98-0c0b-4f4d-b9c3-d540d41da0de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12ec93d7-201d-4c04-abdf-0a0eedbd2f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cca7ca-7d7a-4dba-9a12-5c8ea2aaa525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4637333c-c1ab-40c3-b011-e78f5f969e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb79f540-6fa0-400c-8cb1-4c0bed3f02a8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2deb11-1f31-4e9f-a5d7-a5f60d9d226c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5813cdaf-9a78-438f-ae3a-44361d4ce227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd66b18-267f-4ec9-9be8-b4f7149590a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6755a390-b733-46cd-87a1-e8fbbda6d704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4925f4-ffb9-48cf-a582-e33fc930b8df",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d607f88-ea3d-419a-b8ff-326e03e86ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b86681a-7e7b-4ff3-9f0d-71557403c247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab498a5-f7dc-4cae-8861-272be319672e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90be196d-f4e6-4b78-9af6-572cd76126ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed7103c-a545-428b-8bfa-52f408a830fb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41c9165-8456-4910-a254-78711c9b3067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5048404-7cbf-4ce2-b06e-ae9a91404f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e204dcc-cae9-491e-90ff-e3bfc05eb12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88f31c4-f8f9-4261-9b91-551ddae725bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e363cde-027e-4f38-bc72-a808cbf6e082",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59284adb-5ca9-4b8e-9a55-39bf46179487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "360f8a96-e6a4-4e33-b005-1db6673115ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f086c5f4-b1a2-4030-b144-78ff6c880609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b856411-c7bc-42eb-8e0a-7b744b8780ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf070957-03c6-4adc-9b35-3d74f6965f3b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817dc9e4-4031-4ed2-8b38-208c0caacddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c76c059-d27f-41ef-b29c-7cd14a8fa050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c765b5-e8b3-445e-a28c-8e7ce3415f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46210307-bc79-4bb3-ab6b-533b439fe256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dd92d6-4792-44f7-87ac-8f123363abf4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0034ca36-905c-490e-beef-de873811938c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6815fdfb-003b-4247-80bd-de0cf2af5c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8064cb53-be8e-4baa-8c10-79816a540043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470fe22b-7069-4539-bfe3-d85bd70eab93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7192de7-e010-48fe-b325-5bf83927f344",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8dcf56-2289-4742-9afb-d16abfb4a608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17b861ef-04e0-40ea-959f-f6e3a6588990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2f0d87-58bc-483a-b9f1-098c6ac361ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42aab74-f77a-46a3-8e95-48f0f916c584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76547f7-af39-456d-bff7-62879cb666ba",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4663bd-af8b-496f-9a74-05c0e51eab28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6298c373-e2e8-4d69-b030-fd6459e6fbde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6eb15b-7b24-4c3e-ac7a-0f662d4c3a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc54cb2-4b26-4d41-94ff-c0bb1f670c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a997699-be40-47f3-acb4-207e8f7d17b9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa997709-045d-4b21-b9a4-7b3c2b713bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2b998a-428a-4385-b64a-fa770a43bc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13020c98-ff7a-4ce8-964e-fefc411de345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d36de27-25ec-4e75-aadd-e72b0277a912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6091a07-b15a-44c8-a311-cf2152b176d9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3516b43-01d0-4464-805e-d5e77a4f9307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf953ce-a9ab-4966-9cff-27d846e3f484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4e826f-3e9d-445c-95b3-191769a4589f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0031d3b8-0b4a-44dc-bab7-1ee619f8c07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5344d0b5-d309-4c4a-b199-c8ca04d127f3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37372159-5834-4e21-938b-b2170d5b1122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bdad59-1b75-436a-abb7-59cf103a4b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de953364-dbfd-4860-809f-2415e207e4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d07c636-8e38-4ee0-96c2-38e4e77a8700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad0aab7-c625-4d17-bb99-45d161aed289",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34225542-d526-4b80-888f-1064e5a61be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649c073c-04ea-4fd4-ab21-5be1ded715b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5408027-26c3-4f95-8e91-9e43e6f50861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affc4330-eda8-4b95-9453-150907764512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f13c39e-120b-4f23-b9e8-1a4f18e4469f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8b54b5-bb75-4950-8ecd-3b9796ba13b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aaa1347-057b-416c-bb2a-3d4328707f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eea121c-48b7-4f22-9c2b-4d9ecbed681b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac74942-f1a1-462d-a5ed-1b95109a68c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedcac71-f901-4833-87e4-cf7ee6748c00",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f3ed82-a612-40eb-aa73-7852a815f0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189d9fa5-35b5-48e1-90cd-4617dad99e04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6f91f2-c1f0-4bf7-aa17-c33f04f734b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73fa2f4-cb5c-4f70-aa30-9f0b8609991e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e50ade-0423-4aa3-8cc3-cf2ed93fb456",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5b2563-dae0-4bf9-bbc1-841746976f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd45269c-4604-43ae-af04-c6c6e620effa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8199d99a-568d-456d-923a-9c64d54b5ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec567a7b-c42d-415d-9905-ae4a69312fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c6ad88-fc96-4c63-afb6-e546ee48f37e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78098cc-4457-4730-b2e4-1c57d4b600df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ebe862-44f2-4fea-9fde-8fcb6e6cc543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae29357-ce96-4b4c-9a75-86d43bd46487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426d4b77-a478-4453-83d3-30419b6d0567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837ff3b3-282f-41e5-ae3d-8e9d5267e14f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfc3bca-5f31-4900-b08e-6d7547fa1917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2189d1e-4b03-4eb3-af41-81aefce7e6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb807fa-8026-43c9-a6e9-25d442dab77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f0b01b-7b24-4de2-b4f7-a82ec6541ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10c742e-dd8f-4da6-ae71-85765df45d3e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba503d5-0692-4712-a057-f847fcd0f2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e097d2f-4e66-4b0d-a7be-b7ff06a87172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e8f1f3-1903-47c8-843e-513a70e27c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d38a0e-ebb9-40d8-9c65-14b0b71aee83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da095ba-06e9-46fb-9c2e-fbfc8518cbb0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55b2f25-f802-4e5a-8653-63cd6e533c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20123d80-c9b9-4c8d-9ee1-6bfceee0f832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc771b2e-fdb4-4850-aead-6a3541571441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ae4887-3f18-440f-b658-ee07e59447e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd4f2e9-5164-40c3-b4af-d9c88dc7d7f6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b57c875-acde-4b47-82e7-509fded9bcec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3d699f-a993-47e4-aa17-6d21d9a6f128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7e6822-d8c2-4445-b5e8-84ff0013cc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13fdc3d0-7ac1-41d8-a4c7-a627a5c23f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fca3f9-2e84-4e28-b48d-589eb5359166",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52314431-fbd0-4b04-9365-75b8f018dc04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7754c8a4-8417-47f6-82fc-e8c13cd17188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33925ea5-f3a2-46eb-9a8f-16d75f5446e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30171234-8e78-4cd4-97d9-cdc6c6e2da69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3618ee-325a-4696-9052-000d0758c55c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2480050b-e6e6-41f7-b9b1-8512852ba5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6e01a2-fac6-4078-9b21-c2e6bfca98d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b051ad97-9fb8-4d9b-a8e8-e528f24cbb60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf814f9-22e8-499a-86cd-8895022c77bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff3e281-7fc1-4e14-95ec-f86838073a39",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8489f3b0-8570-4a35-a4ef-f1cacfaa97f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d47736-8238-41e7-9f48-8ca4696ec089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fb6985-c001-4f93-8ca7-19774f4ed34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086d8fb0-589e-4c1e-8bac-e98b96153a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2a2541-ac93-4fd5-8f5d-a2a138d289d7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f5c2a3-8f46-4cd1-a4d5-27cb61278e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a621447a-a1f8-4d24-a466-c13eed126b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c63d02-e2b2-4a02-bf94-0968c554468c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c8f1e1-6d92-4159-86dd-592e7b51d9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea52cd7-e07a-4fa3-8f73-ea27438abaaa",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85aba03c-6836-48f3-b6b7-1fa190133c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08906212-ee95-49b4-909d-e04f83a38c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02544560-4833-473c-9b92-37be7512fa63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3275729-51e2-4a52-b5aa-680e11ddaf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f91f229-2d40-422b-acb6-5d4aea129019",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34182740-8949-4a81-9526-904004f36423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8507252e-4bd4-4125-91ae-f8cfc1808841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c393fa2d-8b8e-4961-878c-dd2d7f7f5f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614b0252-d244-4bc6-8655-4ae297da6deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8de4472-7eb6-4f73-9832-80952bd07ab4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9353d39d-6600-48ec-8776-cb36594cb393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c38e5b-95b9-4d53-9e84-d6d1dce909b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "159b1c22-b24a-4624-954e-9c14babc1c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d739ace7-c93d-4914-8442-9e71154b089e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715644af-4e55-428a-8ef5-e6c55e6314e7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac38d3d3-fab5-4854-9e60-1a218e7facb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1613a92-91d7-4b92-9f55-a9450f442794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166f9aaa-48a7-4894-a914-20f22c8f082b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12c5be9-8554-48cd-96a5-1e398c803231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1908a72-01f1-49b9-a27f-9c3f06f825d3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2e09ab-39bf-4b22-94bc-08c133831657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95414f7-fe54-444c-90b4-8e325e67b9b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b39013b-10af-4c48-92e8-6da8511c4404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08bd123-3a67-4dc0-935c-77052ed57588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffece93-8890-4382-90e7-7e4278f54497",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb57d5a-2ffd-49b1-98f1-2212bc11b497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42e8164-2df4-45bc-89a2-99823d690b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd29618e-8494-42dc-8fa6-03e58deefb31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4bffd6-712a-4e9c-87af-a5e0bc3a4bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae9cf49-f565-48e4-a0a6-c6da3175269c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8136202f-fbf4-4050-ac36-a8f6ccd8008d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92062681-0272-4dde-8548-4a96c49c4de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5910dd8-70f4-4be7-aeb9-3acc11d9feb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448e7607-794f-4911-9c00-84335b502820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b159ec-00de-4dd1-86a0-2dd785eb714c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4067edb0-55f4-41af-89a1-ffa27e7bb80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb1375d-990e-4f68-9109-dd2a2cf1108b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc8eeee-6dff-49aa-b29f-1cb5c6b8a8da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93675132-c332-4606-937d-8a1ae0a131c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9862e14c-b6d4-4be2-aa35-a1f6152afb56",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01389ba-2c02-489c-a57b-cb8642790a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2b9478-99e7-4dc2-a7db-fe55af321f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98af63e-6725-4a97-8b2e-5131e1a4a00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6922b937-efa2-4666-b0cf-31540ed5ec6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4501178f-6aeb-4f79-b9aa-f918593645a5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e92e0e-cbb6-4543-ba82-aa6d9d3f33ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e80aa9-b786-4370-84c1-e26a3fc6386f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38f17b4-4dad-40a5-a473-111f9bd0464d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961ffd68-829a-4ce4-808a-67493391e0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f439e372-d31e-4adc-b395-4cedf3f49113",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a248928-1a6c-4729-8d7d-cc3698259ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d389356e-465e-472f-b849-cedb20f2e63b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84242042-be6f-4a9b-a409-0eb041dbb439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1fd9395-527b-4fc4-a483-71a4629f1d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237a2406-d6c5-48df-9104-f0d0508d4b43",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d03518d-c09e-48ce-b675-9a07a498df0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2a4c88-9b8e-4c50-9fdd-d6074f2d66c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b348f154-0100-4cc8-a099-ff6d25773224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d57d54-a53f-46fb-8ad6-2b2856474782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0a54f2-aa3e-47b3-95b0-198a4d85d132",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746e0cc2-c65e-4a5f-8f84-9b7a39e513fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3fe381-c560-403c-820d-8cbe91d592a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6002c1ad-843d-4887-8c07-676df8e34009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e991a563-8f92-4d09-a744-9eee0207390a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532da28c-d400-48da-905a-97adbc00a19d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb126aa3-26ec-416e-84b1-2a40ae77fcec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0d62e83-ab07-4e3a-91fe-bf7730cbbfd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbad5d9-034f-4abf-bd55-237b80a36eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7573f4a3-c80e-4d92-9d7e-3cbfe334c123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6247ee81-e08a-428d-b7da-3b4343f15396",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c219d5-7d39-4ab9-ab62-9a3ab1542533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2786490f-f3e4-41d7-8675-9e3fd288f2c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b0479b-50e9-4da9-83ba-6402a30196e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d985832-5b62-4669-9097-bf5394abb81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73eb6429-1f1d-4586-815d-d5c16237a73c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf133656-c0ef-48a0-885f-ee1be40906f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4e102cd-f448-450f-8ae7-8411c60fdc2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde2d1b0-c2be-4868-b619-278d7132d95b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71973232-5a0d-427d-bce6-cd8bba064507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56617639-87dc-4036-8f2b-6ff845662ebd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1610ed-69b2-4bad-b5e9-e72a20817d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23ac4772-35c9-4190-a5eb-325e59286d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a448b7f-fb01-48c0-a411-4a9c949689fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ebcec6-3cbc-4ec0-adc7-81a3fe14b995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec3334b-a4aa-4cfe-9f6b-af396b26736c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc22d1f-21db-467d-a07f-19b0d0cf4037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a3b1b5d-eebc-48dc-aa08-135ee7026256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "650b1fe3-80a2-4e5c-aa41-1e190e0bc920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ea02fe-da40-4310-9e22-ac63a45f7c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61abe948-cc85-44a4-8b8a-af8f2e49b90e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4267da0-d770-4173-b363-75bfac98005b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7d15de5-5efd-44fd-87de-92940839443c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f27a41-058d-4cd7-95be-ebc30c2f1a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b1cec5-b519-4cfd-ac95-008183ec3d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b55b1f-e5ca-4a87-82a0-142baa72d18d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d418232f-5719-4006-b8e3-95347eb34d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcbe3b75-e5fe-4c50-8f3b-b2af77eb0e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f879f668-273e-463e-986b-77ed9035121e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f44ad40-f3be-459c-8f50-85f22b83693e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74605b96-f8c1-480a-ad69-65c849e93d01",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14ae8ce-bb97-4770-ae25-d0cff5b3dd08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f036505-5f2d-4a0f-a1f4-a165966e540e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2362761-0dbe-4cef-8216-caab53fb7632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb210468-f3d3-4b37-95cb-6a75833d9391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8aecef-23e4-4f8b-8339-8e78044dd96c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5f9f3a-1c26-4806-a454-9d577d69afab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14a1cb7f-a12b-4078-a148-49e9466e9813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c006d7c-b272-4084-85da-a7ffa49b8b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63aac05-621f-4a91-9646-89b7ae464507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c7a16e-ea05-4df6-b825-d9b86a7135ae",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12da757-64f5-44e4-bfc3-bba63556235c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b3b4b96-3bdf-4cc9-bdbf-cc1182b51d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "875b95c8-2eb7-4b01-b301-d99ad57f8b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee1fda8-412a-4d75-927d-2e60985dd97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45d60a3-6613-4bcc-a6be-7303a4f237ea",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bba71a-887c-418a-9006-04c707d8e0a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9160ebd8-2271-4d8f-8a06-b90761df8280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f3b770-d623-4418-9805-0b102d26743a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5a6d35-cf53-44d1-90b7-c9935462e61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1bb478-06c9-4493-a342-640adb66eaac",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f558d7-4501-45b4-87df-896cbf0d70ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1699652e-71fa-4708-85b0-bc345a29ea67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb31898-36f9-4e73-a7f3-cde95f874b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416d065b-59fd-4cad-bba8-3eb6014fc445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28dd118-74fd-4c3e-ba3f-b950feb18bde",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1aca3e-1fdf-4370-998f-6b65106e9db1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f17b27-2776-4a01-bc53-e6814c83b344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d94bd3-bda2-42d4-9e65-2c6401e66622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335e728b-354c-448e-ab98-4edbd318811c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e797a3e-5f0f-4028-954f-69d689300434",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81bc15e-4cf6-4c69-85ac-a49dc5624693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7bff743-b902-45f5-9b52-1c36c6524ae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a48311f-c375-4f85-a457-b594d0517e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d755077-d354-4562-b74f-edf8fea1961f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc773fe-1282-4e8f-b8e6-4031e3aeef1d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29aa50e-d438-4ce2-9d5b-654e5542cd4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "653e1403-754e-4667-aec4-155d3337314f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b45a37-0e72-4aba-94d8-49d537d39396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ef184b-2626-41d7-afbf-114f8d5d0fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d611d0-88b8-4bc0-9a83-6ee2f2c76c9c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8ac3be-c6f3-4258-8580-decd10a3e857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a14e0a14-4a42-43b9-bc64-f19b0a6049b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4054480c-97a8-4423-a026-9019016a913f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40d43a1-c2c9-47fd-bd90-fbd6a4f4aa37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280f57cb-fcfd-4d62-8c4a-cd47ffdda8c4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82372584-e907-406b-b1e0-8b5fe6bea0ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "383ee216-550f-4399-8f0e-7bb182aaab17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea5ea3d-1d01-4a9e-a60c-65bcca8df0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b857ce-b1d8-466a-8b32-9e9b8882595b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ce1de7-ced2-4a49-8fb6-e2b8a5606908",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbd15ad-08d5-4018-bbf3-fb6265ab6c46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ea20a06-4734-4561-b1a4-e2b04444a013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c217cf74-5423-4e0c-addf-7e7a8314a74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace55b15-a252-4dcb-a248-a550d9e19aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e1af28-497b-4ee9-8807-901c7f02c73c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7475d01-b908-4f14-933b-baf807eb0b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2a83c31-4eeb-4048-8c9b-6008287d5d06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c31ec0a-2308-4b95-ac7a-857181459639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce0c19a-3836-4f82-b603-fcd801702fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3101fe01-acfa-4e52-991f-4ad3fd3ace21",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a228b1-c6ec-4093-947d-7b6d32b2ea4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65506a95-b872-4a10-8fe3-d0d766e89db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054d0cf9-eb28-46bb-be40-ba421d34c1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f30b4e-c949-43bb-90dd-e69a4940f78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e3db7a-b23f-4208-9180-c1165470be22",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e417006b-4ae2-43db-acb7-283afe004fa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "270a84d1-ea84-4bac-8f1e-2a6e1e4054d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736a723c-5e4d-45a3-86ba-bd9ebef98b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807b2235-53a8-4194-93cd-add758a1bd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c91e2cf-422b-44c2-864a-82d7fe31d710",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86436e26-ebdc-4195-903c-595f6ea26bb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fec3e5f-fa95-4725-bf44-691c8584c379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16d25ee-8631-4c94-b873-afc462f5d143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b455fa-386b-4877-b9b6-711bd12f848e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f738a85-6a17-460b-89a5-132ab39adf02",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27941bc9-083b-4b23-9e7f-86735bcf50cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0a134a9-687f-4a24-89ec-04fa52670237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ad18ad-560d-4f86-ad9c-d1ace8f2e1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0d5813-c83c-4baa-aee8-4c924572cfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b322be0c-ada4-4347-9662-b50c821082c8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa7a1bf-6e0e-4c18-a1de-6bda2387386c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cac729c-71fa-4ae4-9bf4-82f5fee70a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45b44fa-749b-4f7d-aaea-75bb77282f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efeb89b-d480-47db-94a1-eb93ffb5cb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37aba4d7-6c02-46bc-ae7a-9e527a36a987",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e33cf41-64e0-4442-847c-6e00976d59cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3436d0c0-2f67-4e2e-bdfa-5292b825f432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffd150e-a5d1-475a-ac5a-b19d3f4ebf27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c8e33d-49f8-4d65-b149-c28d5a54c398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c646a93a-0807-4647-acdc-e5d849059fc3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64e3914-2ec3-43c4-ba8a-fdeffd6df124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05bf969e-b755-4f2b-85f9-64a0a36066ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ace3cb-b63a-4bfd-b4db-5839414f307e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7114e1-5834-46ee-8e7f-63e344dd2eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69cebd5-67f9-4aab-b577-b72d0af55159",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad630b16-3e57-4d04-9894-2ba67b9019cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bae17f8-8295-4aad-87cc-f5efd00586fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdc654d-e7be-4b24-b480-597dc83d4180",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a848c3f2-4eec-44f1-af57-84b5f1e33f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3643827a-c27f-4fd1-a480-56ff91293597",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9d4f3f-9df5-426c-bbc9-27f36c5c7931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ff32a16-2171-4e0c-9b5f-2fcc10a709e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0df421f-b603-4b2e-a3ec-053e00e0c3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17004861-fc5b-4287-af39-89926f9a535a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab2c9c7-6014-4c4b-bf5d-08c94cb3c206",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff7a245-bdea-4ac2-a5a2-d38909837853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23d51ae9-64a9-493c-8453-571a33e271fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33621a8-4eb0-4084-b07d-8f3ccac36177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4852041a-1af4-41a5-9fde-5a2d1da7edda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877d46b0-221e-4520-826b-0e2d457900d2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a971eda1-a9b3-4c4d-92a2-89f77a5680e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e018a03-6a8e-4bc8-82dc-d90ff65624af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db9371e-fdb9-4d19-a1b7-8c5f9361b29d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690e1ef1-9262-4698-a258-a40ce1b68fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cc30a9-813d-4159-a078-6542f643c8e3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bbc054-0b23-4a80-ad8d-c03c1b0e3229",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9dd3fe3-ad2a-44df-9abe-1e9ace1c1196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02008a62-ac31-4e9e-b667-96f429625f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3fa44e8-7835-4267-bca7-79fb4e8a4dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65e3c52-6e09-4c49-88b5-c2f46a011752",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b399b63-47e4-41ff-8e55-3a9deb69f84d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a52e9553-1b32-4e61-b395-4700ef0ebd45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a58ffc-a012-49dc-9de4-574cc42c3cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42596991-ed9a-47c6-9ca8-f6b17f34dc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe28da7-0ffa-44f8-956f-2477e00dbbad",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69aeb65d-1875-4305-9992-cea8843eb867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cbf72d4-29e8-47bc-82f9-2c1fd9fedbdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb04d8a-8a95-4110-8cb5-35d09aac66e9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84664a96-6977-434c-a08d-da322a8a4b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be54dc6-b954-4d51-8d88-d6dccb579968",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d5835a-49fb-4358-b76d-46305836e54e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "897dd449-c0d2-4f45-9dff-d2c093285e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cea9efe-3588-4c91-a86c-c13289a4a76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ff3fcb-8df0-4b4d-b0e6-486f118f45e2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd071164-aef9-4eb7-b68e-086a7bf0a222",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c339aeb-ce2a-48aa-914b-0063eb7eebd7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2feb7cf-d55e-4b44-9bd8-358a276fdba5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "14528850-6b00-40a2-89da-64676970ca8f"
                    }
                  }
                ]
              },
              {
                "id": "9ba5c16f-49de-4735-a315-35cb37eb7e28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6356c29e-4e21-492c-9914-0af4de402e5e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2897e0d-b90a-4d37-92d7-b6a6026ba9cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4bd0bac7-1bcf-4398-9af8-5f5e9a47de5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59217377-6291-4d71-8385-bbc95b2ccb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd8589b6-1b6a-4b22-b3ee-f552977660fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc37c749-ed02-49cd-a2f9-c7fcf5ed0b7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "096bc0e1-f5dc-4d56-9ae4-eadc0f7ffa59"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3504a525-3e93-4770-bca7-7f967495ecf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33339b63-4d33-466d-8f87-a028bf2eede8"
                    }
                  }
                ]
              },
              {
                "id": "dfb27bd7-2fa7-4c4c-96a3-172ad2f6a0aa",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "54187dcb-fb27-4a2a-a503-2fc85155d268",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8844536-d139-4ba7-82de-082a61432ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "890de1a4-dc45-45c3-b43d-2bb814247c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cecccb5-c9fc-4188-baa9-ee502ff4db62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e91f0f-3ee6-4942-b1f1-21a2922a8bf1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2491fd50-8b44-4d4d-b2a4-f9ca714827b7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73b2beec-26ca-4beb-b2dd-2c73a3fab099",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e121bcc5-95ad-4889-9840-6c8b9adab43c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a6f06c81-067b-4b48-a76b-83054d71c93c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21714b51-1ed4-482e-8d5d-f1d28d12afa4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4253281b-199a-4da4-bd83-b0bced6e09a8"
                    }
                  }
                ]
              },
              {
                "id": "2d570f1e-6252-4382-8d37-d2c853df8b94",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7308a294-3489-4ff8-84ac-00b9bfcd7744",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ed08b0f4-e208-4f5b-9f45-943704a895a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b417c0db-55fb-45eb-91aa-ef483056ccf7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8992e0e3-b6fa-43ee-8fec-340f94e90d24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1a432de-cf29-43c0-abb5-4dea172c67bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2f52f97b-5872-44cd-b1e9-438511daa774"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fcca6537-779a-4b0c-bbe6-4e3e0bfa9ace",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e488b1a0-8af5-4d3d-b99f-1366cbee8ec8"
            }
          }
        ]
      },
      {
        "id": "2e69ec7f-8e40-4e64-9643-6d46987d61b4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bebb5c81-d303-478e-a455-920b9eb518f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5032812f-9945-46e0-8681-e36072a9c4c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4d710c9-391f-4f31-8bb3-eff8f8d6cb21",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87a97df-eb66-43b7-8f56-7dfce13232ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e1e4916e-d0f5-455d-9032-cf642e2879ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277b867c-d9ef-41e7-afc4-2b02837224ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8b223a3-eec2-48a8-9be8-e8d604fc2f43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a9a63b2-a8e6-4615-9b4a-e8d64276ffe8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "994ae640-700a-4585-bc07-892d9220d617"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33128e28-3b29-4fc9-a6c3-72dc519b4578",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "585ab5de-5e2d-4f58-81a7-bfcb0bdcaaae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28572a8d-76f0-4f4e-ab24-bdf0fb614b41",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "42bb1ba1-b418-4536-947d-a400fc2974a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6eb5c867-09bb-4dec-84e1-8dbc8dfafe58",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99eb3ad6-6fbf-42b7-addf-6a23d07efa74"
            }
          }
        ]
      },
      {
        "id": "44f24051-e39b-4437-9387-399fc27f1a72",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2c860655-883c-4aa6-a122-570dada30e4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0052ebe2-209b-4219-8213-84551e053ea3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7edb17d-8433-45c2-9c48-cc201fdc9e4c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7971d8a0-119c-4ac4-a342-8ac60dcd2a55",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bd4b0dd-6543-419e-bfbc-c51418f0b98b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "583c1c3a-e085-4415-9f82-48e1025c9cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ae6efd2-3d53-4c01-92ff-58792cd4daa5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5811005e-6472-4424-845c-a2ddd5c0537f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77fd74f8-1969-4d56-9c92-2c12f1ec3da9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbdcfa76-2869-47e7-8d82-3f04d3bf3bcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b414498-0596-4a8e-86c3-1de5dc2b88df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "246e4b15-c2ed-47a1-8802-a87986474cd3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "88ce08dd-8631-4605-a1cd-273356cf52b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8256cddf-1865-476e-8d1c-ac527ee6389d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "050fb50a-47c6-4090-8e49-094be6c19ab1"
            }
          }
        ]
      },
      {
        "id": "9b6e90d6-29cb-4c89-a183-74c82c3720aa",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4e68b1d8-faa3-4e48-87f3-a9fdf3248506",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63a9f01a-3caa-4c6a-90d7-2e603262ee31",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "756b167c-aac8-4370-977b-b5b8b9ac7aea",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544582e3-e23b-4f1b-8200-3be86e3ac738",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e1e4009-fe49-4259-9747-af381b3ffd12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d41e30d-4eed-4e4b-8566-49a900239273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe90bf03-9d4b-4fce-abd0-47f81df17f1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4c398c6-c276-4337-8014-797012aaa399",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33b4c484-6c7f-4cec-af58-23a42b243950"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17b56602-d01a-4616-b169-6761a52265b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "233950e4-6124-4c20-b15d-c70acbad9527"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b1a052f-0ded-4b3b-afa9-4a625de48079",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "64c9398b-8eea-4833-8848-4d6ea103a041"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd20e6ad-cb82-4183-bd99-8669eef988b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2050854e-b855-4ad1-b30f-ccd4551d71ba"
            }
          }
        ]
      },
      {
        "id": "b37ada3b-2106-474f-9047-40fb0bf8adf5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a61e103-0551-4ce1-a9d8-64e6a6018531",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6106c02-2010-4dfc-8670-7cc133f043ab",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4c3abb88-5bf5-4465-b57c-193c7e0208fd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c0f96c2-1367-4d16-8d19-e6677c3dd55f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d02aa4f4-7fcf-40c7-8e0f-627e55cc7bd1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 683.2235772357723,
      "responseMin": 20,
      "responseMax": 7110,
      "responseSd": 872.1757829444031,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687221650691,
      "completed": 1687221829424
    },
    "executions": [
      {
        "id": "ab41a887-bf58-4760-8815-f9a7ea22cb9f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "88da2643-96d8-4991-a0a2-1bfedb8188c7",
          "httpRequestId": "fcca48f3-b2bb-4377-96b2-fe34c4116196"
        },
        "item": {
          "id": "ab41a887-bf58-4760-8815-f9a7ea22cb9f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dee039e6-2928-4876-95ec-b667d1627eec",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 0
        }
      },
      {
        "id": "bbaddb9e-27ed-4b3b-bae5-fc0c2b0bc462",
        "cursor": {
          "ref": "eecf8585-1d59-4504-9ebd-02d8f7ae409d",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "78bfb4ef-29d8-4f18-ad13-e262e9495785"
        },
        "item": {
          "id": "bbaddb9e-27ed-4b3b-bae5-fc0c2b0bc462",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8f06b76c-98d9-4164-87cc-fea2b96a8401",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "26ea6104-30e3-4279-b79a-6d840634b208",
        "cursor": {
          "ref": "c5479e4d-b179-43f4-81be-bf45c622afb1",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "da867ca9-1a1c-4718-96f0-f79c831a7104"
        },
        "item": {
          "id": "26ea6104-30e3-4279-b79a-6d840634b208",
          "name": "did_json"
        },
        "response": {
          "id": "f73c553c-97ba-4449-9687-7c9c6cf23213",
          "status": "OK",
          "code": 200,
          "responseTime": 1075,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c48e19-d69e-4233-b83d-3a22b0d4eea4",
        "cursor": {
          "ref": "7d20f4e5-5ba3-4dac-8949-3cd87e9afe9c",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "06830668-7d09-4347-bbd6-df091e03f093"
        },
        "item": {
          "id": "d2c48e19-d69e-4233-b83d-3a22b0d4eea4",
          "name": "did:invalid"
        },
        "response": {
          "id": "3aab8879-64b5-4f62-9caa-26f2ff86c463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c48e19-d69e-4233-b83d-3a22b0d4eea4",
        "cursor": {
          "ref": "7d20f4e5-5ba3-4dac-8949-3cd87e9afe9c",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "06830668-7d09-4347-bbd6-df091e03f093"
        },
        "item": {
          "id": "d2c48e19-d69e-4233-b83d-3a22b0d4eea4",
          "name": "did:invalid"
        },
        "response": {
          "id": "3aab8879-64b5-4f62-9caa-26f2ff86c463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d423c443-9c56-4214-ad4e-3df3fb385589",
        "cursor": {
          "ref": "5aa3e761-4a89-49b9-8426-7b9f6525c570",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bab33cb2-353a-4f17-ac48-efa96c6e3732"
        },
        "item": {
          "id": "d423c443-9c56-4214-ad4e-3df3fb385589",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b249d01d-c040-44a8-80c9-80fa8f2ca675",
          "status": "Not Found",
          "code": 404,
          "responseTime": 827,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b57e37-71bd-4613-a1d9-1ca161581765",
        "cursor": {
          "ref": "6b0e5745-eae0-4a12-872b-ff8d785c36e2",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e94258e7-2574-4b17-934b-26aa407c420f"
        },
        "item": {
          "id": "76b57e37-71bd-4613-a1d9-1ca161581765",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "81053b3e-ddcd-460a-921d-440d24b8ab07",
          "status": "Not Found",
          "code": 404,
          "responseTime": 657,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9874ff8e-63ce-40c7-9143-3fdaef38c85a",
        "cursor": {
          "ref": "0bbe932a-4ea2-4375-99f9-7d5a3a17ad78",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d452e13a-fdaf-4b84-8520-d06ac31adfd0"
        },
        "item": {
          "id": "9874ff8e-63ce-40c7-9143-3fdaef38c85a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "27e2992c-095b-4190-a9c3-5c704d228dc5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc68c34e-fad4-4134-8d6c-6ecb50d1e366",
        "cursor": {
          "ref": "87d29b9c-c9c8-4511-9644-f2f45fab5e8c",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d2ae9d1d-d0ba-47df-a1ad-273d6b09fd73"
        },
        "item": {
          "id": "bc68c34e-fad4-4134-8d6c-6ecb50d1e366",
          "name": "identifiers"
        },
        "response": {
          "id": "35c8774f-5a2b-4ca3-bf93-0ef492e49445",
          "status": "OK",
          "code": 200,
          "responseTime": 1340,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a250e13-c3ce-4145-9068-94fe317d2a1a",
        "cursor": {
          "ref": "52ef27ad-c14d-488f-8ee6-3d7e852bb80c",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "48a2f629-4585-433d-b138-0d49a0bad48e"
        },
        "item": {
          "id": "5a250e13-c3ce-4145-9068-94fe317d2a1a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "50f55a9d-a085-4ac4-a155-90682ef0298a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c343e9-5347-4a72-a515-9f30111cfa44",
        "cursor": {
          "ref": "ea655105-8446-4a03-94e3-e609fe7d37e3",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ac7cc8d9-e51e-4e9d-93d5-71cc55bd7cac"
        },
        "item": {
          "id": "21c343e9-5347-4a72-a515-9f30111cfa44",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "030e48a5-2c10-47f7-88b7-a5f091687c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c11938e-992b-4698-a0dc-2d08e8c0419c",
        "cursor": {
          "ref": "93ada6dc-35e4-4b84-aff1-bbb99df99f2c",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4827317b-43cc-49a1-bffd-95d623feed32"
        },
        "item": {
          "id": "8c11938e-992b-4698-a0dc-2d08e8c0419c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8e2922a0-881a-4a5d-b691-745924ddb089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae58b6af-79ea-4525-8d93-0a8f9e256d1e",
        "cursor": {
          "ref": "adafe1be-5f7f-4d40-bfd3-ca2cdfb6fbfd",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "87f5884d-b424-4f7b-a670-4ed838b23671"
        },
        "item": {
          "id": "ae58b6af-79ea-4525-8d93-0a8f9e256d1e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0686ec84-40b5-432a-894f-b6f47c3ec18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd01549-de99-44f8-956c-e38c69f9daba",
        "cursor": {
          "ref": "0ef4982a-58fd-4ddb-a680-5ea548c885b7",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e5a34f02-38f4-4ba7-af50-8f24dfb069ca"
        },
        "item": {
          "id": "dfd01549-de99-44f8-956c-e38c69f9daba",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "72bbb7b4-022f-47d8-a3fa-19a0eecf7093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd22f49-4567-4e28-8b13-c37f500edcea",
        "cursor": {
          "ref": "632c46b3-d18c-4adc-9d64-851bc7996b90",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ba12c7e0-a37d-4934-82f4-6e9f9d182556"
        },
        "item": {
          "id": "abd22f49-4567-4e28-8b13-c37f500edcea",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6e8759d3-83e9-41fd-914e-3d8b6e11dfd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97c647e-d07b-4603-8340-ba48924a532e",
        "cursor": {
          "ref": "5e2bc13e-b60d-43fc-bd8c-74387d655cd9",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "96050e6f-f064-4fcd-ad4b-5f350568c892"
        },
        "item": {
          "id": "f97c647e-d07b-4603-8340-ba48924a532e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6d2d9fe8-1439-420f-b5c5-d2229e29b494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565a9918-b823-4d7c-ba3b-20b06e5e40ef",
        "cursor": {
          "ref": "7d140b70-5161-4050-9fe7-f5f44fa81ec6",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1fb41c23-f2bd-429d-90d1-b8f49edccca1"
        },
        "item": {
          "id": "565a9918-b823-4d7c-ba3b-20b06e5e40ef",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b5d87a50-a00d-4039-98d6-e7a764ba2d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830062a9-d388-4e2a-b40f-b26606a120d5",
        "cursor": {
          "ref": "7f31a7ba-0485-4d74-9783-a6269e35a806",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a0ecaf4a-8c14-4cf5-8330-b15ce111beae"
        },
        "item": {
          "id": "830062a9-d388-4e2a-b40f-b26606a120d5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8e933313-d386-4f0b-941a-7fb8615aa2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f9d729-1fbe-4987-810a-5b33f302f5e5",
        "cursor": {
          "ref": "7c8cd060-9b57-4122-80fa-1dc489f55ea6",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5ffce7f4-749c-4211-a49c-1778754a8381"
        },
        "item": {
          "id": "41f9d729-1fbe-4987-810a-5b33f302f5e5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8ec686bd-d02f-49ba-8c74-419646fb362a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4c947b-a495-4746-82a0-4b408acf4afd",
        "cursor": {
          "ref": "175d0b7c-4b23-4676-a7c9-2ed06d2f1446",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e93fbeaa-52c4-479f-a3c4-289687a22c68"
        },
        "item": {
          "id": "2e4c947b-a495-4746-82a0-4b408acf4afd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9eadad86-537d-4fd7-9f21-16c71900a009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a1726c-c546-4e9e-9039-c389efc3731e",
        "cursor": {
          "ref": "5be5e9d5-a250-4e9d-84dd-fab8f24628be",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "773a241a-732e-4a02-97e7-7483b52c1b24"
        },
        "item": {
          "id": "27a1726c-c546-4e9e-9039-c389efc3731e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c430c2b5-00bf-4fd4-9bf2-b0421b3f1d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777f036a-7812-48a2-b6fc-da71d6ad43ec",
        "cursor": {
          "ref": "571c67b6-787c-45d9-853c-2eb6b98cdf2d",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1d4a5619-ff60-4953-a3c8-3b44a6a70f9a"
        },
        "item": {
          "id": "777f036a-7812-48a2-b6fc-da71d6ad43ec",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4f1eee5b-171d-4c76-9830-14349a687336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fc909e-d557-46d7-881c-e2110bd05b1d",
        "cursor": {
          "ref": "e7b7b745-b870-44d1-80b9-84116737f895",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "07e22ced-88b0-40cf-8001-1c0a5f092270"
        },
        "item": {
          "id": "51fc909e-d557-46d7-881c-e2110bd05b1d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "afe8b3ec-3c9c-4cb3-9096-8ab4ab059111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8cf0e6-6d96-451f-8954-7bbb38979434",
        "cursor": {
          "ref": "8db24215-873c-4867-a3d7-0f5214f46b90",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f1a395ba-f067-46a2-b3ce-d950f928fd74"
        },
        "item": {
          "id": "0f8cf0e6-6d96-451f-8954-7bbb38979434",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "00477f79-336a-4c9d-a22a-d8f46a28a0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ec7d74-c786-4ae4-acf2-955d5db701ad",
        "cursor": {
          "ref": "0c44cbe2-f4af-4c63-82ee-7ea52e4f9051",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e5d6dc18-ac81-46e9-8995-09062790a27e"
        },
        "item": {
          "id": "45ec7d74-c786-4ae4-acf2-955d5db701ad",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d26326b5-cb30-47de-a250-883cbb1c6926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2f7335-7bca-4f8b-b2d4-7ce024fac1e1",
        "cursor": {
          "ref": "c651b5da-08aa-4da5-952e-d73ebf64f731",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "92c482ee-198f-4e4f-a3a9-44cbe1e1af5e"
        },
        "item": {
          "id": "eb2f7335-7bca-4f8b-b2d4-7ce024fac1e1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a13eda38-4c79-4cbc-b3ac-699e6d27088d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00302140-9b23-4ffd-b5fd-3652a88fb141",
        "cursor": {
          "ref": "8714c074-2e2f-4b60-8c49-c4d6f0d1e0c1",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0d4d86cb-3527-4778-adc0-2050f5e8f968"
        },
        "item": {
          "id": "00302140-9b23-4ffd-b5fd-3652a88fb141",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "00156e1c-b8d4-4a07-a86d-f86a760f2319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0acd68-017e-446b-b675-70f533248ced",
        "cursor": {
          "ref": "aa8359f8-ee81-4756-a840-cc996456e39a",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a96ae6db-8cc5-47dd-bae9-f136de9caccd"
        },
        "item": {
          "id": "2c0acd68-017e-446b-b675-70f533248ced",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "31675b04-9b0c-498c-8466-e0448c5ef658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52bb8dd-cbf3-4741-a867-0cee4e236492",
        "cursor": {
          "ref": "a8ffd696-3fc4-4b66-bd03-d194c89f9261",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "35c0bde0-305b-4c6b-b5c6-625856f057b5"
        },
        "item": {
          "id": "a52bb8dd-cbf3-4741-a867-0cee4e236492",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0c76c466-547c-4b3f-8356-64e51f9b6c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef885635-b3a5-46eb-97b8-bb85d1e78a63",
        "cursor": {
          "ref": "19cc532d-ac97-48d3-9ac4-8c5ddeeeb3b5",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "688282fe-5191-42eb-a401-3fbc75023ad8"
        },
        "item": {
          "id": "ef885635-b3a5-46eb-97b8-bb85d1e78a63",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6ae1b09e-3e42-437b-8067-81a6cad4ac99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dd36f1-9b0b-4db6-8391-1be626999ca2",
        "cursor": {
          "ref": "8b18fbf4-e4f2-4783-9ccd-132cadb4f1fb",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "602d8dc3-723c-4050-9a2f-402ee67bc00e"
        },
        "item": {
          "id": "48dd36f1-9b0b-4db6-8391-1be626999ca2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "87312082-61bf-4cf3-849b-292ae3947ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e2fcf5-1650-44e8-a2a7-088d4a002b7a",
        "cursor": {
          "ref": "d58272ae-05df-4abc-8a33-840434fa38b7",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "df2ae1f5-5b6f-4252-acdd-9e4651df062d"
        },
        "item": {
          "id": "f0e2fcf5-1650-44e8-a2a7-088d4a002b7a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cfcaf9f2-17c6-4efa-bc93-b9e9b58ae324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d5ee0c-8ac1-42b0-950e-bf4c8604d5db",
        "cursor": {
          "ref": "ffb98a47-9148-454a-9f1c-3129f66f40ad",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f4bcd9e9-3c58-484c-a190-1fdd67a44e2e"
        },
        "item": {
          "id": "92d5ee0c-8ac1-42b0-950e-bf4c8604d5db",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "47d9ba21-f312-41c4-8f68-b8b6894f335a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85e68f9-a8be-48af-ac2f-bbd8d44979cb",
        "cursor": {
          "ref": "a737393a-e082-4fb0-b237-565ca412450e",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d50883d2-2b03-4a5b-97ad-2eb327e17859"
        },
        "item": {
          "id": "c85e68f9-a8be-48af-ac2f-bbd8d44979cb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "601d4411-1f7a-4a6d-9fc7-a269b81fd0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64876f6-0dca-4aad-8514-2153dd4030e0",
        "cursor": {
          "ref": "bc2b8953-ae21-483e-b965-a20a99111de6",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "384e06f5-7d5b-4910-ac3c-b1cf3469e9a9"
        },
        "item": {
          "id": "d64876f6-0dca-4aad-8514-2153dd4030e0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "81090d17-5ec7-44c1-b13c-b8c6190dc846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6f2054-650e-41e6-9976-a60d69c6083b",
        "cursor": {
          "ref": "37a20190-450e-4f4a-a0ec-46b288b0926c",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "282b002e-4d42-4b5d-882b-01a66cec5975"
        },
        "item": {
          "id": "6e6f2054-650e-41e6-9976-a60d69c6083b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "88b123d9-7e30-410e-ada8-e49a01995646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81bf3d7-c81b-4741-96e0-620a5c4c6689",
        "cursor": {
          "ref": "32b465e0-77c0-4ead-b831-d82f6a7175bc",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "62261d01-f44d-4a13-97cc-981159964288"
        },
        "item": {
          "id": "d81bf3d7-c81b-4741-96e0-620a5c4c6689",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1a8ee8a1-c727-48f1-82dd-41e54d6c99bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8af3e9-542a-4b9f-8f8d-cc047d72967a",
        "cursor": {
          "ref": "9dbecaaa-8aa7-46d6-a7ff-9555001847f9",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "17aabdc0-a7d3-4f2b-9b51-2f1e864f6900"
        },
        "item": {
          "id": "df8af3e9-542a-4b9f-8f8d-cc047d72967a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e0bcb37c-9249-4bd5-9b97-7b2643d19126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb547be-e324-495b-8514-37d0cf8b6ef0",
        "cursor": {
          "ref": "85bcf191-3e86-4762-9e17-e782121dba75",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b0631687-549a-4fe2-948d-860a6432bbe9"
        },
        "item": {
          "id": "4eb547be-e324-495b-8514-37d0cf8b6ef0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f2ae6764-be56-4a32-913e-9ad67da2b9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2680397-98f3-434e-a19e-fadeb06d6e4a",
        "cursor": {
          "ref": "4b16b583-e778-46ec-a013-f0cb3c85ce02",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6e00d9ff-7561-48fa-848c-4c2279662741"
        },
        "item": {
          "id": "a2680397-98f3-434e-a19e-fadeb06d6e4a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "22ef8c42-c315-4f2b-86e9-ba322f42b553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21be268f-337f-40b6-b521-e013e0b889f0",
        "cursor": {
          "ref": "888e7b7d-0333-4fdc-aef5-3bec35cfec9a",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8990601c-8866-4e1e-b9e0-f42c92ccd4f4"
        },
        "item": {
          "id": "21be268f-337f-40b6-b521-e013e0b889f0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2c356af9-75e5-49ce-856b-aac31ade89e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4fedb7-d501-4d93-8c0b-726d325467cf",
        "cursor": {
          "ref": "dc671b15-c607-45e1-a0de-75935a7b0447",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "49d18daf-32f7-4e11-93d1-d2d5820246a9"
        },
        "item": {
          "id": "5f4fedb7-d501-4d93-8c0b-726d325467cf",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c5c9d5c6-cff2-4d8f-a673-6a1d1fbb2b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552fb112-ac4c-4179-b3a9-d0b7c4a80d85",
        "cursor": {
          "ref": "011cb5f3-fe0b-4f85-aba3-ed995022b8b6",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2fa6331b-778e-49b2-93a2-1e74e79647c0"
        },
        "item": {
          "id": "552fb112-ac4c-4179-b3a9-d0b7c4a80d85",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7e7ec0e0-d945-4a2e-88ef-dd1dded3f71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea3e146-62ed-426e-9c51-09bd7b15f41d",
        "cursor": {
          "ref": "9f43ca6d-ea5d-44c5-9e5e-545a4402d700",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7b446424-81d5-4501-8a80-c3277a2ad214"
        },
        "item": {
          "id": "eea3e146-62ed-426e-9c51-09bd7b15f41d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "565dde4d-0113-4a52-8845-0e3bd770e83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95a93e7-e693-4b2b-b2db-740a0a77025b",
        "cursor": {
          "ref": "a08f5a28-736b-41a0-a76c-c098a5869972",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5ce3c5a4-154e-4840-8f89-90c79f94dcde"
        },
        "item": {
          "id": "d95a93e7-e693-4b2b-b2db-740a0a77025b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0b540288-543a-4ce9-9e8b-ce23ff2f8160",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 809,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf97621c-cc86-4bb9-be40-8b9115e46901",
        "cursor": {
          "ref": "89e295bf-ec7d-4fb3-887d-cc2bc4708394",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f418d5c6-4f10-415a-9f5d-eb9c13038828"
        },
        "item": {
          "id": "bf97621c-cc86-4bb9-be40-8b9115e46901",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3c6520ef-3cca-4f99-a498-4b4f187e5bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf735dc-4f8a-4c4b-824e-6bad44ae6297",
        "cursor": {
          "ref": "45457d8e-bb67-4a2c-8876-d92a7040d3f9",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5420e603-49da-42fe-be30-a6a4868cdbc1"
        },
        "item": {
          "id": "0cf735dc-4f8a-4c4b-824e-6bad44ae6297",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0f94fbb3-d75e-4e12-afa0-cf2e912ebd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1069,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea4bf51-bafe-4142-abb8-80d660945e5d",
        "cursor": {
          "ref": "fd7ecaad-9452-454b-b1b6-22b6c465427c",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "12d9fc78-fa07-4b7e-9655-e9a16ebb9969"
        },
        "item": {
          "id": "eea4bf51-bafe-4142-abb8-80d660945e5d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "43cf2f7b-c4a0-4544-b5a9-09333dfd1367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10858b0d-b2a5-4126-9402-0093d4a5b5c4",
        "cursor": {
          "ref": "4374172c-349a-4e1d-8c8a-a84f8591ef64",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "17877e07-c95b-4d2d-9c30-a2a86162b439"
        },
        "item": {
          "id": "10858b0d-b2a5-4126-9402-0093d4a5b5c4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "49027097-9bb7-4d98-a26f-93e22f78a9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d362a84f-4773-48cc-a368-a297eb8b1213",
        "cursor": {
          "ref": "bf4c8d03-be47-4161-af0a-cd953722089b",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "aa6e68bc-2954-4954-acc8-d399f8ea7e7c"
        },
        "item": {
          "id": "d362a84f-4773-48cc-a368-a297eb8b1213",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d0049305-7b17-46e7-9701-14491aeb4f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4431adc9-405a-4be6-b479-2303ecdfb876",
        "cursor": {
          "ref": "1e850ec5-9625-4d53-966a-bc325958befd",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "490c7b58-ab6e-4cd4-b9be-5d378be278a9"
        },
        "item": {
          "id": "4431adc9-405a-4be6-b479-2303ecdfb876",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3cd8b187-1495-447c-a117-08a3e4535772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86018d1b-eccb-4a10-88ad-475912e5b2fe",
        "cursor": {
          "ref": "6674c29d-6b19-4fcf-aaf1-e39fc1b64bd5",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d2e07b6e-81d0-4472-a2b0-4e163084f0bd"
        },
        "item": {
          "id": "86018d1b-eccb-4a10-88ad-475912e5b2fe",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4953eb6b-64eb-48c4-9594-17ace6bb9a3b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 836,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32994dbf-56a3-4ed0-8756-4a02bc43d7c0",
        "cursor": {
          "ref": "c850fad5-5409-4fd0-8fda-bcd6693c3046",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1a3410a4-f2bd-49b3-bff9-51ddbd7d31be"
        },
        "item": {
          "id": "32994dbf-56a3-4ed0-8756-4a02bc43d7c0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "47213bef-07bd-4e39-89c1-af58c757b919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784cd9d3-a91a-4489-b179-20c8626c9751",
        "cursor": {
          "ref": "7c78cdf6-5b35-4cd0-814d-fb362b8e924b",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a5634cf4-0398-47bd-9e55-55c4670d089c"
        },
        "item": {
          "id": "784cd9d3-a91a-4489-b179-20c8626c9751",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b34feb9c-7e51-45f8-8456-4e2590470ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d58f496-b6e0-4d41-b5a2-fb8a4fd9ce37",
        "cursor": {
          "ref": "a5c31bf2-afeb-4364-8037-7b2b8652c356",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7664671d-8944-429d-afb6-3587096e1ac2"
        },
        "item": {
          "id": "2d58f496-b6e0-4d41-b5a2-fb8a4fd9ce37",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "45af7c46-9033-450e-9480-90f0f3db3d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1b88ff-b71d-4861-95c1-d9d4c62bb572",
        "cursor": {
          "ref": "7b8076f6-7207-4923-97da-6509ca167da0",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "84317871-5bd5-4a7f-95f0-6baff8dbd384"
        },
        "item": {
          "id": "2f1b88ff-b71d-4861-95c1-d9d4c62bb572",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "19b2ddb5-caa3-48bf-8784-90d0aa96c46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c849c8-2598-4dca-8a33-02532d72d962",
        "cursor": {
          "ref": "cd3e4821-d40d-4507-828c-7609ac541c47",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "25b90264-cf85-426b-afd5-f317a4a2065c"
        },
        "item": {
          "id": "b3c849c8-2598-4dca-8a33-02532d72d962",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "00a2ff07-0547-4982-bcbf-f2621328d9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71b9e07-8094-43eb-b6c6-201caaec449d",
        "cursor": {
          "ref": "8be28654-87e9-4467-9f90-06d22a36e7ec",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "78074b7b-1299-4290-9d52-a109b60703df"
        },
        "item": {
          "id": "c71b9e07-8094-43eb-b6c6-201caaec449d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4a811d34-6c0d-4eb8-bd1a-ce539363285c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bf7e3c-974e-47a0-b3ae-7cec6cabb422",
        "cursor": {
          "ref": "107a8850-0117-4614-a056-3103c196959f",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "df64965d-7d15-4f42-b6dd-1a5f274a66cb"
        },
        "item": {
          "id": "26bf7e3c-974e-47a0-b3ae-7cec6cabb422",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f268156a-a271-4c83-b3eb-2a61f5f47207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6290e0-cc86-40d2-858b-0f4e950f465d",
        "cursor": {
          "ref": "eaad165e-1641-4666-8467-6225da8c0d52",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3f62633a-e545-4bce-9fc5-f1593744258c"
        },
        "item": {
          "id": "df6290e0-cc86-40d2-858b-0f4e950f465d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b4442e69-14d8-42a3-8cfe-18f062b15992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327af46e-ed4a-49fc-a07d-cc15c7a29cf0",
        "cursor": {
          "ref": "1c7b6ddf-ad57-4e97-a768-477203f752a7",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ccbc6212-7ac3-45f2-aca8-6f8e9000e89c"
        },
        "item": {
          "id": "327af46e-ed4a-49fc-a07d-cc15c7a29cf0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4ed8db3c-fe65-4c69-87bf-d3b2298ca1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca982974-3349-485f-84e6-355e5b6c5de3",
        "cursor": {
          "ref": "05217160-f052-4edc-8b6f-3de9a925e5f0",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "efb69a2f-6dee-466f-a84f-9b3d51750cd8"
        },
        "item": {
          "id": "ca982974-3349-485f-84e6-355e5b6c5de3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "50a99d64-daee-4973-8167-7147602ae908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1fdbcc-274b-42e7-b9d3-55ac988281cc",
        "cursor": {
          "ref": "f704f616-16e0-4c13-9cfe-7e572ad872bc",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "214f0189-7e62-409a-adb1-c8f6331670e5"
        },
        "item": {
          "id": "9e1fdbcc-274b-42e7-b9d3-55ac988281cc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f44e3a55-1606-42b7-8921-b84430498a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5869967a-c7ca-4813-8142-58ab1e75ad5d",
        "cursor": {
          "ref": "aba6b44f-2af3-4b88-8aa7-32b55ec3d47c",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e9c068f4-cbcd-4d30-b43e-99a376ffdb89"
        },
        "item": {
          "id": "5869967a-c7ca-4813-8142-58ab1e75ad5d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "76129840-9280-458e-8fd7-bc95a8d75961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b725f859-fa2d-4782-985d-8a0d23f86049",
        "cursor": {
          "ref": "ed60152b-d899-4b36-a4b5-622792cb38d3",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "23f1530a-fcb1-403d-96b0-fb0f7957b6e7"
        },
        "item": {
          "id": "b725f859-fa2d-4782-985d-8a0d23f86049",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1e08d610-a7f1-4789-90db-5427dbd7e8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca265bb8-312f-4bf6-88bf-2646bfda4369",
        "cursor": {
          "ref": "a6135adc-7d21-4a85-8440-d8f7bbe5489a",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "95a7b9f2-ff1e-481e-ae00-48358a32ed2d"
        },
        "item": {
          "id": "ca265bb8-312f-4bf6-88bf-2646bfda4369",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c76a0db2-d8c9-4951-87f1-b2fb877bd7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cec191a-7267-4b94-b9e2-8569c6c55de3",
        "cursor": {
          "ref": "aace046f-94a5-4dfc-afa4-95f63da17458",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c9b85464-e165-4fc2-a574-6596e095d05a"
        },
        "item": {
          "id": "3cec191a-7267-4b94-b9e2-8569c6c55de3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f0ebaf46-bf89-484f-8d19-030cab9025aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caeb6f0d-156e-441b-8ce8-db2aefddf345",
        "cursor": {
          "ref": "923f23d0-f346-49a2-bfe2-1304e056d8d8",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "40386f4d-20b0-4e13-930b-5dd6acbab3b0"
        },
        "item": {
          "id": "caeb6f0d-156e-441b-8ce8-db2aefddf345",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5e0fb9c1-a22e-4765-b1ad-ce72745fdb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edd49df-0791-4ce3-94ea-43d01a2cf7f4",
        "cursor": {
          "ref": "c6440c7e-db69-4676-91c8-ed025509af53",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "845af0d6-03d2-4e7d-a1e0-4b65176f1cbc"
        },
        "item": {
          "id": "9edd49df-0791-4ce3-94ea-43d01a2cf7f4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "19dfbcf4-5d7e-40d7-98cc-13bb2b87e5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edad85e7-75aa-4c8f-95a7-fb2849efc6a7",
        "cursor": {
          "ref": "996ea10f-2d0c-4ffe-9505-cbfd4974cc0c",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bb730606-b6fc-462a-84d1-800583d2a6a3"
        },
        "item": {
          "id": "edad85e7-75aa-4c8f-95a7-fb2849efc6a7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "371aaa45-e4b4-4179-a328-7da1145c065a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5291b7-e76b-4519-9651-32cf2d84c7a1",
        "cursor": {
          "ref": "4247fbbb-c759-4d5d-922f-2435c02eb72d",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "96312d0d-178c-43de-8b1d-e7ff6e00ca34"
        },
        "item": {
          "id": "8e5291b7-e76b-4519-9651-32cf2d84c7a1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "aa5d3042-fb66-4e1d-b74a-425e2ef44d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7758170f-b416-43f2-91c4-39495745149e",
        "cursor": {
          "ref": "eab0b84f-ad5b-4314-a227-f98c96d2fa9c",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0e4d63eb-19c2-40a2-86e2-01b32aa36fdb"
        },
        "item": {
          "id": "7758170f-b416-43f2-91c4-39495745149e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5631cb5f-7224-4f75-a642-16a3cbcd855c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bdb560-e119-4cc8-bc1a-a5c31c0bf8e6",
        "cursor": {
          "ref": "7adf9b79-5554-46ee-8133-58bbc78f1d2e",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0a9df7fa-1eb2-420f-ac49-aeafa731feee"
        },
        "item": {
          "id": "d4bdb560-e119-4cc8-bc1a-a5c31c0bf8e6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b72d4046-b2f1-4638-b881-663f8d71597c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccd0f45-168d-4c76-82a9-65b46208f558",
        "cursor": {
          "ref": "9ca7efdf-4d54-4400-9f41-5d1210845295",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "413f0d07-cc43-44d3-84f3-f270162eedeb"
        },
        "item": {
          "id": "4ccd0f45-168d-4c76-82a9-65b46208f558",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8bf12358-bbc9-42d0-8c40-b7ec5570c04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecac9d2e-f897-471e-bfe7-eea5527d822f",
        "cursor": {
          "ref": "edaccfa2-2be1-4307-96f8-068ac1de7186",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c9d153c3-b24f-4a36-9556-5c4049586d00"
        },
        "item": {
          "id": "ecac9d2e-f897-471e-bfe7-eea5527d822f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6c9856b3-d042-4532-a8b3-50c4a29b8a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7329eebd-7d50-4346-b91d-ffca648ba3ff",
        "cursor": {
          "ref": "0abf1c74-98be-495a-a9bd-329c6e0a297a",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "67ac6bfb-cff4-41d5-840b-b1af57ad3ecf"
        },
        "item": {
          "id": "7329eebd-7d50-4346-b91d-ffca648ba3ff",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b7a7eb62-c4db-488e-8a72-65fdefc998ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f48f036-fe97-40fb-b771-d301a6b3a854",
        "cursor": {
          "ref": "e75d2a2a-0319-433e-9e59-b50057b6a157",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "134c35d4-6e8a-4a2e-9675-291f45fe27a3"
        },
        "item": {
          "id": "0f48f036-fe97-40fb-b771-d301a6b3a854",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "aba05ccb-3c3e-4c82-ba80-9a0610b5a982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b1401d-37ee-4dfd-9fdf-94cb6f01dabc",
        "cursor": {
          "ref": "e328d44b-f646-4d25-b39e-4b120460fc9a",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "85a0dade-98fa-4fd6-abd3-6a64037edddc"
        },
        "item": {
          "id": "87b1401d-37ee-4dfd-9fdf-94cb6f01dabc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "290a569b-1eaa-44f1-8c41-36b4796da1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4f4b52-b2ba-464e-b2d1-4d79998f5f65",
        "cursor": {
          "ref": "aa22922d-48ff-4963-8aa3-e4e8a7d0674e",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "06525062-1fde-4a16-bd21-e7654f71dba2"
        },
        "item": {
          "id": "7f4f4b52-b2ba-464e-b2d1-4d79998f5f65",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6400100f-4775-48a5-8fd0-aa4a14868e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95740243-3951-4e2b-96b7-7f0df9d17496",
        "cursor": {
          "ref": "b4f6dff1-7c78-4e25-96ab-2cfc377948c3",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "83b92d90-ae38-4302-bde0-cc1f9250f54d"
        },
        "item": {
          "id": "95740243-3951-4e2b-96b7-7f0df9d17496",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c5781017-977c-4a00-aeb1-25c24e5aa425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7023979a-924f-47d1-ad17-467a9b7d4af7",
        "cursor": {
          "ref": "d990ccdc-b7a3-4376-b613-79b80a513fc2",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c072140a-6bb1-4b53-9cf8-62d017a96fd6"
        },
        "item": {
          "id": "7023979a-924f-47d1-ad17-467a9b7d4af7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "43cd59f1-7267-4931-8879-f481f52c14e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06aa897-1818-4106-9105-bf1105094545",
        "cursor": {
          "ref": "eb4c354d-6a26-4acc-b7d3-022f7ef3e1c5",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "691f36a1-78b9-4445-918b-24af0cd96673"
        },
        "item": {
          "id": "d06aa897-1818-4106-9105-bf1105094545",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a4cb9be4-6a09-4ba4-92c4-2c7b68c44920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ef0472-eb84-40e1-953e-d889eb0d178c",
        "cursor": {
          "ref": "a2bc8855-ab9d-4593-bf3c-c08d7b34ceee",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b2cb7b38-810b-42a0-97ab-92154607f272"
        },
        "item": {
          "id": "35ef0472-eb84-40e1-953e-d889eb0d178c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3ea37970-f3bb-48a3-9206-2923cd7d8944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219d5d39-2a78-47f6-8c29-943e53ab18f3",
        "cursor": {
          "ref": "b3df7d12-86cd-4da8-ba2f-4fc1aab04539",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3c469d00-d846-4b62-8a1e-0cfec764c851"
        },
        "item": {
          "id": "219d5d39-2a78-47f6-8c29-943e53ab18f3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "586c4960-ee31-40ac-9a08-8f2b516dfcca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e81aea2-3953-4b84-9449-37e04a41f2f9",
        "cursor": {
          "ref": "fed50a23-6fd1-4182-a130-9c5ffa7283ac",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2908239b-f935-43dd-9e5b-76b5ef92e58a"
        },
        "item": {
          "id": "8e81aea2-3953-4b84-9449-37e04a41f2f9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fb9c2d35-2cf7-4673-964f-ddfcbb47635e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1fb4af-9129-48d0-a9b1-8beb7acf4aec",
        "cursor": {
          "ref": "323eddcd-2048-493e-9a7c-8b16ad722ed0",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c307864c-d556-4213-bd98-8b97e10d022a"
        },
        "item": {
          "id": "fd1fb4af-9129-48d0-a9b1-8beb7acf4aec",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "acd76667-ecd0-42bc-ae45-0fe50fe7858e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c52cd03-67c0-4904-a5bf-e5dae7c75e9f",
        "cursor": {
          "ref": "5d3689af-aad4-4597-9ac0-c82a2da0ca5e",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2c7f60ed-df20-4e7b-a6e2-17a1f9ec458d"
        },
        "item": {
          "id": "8c52cd03-67c0-4904-a5bf-e5dae7c75e9f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e8b437b7-104c-4bd8-8f0b-e45f3efea067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3285726-2e45-4c3e-867f-3b80690337c9",
        "cursor": {
          "ref": "1814296a-d126-4221-aab7-9ad9d29e4cbf",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f0d0019e-2eb4-4c14-9c44-5bf119c237ed"
        },
        "item": {
          "id": "e3285726-2e45-4c3e-867f-3b80690337c9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f161754f-67e2-4fa9-8308-db9a841c0675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e102127e-308b-4a81-b79e-8dd497e5a04e",
        "cursor": {
          "ref": "d6b6104b-726f-40f4-90fd-46b3a597af68",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c4c0e624-c0e0-48f6-88d0-b83d368452fc"
        },
        "item": {
          "id": "e102127e-308b-4a81-b79e-8dd497e5a04e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "198c153b-e510-4a0e-8d75-51f8075744f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1223d8ba-33e2-45c6-9ccf-5e16cb9ac19d",
        "cursor": {
          "ref": "c65abb1f-ff43-4694-9c35-f8ec5723b550",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4f5bbf26-da72-43ad-8601-90561fac5a44"
        },
        "item": {
          "id": "1223d8ba-33e2-45c6-9ccf-5e16cb9ac19d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "40101537-f3fe-4556-8da7-b41b2910ac7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0752643f-5048-48a6-9d39-a90cd28ea7ae",
        "cursor": {
          "ref": "4d0ccb5a-836e-4f7d-b147-2eba0ad62dc0",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f35f5cb4-116e-40c9-a15d-bd9007eed54e"
        },
        "item": {
          "id": "0752643f-5048-48a6-9d39-a90cd28ea7ae",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "81ba5b1d-402c-4a74-9966-81fd21961ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543fdda1-3e9a-4046-92a5-0936392ee737",
        "cursor": {
          "ref": "9803b107-26e6-4337-80c9-4cbf308e4184",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8b57bf7e-600c-4224-b6e5-72e3287b697f"
        },
        "item": {
          "id": "543fdda1-3e9a-4046-92a5-0936392ee737",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "23313325-f023-4e72-a38d-1a280bf6ee23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a894bc31-2b7c-4023-9bfa-2d337d83a631",
        "cursor": {
          "ref": "845e412d-b7ff-42b7-accc-5e2d265a1918",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bcc779a6-8658-4e68-bc91-af503e084db0"
        },
        "item": {
          "id": "a894bc31-2b7c-4023-9bfa-2d337d83a631",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5ba96cc8-3aa7-45e7-a21a-e60b09896186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde34a02-ad9a-455f-b1c0-0fa3dfc10bbd",
        "cursor": {
          "ref": "8b8730e3-f45b-4876-b413-25b9bfa94333",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "045df71b-d07c-4f02-88fe-97a1cb366faf"
        },
        "item": {
          "id": "fde34a02-ad9a-455f-b1c0-0fa3dfc10bbd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dbb05fb7-e5d9-4917-81a8-b734c7309f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066dd9c5-8518-4a4a-8ff6-c55b86c985d9",
        "cursor": {
          "ref": "b051cca4-9a1e-4d9d-b030-0fbb5c3b2bcf",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "878ec3bf-ed4f-456f-9394-b99cc5fd1184"
        },
        "item": {
          "id": "066dd9c5-8518-4a4a-8ff6-c55b86c985d9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4b681117-e7b1-4949-8a35-97bd58979f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ba91d2-ed57-49bd-94da-c14c44025a06",
        "cursor": {
          "ref": "c58e68a2-4de6-4f8a-9dab-f4fa733f7bf5",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fe4c6d6d-8167-4f11-b5bf-0710401ff45c"
        },
        "item": {
          "id": "36ba91d2-ed57-49bd-94da-c14c44025a06",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "91d13bb6-d852-43b4-b488-4ed312b85c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cd1a16-d2e3-47d1-8ef8-1bf8265fae94",
        "cursor": {
          "ref": "70466862-8daa-48e3-9264-8a1cfe15e412",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cb2a5051-fcef-45f4-a908-5c799101f98f"
        },
        "item": {
          "id": "d7cd1a16-d2e3-47d1-8ef8-1bf8265fae94",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2c896b91-26f4-44d1-a4a1-f9d98808ecd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a83cd0c-74a8-46b8-b13d-5a534b20ebfc",
        "cursor": {
          "ref": "fae0e0f3-4095-464b-b36d-f9b8b4967e44",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1f487ef2-4425-4cc4-838b-d8e69a789dc6"
        },
        "item": {
          "id": "3a83cd0c-74a8-46b8-b13d-5a534b20ebfc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "85894ffd-351a-4285-a07c-21ba36299a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988fe192-b10f-49c0-8d49-314d6058eb3f",
        "cursor": {
          "ref": "551f7df6-582d-4fca-a055-9ec1865deecf",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "69336881-80a9-445a-8898-74901e6652b9"
        },
        "item": {
          "id": "988fe192-b10f-49c0-8d49-314d6058eb3f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e0dd3182-37b9-4303-9dc6-c1453c458660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b2d9e1-0b22-4584-9505-63554b582d58",
        "cursor": {
          "ref": "0f69d30d-2e86-4551-9220-803975996bf5",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f9bdca4e-e9d4-4d1d-b2a0-1c7cae8e2774"
        },
        "item": {
          "id": "f0b2d9e1-0b22-4584-9505-63554b582d58",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ecc14af1-5ac7-4581-a71d-33a4224051d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6d18bf-98f9-4d78-b32f-b9e5787793ea",
        "cursor": {
          "ref": "488ad2c4-990c-4fa8-95a7-8d7a7bc13fa8",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2e8a510b-e72f-4ced-92e6-32331b0ea80d"
        },
        "item": {
          "id": "6c6d18bf-98f9-4d78-b32f-b9e5787793ea",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "349e39f6-3776-4165-8224-8217043f7bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07269dd-6a8d-42c6-8124-3f181d3048bf",
        "cursor": {
          "ref": "3e6129c1-692f-4a1f-b3b9-bc189b4e2432",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "298f226f-4be7-4fc7-a1cc-0f567419c131"
        },
        "item": {
          "id": "d07269dd-6a8d-42c6-8124-3f181d3048bf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b6c0e46a-bd62-4f41-b488-cb826d363df4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98eb749-d678-4ebf-a06b-4a364509a33c",
        "cursor": {
          "ref": "ce0a1f0b-6e2f-48b1-8917-39dc47d3dcba",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7336ef32-b0d1-4c7f-b006-e743566811c4"
        },
        "item": {
          "id": "a98eb749-d678-4ebf-a06b-4a364509a33c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8be08197-22bc-4bdd-9cfb-a3130f348608",
          "status": "Created",
          "code": 201,
          "responseTime": 6089,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c285431-6cb9-4903-83f5-43e10f51e4c4",
        "cursor": {
          "ref": "2cb262e9-2e02-41a0-9cc9-b13c7ef6fb31",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a53636d4-ce8c-459f-84dd-33a1f97412c9"
        },
        "item": {
          "id": "4c285431-6cb9-4903-83f5-43e10f51e4c4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8f2848ac-740f-4fcc-88ac-9b1d6c85fcbc",
          "status": "Created",
          "code": 201,
          "responseTime": 6188,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e92f050-9e70-46ec-a9f7-57f08536a9f6",
        "cursor": {
          "ref": "e4c5377d-2091-497a-9992-50540bacfa85",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a01ee2b0-8172-4dd1-8d3d-a408eca7fd04"
        },
        "item": {
          "id": "2e92f050-9e70-46ec-a9f7-57f08536a9f6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ed7d9407-476b-4490-81b6-9d84d5f722a5",
          "status": "Created",
          "code": 201,
          "responseTime": 5709,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "335d524c-4125-4ad8-b511-a672551eaf32",
        "cursor": {
          "ref": "f446843b-b49a-446c-8e2a-cd1a21797341",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b205aaeb-fb2e-4c65-beb1-63b401faf53e"
        },
        "item": {
          "id": "335d524c-4125-4ad8-b511-a672551eaf32",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1e97620f-a138-4ccc-a483-e3e2fe1e1c71",
          "status": "Created",
          "code": 201,
          "responseTime": 5396,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e38446-a43f-42dc-be21-a430f46abe1c",
        "cursor": {
          "ref": "9be0c336-5c60-4455-b74d-0d681df0d38e",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "053dd54e-54d7-4610-8c8a-7a6f7b06bc5d"
        },
        "item": {
          "id": "81e38446-a43f-42dc-be21-a430f46abe1c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "312c6662-ba59-4d3d-a390-515be92dd5e6",
          "status": "Created",
          "code": 201,
          "responseTime": 5745,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eaa477b-f245-4a2a-a6af-6d0b3066343a",
        "cursor": {
          "ref": "a0d0fbb7-9a08-4de7-b7c6-a2559af4a8af",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5f76f303-302b-4dc1-ba58-3c6d1e12bd5f"
        },
        "item": {
          "id": "5eaa477b-f245-4a2a-a6af-6d0b3066343a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e26dd304-1e59-4414-bfab-2d75f55af815",
          "status": "Created",
          "code": 201,
          "responseTime": 7110,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fceee39-ccda-4f92-bbf9-133847647df7",
        "cursor": {
          "ref": "fa3f12ff-ae3a-420d-997f-e4c8f3d9ebf2",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "13452fbe-6a6b-482c-a63f-f876c55f5db1"
        },
        "item": {
          "id": "9fceee39-ccda-4f92-bbf9-133847647df7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ce1f6153-7d46-476d-8f7d-f0f5442dbf32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191d5143-64a8-4236-bd40-875870adc7c2",
        "cursor": {
          "ref": "3ab286bb-90c4-4d7b-bbe5-e5caf1c8e7f3",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "323b6cba-b32d-4cc8-a8c7-ae5151ed906b"
        },
        "item": {
          "id": "191d5143-64a8-4236-bd40-875870adc7c2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "744d505e-c26f-4302-b22f-8282daadbb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe73bec-487c-4481-9e77-97a3e234c8e2",
        "cursor": {
          "ref": "ce5d852b-754d-49ed-9eaf-1008bcbbc367",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cf020379-ae29-4b2f-ac80-fa5c17f0f10e"
        },
        "item": {
          "id": "dbe73bec-487c-4481-9e77-97a3e234c8e2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6c9bb960-12e0-48b1-875d-4d340bbb9792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586857fa-e22c-45f1-8f28-c1c6c0c36df2",
        "cursor": {
          "ref": "3002c816-a800-48a3-b2ca-c0172a61ae87",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "64435221-eb9c-4d42-b625-cdc82e9e6f4d"
        },
        "item": {
          "id": "586857fa-e22c-45f1-8f28-c1c6c0c36df2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0f37fccc-d3cd-497e-8ebf-3a9597f39bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2ac9b9-3cc7-40ed-8274-e0552aea400a",
        "cursor": {
          "ref": "0a4cb98f-8f5a-4fd2-814d-5c9cbae06554",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "05fac03d-f8a3-4f33-b0bd-5a5db8430e13"
        },
        "item": {
          "id": "1f2ac9b9-3cc7-40ed-8274-e0552aea400a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "04194729-7431-4986-9a9d-695d34ad2e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361541a6-0f44-4a30-80a3-bc208d8402d2",
        "cursor": {
          "ref": "e5b253f3-92e8-41b2-8b7c-a79c7510e538",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d696b6c5-b9d5-4b37-9293-977568f28608"
        },
        "item": {
          "id": "361541a6-0f44-4a30-80a3-bc208d8402d2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4d35a5f1-0f01-4d77-ba6a-f17bcd6b3faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c283869-06dd-47b7-9b3c-dfa1ee4b8827",
        "cursor": {
          "ref": "f0b10fc7-3435-4127-ada2-ebe547e8c051",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "148e798b-a2f3-4d36-80a7-2c0339818fee"
        },
        "item": {
          "id": "8c283869-06dd-47b7-9b3c-dfa1ee4b8827",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "68adc861-cd76-47b6-b748-d299f95baa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a210fd52-fef3-4275-b89c-a6e15e028f75",
        "cursor": {
          "ref": "e2f07140-a973-463d-b4f5-0a9c311d3dd7",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "48c28b26-ab8b-4944-809e-d471d405485f"
        },
        "item": {
          "id": "a210fd52-fef3-4275-b89c-a6e15e028f75",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3ad65f8b-c409-4d72-9845-73452b8d8b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83044444-b781-43a4-ad76-8cad47b03199",
        "cursor": {
          "ref": "8d0f2e04-20e3-415a-b402-22fa78761964",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6819ce47-2dcb-4414-adf7-8085965ae5ee"
        },
        "item": {
          "id": "83044444-b781-43a4-ad76-8cad47b03199",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ae6d8f2a-dbba-4407-90bf-c6549de3aa3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b882e78-80cb-43bc-b933-632ae0df0588",
        "cursor": {
          "ref": "523d10d0-c777-4f75-802b-f96d09e9667e",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8c0715b6-3a06-4f71-be4f-6bdcab94bb64"
        },
        "item": {
          "id": "3b882e78-80cb-43bc-b933-632ae0df0588",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5da8de12-a570-4190-bf0f-67c5464b6e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cf1465-0bb8-4d19-a515-7be347f7b288",
        "cursor": {
          "ref": "7ba63e8a-c16a-4987-b0bd-f2e2ec298e9b",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3011fc00-f8a7-4227-af95-c030a9e43a24"
        },
        "item": {
          "id": "20cf1465-0bb8-4d19-a515-7be347f7b288",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "32a56fa8-9136-460c-9c14-a93f6c70b5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452bf74c-48b7-46c7-a405-a99a4946fe88",
        "cursor": {
          "ref": "feeddec8-f720-4c65-b8ae-5e3befeaa3b1",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8f64e638-c429-4e73-a003-c3cd507ad910"
        },
        "item": {
          "id": "452bf74c-48b7-46c7-a405-a99a4946fe88",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4e7f3f71-b77e-4a8f-b69e-d5262e54c7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ceada43-1ed4-4b8f-8844-3f1e3c3ca05b",
        "cursor": {
          "ref": "ec6709b9-279f-46b2-b45e-37a0c40d865d",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "24dcfed9-23aa-4179-b3a6-39202c85455d"
        },
        "item": {
          "id": "0ceada43-1ed4-4b8f-8844-3f1e3c3ca05b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6ca61d40-261e-43d3-9fb2-f7f154e83f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844721f5-679f-4d77-a340-bbbb4b428224",
        "cursor": {
          "ref": "a9018cd9-397a-4ca3-94e3-438fa32070eb",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c6876b86-e6bb-476e-af48-266d10344556"
        },
        "item": {
          "id": "844721f5-679f-4d77-a340-bbbb4b428224",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "239ab1c2-3763-49e9-b1ef-649ade7907be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824dfc4e-4149-444b-9f21-1ba386fa487f",
        "cursor": {
          "ref": "04178eee-a17b-4160-8434-631026cfd0dc",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0f765991-6045-47fb-89af-494f52dc7289"
        },
        "item": {
          "id": "824dfc4e-4149-444b-9f21-1ba386fa487f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1590d77c-645a-4f26-ae45-5c7cb7c8040e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b42b8bc-7441-472f-a85c-4ab293872289",
        "cursor": {
          "ref": "40200ed1-76eb-4564-8897-59a582818ac4",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ee9f9028-dd13-4269-8a5f-8a4c70a60e8f"
        },
        "item": {
          "id": "0b42b8bc-7441-472f-a85c-4ab293872289",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7ca6eb40-ce3e-4ab9-bd08-4e3afb7b5a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8c579f-c49f-4f31-ac4b-ded1f201c5f3",
        "cursor": {
          "ref": "31046320-c586-4dd9-858b-550337927e95",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "605f236c-23f1-410a-b27d-10b6224f2a83"
        },
        "item": {
          "id": "4b8c579f-c49f-4f31-ac4b-ded1f201c5f3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f0f0e047-1ce2-461b-92b4-4b40c90e31fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccc31a3-da3a-487b-9fa0-e7a71ee2e57c",
        "cursor": {
          "ref": "f396c9e9-6c0f-4e43-be8c-46b0f1376ac3",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "623ef5c4-c53a-4863-aa46-4e16a71435fd"
        },
        "item": {
          "id": "fccc31a3-da3a-487b-9fa0-e7a71ee2e57c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3dcd1aa3-050b-4690-ac4b-489dfdd54d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2d5aee-0bf4-49b3-99f4-6091a0024625",
        "cursor": {
          "ref": "c715d001-09ca-45f3-b754-1a9cc614f779",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3c461e2c-76ce-4e95-8569-b2af30732eae"
        },
        "item": {
          "id": "4b2d5aee-0bf4-49b3-99f4-6091a0024625",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f6212cd1-c48c-49e0-8a73-6ffc207d7b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4126559c-7bc7-499f-ba61-db84dda7a2ef",
        "cursor": {
          "ref": "c2a1c68b-adee-4a21-bf2d-03089a36c0ea",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4ab7fc90-0c1f-42c6-be51-772470d3d762"
        },
        "item": {
          "id": "4126559c-7bc7-499f-ba61-db84dda7a2ef",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d065657f-86d5-48d5-aa1e-d280b75298b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41597e7e-1e47-4955-840e-cbc9279c26da",
        "cursor": {
          "ref": "d2681d39-129b-4965-8d53-706b0570010b",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6b542fe7-83f1-4652-8bb4-7e016949e2fc"
        },
        "item": {
          "id": "41597e7e-1e47-4955-840e-cbc9279c26da",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "17ca2f86-4c7c-4434-afda-8e3953a8b59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9139f1-de47-40a5-a6b2-606866a89a68",
        "cursor": {
          "ref": "bac11561-1e4a-4380-a667-c00c5bf61c5f",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9f1ca29f-f429-4a61-bff7-20f4e029905e"
        },
        "item": {
          "id": "7f9139f1-de47-40a5-a6b2-606866a89a68",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "31128590-b083-4bd7-b875-e8b3961647c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153bcb15-c515-4a06-a0f8-38499aa440dd",
        "cursor": {
          "ref": "8a78e393-9c00-49b9-8dfc-312f3126e020",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1e912ee5-778b-4aeb-9021-c4f185ea4a74"
        },
        "item": {
          "id": "153bcb15-c515-4a06-a0f8-38499aa440dd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "30b8f2f3-6c91-4dd5-8abe-18702c4a9470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61544390-eb3f-47d8-81e2-83793fa7df52",
        "cursor": {
          "ref": "1410dce6-529d-40dc-a133-13f87a51e8b9",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "72946740-b165-405a-a4b3-d780f8e30bc1"
        },
        "item": {
          "id": "61544390-eb3f-47d8-81e2-83793fa7df52",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e3d71b42-a8c5-4298-8a68-4ab14b8c3e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f408b4-b234-4a4b-baf4-c26f65b0bfa5",
        "cursor": {
          "ref": "04e05af8-b8db-47b0-af14-b23c4e60561f",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6c419aca-57f4-48a8-a27b-0e9cfc8d72fc"
        },
        "item": {
          "id": "e8f408b4-b234-4a4b-baf4-c26f65b0bfa5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9e706114-6718-4cd5-af47-7b6a2bda7eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e09972-d5ba-433f-adfc-e746e76a8971",
        "cursor": {
          "ref": "cabc298d-f646-49dd-a10b-4fccbc011b53",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "91796b0b-61cd-406a-ad6e-036bf27a400a"
        },
        "item": {
          "id": "79e09972-d5ba-433f-adfc-e746e76a8971",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "031a921c-a93f-44a2-9fdf-4b74eeec06d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e624a98-3389-4827-99ff-fc0a5d08369c",
        "cursor": {
          "ref": "5117f8c5-8cc7-4a28-a762-5f6a4cbad29a",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5e7ed04a-0f3f-44a8-ba6d-335d06925cc3"
        },
        "item": {
          "id": "0e624a98-3389-4827-99ff-fc0a5d08369c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4b691c2d-ae83-4fb0-991f-3c886892be5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aef9015-2962-44c2-8ba7-7068e1b09b9c",
        "cursor": {
          "ref": "906c49a4-cb63-490d-912e-30279fdc5004",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3c0b83bf-5d6d-4b39-82e2-bc0fc67a50b2"
        },
        "item": {
          "id": "7aef9015-2962-44c2-8ba7-7068e1b09b9c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6e97701e-3a20-4e7f-8c19-0deb31e17539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c1e773-2ae5-4c06-b560-efb51f00d3ba",
        "cursor": {
          "ref": "c1873842-7a09-44cd-926c-587a16056bc1",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0785370a-8cfd-4850-93ea-bc0caafe7676"
        },
        "item": {
          "id": "d9c1e773-2ae5-4c06-b560-efb51f00d3ba",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b8173408-a9d4-4d56-941d-b2d8ec7435cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f680453-dd7b-4681-8125-d8c2d20ee342",
        "cursor": {
          "ref": "c9f4fa33-1113-4889-8d19-3d36ab03e47d",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "310ee6db-e677-415a-bfde-bc0c403b2c61"
        },
        "item": {
          "id": "0f680453-dd7b-4681-8125-d8c2d20ee342",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c4a6340c-0f58-45b5-96f7-80beb697a458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02afb54e-392f-4bf6-b2bd-263b9a63a23c",
        "cursor": {
          "ref": "97afa9cc-bd14-4db3-9143-dabf2e75e747",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "23b46968-d48e-442d-8ad2-7e165f4e6598"
        },
        "item": {
          "id": "02afb54e-392f-4bf6-b2bd-263b9a63a23c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "aa01c1ac-28ba-49b5-ad98-a999f86e5639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c390e458-c6a8-4423-9364-83548688a9b9",
        "cursor": {
          "ref": "7124a34e-56af-4cd4-a594-535cc87e5b64",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6eb54e55-6588-4a1e-9237-a64b0ed029ac"
        },
        "item": {
          "id": "c390e458-c6a8-4423-9364-83548688a9b9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "18290529-6e2a-4568-9866-c01ec226b8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36a8415-77c6-4f1d-81f2-e51e6506de45",
        "cursor": {
          "ref": "72b1aa23-7d48-4a12-bfa6-770482e9358f",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1935cf32-f31c-44ef-83d3-ffd606ca0bd3"
        },
        "item": {
          "id": "e36a8415-77c6-4f1d-81f2-e51e6506de45",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "09bc70fc-b166-4d62-978d-fe00231e203e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad06acbf-1bbe-4bb4-9756-1d4423dcf0b2",
        "cursor": {
          "ref": "eb106a5a-aa2e-4725-8ffe-c44b87924bb6",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dc7cea1b-1e42-469e-9b28-e311ff3217ce"
        },
        "item": {
          "id": "ad06acbf-1bbe-4bb4-9756-1d4423dcf0b2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bbcd02cb-9b93-4152-a90c-4a22ed3c8ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e3310c-deeb-4c07-b098-976cc6be1e40",
        "cursor": {
          "ref": "1ae2649c-b0aa-4b75-8b63-8de304f49acc",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "82a41d01-0a1b-4b03-a55f-1c9f25833ef5"
        },
        "item": {
          "id": "96e3310c-deeb-4c07-b098-976cc6be1e40",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e815b985-e919-460d-afaf-ee900f943277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d311ff8-08e3-4c9f-ac50-07e33a302c7e",
        "cursor": {
          "ref": "573f3bd9-cb02-4bee-bef0-0602b9cfdc0c",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6df8120b-39d1-4a6e-88af-b090643b5038"
        },
        "item": {
          "id": "0d311ff8-08e3-4c9f-ac50-07e33a302c7e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "70c222cc-fa04-4592-afef-4f0392ad9127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92ae73d-ce86-4ad0-8b25-eb50f02a684e",
        "cursor": {
          "ref": "3180f293-1f2f-43d2-9b95-e8ff6853c483",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "89aea93b-4808-4540-a9f3-bae36f084da9"
        },
        "item": {
          "id": "a92ae73d-ce86-4ad0-8b25-eb50f02a684e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e56f4730-8b42-4e81-88a5-b0512310b53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e5a43c-07e8-4752-a5d4-6662e702e724",
        "cursor": {
          "ref": "26bf6e58-edd1-4bdb-ad88-8653584c7ccb",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4bed96f7-8766-4dda-a649-550131ba9f26"
        },
        "item": {
          "id": "40e5a43c-07e8-4752-a5d4-6662e702e724",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ef294085-b04c-45b6-a623-3d3fe5f1369c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f4cdee-14e9-4022-bb8a-0f84c8a1944c",
        "cursor": {
          "ref": "de412aa7-2e9b-4f01-b719-23f0ed241e37",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e18d23b9-6683-4926-97f7-d0304481a2b6"
        },
        "item": {
          "id": "64f4cdee-14e9-4022-bb8a-0f84c8a1944c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0015ec9e-00d9-410c-a2af-fbb9564debdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af60dc1-371a-4327-a830-1f0294e4bb98",
        "cursor": {
          "ref": "e87a752d-699b-432f-b8ef-9faa7f626c6d",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "864e3603-6748-4eac-8d6b-e96154d84a15"
        },
        "item": {
          "id": "7af60dc1-371a-4327-a830-1f0294e4bb98",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8a2f56cc-2d4f-4943-be0f-efefc5c184d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d7bd94-123d-4c3e-8c66-fbf284c7a402",
        "cursor": {
          "ref": "5cd936d2-84b0-4007-8624-762820b9e952",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "924ff7f5-a9ff-494c-aa2a-92eadcfb1c7d"
        },
        "item": {
          "id": "b6d7bd94-123d-4c3e-8c66-fbf284c7a402",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b9b5a098-5a84-4209-bc5b-a2f062180c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe746e13-e57a-4355-baa4-329ff9c2f541",
        "cursor": {
          "ref": "9749ba07-7dc1-48ce-9465-e23b3beba9df",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8c4682a7-2c91-47b0-88c5-cb34eb7bbe6f"
        },
        "item": {
          "id": "fe746e13-e57a-4355-baa4-329ff9c2f541",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "23c235c0-8342-417e-9eda-870be58783ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25883828-a62a-4354-adbd-c4d943d1cdd9",
        "cursor": {
          "ref": "91b142ec-d7d9-4462-938b-cbd293d43a26",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "70939a8a-503f-4de5-90f9-74aef7201216"
        },
        "item": {
          "id": "25883828-a62a-4354-adbd-c4d943d1cdd9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ddc37201-ed5f-44d9-b010-ca3cbe3bec99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e4f2e1-6704-49b1-b52d-d5582d347ded",
        "cursor": {
          "ref": "dfa21776-7afa-4645-8823-da0330847435",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1ebda881-2e10-4031-b626-a1dc20c0fad4"
        },
        "item": {
          "id": "d4e4f2e1-6704-49b1-b52d-d5582d347ded",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "37a70a22-1140-4983-9229-d5a8e8c96fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8100b2-37f4-40a0-89ab-028e0549984f",
        "cursor": {
          "ref": "d5537622-a8b4-494f-9e4a-76fed6d285f8",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "57b751a0-4cb0-4248-83e2-e7f6a124ce49"
        },
        "item": {
          "id": "8e8100b2-37f4-40a0-89ab-028e0549984f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6df5fb8f-94a0-452c-a0e1-fdc6800fe4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cf9605-a2d1-4d38-ba3e-c92210d24071",
        "cursor": {
          "ref": "66b3632f-f732-41df-b6cb-47774420d306",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d159bee7-01c3-4721-b852-70d8863c5177"
        },
        "item": {
          "id": "b9cf9605-a2d1-4d38-ba3e-c92210d24071",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a8135000-533f-4e26-a021-bd2f5d4d41f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fa6fea-1fba-4da4-aba8-2d7e7bca8261",
        "cursor": {
          "ref": "61fe3c1d-c68e-48ba-95c1-a96b251f4db6",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4caf0c21-b3f7-4684-a8b8-b31f2d434106"
        },
        "item": {
          "id": "33fa6fea-1fba-4da4-aba8-2d7e7bca8261",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "da03f748-0120-468d-9bf5-03b0eff4272e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0411f6f-7f9f-4347-9435-5cb69709b8fb",
        "cursor": {
          "ref": "659f7a06-ebce-4cc9-a07f-38b599ebba3e",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "799a734e-0d3e-423f-9cde-1e7acbfdc7c5"
        },
        "item": {
          "id": "a0411f6f-7f9f-4347-9435-5cb69709b8fb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "db580347-8ee9-480b-8f3c-e13ce9319b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cdec75-484f-445b-b083-3513e55e5fdc",
        "cursor": {
          "ref": "2647b3ac-0e9f-4567-b07e-642a505bab9f",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e6edb626-72f8-4c97-83ef-e767a1d4584a"
        },
        "item": {
          "id": "64cdec75-484f-445b-b083-3513e55e5fdc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8a0934fb-d11f-4999-a17b-1df678204fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccf402f-d70c-4688-90f8-bac45adc8fc3",
        "cursor": {
          "ref": "a6c0a2d0-1579-4b1c-9370-17a11aa7b160",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "63315b3c-9023-4a0e-a6c9-58b9ee2dbeee"
        },
        "item": {
          "id": "eccf402f-d70c-4688-90f8-bac45adc8fc3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a3667903-b09b-4ff9-8170-990bae909866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ead4615-33bb-468d-b5ee-0dbc757d7eed",
        "cursor": {
          "ref": "0e54f034-4874-4ab3-8991-bb7b731f4b94",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "16d507f7-aaf9-43c5-ae48-e8ce1faaedf3"
        },
        "item": {
          "id": "4ead4615-33bb-468d-b5ee-0dbc757d7eed",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3f814e6a-8346-4bfb-925d-32a632e17e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d3b1a6-7913-4e1e-81fc-e1e6eeafa63d",
        "cursor": {
          "ref": "9950d2a6-086f-441a-b178-4beb9b2a4e4a",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b4046a71-3c92-4342-ba35-727efa9d9cab"
        },
        "item": {
          "id": "a8d3b1a6-7913-4e1e-81fc-e1e6eeafa63d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8bcef2f5-d095-4686-afb8-ec9123b9ae48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa8e78b-f4e2-4db9-a365-b6dab8d60600",
        "cursor": {
          "ref": "3dff1490-0b8f-494d-83e0-2f20bb3570fb",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "59b9b7ba-af28-464b-9b36-4b86b641e29c"
        },
        "item": {
          "id": "2aa8e78b-f4e2-4db9-a365-b6dab8d60600",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c5061aab-91d5-4f7d-bd1a-aeda221ca167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f2646a-4789-4839-84a0-32d5daeb6927",
        "cursor": {
          "ref": "1de522e2-4b5b-458a-b5b4-4cf21ad4b580",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fb9d2c93-2765-4c62-868b-5f6da6e34702"
        },
        "item": {
          "id": "84f2646a-4789-4839-84a0-32d5daeb6927",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ec8c8fbb-d549-4b44-bf93-981645725cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5255559-2667-48bf-b199-145a782818ba",
        "cursor": {
          "ref": "9a5e0392-91ea-4b67-a5bb-f287858484d0",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3f633029-3664-4c16-b0ef-06b2cd9c0684"
        },
        "item": {
          "id": "f5255559-2667-48bf-b199-145a782818ba",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a76f9fda-9f58-4cb2-a2c7-c9234c8f5909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73288b52-6b20-4897-8c5c-063e966fc982",
        "cursor": {
          "ref": "2ffcff68-d048-4307-82f2-6e35b76b49f7",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "415a3dda-f802-441e-8232-caf4c13faf2c"
        },
        "item": {
          "id": "73288b52-6b20-4897-8c5c-063e966fc982",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e4594544-de5c-4181-88de-44b5f9851e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d4b063-c74b-4b98-b5f2-b76183ae11ca",
        "cursor": {
          "ref": "701bc711-26f2-420f-9e5e-4e1e0524e891",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b5c14c0d-e3ee-4f40-8e6d-3e472a6a8fb4"
        },
        "item": {
          "id": "e9d4b063-c74b-4b98-b5f2-b76183ae11ca",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5991652e-e6b1-43d3-8727-b53b6bff198a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1840dde3-9ff2-4ed1-b6c1-0c308f3bfc85",
        "cursor": {
          "ref": "5b11ead7-cd69-49e2-8e01-d220e1b61457",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "216bf2f8-e66d-45c1-92d8-bdfd3ee30355"
        },
        "item": {
          "id": "1840dde3-9ff2-4ed1-b6c1-0c308f3bfc85",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "db1e0a50-7436-48f7-87f2-ce84a2c17d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351dfa33-aab9-471d-ae6b-74a0e43ff56e",
        "cursor": {
          "ref": "8dd04684-51b8-48f5-92b4-3895cef1bc33",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "db7a57a2-9ac0-497e-99ff-a5385532bd6d"
        },
        "item": {
          "id": "351dfa33-aab9-471d-ae6b-74a0e43ff56e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0a657a01-ec66-421f-87df-d294373f7514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb79f540-6fa0-400c-8cb1-4c0bed3f02a8",
        "cursor": {
          "ref": "7eeccb3e-edfc-4c13-a3ec-a0c0d4c96160",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3783b3e8-063c-4ce7-975e-163ef8733b95"
        },
        "item": {
          "id": "eb79f540-6fa0-400c-8cb1-4c0bed3f02a8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5cef7e72-35c8-4b93-8489-18e5b1f81657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4925f4-ffb9-48cf-a582-e33fc930b8df",
        "cursor": {
          "ref": "28a31a4b-09f0-4cc5-b455-932ff4d65c74",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cd1d238d-5301-4f4a-bddd-08c9718160fe"
        },
        "item": {
          "id": "fe4925f4-ffb9-48cf-a582-e33fc930b8df",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "71b0440f-f335-4e44-8d61-bee4672970ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed7103c-a545-428b-8bfa-52f408a830fb",
        "cursor": {
          "ref": "55ae8494-03bc-4cf9-98c4-64a6532a1bad",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9915c2b7-030a-42a0-ac79-fd735795fd5e"
        },
        "item": {
          "id": "3ed7103c-a545-428b-8bfa-52f408a830fb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "757e68ef-ff73-4c6d-bd84-5fa0b09ac235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e363cde-027e-4f38-bc72-a808cbf6e082",
        "cursor": {
          "ref": "1efa9c2e-bf8f-4b19-afd6-8e845ec08740",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cf43b70a-a526-41fc-8cd5-0964aef97a77"
        },
        "item": {
          "id": "7e363cde-027e-4f38-bc72-a808cbf6e082",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b15146ad-554e-48c5-94a9-a54051a5c916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf070957-03c6-4adc-9b35-3d74f6965f3b",
        "cursor": {
          "ref": "d202ee40-0ec9-409c-b493-5c62021e5000",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3f8ed1c5-2485-49a4-b305-6c431e682ca8"
        },
        "item": {
          "id": "cf070957-03c6-4adc-9b35-3d74f6965f3b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7a85667e-2617-45d2-8371-a1943ea7e436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dd92d6-4792-44f7-87ac-8f123363abf4",
        "cursor": {
          "ref": "66073479-07d5-43e8-9c99-23306b1867b8",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c223dff2-328b-4002-b498-c6c95535a34b"
        },
        "item": {
          "id": "74dd92d6-4792-44f7-87ac-8f123363abf4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6a8d31fb-80cc-4107-9c8f-82a0b21c8f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7192de7-e010-48fe-b325-5bf83927f344",
        "cursor": {
          "ref": "1554ab37-e8f6-4b11-a17c-09a848e1f8d0",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0a93c6f3-2711-48c5-b218-398917134fbc"
        },
        "item": {
          "id": "b7192de7-e010-48fe-b325-5bf83927f344",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fbe2ce77-252b-4ded-ae17-85265a5651a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76547f7-af39-456d-bff7-62879cb666ba",
        "cursor": {
          "ref": "6ff445c2-030d-4e7f-bc9b-8084692d66fd",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8f438628-5b9f-4cff-be4c-28a9009657e5"
        },
        "item": {
          "id": "c76547f7-af39-456d-bff7-62879cb666ba",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "44fecca3-fd36-4a9d-b3de-60c20afa1974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a997699-be40-47f3-acb4-207e8f7d17b9",
        "cursor": {
          "ref": "c8b2fd98-a208-4e5e-b9cc-2bca01acc180",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fb89f057-f9b5-4434-a374-64f63cf99022"
        },
        "item": {
          "id": "2a997699-be40-47f3-acb4-207e8f7d17b9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "372d30c2-2215-42aa-a7e3-44e7012a5a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6091a07-b15a-44c8-a311-cf2152b176d9",
        "cursor": {
          "ref": "f0093230-1d33-4663-b917-d5c737262fe4",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "539dae2b-e637-4cd9-9730-144eca6a7322"
        },
        "item": {
          "id": "d6091a07-b15a-44c8-a311-cf2152b176d9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "48d9030e-3843-40f4-9a54-099804950416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5344d0b5-d309-4c4a-b199-c8ca04d127f3",
        "cursor": {
          "ref": "991e6ecb-c5c1-49bb-87d5-27d97533bbbf",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d441689c-fc80-48fd-9b27-ae04c06c9c7f"
        },
        "item": {
          "id": "5344d0b5-d309-4c4a-b199-c8ca04d127f3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2a49e5ea-d369-49d1-9074-8a6da851bbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad0aab7-c625-4d17-bb99-45d161aed289",
        "cursor": {
          "ref": "8c586e9c-5891-4512-8c9b-3b9473a5bfd4",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a1147fba-8de1-4a5b-a34f-f4398e3dd774"
        },
        "item": {
          "id": "3ad0aab7-c625-4d17-bb99-45d161aed289",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ceebe73b-5233-4e8e-91b0-2028f73b8971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f13c39e-120b-4f23-b9e8-1a4f18e4469f",
        "cursor": {
          "ref": "2e43b2ae-5ed8-4c66-98c2-761eeb51cf7b",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2400c9de-c48e-4078-88c7-377e0044e600"
        },
        "item": {
          "id": "5f13c39e-120b-4f23-b9e8-1a4f18e4469f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d0f9015c-0d7c-477b-a72b-5a180cd6fca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedcac71-f901-4833-87e4-cf7ee6748c00",
        "cursor": {
          "ref": "43b8991a-cb9f-48f8-b304-a86e7f307e9a",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "58716911-e6ef-4b2d-8749-bb5f79366e2f"
        },
        "item": {
          "id": "eedcac71-f901-4833-87e4-cf7ee6748c00",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0fb1e3ed-245e-43a7-bbc6-0505db88da54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e50ade-0423-4aa3-8cc3-cf2ed93fb456",
        "cursor": {
          "ref": "592087fa-7dbd-4069-b362-3ea3b85348b8",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "07656ee9-3ac3-47c7-a32d-cf1751504cbb"
        },
        "item": {
          "id": "05e50ade-0423-4aa3-8cc3-cf2ed93fb456",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "10f6e669-6b02-4f8b-b846-790b099df05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c6ad88-fc96-4c63-afb6-e546ee48f37e",
        "cursor": {
          "ref": "5ee75c1c-2f4a-462d-974f-7ad65cd27a90",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0aea8a08-8491-4f12-a8a3-d65866688fd4"
        },
        "item": {
          "id": "13c6ad88-fc96-4c63-afb6-e546ee48f37e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "871d7224-4999-40b2-9f0f-edf7d1bbbcb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837ff3b3-282f-41e5-ae3d-8e9d5267e14f",
        "cursor": {
          "ref": "0ad96605-6189-472f-8e69-dcdc938f3e0f",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "16715a15-7c4e-4669-b653-53e116fcf2bd"
        },
        "item": {
          "id": "837ff3b3-282f-41e5-ae3d-8e9d5267e14f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3cac12d3-7fd0-4fba-b400-a80c75520178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10c742e-dd8f-4da6-ae71-85765df45d3e",
        "cursor": {
          "ref": "7cdf5e80-87fb-4cc2-ae42-23a8ba3bfaf2",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "67c7e1b8-5f6f-4026-a27d-af39d1ef6dc9"
        },
        "item": {
          "id": "b10c742e-dd8f-4da6-ae71-85765df45d3e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e422f071-1550-422b-b82c-f3e86e0c08e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da095ba-06e9-46fb-9c2e-fbfc8518cbb0",
        "cursor": {
          "ref": "c39457e6-1aa6-45ce-9eb9-634e64e2cd5c",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "788cf2e2-0f78-4868-a062-04d2410f7a5e"
        },
        "item": {
          "id": "1da095ba-06e9-46fb-9c2e-fbfc8518cbb0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c9f73560-c5bc-4bda-8c46-8d8fe9c6660f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd4f2e9-5164-40c3-b4af-d9c88dc7d7f6",
        "cursor": {
          "ref": "e768e602-6e86-4791-8cd8-dd48313a2df3",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e9d7d024-10f8-43ed-a146-71142506a413"
        },
        "item": {
          "id": "9dd4f2e9-5164-40c3-b4af-d9c88dc7d7f6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d8562ec6-e3e9-40fc-8326-70cc1d4b9fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fca3f9-2e84-4e28-b48d-589eb5359166",
        "cursor": {
          "ref": "28d99bbe-2096-4fc9-bf48-c1923c81627d",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "80605f23-6d7a-4b25-940f-d9519d70fc66"
        },
        "item": {
          "id": "96fca3f9-2e84-4e28-b48d-589eb5359166",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "df5b526b-7240-49d4-a1b4-69dcd44d8b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3618ee-325a-4696-9052-000d0758c55c",
        "cursor": {
          "ref": "0af8aabd-c325-4e17-8261-556bcee3ed3e",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "58b774a9-b770-4276-884e-fec3321582aa"
        },
        "item": {
          "id": "ad3618ee-325a-4696-9052-000d0758c55c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d5a4712e-67c4-45fe-8a54-39f4ab1801bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff3e281-7fc1-4e14-95ec-f86838073a39",
        "cursor": {
          "ref": "9b970712-e3b9-45ab-8604-c578f94a855b",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e5f4c539-b0a1-443b-abf6-e237f7d115bc"
        },
        "item": {
          "id": "fff3e281-7fc1-4e14-95ec-f86838073a39",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ef2570b3-b0bd-4dfe-bd34-488c52da5f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2a2541-ac93-4fd5-8f5d-a2a138d289d7",
        "cursor": {
          "ref": "ee9c1fd9-b8e4-471f-82d5-f6e2f61e1856",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7fb7df73-27f6-4651-976f-49b763199fb0"
        },
        "item": {
          "id": "ad2a2541-ac93-4fd5-8f5d-a2a138d289d7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "87a53489-c74f-4614-9980-42024d7a394f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea52cd7-e07a-4fa3-8f73-ea27438abaaa",
        "cursor": {
          "ref": "056246ae-efbf-484c-99bb-6719b13962ab",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3e02b044-1f9a-4d5a-9e57-88c704570f5e"
        },
        "item": {
          "id": "4ea52cd7-e07a-4fa3-8f73-ea27438abaaa",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6ce520a3-65ef-493f-8fd8-0013bb7edb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f91f229-2d40-422b-acb6-5d4aea129019",
        "cursor": {
          "ref": "a9a2e084-fac5-4318-b04f-2da50f1d7d9b",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cff04f09-0a17-457f-b84b-b9b82edc49ec"
        },
        "item": {
          "id": "4f91f229-2d40-422b-acb6-5d4aea129019",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7c5fd1f7-c6cd-44cc-999b-97996cc00529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8de4472-7eb6-4f73-9832-80952bd07ab4",
        "cursor": {
          "ref": "597c51ed-afc2-4a48-8db9-422734dddb3b",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0b41e7c5-2dce-49f1-b470-f486678533aa"
        },
        "item": {
          "id": "f8de4472-7eb6-4f73-9832-80952bd07ab4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "41d36e79-f588-456b-8b3f-99320f5f41b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715644af-4e55-428a-8ef5-e6c55e6314e7",
        "cursor": {
          "ref": "55c2cd2c-bf06-487c-bca1-4f479f1bb58a",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "72a00843-ffb3-4746-874e-c0278dba4bc4"
        },
        "item": {
          "id": "715644af-4e55-428a-8ef5-e6c55e6314e7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0c9edb8f-2854-4c0e-9a48-f8e56efcd2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1908a72-01f1-49b9-a27f-9c3f06f825d3",
        "cursor": {
          "ref": "782a2ace-fd1f-405b-b708-5082bb8ad12e",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1e0dcaee-0b36-40a2-b572-f5e0b7ea296f"
        },
        "item": {
          "id": "b1908a72-01f1-49b9-a27f-9c3f06f825d3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "642a2ebc-73de-4b06-8c19-df0d42ed4909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffece93-8890-4382-90e7-7e4278f54497",
        "cursor": {
          "ref": "4a9e6d96-b4a2-4eaf-a608-6feb57f81a59",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fe253529-7ae1-4dee-8185-5c59be7c729c"
        },
        "item": {
          "id": "2ffece93-8890-4382-90e7-7e4278f54497",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f507933e-6d40-469d-b3d1-623e29eeeefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae9cf49-f565-48e4-a0a6-c6da3175269c",
        "cursor": {
          "ref": "44a77fac-6013-41f5-afda-84e53d133be3",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c4ccb416-ea42-4349-8fce-2756f0fba567"
        },
        "item": {
          "id": "6ae9cf49-f565-48e4-a0a6-c6da3175269c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e5139b05-e553-43b1-9dd7-005a124fc064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b159ec-00de-4dd1-86a0-2dd785eb714c",
        "cursor": {
          "ref": "2c16e3f9-457a-4b8e-b529-535330dea8f7",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "13346ea1-22e4-4301-b59d-d55db355939e"
        },
        "item": {
          "id": "f7b159ec-00de-4dd1-86a0-2dd785eb714c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "89f21b95-542c-4615-8a7b-676329cfb0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9862e14c-b6d4-4be2-aa35-a1f6152afb56",
        "cursor": {
          "ref": "01eb604d-a69e-4f96-82a4-3a46ddeb7832",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "397ff24e-e197-49c5-954d-562fd09e7df0"
        },
        "item": {
          "id": "9862e14c-b6d4-4be2-aa35-a1f6152afb56",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "27e49bb2-806f-4936-9765-033540fce2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4501178f-6aeb-4f79-b9aa-f918593645a5",
        "cursor": {
          "ref": "bf08c767-d98f-4c9f-bb8e-337c999310ac",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b9f82620-7541-46af-a77e-a05bcb87314a"
        },
        "item": {
          "id": "4501178f-6aeb-4f79-b9aa-f918593645a5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e17da956-7aaa-4d9e-b6b5-99e9179e6a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f439e372-d31e-4adc-b395-4cedf3f49113",
        "cursor": {
          "ref": "1ba03df7-9a72-4240-8f82-e00896a22006",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cac7a91f-5044-4b7d-a5b7-e22339356355"
        },
        "item": {
          "id": "f439e372-d31e-4adc-b395-4cedf3f49113",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a51dc487-de43-4e09-8114-339d33526bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237a2406-d6c5-48df-9104-f0d0508d4b43",
        "cursor": {
          "ref": "f34ee0f6-10f0-4c73-b5fe-36959908fa02",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "621b7872-38d8-4508-9f94-eee555fa6d32"
        },
        "item": {
          "id": "237a2406-d6c5-48df-9104-f0d0508d4b43",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "70fac1b0-8ab8-4911-b652-0397a07a93cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0a54f2-aa3e-47b3-95b0-198a4d85d132",
        "cursor": {
          "ref": "dde95210-967e-405a-9734-2e056ace1869",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d3139421-1db4-4095-ae5e-cf608a04eb78"
        },
        "item": {
          "id": "9e0a54f2-aa3e-47b3-95b0-198a4d85d132",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c97ff8a7-e52a-4812-a86d-273b16272316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532da28c-d400-48da-905a-97adbc00a19d",
        "cursor": {
          "ref": "736c602c-0c76-4fe8-b31a-b10835060366",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b14c135d-e636-433d-9909-5ab2de6536ff"
        },
        "item": {
          "id": "532da28c-d400-48da-905a-97adbc00a19d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7fbe5028-1c22-4649-98e2-a3c86cd66c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6247ee81-e08a-428d-b7da-3b4343f15396",
        "cursor": {
          "ref": "4d6a5b97-92ff-4983-8ff2-9bc835b252cf",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "da5d1985-826e-4693-ad50-515a27ff6197"
        },
        "item": {
          "id": "6247ee81-e08a-428d-b7da-3b4343f15396",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "50ba69a6-31fe-4f60-aacd-16e3ba835876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73eb6429-1f1d-4586-815d-d5c16237a73c",
        "cursor": {
          "ref": "b42c9056-4212-4413-b582-59c355ed1b37",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4e99b229-4414-4cf6-b282-f7cfe57142ec"
        },
        "item": {
          "id": "73eb6429-1f1d-4586-815d-d5c16237a73c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ed3e2685-8602-4dd4-b468-6e46ea036372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56617639-87dc-4036-8f2b-6ff845662ebd",
        "cursor": {
          "ref": "6d6df0d3-3552-4852-8b20-5674a532270e",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4336b57d-5e7e-4f7a-9dc4-a4f1e312467e"
        },
        "item": {
          "id": "56617639-87dc-4036-8f2b-6ff845662ebd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "413692b4-bbe6-4749-b746-8a81248f59fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec3334b-a4aa-4cfe-9f6b-af396b26736c",
        "cursor": {
          "ref": "ab7e2ee3-aaf0-41c9-9548-9e980ab7d083",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4e60026f-fbfc-48e4-a403-73b00f64442c"
        },
        "item": {
          "id": "2ec3334b-a4aa-4cfe-9f6b-af396b26736c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7bf7b624-189b-4606-8020-d45086eca9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61abe948-cc85-44a4-8b8a-af8f2e49b90e",
        "cursor": {
          "ref": "45ac3874-66ee-44be-aa46-30e2910fbebe",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "01aa8005-39fa-48b7-a784-4b0811b515ae"
        },
        "item": {
          "id": "61abe948-cc85-44a4-8b8a-af8f2e49b90e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "dcfbb637-9a6e-48c4-ab22-00a33921c02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b55b1f-e5ca-4a87-82a0-142baa72d18d",
        "cursor": {
          "ref": "74bb1926-08fa-4deb-88db-122031e79bed",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c8a409f7-339b-4aea-a8fc-698b33547615"
        },
        "item": {
          "id": "e2b55b1f-e5ca-4a87-82a0-142baa72d18d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "177d0d2e-0545-457e-9508-3d6fc95a0647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74605b96-f8c1-480a-ad69-65c849e93d01",
        "cursor": {
          "ref": "9945f0d4-8bfa-4a1e-80db-3e2ea4a4040b",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "46dc6ec2-8de7-4518-8a43-926ef9332793"
        },
        "item": {
          "id": "74605b96-f8c1-480a-ad69-65c849e93d01",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3f1ae1cf-0484-4851-925c-f63125c06497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8aecef-23e4-4f8b-8339-8e78044dd96c",
        "cursor": {
          "ref": "10d0f007-4d68-4780-b995-ce14e9d627d0",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4bcffac2-56f0-49eb-990b-63865fa5543e"
        },
        "item": {
          "id": "ac8aecef-23e4-4f8b-8339-8e78044dd96c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2fb55569-2c85-44bb-b088-cf944e06b3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c7a16e-ea05-4df6-b825-d9b86a7135ae",
        "cursor": {
          "ref": "7a0896c4-2403-4299-b9f2-85fa0f148602",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "02cd06fc-8230-47c6-8db6-bf35ad21b27b"
        },
        "item": {
          "id": "d0c7a16e-ea05-4df6-b825-d9b86a7135ae",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8233ef8d-8e06-41b9-b6a1-991e9fde59a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45d60a3-6613-4bcc-a6be-7303a4f237ea",
        "cursor": {
          "ref": "e95b38d6-7ca6-4afb-b7e8-47db2a7d4ce5",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "476d17f6-df1b-4dc8-9b3e-23807e53f809"
        },
        "item": {
          "id": "e45d60a3-6613-4bcc-a6be-7303a4f237ea",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e5636909-adc4-4555-9e4e-563933711bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1bb478-06c9-4493-a342-640adb66eaac",
        "cursor": {
          "ref": "9ddf4faa-f3d8-41f1-ae9a-ab126dcfcdb4",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "463fafb9-d835-4680-a8de-ffa92c72d946"
        },
        "item": {
          "id": "fa1bb478-06c9-4493-a342-640adb66eaac",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "41c3c716-bdac-47f4-ac88-6388b34cae8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28dd118-74fd-4c3e-ba3f-b950feb18bde",
        "cursor": {
          "ref": "d0636824-5cb9-48de-9442-6b465d74ddb9",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2f818c9f-de1a-40c1-9a06-18beb3b38adb"
        },
        "item": {
          "id": "c28dd118-74fd-4c3e-ba3f-b950feb18bde",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "78355c9e-0b10-4b17-a317-0ccace7e429f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e797a3e-5f0f-4028-954f-69d689300434",
        "cursor": {
          "ref": "31675c66-5cd9-4cd0-a131-dc4fa60f6dea",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a757df5c-d034-4030-8167-74a1c4c6af1b"
        },
        "item": {
          "id": "5e797a3e-5f0f-4028-954f-69d689300434",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e513b05d-50c9-49c5-a105-33f994bcab14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc773fe-1282-4e8f-b8e6-4031e3aeef1d",
        "cursor": {
          "ref": "2dcfb3dd-4317-4c92-9551-8a7dae63f006",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ef811279-18a3-46ef-86d1-6c55d191e9d6"
        },
        "item": {
          "id": "abc773fe-1282-4e8f-b8e6-4031e3aeef1d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9a7175c5-faea-418f-898b-166c85bb77bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d611d0-88b8-4bc0-9a83-6ee2f2c76c9c",
        "cursor": {
          "ref": "5ff65266-c11a-45d3-a956-a01b38d30903",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dcabd08c-96b1-4946-bfb9-ab4253b50bc4"
        },
        "item": {
          "id": "11d611d0-88b8-4bc0-9a83-6ee2f2c76c9c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3895a7e4-06e1-41c9-a218-49114db286a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280f57cb-fcfd-4d62-8c4a-cd47ffdda8c4",
        "cursor": {
          "ref": "79364371-5611-42e1-a676-09e00b2fbeb7",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "96579bee-11e1-46a5-b098-2664fbc61ab9"
        },
        "item": {
          "id": "280f57cb-fcfd-4d62-8c4a-cd47ffdda8c4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "eb3a024c-a1da-4e74-b19a-7b20bbe1c27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ce1de7-ced2-4a49-8fb6-e2b8a5606908",
        "cursor": {
          "ref": "42976f36-54d5-4e87-988f-194ae7f298bd",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "492d5ff8-7bb6-4937-83e6-edb32f21a958"
        },
        "item": {
          "id": "54ce1de7-ced2-4a49-8fb6-e2b8a5606908",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5c1fa1a5-cc5a-4b93-b923-3a672238639c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e1af28-497b-4ee9-8807-901c7f02c73c",
        "cursor": {
          "ref": "5f38c27c-f4cc-44b1-9cc4-3d0eb082d091",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f4898018-82e8-4d4a-a6ec-3abe962b9b28"
        },
        "item": {
          "id": "67e1af28-497b-4ee9-8807-901c7f02c73c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6edfdbc0-c9c9-4b28-9d2d-30616622eb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3101fe01-acfa-4e52-991f-4ad3fd3ace21",
        "cursor": {
          "ref": "9110bb92-a79c-4171-be63-ad3930ba15f7",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3ca34152-5774-4217-a2fe-1025233a98cf"
        },
        "item": {
          "id": "3101fe01-acfa-4e52-991f-4ad3fd3ace21",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "90c5ccb8-72f3-4af7-b9d4-a20be00edef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e3db7a-b23f-4208-9180-c1165470be22",
        "cursor": {
          "ref": "0172b0cb-21b2-4196-a4f6-a317e6715ce1",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9d3e435f-c516-485c-8005-83ae019604aa"
        },
        "item": {
          "id": "81e3db7a-b23f-4208-9180-c1165470be22",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ce102945-4548-4fe0-bf98-1f73f10ffac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c91e2cf-422b-44c2-864a-82d7fe31d710",
        "cursor": {
          "ref": "61c80d07-0d65-4140-9627-c272ce07fb5a",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a71aad5c-8221-4d5f-b392-6393e26d1e8a"
        },
        "item": {
          "id": "5c91e2cf-422b-44c2-864a-82d7fe31d710",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "288d222e-6951-4e8c-9aba-d1b0da6e2939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f738a85-6a17-460b-89a5-132ab39adf02",
        "cursor": {
          "ref": "5b2881d9-ea39-4595-8487-2595a2ca3284",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dd9ff7bc-07b4-40a5-91d9-f6268b5d02c0"
        },
        "item": {
          "id": "5f738a85-6a17-460b-89a5-132ab39adf02",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "30364bc2-e415-4225-a8ed-2d39e0befce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b322be0c-ada4-4347-9662-b50c821082c8",
        "cursor": {
          "ref": "d330349d-85b8-43c1-a147-00823772cb0a",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "19c3a4d5-6a97-4dc4-b531-5964166355e3"
        },
        "item": {
          "id": "b322be0c-ada4-4347-9662-b50c821082c8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "650bdd51-3951-42a6-b40c-39cde09c4976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37aba4d7-6c02-46bc-ae7a-9e527a36a987",
        "cursor": {
          "ref": "5bb09d85-068c-4924-b540-d404aad7b898",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "912083ef-89f0-4cbc-a060-d88154ba9255"
        },
        "item": {
          "id": "37aba4d7-6c02-46bc-ae7a-9e527a36a987",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "81814a0f-c214-4a0f-8c91-ee879f771d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c646a93a-0807-4647-acdc-e5d849059fc3",
        "cursor": {
          "ref": "4579f5d3-e98f-497d-99be-0c10df5814ac",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "36d9875f-8d3a-436b-9236-0d2ae5549513"
        },
        "item": {
          "id": "c646a93a-0807-4647-acdc-e5d849059fc3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e0e98606-c2fb-4ce8-b50b-ce4dbd8b12d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69cebd5-67f9-4aab-b577-b72d0af55159",
        "cursor": {
          "ref": "60207cb7-9e22-4b51-b9cb-614bcaf7f450",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "54d1521a-c94d-4aa9-ba89-ea38c9621bfd"
        },
        "item": {
          "id": "c69cebd5-67f9-4aab-b577-b72d0af55159",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e05dd7b5-c14b-4678-9e69-9ce50dfbc90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3643827a-c27f-4fd1-a480-56ff91293597",
        "cursor": {
          "ref": "95a38af4-83ad-49ed-ace1-651004b99c63",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b5eaffb1-15bb-433c-b5ec-c60ca6733073"
        },
        "item": {
          "id": "3643827a-c27f-4fd1-a480-56ff91293597",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c437086d-0e87-4b25-b781-e23505c55c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab2c9c7-6014-4c4b-bf5d-08c94cb3c206",
        "cursor": {
          "ref": "3ba381af-427b-4c93-baf9-ada130ba50c6",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "28300d78-6c70-4b2f-902f-9cccea6c0c5b"
        },
        "item": {
          "id": "1ab2c9c7-6014-4c4b-bf5d-08c94cb3c206",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "628bca41-9044-4671-9646-93d1a8e974b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877d46b0-221e-4520-826b-0e2d457900d2",
        "cursor": {
          "ref": "3812d5f0-92ff-498d-a2c7-8d70188fbecb",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a33f9acf-97b8-4fbf-a02a-f395b3af2b3f"
        },
        "item": {
          "id": "877d46b0-221e-4520-826b-0e2d457900d2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c5c0e283-2843-4e34-a4f1-b04e3ca0e68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cc30a9-813d-4159-a078-6542f643c8e3",
        "cursor": {
          "ref": "415b37d9-5862-4d75-832d-529233b17977",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4a32863d-c43d-45f9-bf09-d37478f1cf82"
        },
        "item": {
          "id": "88cc30a9-813d-4159-a078-6542f643c8e3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7c078057-1535-4ec2-babb-b7f497242a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65e3c52-6e09-4c49-88b5-c2f46a011752",
        "cursor": {
          "ref": "787a0f85-97c0-4dfb-859f-c8cd4897bc13",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "11252dae-7f44-453a-81c4-94ca2c8bf373"
        },
        "item": {
          "id": "e65e3c52-6e09-4c49-88b5-c2f46a011752",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f0d26427-15b7-4835-8654-c439a959bdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe28da7-0ffa-44f8-956f-2477e00dbbad",
        "cursor": {
          "ref": "403cf7c1-d886-410d-a01d-29643a976d00",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f5652349-07ca-44e1-8c91-e8d4fd4f58b7"
        },
        "item": {
          "id": "bbe28da7-0ffa-44f8-956f-2477e00dbbad",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2a806040-71e3-47bc-84a8-0c5035da422e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be54dc6-b954-4d51-8d88-d6dccb579968",
        "cursor": {
          "ref": "3b8e3353-3f48-4495-9eea-f6e766a29ab4",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2e878971-4136-4581-9bdc-928c308b5329"
        },
        "item": {
          "id": "2be54dc6-b954-4d51-8d88-d6dccb579968",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8552455b-4c99-4ce4-b4c5-009044986e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6356c29e-4e21-492c-9914-0af4de402e5e",
        "cursor": {
          "ref": "afc2002a-3bca-4327-b0bb-e8fd0aed19a4",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "03bc9e8b-6602-4385-975f-9f1934caaf61"
        },
        "item": {
          "id": "6356c29e-4e21-492c-9914-0af4de402e5e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ba2d1b14-49e5-4499-8516-e599345df651",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54187dcb-fb27-4a2a-a503-2fc85155d268",
        "cursor": {
          "ref": "dccbb582-65e8-4537-a3d1-8d43bd5a988a",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "39ef4c67-f789-4671-965d-d0d8570c3f6b"
        },
        "item": {
          "id": "54187dcb-fb27-4a2a-a503-2fc85155d268",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2f0a0265-d799-4734-acab-301f3bc78b5e",
          "status": "OK",
          "code": 200,
          "responseTime": 470,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b2beec-26ca-4beb-b2dd-2c73a3fab099",
        "cursor": {
          "ref": "0a055bb8-9263-4705-8b67-01a0b103e583",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f3706743-aeed-4315-9fff-1f93fb1f1402"
        },
        "item": {
          "id": "73b2beec-26ca-4beb-b2dd-2c73a3fab099",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a9d2d15b-33a0-40a3-8329-9c7351fb3564",
          "status": "OK",
          "code": 200,
          "responseTime": 1655,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d570f1e-6252-4382-8d37-d2c853df8b94",
        "cursor": {
          "ref": "d5c46460-8606-410c-9a09-fb3ad6007268",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "55c61c8d-a2a9-4f79-8379-d4fc06e6e7b5"
        },
        "item": {
          "id": "2d570f1e-6252-4382-8d37-d2c853df8b94",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3cf4db9a-9503-4229-a302-996e69aa38be",
          "status": "OK",
          "code": 200,
          "responseTime": 1664,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d710c9-391f-4f31-8bb3-eff8f8d6cb21",
        "cursor": {
          "ref": "5b73898a-0349-4c94-acf5-b6cad6cf9341",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f76c2d55-d592-4209-83d3-6091ab5e7dcb"
        },
        "item": {
          "id": "c4d710c9-391f-4f31-8bb3-eff8f8d6cb21",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "083671a6-2e50-42d0-a6b3-d2183d2bf9a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d710c9-391f-4f31-8bb3-eff8f8d6cb21",
        "cursor": {
          "ref": "5b73898a-0349-4c94-acf5-b6cad6cf9341",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f76c2d55-d592-4209-83d3-6091ab5e7dcb"
        },
        "item": {
          "id": "c4d710c9-391f-4f31-8bb3-eff8f8d6cb21",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "083671a6-2e50-42d0-a6b3-d2183d2bf9a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7edb17d-8433-45c2-9c48-cc201fdc9e4c",
        "cursor": {
          "ref": "988e8621-a4bc-4fdc-8f3c-6e617ca07a3d",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8521a75a-57ee-46e1-a628-2cc594129af8"
        },
        "item": {
          "id": "f7edb17d-8433-45c2-9c48-cc201fdc9e4c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e77c0d25-b775-41d6-8bf2-9c5d0c893f67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756b167c-aac8-4370-977b-b5b8b9ac7aea",
        "cursor": {
          "ref": "5a58d97d-2733-49b5-b42f-8a05d2dc15b8",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c5e72c88-a454-4a61-a68b-effd880d55a9"
        },
        "item": {
          "id": "756b167c-aac8-4370-977b-b5b8b9ac7aea",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9e085884-0adb-4c80-8d0f-f81bbd76c3b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}