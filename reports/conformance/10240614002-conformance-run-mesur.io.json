{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "02fa74dc-dade-48d7-bafd-ed226ee944cd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "265ac80b-baf7-45d1-9d26-3da9b665567e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d291d15b-aad6-4a36-82ac-d24688ea8877",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4ce86a74-cbf6-45d8-8512-d0a15fea5e56"
                }
              }
            ]
          },
          {
            "id": "f736bf0e-5b82-4706-9988-5d3f498e0dba",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58175656-8d73-46a5-8769-b43aa3c79015",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a5a1c9bc-8230-43ef-a632-71809279ccb9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0b861a70-d0de-4d91-9b1a-2e1dcb7d0cff",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "31671b42-7183-4528-ac16-1ddc5b9f5a79",
            "name": "Positive Testing",
            "item": [
              {
                "id": "445546e9-d1f8-457c-a45d-e3ccc599d07f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d61ab2c6-f857-4585-84f5-1dec6d9c571b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26c99d9e-1133-4520-92db-743ada1844ff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59b05361-2af9-4a7a-ab36-850f767f1a30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "984f1f38-30b1-48e8-9f60-5f144f537fe8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3dddf9b9-d370-42af-b882-b70963df2931",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1bc04011-7b23-42c2-8f51-38869434912f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2b72ffd-86bb-495d-a2b1-f4279e9a7e2e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8508f651-4287-40f9-a3d0-60d0b8aa5a10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b54b70a-ae8c-44fe-8493-c08bc7565bcb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32d4c71c-67c2-4e60-b0b9-95215ecf155c"
            }
          }
        ]
      },
      {
        "id": "4a28535f-e7f3-4bcb-99c8-1226d3b827d0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5fe8eb65-95a9-4756-922e-22318ca6f78b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "269a8f69-b19b-47e8-b5c3-fe10ace1a0b4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f7b927de-7b6f-4980-9c08-402a7c0517f5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7a6359-32a5-4f49-9137-39e60aa9787d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1692c1c-e175-4a6b-8ccd-9167367457e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a5f340-ed7e-4084-9188-5b39dc3c7824",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2a9934-96a0-4d10-9597-2b38da7c2d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8df42fe-14d0-443c-979e-028220b96456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50d2e73-4cd6-4a2e-9025-d8bded45106b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb26dc9-0201-4082-9140-c24411c517fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a761932a-092f-464d-934a-56d020cd1deb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c240660c-8fa4-419a-9297-90b3c8d609c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a239363d-f002-492c-9c4a-473f084efcde",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353fc1d6-7a27-4130-b3be-9b32972e9e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b366ff1-7d9b-427f-8659-7c2c11b631f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d588dafb-d3b0-4657-8a54-8703477bd8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b92ae7-4760-4c7d-9212-18f0eddff7ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9c0d6fde-fa28-43bc-ae97-6167471ba1f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e04b7256-99ec-4253-9bd1-8796900571c4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c7af758-cd8b-4694-bae4-478e836fefb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a9e04738-de2e-4712-81ab-b0c77d7ebf4f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8bafefa0-2775-4502-a1cb-e6193130d142",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "10588980-9959-40e5-9272-8dba22e23247"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb243e6e-6318-4e1a-908e-cf5fdbe4ce47",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67537524-baae-4357-b610-a688ce6d7f16"
            }
          }
        ]
      },
      {
        "id": "af0c364e-3cdc-44b7-b70f-ef410f0bbee5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8c411b97-f598-4cfc-aade-524f56f0c653",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5f03eb9-b2a4-4bd2-b3ca-29b829a9c5ef",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e93a7204-2f99-4ffe-b19c-dac6ae6869cc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f8c793-8dd3-46ba-bde2-dca66e9f2f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed1295f-6af0-4b21-affb-118af37752f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12835587-392a-4bd9-ac2f-ca87bf128577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fd65eae-de39-490c-a1b4-580e4e05f9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40a4fec-491b-40de-817d-7fe63464a262",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3ec71a-55b4-49cb-8016-9283b118ca9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21802097-cc41-4b92-a519-8df2c06a7c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e198dc17-1f70-4286-b4a3-77d62858680a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5790b049-011f-41e6-9811-fe819abc2e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6178a8a4-2f70-41a5-9bb0-2cf639765b0b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2511bf55-1b64-4c67-98ce-57830a7e083a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c42564-de83-496e-b1b8-8408bdd9a872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6962eb8-8194-4ef1-9a4d-ce3091ce45bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75eceb51-1662-4e34-a3c3-06d46c277245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259a51f9-86da-459a-a18f-d2e58ac00d82",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f590fee3-6448-43d9-8fe3-f39275c33783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467ed91c-79c8-4e47-8409-d5c47a314a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ce7d05-62e3-4425-9bba-37f0b43cee72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a837147-b6a7-4a31-8990-037f3f31069e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69170b8-a6dc-4905-a04c-af40107f66ce",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c03522c-07a3-4f18-aa83-0822d1478a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345768b8-5eda-49cd-857b-2496f16f4229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0fb94f-a7b3-4170-8d87-1df72024c082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6bbb43d-3088-47d0-90b6-97e65ac308d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7caab0b-d87a-4ea0-aae3-90431a28275a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34eb663-d201-47a1-92cc-5924d6586bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b0be3f-f017-4012-b7e3-0f10a8871e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5b3f59-5901-4c03-8326-c2446f205a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a767cbd-00c0-4df5-8cdb-e32c231c667b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a635734-96c4-4a58-ab1e-9d8ba98dd972",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb10917f-d023-472d-ad81-263a630fc835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146e5b17-489b-4993-aa59-18ec77bfac56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647e6105-c77e-4acd-b6c5-c44eb92c115a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70442c08-76ed-4565-8e82-86e5d524deaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703676d4-1abf-4fee-983e-093de07d26b9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bbe5ab-f575-456f-bcf5-c6dc4226b834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9d0242-7886-4ecc-9944-5dc794caef64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c121f0-73d7-4843-b58e-bb2dd7ebc90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d17e1e4f-1d92-4f1f-b010-70be10426be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad72387-97e4-411e-ab75-d582297d8a0f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df85821-580f-4057-a3f3-e40906dc19c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6db3fd-79be-400e-b154-c1e1bc461f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ee8931-c59f-43a1-9432-00be153443fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1ce32d8-d882-4f5d-bab7-f90386a0d7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524e68e8-dd4f-4276-8d29-016114bd06db",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f7efa7-dbd0-4f5b-ab48-fdbdf2f112b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d915f572-48e8-4217-a723-57cfbcc6a9b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2c5a81-c802-4dd2-86a5-014cf4d3af7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de197dca-dd44-4a75-a8b2-906d5aef29b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebf5a38-e0f4-4157-b1f0-a4c475ff1818",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f58df2e-cea9-4203-ae20-138f0dd0bfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21d69eb-01b1-4171-aef4-cd515f4c961c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb1fc7a-8f2c-4b14-9cd1-ea653370ccf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30d71b92-5b98-493a-973b-a19745923a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db969685-f51e-43b3-a962-8e48587cf27c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d461cb-4c67-4839-9daf-f0d027b43e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8a7e1f-6c9b-40e9-aeba-f57e8c257612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297c5df8-5715-4140-b564-f60b1c35c776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fcef40b-fac3-4ba6-8e98-01a5bbc895d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d9b119-8feb-41fd-83b7-8a793978333c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e87bf34-6b7c-43a5-9fbd-9ed22d01452c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37f6b5a-c95c-4ce1-a598-04dcdae8fa6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de61ac5-8d05-41c8-b3ba-2ab5d25cdb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40f8627d-657c-4c28-be0f-b8329d0c8e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ed7dc4-5fe1-4c74-8e84-1f1e2c8ac3f5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7ecadb-3d35-4119-9b58-75311c373044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49830b05-cebe-4896-81df-9e2573639d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea50b926-5eaf-48be-bf5a-393020ce2a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47e1ebbd-7e89-4751-ac01-cee405469801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef51fbdc-03a3-49a3-998d-8a053c80b86f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86d7359-2228-4497-9aa7-c65ed27a6b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc559fcd-3b2e-4ae7-a0a5-6723c750c134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484496f2-179e-49da-b3b2-fe7491bf9446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ef4e4d1-3e3d-4a95-8598-1180c1d1c4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b520fba-7489-43be-b4a9-5eb61db397c6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c9aee5-661a-4a06-b5a9-e0b46633d8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d4a459-57eb-4c89-9593-77c49efb0373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bbd056-17f9-46b9-bff1-19a7e6d53617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5911635-2ad2-4f78-8a27-9fdd8ddd41d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3816db-056d-43b5-8655-c5dc737b815b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8db94fb-43a3-4c0d-93fc-d08c75440e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4fa6e0-8d22-4065-9d69-8e10e7053606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29560ae1-1b70-478e-9ab8-1416378b0091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b5499e2-b89a-4634-8ee6-b9f3b840f19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5deeac-db45-4119-8e10-7a1a62f0478e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb92b7f3-d5f7-4a2d-909e-541ed551460e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c313097a-92b3-4b5d-94bf-957679e6a6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8d17d6-2395-4f3c-994e-0850c767d323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f12baf6e-37a2-4bc1-a0ae-e06aa15d3e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e320b13-3d3c-4d9e-a6b2-950c70766fbc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8958e5-42d3-4d1f-ab76-765ef4837f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f08f048-8439-4ee2-8544-fc1f7b928e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6aa62a6-c9b8-4cbd-b844-0fa170997aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f43a883-18cc-4931-9cd9-2f26651ddcb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829e0e61-9b65-4110-9d15-5bea5cdd151d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a20fe4-2981-40ea-9a72-4ca3b00dae98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d91ebea-3a82-481e-a7a7-403ba1df0f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7181ae3-7338-48c6-8a4f-e400792fbbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3368b1-deea-4dfe-8fa5-e52d2090f701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0689b1bc-538b-4843-8241-1201ed9fb2ee",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ab9225-c9d4-4d8a-867f-5fb074cafe9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39425693-0d83-4b5f-8c38-133940e45102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3402e38f-eb6d-43a2-99ff-7bb99ec17f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad20611-e5d2-445f-ba60-99ec1ae4119e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb0fc1a-f79d-4484-b50e-e924ac404bfa",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ace8c27-8bb8-42d5-a15d-20898f500ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d5d107-f297-483d-abbf-007da6676b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4630286-1a6a-4fd8-b598-7df1fe7d6329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7277d0fb-bba3-4cfc-8d41-6aba30d90a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4bf966-be8c-4879-8a5a-811d69c5581b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2e3040-bf02-4902-aa1f-a6f6ef31f53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b5ec35-d1c9-4a11-acb2-3df49e1b8e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4b8d28-f698-498b-8cb8-9d5eeb6936b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f31079d-fc70-4dae-af86-5462d4e35937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3cfdfe-94af-4b0c-a9f1-4dcbb7810e92",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48db28f1-6d53-415e-be28-2119a3156389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6eca99-ada3-4d4e-92d9-7140bb1c9668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943cb059-a731-456a-89b4-35aea03403b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "655fd894-8127-45b4-93cf-7cfc79ac5d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae83503-c349-44d0-8948-c66a4015ad18",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd0923c-b879-4ba1-839e-1fa13e76a09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8307b561-2ed4-4823-8193-8f5ff8152248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6ea26f-f1f6-41c3-9d5b-f859bcd775b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c38c6404-7be1-4515-8d65-0db5548ed96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc6c960-8b79-4ddd-8d63-216f41237b74",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2813f4-2e36-4de1-bcfa-f14035cd6ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d30345-1c5f-4a83-b137-c58ecc8f598e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce79d8f5-e72a-4b6f-be82-05c044f52114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e4f8f2-1ed6-413b-b543-5ea924ca3571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ae81db-407a-44b0-9b1c-b64b8bc40508",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54530cb2-8d4f-41f2-bb7d-e34e5a2505dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8343af1d-6201-40f2-99e2-c9ef368bbb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5d594d-ef18-4842-aa8e-3752a084478a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f922ebcd-9135-4281-9fd1-dd80eed4dadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0727411-ce27-4b58-bd3f-3670bb2dda2a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27b164a-b889-4f05-8c3b-de71aff940ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5bcf5c-f651-464f-95d4-4d3ab957dd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfb3bbc-a10a-4b2c-b82d-5c3a14458c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e09809d-b77d-485e-aab4-49678ec09a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c632a69-90c6-4a95-b596-0ba1d4726bdb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60b12cc-970f-4466-81c4-5d59a9dd1ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4cd888-e70b-4d55-a951-19661bd894e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db19fabc-f282-407b-bee7-7ccecf425635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9babe0b2-c2f0-47d0-9024-8674c2445b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b246b8-3f98-4a85-bf2c-6a88905bd06d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17fae54-30df-4cae-8059-84db47d91f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16dee12-3cd1-4b74-b382-e0f1c09cf358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4096ddb4-8e79-4228-837c-dad88362eb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "81201bcc-4832-4c3c-bb35-6cd30881e86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277b9d0a-1a99-419f-8a56-67b626f54f8a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2268b9fa-98f6-4b7c-bee7-fdc31ca703b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b919df9b-1473-4b8a-8461-7d198b65f820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01a78bb-b000-461e-9cf7-89156b062ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e664492-172b-4bc8-99fb-a22f37018c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af562fe9-078a-413f-b511-aa82c342c964",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6ced5e-7acc-4147-9122-500b11c5787b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224dc08b-d8d4-438b-b0a1-bd1e1b52ac10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305e2b81-d4d1-45ac-b6f9-2ad78752cec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca1ddfb-6cee-4b23-8fe7-43771628fa25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245fb1c4-ffae-4b77-b229-838c8bb0e54b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d717a86-e206-4ca6-a691-171cffd2c258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78b964d-e7c8-4255-8e0f-7c47f94ed95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c95f38e-ef04-4462-ae7e-9a7700b591aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae218cf7-9027-40e3-9899-fde892e6d7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c878f7c1-4a66-45be-ac3f-73dfc60758d1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec83064-17ab-43b7-9c97-df9db34be5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ee47cc-b30b-4fe9-b569-ffb95964c24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917698f2-7a62-493f-8b77-3a66b2639e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e341e709-dc59-4e6e-b66c-e0708d852e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d18133-581c-4eae-a1cf-9f6026cdd084",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bb0eb9-10d4-4756-b149-4c9a3b546556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d8b429-a796-40c6-b846-bd4b9d9f74e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2213d70e-3aa2-470d-9a6e-89aba3c3b9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4fffdca9-7852-451d-93ca-60103aaea7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827cf550-0ef2-4131-a3fb-27058330e0be",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b7579a-5926-4a4b-8c19-edcd4a4ae58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e16e6b0-3535-4ab8-8e7d-8b0e6651246e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c4ac44-d81e-487f-bfe3-ca5e13cac993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d61b4e91-c26a-4cb1-a4fd-dd478adfcdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a687a5a0-f39f-423b-b0fc-ddd7d71e7962",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17a743a-c7b0-44d8-a263-ff5cf471fccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e6474c-38e1-48ff-81bf-f3bbeb98e4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47185ef-19df-4071-bb80-3662bf2fb9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb95176c-d839-495c-8797-a87480f28afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842ab57f-032c-499d-bb4f-fddaba7cbd94",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a157d1a9-e0ef-4b89-bf50-170d4d135c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3823520-b67f-4c64-9f41-b1d4315f419d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef9eb0d-2bee-445f-a4db-ce5e0560367a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "09d330a5-7c28-4cc3-8f12-4661ff6e9e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23de7c7-2fd4-4a0b-a8b3-5eca3cefa0a6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bff1c73-3f56-4772-beab-ef05df20a882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113b2d1c-cb8b-481e-b874-c2d1cc89568f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc88217-5179-48b8-80af-241850efaf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8da65b3-e22c-43d4-802b-fba2388cc24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd247aa-7fcd-4fd6-96d7-e414aae66f92",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9730f4-47be-4f7d-ba36-dccdc3fb0aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e14724-1fa6-47ab-95e5-064a04f8c440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1eea6a5-1662-4e75-a1e4-2803aab8a740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd52b053-fba3-4e9d-8af7-38a7970faf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d876cf-3ed3-4b09-9bbc-bfeb1864ac70",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbc15e6-1e9a-435b-8794-79750fd9294b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1cb2ba-df08-4f9f-ad71-a35e92a13bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ac3e35-10c7-4e98-ad8c-9151fc380551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "49e227fc-d766-4837-b602-e20f046d25b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8655894b-ad72-4dc9-b23c-c14309f70e0f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07be9641-4135-4742-a2b0-6733bc648278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1185f639-858d-4a2f-87f4-32d7e78c3634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c3a8d6-effa-44b7-9955-7ffe19b6e2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6c733434-9aa6-4b7a-a02d-18da1a1c7822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f761e8-3f91-4941-bf44-cb04740ce55e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4b2108-b505-4dff-9dfe-ec43b242a31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b21e06-3914-4b5f-8371-7fbaa7067cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5affd583-d3d0-4e9d-9f19-3efc56143786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "88eb8157-0551-4145-9e77-ef7aa5e97514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7837cf58-5efd-4214-804b-27cdd1707f73",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecb5b4d-b824-4a0c-a614-9df08c1a1a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3789965c-8857-4012-8c4e-27bd3a478b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5048c9-4bd1-4459-a8c6-66f6f61d5b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb826aa-89b4-4d08-bbfe-8c2b7d8f9152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a079d097-8a14-4d27-a2e5-628ebb5ac407",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f113888c-84d9-445e-bc3b-a80571acc7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203a98d9-d62e-4d0a-a4c2-97e658aa4383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdad790-dc67-4239-9a14-73c6423b9915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ffed69-a2db-4c35-bb5d-13799873661d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af1ab3a-02c9-43a6-8d85-7cf31d5a9e25",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee9b572-fea8-45e0-8e07-66074c739d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b05f289-001e-4191-a7fc-ee7a6d135f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bbf146-838c-4a16-917e-902cfe0d8d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df588e24-9c6a-4b0f-92cc-371a8613d475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4649ed5d-5c60-45ee-ab0f-8c8c09a4865b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba279c5-d2a0-42cf-93cd-bc9b40bcb8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe862ab2-e16c-4789-82c1-de2c52a1e7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e03c1d-8245-43da-9894-7e52e061aab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cabb7d6-004e-4812-936d-4843119b790e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375e1cb5-83f3-40a5-bdcd-2dc6e1d4ac6a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c15d0d1-9026-4805-b181-e885810074d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a6567e0-d988-46fb-bafe-e7907418a92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92411c8a-0e73-44a7-b2b9-a1bef92c852a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f30be8f7-04fc-46c0-b072-f2d1b47e4e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0301d0-2e7c-4929-afd1-2413e94387a0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b2dd6a-0727-4f7f-94a3-801862e0b652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495a3396-54b8-4ffb-97e2-6d53a3378b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c29d5b2-1ddd-4670-9da7-cb943713ac4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43812302-0fc3-4450-80f1-36ee3ab92bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a49b5a-6d47-46fa-9079-78a83874e6ef",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd49195-a4cc-4f05-ae12-d038bbb90077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4d0974-5a5f-4e04-ac33-000071496c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d58d03-1640-424d-9761-19abd1bf8d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f132e5d-dd74-409b-9247-83c394d68f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de769fc0-6cc6-440a-82c1-113423573485",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c58f5e6-980d-459a-949c-41bd2a487d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91687c02-3b9f-4d6e-834b-22f442d3065e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6c9e77-04ab-4a6f-977a-e0fff78d6035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f734f6e5-0d28-4a0d-8809-323989768337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55632ee9-8ff3-4410-b540-9cdd47aa5e75",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85706c93-28ae-4fdf-967e-ced0143cfb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3b5fc4-2336-4cc0-9a2f-bd3a57c6226f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1147b128-34cc-42ae-8d9d-af2e48ea63f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08001abb-77a8-494f-9dcc-74ae5a2c9bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0549f33e-dd8f-4e0c-93b0-c94a01642b35",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bb8f44-9e4a-4ee6-bb42-58b0d1f27bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f34e1ee-3790-4fcf-aaf9-c34caf5cd8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696c9114-6070-437d-a36a-5133d3795eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84344c77-9f6e-4efd-a322-00e49aaed62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5caa35-5a2d-4896-b776-cc799f093eb5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f153077-9da5-460a-bb29-876938e12b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa67eecd-23d5-4ea1-ba22-e44ad124979c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89880b84-df23-4862-ba80-20a9099ebdf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6eeebb3-bda6-407e-bd54-025b803e9760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1155641a-f03b-4f22-be26-2462bb9f0628",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b49055-25bf-427e-9299-b01d2d75e770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202aa635-ed80-47ea-a6e2-d03e73b9263f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7eed9f0-8241-4de6-a2b3-73fd8d315780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "151e3603-1dd7-403a-90a0-e3b699406b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0a541b-428e-491f-9fb8-b6adc0390125",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47effff8-e3c8-4d77-b788-66cadc148c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a23261-c37e-4acf-9e9f-2a2e878f04ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df16d8ee-b619-4306-b39f-073995a0ffef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0c59e3-8463-452d-9e28-0a5f51841fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33a4c07-c56b-4757-b40d-4aacdf329ccc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dd7d5a-ce82-4ecb-aa79-e95809b4959e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b355c8-64ae-4059-8396-3b51c9dc591a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed791ede-4acc-4851-9ffd-738fac1ec94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b3acc5-3ffc-4f3d-ae3d-93a80597641a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac28496-35f5-46a2-99f3-008288b2411c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f72d8c2-0c3e-47cd-a8d2-08bffefb0cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14168ce0-fe4c-4d9c-81c8-14a86048f967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783a03c6-92fc-4680-88ea-dd19e7509908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9820c719-3c18-462f-a9e0-868f46ecc275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d257ea6-eeb4-4df0-b392-087020bfd6b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0784b00-4318-4ec7-ba36-a33890758ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9aab358-b0d3-4f1d-b9be-1200bfe5350c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d638a43-072c-47fb-87d9-365fbcaca138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf374d7-10a7-446f-a54b-a72e3d5f6f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3621e2-7198-4f0c-a5e6-a5ccfb68af0d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ba1e7c-d8e9-41d4-be97-c22bd4ee8adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848c8678-73d3-4709-b552-40163a417362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57028264-4929-4156-aa43-09de51b3b0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d32463fc-4613-4386-b465-a4de30f1ba88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f39ead-be22-4b2d-9263-6cd90f728721",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2824aac6-3865-483d-bea2-a6fc75119e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e38c01-ad36-41cd-9735-6b042078191b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24be23c-6f0e-47c3-916a-750809b3fd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "281cccf2-7f8d-48c6-928f-f8502e58b5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad42f6e4-6413-4b7c-b42d-597cbd2ae1ed",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9af93c-3e2c-462c-9d8f-eaeb1726a924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21b15e5-bcf4-4a58-8d9d-1713ed0967d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b25f9e-1deb-40ea-9fc7-054199311c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4344e2d5-51eb-4050-a5f4-85521e9a5c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcc5520-a7e3-4682-a3de-244f11993eea",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b00ce9-53ac-42d3-a6cd-3712304c3fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fbae13d-7b98-4e8d-99c1-bf02401f4bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303fc602-22be-4441-9b93-4ebf0f03ec9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "922cb97b-5063-4c7f-8e2f-c449f2596347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285b3340-804f-445f-9b3e-72b84aac6bf1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ee03ae-5656-4f0a-85b0-6b8c63213fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49b7d84-ce87-473d-acdc-fdbadc7dfae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b7b55f-3fd0-431b-abd1-3f8a8008d272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3596ca-7223-4f6e-8526-3d06eaa9d5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656f5561-aa32-477e-bd56-bd72d04ffe3b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b99004-c5ae-449a-9066-086de909e236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec7dd56-1a70-4cc9-98a4-8abf26aea66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3158947e-121d-48db-b378-a676f6cfc0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62c093f8-24d6-4614-89df-b6769fbe08d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dda03a-7dea-4faa-86ef-c2d7751e6d03",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0128678-4d18-4cf3-bfb2-a0b15eecc164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e59e6ab-b80f-4fd0-85f4-ff00ca054ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6ea21e-5791-4dd7-8028-435a0d06a21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf079f1b-62a2-4cf5-8bd8-1c8749f10373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe17ab3-b112-4f4b-b66c-df82732b5b83",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44dd3e01-cf5b-4d4f-879f-7e878a134ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee151e74-b1a6-4c17-84be-1d83bab9cfd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168b6d78-592a-4b78-bf01-81d7390a1ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31b184ac-f41a-422e-8147-8dcc0663cd76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045ee8dc-163d-4a83-86eb-4f48e2946258",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfd8f98-3a80-417d-94d8-4f1047fd384b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2fc03c3-d149-4f22-910e-24addc734c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88c3c82-7cb0-417f-8a80-5b3ffe5eb82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "11686b84-e3ef-403d-a99b-3435fa3a9274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d1c90b-bc42-478f-b5b9-27be31b6c18f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026c3e6d-0ee1-40d3-a862-ef1492fc71fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d595f41-e376-4ef4-9f8d-767279bce1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd8421b-ceb1-4f2e-9794-21bc9631af3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6cbd67-741d-4355-bfa6-0bdaa1c25e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33a77b1-24f8-4d39-9547-7ff8bd8004c6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34135565-a0e1-48fb-9ab5-c238dc4a6978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4dc143-b1d1-4f9c-840f-b9b0191aabba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2260f3df-07f9-49e3-b193-9984bc5e63d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1fbbce-8865-4a06-8cd6-dd97591afdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c29b154-058e-43b8-afba-84bf4e3de79b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853a875f-ae1b-421e-b45a-302f543ddb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1363b86-f7ed-4902-8f8d-4f9ceef7a193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f10078-3a56-4770-821b-2e0319a4232e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad7f0e5-72f2-4326-ab50-044afbd81d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabcfad9-db47-4319-8f83-513012eb3af9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71dd46d-5ae3-47aa-b222-8bc50c2f1cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90172a59-3396-47e9-9f63-6b0b52a7d92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25d270c-d540-4eb3-8cb2-a782133a9e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c497595-d60e-4a13-811f-313e2458de0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0511f7-5b0f-41ff-beaa-c0aad2f74350",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee3dc76-b0d9-4390-ae8e-39bc3844db37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5050ec6-bf2a-4b69-a145-d4a5129eb2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f1c480-40a0-4697-9b81-ce7e8cf6aa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed96ec53-6440-41be-8a33-2d80450bb734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f2725a-7902-4d5e-ae47-07dd19fa609a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547c35bb-97be-4e22-96ed-296fb9d51cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d89e86-fa95-43ee-a7b4-56ceef8180ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad77566a-f98e-4bd5-8605-0527acaa4764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e32a99d2-2b1c-4bf0-9416-b9e6a610ba67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0788f9e-c340-450b-bedf-48c6c60c6bc0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222e3fd4-718d-4c09-8eb6-ff3216ecb84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04597f66-03e1-482d-b4de-c4ec82bd33e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d0aaaa-6797-4340-a632-59871dca3aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c865902-4a3f-476d-821c-09971bea6c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3f8a65-5174-4a04-939d-c40b0b4e147b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40108e9b-0295-4c68-980d-30871e2b4291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857e5f67-ec5f-487c-ba18-08538ea0e575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967f8cc5-399f-4c64-ae3d-923f515d5a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab23324a-cea5-4b87-91d7-3d32ca30d669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e12cf4e-b62b-458b-bb2d-a3925be7e335",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475681df-d945-4f74-aa18-a73d392c3fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383d1484-d233-40e2-826f-42ca0266722a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591669e5-536f-413b-9364-cd76887d7d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2744b40b-1ef4-4d02-a2c4-26af73b1852d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4734da43-fee6-4a3b-b5ad-1bc63e07119d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4000e6f4-4e56-428c-b314-b1bc476d1c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee53861-34bd-493a-84ac-598d749416a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6b1bf4-409b-4f29-ab04-b93e4bc69e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41d1dff7-248a-42c2-9148-f8bc4672ed1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a42fcb-d6f1-4467-bbb0-5c8f3a9845d6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4144d6db-c02f-4373-ab60-e1b493eb7b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040d2b46-83ff-4aaa-a284-9ad74bd7f70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b6f3fa-425a-4968-9116-8a4201d53b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80dd7089-ed99-424a-a155-91066d50fba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213090b0-a1bc-4dfc-8810-c44cfef7da58",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e3fd3b-976a-4fdf-88c1-9588c43dcfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c979353-e7aa-4d48-806e-ba1db4ad430c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6015aa-092e-4fb1-ace1-1360e6b79d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3c5423-60fc-499b-afc9-940d1212345a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ad27b2-a94d-49eb-9a7d-084e09a86a6e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b759fda-9371-4cef-a856-21aba15f7827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134c50f5-4c30-4610-b5ac-5fa0e75a0c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c162ad-be63-4f09-aa4d-574bb8a1611a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "30e42c43-479c-426d-830e-77a4db94bd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c4454c-dc35-45b2-bd20-4209be911d7e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7cc2b8-c42d-42cb-8486-d1ad33dae651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3db3b31-ffa7-4492-bf00-1310f71f9552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e19b39-6ba5-46b2-8644-9460b4113ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b79726bd-2734-41ab-a678-a7876adf4938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67f727b-51eb-41e3-8d95-4ddf2e776679",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091b5f44-4d31-4f51-91f3-1ab1088e1c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ddd8e1-ff8d-439f-9051-86a700cf697c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba107c31-9358-4dad-8006-c83be2b4dbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "827bd0fe-ff5c-4e63-b48f-71693a679e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56596ad2-4a54-4642-8b3a-70cb1f8cb34e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6fa5d8-4d05-4a6c-bef4-6d856f97c8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f19b80a-6b29-47a0-b55f-807b09c84093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffaf9df3-1972-4a52-a805-e9c7673a89c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc19d860-f021-454e-9c08-0240eeb50cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0e9b86-e5c4-43c8-afef-40e10bac7fc7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc53940-44b3-4a1d-87d7-42cab3061be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e687b1-a8af-49c1-b3ef-b19d0206d2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b852b5d-a5a8-430f-941a-9c58b601bd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd6df79-4c8b-40bc-bc2c-3f51efffbb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0d4f4d-d257-4364-be45-b39ed16e9f8f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedae581-3f0a-47a9-93c4-928cafa8180e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ff635e-509a-42d6-b777-91ea7e535927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7155a05f-8030-4a24-9d60-408d2ad39078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbee072a-5407-4d6b-b8d3-412d9d9e2614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff826ca-be9d-4ab5-b91e-68e65795d111",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b12eff-dfe8-4aaf-932c-3c7295341057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae12151-7466-479e-a721-0d401251be72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a467f08b-c295-4f33-a864-2788b781b519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6438cf-369c-435f-9db9-bda7165e59c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c0bb8a-f80e-4b95-96f6-3bb1481017f6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790d72ef-12d9-4e0c-9817-73947f858e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1edc5df-a23d-40d5-b58c-dab1adc2be4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e09a1d-9ea0-4989-a023-73a3a39ab85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9011bd-9ef8-41af-aa00-d3a0a433e551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f670511-5dc0-45ab-9b46-a588f5019f3c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86beece-4f58-4f75-b970-cb26a3f27967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fdde70-b39d-41d9-bfee-69614783c861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be7d73d-b19a-4b33-bd39-928566e3e250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f2b8f39-785a-4e6f-83a6-36febde6d9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c1e3b8-c833-4836-a8ca-adc6d5069e6d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca401bc-6091-458e-ae0b-76cf670f6214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3929ae4c-2a40-4bb5-b638-a2fce1331c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df2e846-35a7-4770-a53c-82976397ad3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7507aaef-5af9-4a41-bf2e-ab3ac7562249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cfa31a-1fca-4e32-8973-ca3ac1d6077c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f47e64-2ad3-45d7-b91d-b52adb935cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2ace09-093d-4cb7-af43-a256dd7addc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8d4cec-cd27-4f4d-a45a-8f00fa1446ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8dadeec-2a25-4ed9-8888-7b9348b6bb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee49a188-618f-41f8-93e8-9a54c3edabf4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc31de5-e614-4030-966b-e4326e923d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e9417c92-8958-4776-82e9-509aca05b988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9277de3b-1171-488a-93d7-17ba580f1b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf7cffe-2260-4563-862d-49abd0f7e5e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b498d35d-9ca4-467e-92cb-873618d41170",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a76f12ae-5e92-4bac-b72e-81decd960609",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4449f0e7-07d7-486e-ab5d-cc7d5b259d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c325ea62-0de8-4d2e-b5d7-28d4e705ccc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3d9e1c-2f00-4f29-84b3-7cae065f500c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e341669-267f-4677-83b2-bfec15726b0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b19636d-ed13-4382-aff3-0c18cb76f250",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cae18e01-aa9b-4bea-880b-9f4d1ec9baeb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c45cbae-51e8-4ebd-871a-93e4aefc82f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca4b900b-4d6e-4f8b-b5f0-e7f38b22911a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c72cb44c-d61e-4b1f-8861-034b9f7b8ad2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab2d4210-1867-4c23-8d60-3822d3bd3155"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c2b25d92-e5fb-4bdd-bb7a-e5759861a197",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "70da22f1-14ed-43c9-92eb-dc9a99f94ad7"
                }
              }
            ]
          },
          {
            "id": "351fed92-bbbc-4948-9e1e-75838b9a24e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0506c03c-1656-4431-86c3-f40b91a7ff75",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ab6d9241-88e7-412e-a740-72fc9dfbd3ca",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa97ef5a-81eb-44ec-92d1-e3d4318ec5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b9b97129-84fd-4be9-9c51-4491240dcaef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83533d53-8307-4381-8be7-6376381d5341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6273a742-99ba-4dd9-bb51-1bcbd1d40371"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "67d53ba8-a758-438a-bbda-e7367383e182",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3506d5f-87f0-4e69-8b61-9813a18ef316",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25966d2b-f9ec-4d97-8267-471711782de6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed9f17a3-c581-42b3-9fba-5f82f0b416a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "def6367d-7640-4057-9dc8-2659578f25db"
                    }
                  }
                ]
              },
              {
                "id": "7555c9aa-5016-4eec-aeb2-f11abb2ef9cb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "213bcbc8-57f9-4dc2-9da5-422d60318aec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01770b58-abd7-4f9a-a78c-bc84fc0add31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa311b26-c070-4905-9d50-0f92b71e681d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ffe96c6e-7ef8-4e0d-a9ae-e649d285d948"
                    }
                  }
                ]
              },
              {
                "id": "a77b1c51-75f0-48a4-a0c7-eec28425c4dc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09ef9b22-23a8-4222-bbc3-aa0cee27cf64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f41699a-8ac1-4d79-836d-142043a1d400"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edbb79c9-9c26-40e8-8f1c-7ee43fa945a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ca11f5c-44fc-42db-a4f0-be785c9cbcbe"
                    }
                  }
                ]
              },
              {
                "id": "ac3eb719-5724-48ea-9ea4-a4b4c6ad639d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e44d805e-f804-4a91-bbe6-88bd7979abbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40801411-dcca-46ce-bde4-3568429489db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "972aaaa1-0c66-4316-a00c-348f4ef362ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ca845f98-ebeb-4690-91eb-091f420653e4"
                    }
                  }
                ]
              },
              {
                "id": "7d8f3e63-68b9-42ae-aaf4-348c91c2a071",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20e51579-6248-448a-8b75-46755af07395",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2cfead33-6eec-42e3-9c3d-f25496e1dd81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfc84d51-c2c9-4b71-8e4b-d67660b5622a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3f5c6946-98e0-4f8b-bccd-7e291533cfe8"
                    }
                  }
                ]
              },
              {
                "id": "184effd1-2371-49a4-a28c-1797bb8b377e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ba2afe5-e0e2-46c6-964f-e2f0e6a21e6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d284a57-8bb3-4371-9848-28b2c36124c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "222a6e03-9880-4600-8c37-919fa4448ccd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf96ac16-ef55-4163-8523-476b06bd93b7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62a404ea-c234-4a91-ab46-b21bd91779f9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49dd28fd-6a6d-4507-a649-2f4e15c27d05"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1d754925-e647-44dd-b0e9-9d6177a2aed8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff45fe03-2a07-45e8-ab5f-6205850e8bb2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53821c0a-c8f3-45f4-b302-f236cc4e15c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "10512e26-90df-4418-8fa7-915fe665d68f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "234ff47a-6244-427b-a8ee-ecb50be80d00",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5ff1119-b6fe-4344-917b-69ddfd511355"
            }
          }
        ]
      },
      {
        "id": "6e25ec78-e11f-4af5-94b1-314d11a50ef2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b5e9aed0-cfa6-447f-9df8-844718d9651b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ca5de2f-f56a-41bb-9654-3a7e5f05d8c6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9a042fdd-6090-4efa-af4f-6125e6e36184",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e780b95-ec5b-467d-9983-5f177b7bec4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82d5221-a8ac-4c03-8fc1-eb52c133c04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da1854f-096a-48e9-9c82-e876dcd279bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd13f7a-ee71-4b4f-8d65-76bca112bbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a99294-4f1c-4844-8c66-d191bcb60a30",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b8bc6b-ea51-496a-85c7-8005abb3eb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857da9a3-aca2-4a6a-b639-c68a2b92e10a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912d8088-6565-42c3-a5b7-35ccdb249ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "915940a3-22e3-4401-861a-c8e1bce89413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff5de76-badc-4bce-92ad-b26415d46842",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2b886b-7178-4fcc-9e71-f32507a950db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d82f022-e432-4514-a8a7-22a860960ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4836f44f-7b0f-477a-947d-cc6260af66ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47570a55-0647-45b2-9881-8e3444cf26dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4440c567-a7af-4530-a43b-290620174a9c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04c9b24-c205-43c5-9e8b-1de931110c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4058b27-9267-4708-bcc4-e74dc79b2b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200c783d-2754-43da-966b-3489ee60aece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea4ac26-8f76-491c-9468-e11af3a5f25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c85fc6-090d-471d-b32e-5ad419a779c0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36450bd0-81ba-44c2-ada8-56e995c30cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc1c0ac-cf8e-4278-86b6-e34d78c11fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f724af9a-44cc-44e8-be3b-73b334a35d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f78191f-c6ba-4633-8748-af8086bb0be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d53843f-c8b4-47ef-b73d-ef1c410d6b4d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c4e6a0-e79e-43df-8ba7-c4ace96e62c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08f757d-28e1-490b-a9ef-d3e1257e55e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c44d6a-7b1c-4fa8-89ca-2a9847159948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d536ba26-d9b0-4497-9b77-dc60ecd93a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02891b3d-3feb-4076-a32f-0a609b6a7e80",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ed91a9-7611-47e0-8f48-e1f861a48996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844c0b95-e5de-4fe5-bf6b-542d2968f41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bec446-716d-41af-b3e7-2d55bcd990ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cec78f6-2ffb-4443-93ff-74d7d1702741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e0bc56-4cff-4b51-91e6-8fc24115c1eb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c540766d-a600-4fc8-86c2-65bbdcdcc088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80645eb2-4769-4da1-9831-8480bd2b6c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85537d6-36a5-4b11-b305-1e1f89ea0169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90853165-ac17-4411-8bda-fe0f789e270d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c761d6cc-5542-46c1-b3fc-253af7e5026a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d81fb18-812c-4841-97fd-c6c6d110f047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f6b081-cbe2-408d-9d85-b188b723def4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af8a9cf-f9f7-409c-b10e-1a4df151ae93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b0b5d8-8f9c-4423-b9cf-04ef6e249571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab699e4-e476-45cb-a0bb-1abf4e506108",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefc21c3-a309-40e0-9247-e23de77009e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb3d6c9-85e6-4fb6-83db-6f57fa5705db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e165a573-d90a-4e4c-a1ea-df7c1b22c1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f85f69d1-c9a9-43e1-b97e-3105c6ad492d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c5f134-65d6-412c-8fae-4d18298ad72a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a356b9d3-0608-4fd1-a428-3ef11f3e4db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79edb252-f992-4319-b730-8e7893845361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc28c02-d8f0-4021-91a3-f6d50d50f953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "61e7291e-450d-4e24-aa47-953430f73c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed739e1-288e-4c8c-9d09-e90bf956552f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fba2efc-992a-4913-b51b-5c482c49ee91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9add6d89-6932-4c30-9cf2-e852d8b6be6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b01b5d1-6297-4974-b31a-91b076564d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "004f3d74-157c-4540-a870-a11e2baeb962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800130e5-1da8-403a-8dcf-9e8edb69de1b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c696fdf7-8469-4d08-b007-17be12993f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53462f36-feda-4d2d-a9df-8bc8599f77ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e576fb-fc2d-41b3-906e-5cbd30499f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf97cfb3-a8cc-4b50-b6c3-b813f2a4ce3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531df3fa-e9af-4c7d-878e-29d9ed63cd10",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ecd48d-56d6-4970-bfb2-ab34e29cc73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482c57ac-cb76-4148-8bc3-61d25ccca95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e88af8b-2dee-4269-a9ad-0f03614ced70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "184dbdb5-bce2-49cd-be80-c90629517a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0beb9cea-0bf6-4c96-a57a-a062721a0cae",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f48125-8a51-4e82-8451-3eb7ff8f8a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa60eeaf-560d-4c3c-a368-45f7bef54a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d970a08-3d5f-4afe-994f-3b4f0c990122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c988fbb4-ed64-420f-8f02-a1b7193c3f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bf914f-4375-462c-b4cd-2faec3d9685b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e82c14-5227-4800-b1ee-e73a4ccdbd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcee8d2d-7483-426c-8b96-e61d5201d04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63813676-492a-4066-8314-c5d8f73e545d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "29dde5e0-7994-402c-94a0-3d35e163debc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85b522a-df0c-4c6a-8852-e4c7a85ce5ab",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8b200b-3a8a-4a2e-a5e4-97a66d357044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fccd385-bcca-4b7e-90b8-82fdedb1f13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f54878-a9df-41d7-b68a-e91e292a823a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b494720d-fda4-4e73-ac40-448d10902f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0c1a98-1335-4e3a-aa13-77a71dd7a14a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d605d6-426a-4da6-b90d-d348bdc2f088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0200ebe4-6fe3-4973-b78c-187ea1247dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb01405b-735e-4bb2-a7a8-d516b2350e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f64bfd06-bd55-4f96-97da-af85a02f6bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1dc49b-60c3-4ede-891a-3e265e19d0bb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ac86a6-70bd-42a7-bebb-7bfc00e8084d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3c77b6-fc5d-4b2f-b8e7-227c571f58a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52180be-d103-422b-8197-02246006a3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1afffe-a71c-427b-9105-2f951ae5fc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccb28bc-92cb-4363-8e44-1efd84cc7157",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf5b8ef-0f34-45e0-b029-896deb6f32d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a45b35c-af2d-4be2-9f4f-cb0db64e1c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20be662d-da32-4263-a378-c90c4cf22511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61c938c7-0b8d-4b5c-a8f6-2f402c504f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac238e49-65c2-4233-8d63-e99152d820f1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d37c44f-5398-4ed9-832b-e3dc96ac75db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69819131-3369-4b07-a740-9145720ec575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ba9059-3afd-44cf-8130-220f09c18fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "236a19d4-8688-4405-a323-a934e6c81021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae00356f-1ea5-4704-a877-1b1ea6ee4712",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e07f48b-7353-4d99-9e2d-27e565deae9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e9aa7f-3874-4bf2-a91d-7682ab3112df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c4bcb6-336c-4780-8bea-5f8a8fd8e32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5e9b4b-2a40-47c9-b767-2d8f073ac3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2180104-b8d5-421f-9c4b-b73a1cd85196",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c241771b-9c17-4347-a5cf-83304b785dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6703b7e-9328-4f60-b0ff-2facf9a4f6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d43fb2-4f30-4c7a-8892-e118814eed07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d80a951c-60d7-4225-8cf3-ecd983792b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9af28f0-ddc6-44f7-8f64-688b6a94be12",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87870fa7-03d7-4053-bd43-70f1f8fb0201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5dcd13d-fb6f-4b0c-86aa-b0dfcff01ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de493123-0154-46ab-a080-5a51b32504fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60ad79cb-d6c3-4f66-b2d4-030bccf6deab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5183c65e-ba1f-4802-bc17-82bd39a7aec2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6afaca-ffae-417d-8445-a99036b9b78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f483a49-0ec3-4da1-81b4-a794a171b4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89c5803-4313-43e1-ae6b-aa5562f42b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0e5e16-8e48-41f0-a894-e972c572abae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0749921-a379-4ee7-8410-69524856763c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a429f5d7-1128-4b34-89fd-1e0e23050800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67869dab-b742-46b7-9125-43d479c05fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115bf5f4-6b22-4e6b-b3c3-816a9e8f77e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dab62b39-840e-4393-99cb-c346106f5afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63901068-ac0f-4a24-8055-84b0493f1de2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbdafb5-0c4b-48e9-8fef-0848d92651a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50955acc-a971-4056-9a75-b233412b3f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4d9f76-abae-4415-b2c3-f8265387cf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "131acbe9-e598-49fc-9e45-6bbade6f32bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016554e7-1a40-47db-808a-ccb02066aa58",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fa2601-1d46-4b04-890f-9302213ebe84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93d9f6f-632b-4060-95b9-03c18aa06017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062f4c2e-23ac-4143-a469-3b0bb70fae78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6d5916-f5de-4895-85df-637ca3a85bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7d5748-8606-459b-84e9-ef7f0b7879ef",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e88bf61-cfa8-4491-8328-ceb2a7b55b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8168c1f6-5de6-4707-ae8f-f944659a888d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f50f64-e312-4e70-89e5-364ceb178b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ec2e1d-ea68-4cdd-b67d-f61e66de1798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8be974-a5ea-470a-a741-2380473987e6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a3eb01-079d-4059-8813-67f7abec04df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bcb308-27a9-4957-b06f-1cba90c56df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd91988a-77a1-404d-9450-385c9cbcd550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8a53c7-fe40-462c-b874-0cdf51624a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8273f9-79d3-43b3-9540-b8c508a6b440",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c7abc5-7502-4398-adfc-bcb093d81851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03459bc2-a1c1-4b92-b380-bd7e90ba5c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a3bfc6-19bf-4a4a-a45d-67eddf7c5540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d1a69ab-9d92-4d14-a718-dc3d4a9c638c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fdfc68-c597-4a61-b73d-ab6b498e2712",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d888a96-4ad3-45e3-b161-cee78e8f3da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d75ca7-dbf2-4f58-8013-6dcc53c1c8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bd7802-df26-4899-b7f1-e7b3bff87247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d27805bc-dbb1-4d43-9407-bded33c5585f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24894248-bd4e-4844-b9f5-3e63de0ff77e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bcd0ac-8c40-4f90-bc82-bd72e0e77043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5558d648-5e6e-427c-8db2-cb86d802c17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3888c25-8b46-482c-8378-edc83efa0b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55505504-41cc-4693-9801-144c5e8d7ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb22f56e-227c-4e25-a8a0-d0cc4ccc4456",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e4a4c4-c306-4722-832f-cfd4dba0941f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ac8880-11d6-4044-a42a-78d4eea59776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04ccd16-b23b-4a34-b268-64c39de03ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e02f9fa-feda-43fa-96f6-c9e1677a4b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a53254-0b52-47cf-b8ce-e03a43a5a0ad",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341101e6-da40-4992-aa4d-01c7643b2373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6f58ad-301b-4964-a779-ab68f5703b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03017e44-5e25-43d7-bd42-10f5030493c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a12517db-10f0-4cd4-bad3-834f749aab8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdd36da-c1db-4c9e-b38a-5f87732979b7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702ebd81-0f0e-4679-99a5-70ffe0ef967e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db614f3a-9f47-4a3c-879e-d6103e425494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc5d824-90bd-44d0-ab1e-302076851669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8b7083-5c1b-4eac-8172-464e2f84bfa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa42600-1408-4a1d-8605-6144f2226e8b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287136c4-1c88-4de5-b26b-dc57b62bd1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3703850-5925-4bfb-8c0e-f44219fadfd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d494095-1edb-4cfa-b9cd-0e8c7e2b6405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2346ac5-454f-495b-8ae4-6186105619d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "388edc98-480a-41c0-89d4-37baeb1de91f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7145499f-a90d-42e7-9ec0-7070239b1e60",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5adf95e-2690-43e4-90a6-7402c9832e2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "43e27c09-745c-483d-adfd-76ef954c3071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b5e93a-5ecc-4b29-8442-bb8e4157ed5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77e0d239-c21b-4f0c-aa5a-4261c06b23f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e894d3f4-22c6-4e99-8039-66f79b1a6768",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4ff3d6a-e47f-41ee-964f-ca5860567058"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "228ce13d-b20c-4441-bff0-869571bc3bd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa677896-8a90-4d53-b499-1a07b22cae2c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04ccb269-fb58-431e-b8ed-3261b18b3d85",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b9d925c0-b68f-47ee-b260-31b45e414b03"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97650381-4909-4faa-a605-450bfc3fc3c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec9b0a23-2944-41fe-8230-79116fc5bc42"
            }
          }
        ]
      },
      {
        "id": "77f56b24-2eee-4ff2-8501-390503d23574",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "23f9da32-43d1-4fb1-80b3-2037a3f01fa2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cae186a1-a880-4c52-9d47-a41449c13721",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "817eca9f-f231-4b0b-9a27-cc1cdc796747",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8334bc99-04bb-4d7a-9104-a48e62e69a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a846fda-35cb-43ce-bdd7-ecc68541e810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55e42b5-67bc-468f-a82f-ebe0edaef830",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb2d639-6e57-43ca-b4ac-a7d56c40fce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fec8501-c0b4-4073-a646-268817a42baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f481915-9c1a-4736-801a-04108fbb0ecc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ea201e-a7d1-4d4c-94fc-49d28f33f26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fa77bd-4ef3-4629-b23f-a66f2af75c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139757ef-84c0-42f5-8fdd-54f0d2818429",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fa05c6-6233-4982-8669-1487d51eba3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f927d9c-bf07-45f4-aa3b-e50449e3cdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7596c852-8a82-4049-9956-1ec9e0c63c78",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0739b122-4cc1-48dc-a944-f4449f4b2be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5550559-035f-465a-a674-e9b27ab252f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb543db-aa77-4e3e-9d68-8b8898cf5c3d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bb3479-ab9a-4595-a555-60fe5159ac90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d67319-a54e-4f08-8049-cd267ea11913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b251b05-f40a-4a69-94f6-644f4fa25351",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fd18f9-e8a1-4fc4-a778-e6170f8842f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9054ef82-577a-4f08-a87e-60651e32abff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b301ae58-8995-40e8-9f9c-cc7fbc6eb778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c650cc-ae22-4996-8433-193ccb7c9657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b72afe8-8c60-4daa-bf05-da1546232d23",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31db2804-6b54-4c60-88c3-2c3406cf86bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1e7187b-5b11-44f4-95fe-62ba9bd1bfb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bcb88c-3e68-4eb0-b00e-2e9b84335286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424f0a9d-5a6c-4f4f-bc47-c343e73891b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600f24c7-182c-401f-87d5-a72ab1a3aeb7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0cb216-697e-424b-bdc8-6c3b49eeb063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03ceba23-7c6d-43a9-a6e9-81ca4f505558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d99b64-3266-4af9-b440-71d197130ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc6bdae-44f2-4dd3-8b7c-541e485709b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8883bd2-10a5-4e39-931e-b738a167c803",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8bbc17-8815-41b6-b120-bcb02886263a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d60b2265-41ce-48b5-90f5-a205c98bc91b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf728937-bda7-4519-aef4-b6e1c5eb9175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7cbcd9b-eb0a-462c-9b90-1a89be723f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2519749c-2fc5-4bfd-8e9f-c1bd779895aa",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec718bc-f304-4663-a7d2-3afff859235f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995f0a51-1c75-4bdf-baf9-170d473377d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d96bf92-dcaa-4ede-a5b4-dd6d0c85e12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909342d0-952f-4a0e-b95d-e2577752ccb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e149d7b7-8f65-4691-b301-276839da5a4c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a0a1e8-c018-4ece-bdce-049ffae18812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14992022-a797-4383-8fa9-b9f2785c2680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561740b0-553a-41b0-bf09-6b61a0abaa33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e201f84a-089b-4244-ab0c-3d9ca72155e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6433f8-a1ef-45a3-92eb-45c95059fd28",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0df0b7-7215-4e4a-ab14-edf5e0c89487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1af60ebd-c008-4d91-9515-1faa06e82849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2929dbff-dfc0-49fe-8fcd-00844b1e172d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4248f58-7ed9-4ccb-8ed6-db4a1cade31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abce95c-cb59-4823-b4b3-cda8013d83e9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494e2ef2-c0f9-4bdd-966c-aacf573a228e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "776b004c-606f-40b3-959b-44847fd33bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a08c85f-3cf4-4820-98fa-d6ebf2e5b124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fe4915-e97a-4c73-8d23-17fd798b46f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d862c2-289a-4539-9131-c3b43822f2c1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c024bfa-0a8a-4929-831f-817de4a21660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f65525ee-047f-4e02-b92b-7038a71d13ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e30930-915f-4d4a-bf2b-0c6ec180b977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a40e4b-45b5-45dd-aa53-65f2958b43c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31252dad-e66d-4f43-b7eb-a98a10b51f4a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f99e01-a6ad-422c-8c5d-d1aebfc38577",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91801e8a-c798-40b6-9e03-2d660416e83b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0ac7ba-0475-4657-8c39-f32df943540b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6571880-4406-4b4f-a5ff-731c6a80afc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf7b56c-cfd8-4b74-b0a0-928106f37cdf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3589df77-e0d2-41c9-b9f4-bf5481538562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6803d1-ca86-4c2b-9ed3-edcd7e3fe826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be910f7c-5722-4dc8-99f3-1934f0bdce99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19cd1e02-0b02-45c2-9e20-3e7c2ef828f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac496c6-3062-4b07-8db9-646431e330cf",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd46d47-2ed7-4f54-a115-e4cf47123196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0109afd3-00f0-412f-b089-c6094a94eafe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c12fe97-6cb3-4768-9fbd-5f974024e342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "882733dd-3626-4297-a4c4-3cd1688159e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231c02a0-4a92-42c3-8825-f84a70354c58",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296b6fc6-6c77-421b-9c53-4ea31e246f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045fe4f2-2c5f-47ff-924c-17387767b776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f3a64a-ff35-4a5b-ab6a-ee9b73df09c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5842b79e-d6fa-4d4d-b893-40f9a97a7f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc317a9-5746-4e86-a6f9-39b7c657fb1b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c2dd1c-0808-4a9c-bf76-718cd2ace07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489a76aa-e7cb-4b7c-9965-aa88f9e253a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56532b9-9eeb-4334-8057-ce4cb335ba2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0191f2c-4861-4020-8789-5f5b15abc252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bb1412-2393-41ea-a259-6701403de328",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54acbc2-410a-4b2c-8e2f-58c3dc5be561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efdb507e-936e-42f8-b72d-9088954f7c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e378ae16-6348-4f5e-8d64-9cdb1da42931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8cdb7a-d9f2-4dfa-9c23-678c36867f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c64e3a1-59ea-4f7f-9046-8b91eadb1e0a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff90a47-1091-42c3-b17b-906840bfbb1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3317dac6-2ddb-4055-959d-02d1a65e2f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f053b7-6df4-49cd-9f21-2aa17dd0a112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f01acd3-e89d-44d1-9893-36b4b91bb4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa71d5ac-14ae-4a8c-993c-b93c48c40d9a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9195be6-b85c-44eb-9537-25d23aaa48ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd65f399-deb2-4077-bc88-0f428eb9dacc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f19988-8018-4de0-9639-be7daeca879f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4410b249-e787-48d7-9040-92946005a0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5ea59f-dc11-44af-b891-ed531ea9ecda",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ef36cf-6451-4513-ad97-49d0e4e0ffae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42bfb97f-1369-4af5-a9e4-3b05844b7c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b77245b-0ed0-4e50-8751-a7dea189833c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994b292c-e791-436c-b7e7-d4d101b5cf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed3fd53-11cc-4ea3-9aa3-135a8c540440",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8c84c9-1a89-4135-a3f7-69e913330548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d360390c-c090-44ea-9bff-7c2ca4bb3c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d63a28-34aa-4e33-82df-88ae958d9266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f1072c-06bd-4b27-9aa2-d3730c42e74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59452e39-844a-4ed1-9e66-f4800321dd5c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a09a4d-8c89-4c04-9b2c-4dc4f719f6e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02575ebd-8bef-456b-a36d-cffce5a4aaaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "982fc406-b4b9-483c-b7bb-ae3d0dfc06b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e28504d-ba63-455b-9838-f2095b1f6233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ae3d00-7a34-4ace-89c5-0446c93d21b9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833b5891-86ef-4e7c-a311-7a758399f2af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5355c43c-735f-42ea-866d-86606efa7320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95de7bd6-34b1-4e61-8baa-b4a0b435e916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5fcc850-befd-425f-8083-e8a6f5655de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c175bf5c-db3a-472d-9f6d-adc77285f75a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30563bdf-62a2-411e-a06d-08011618c47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056611a7-3562-4058-bde2-0dd5ce144e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a7d6c8-25ce-42ac-ade5-563e24068322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ece7d9a-20ce-459c-a759-fb1b3d42f41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391487c2-0463-4776-92b3-514290a4119e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70384305-92d4-4beb-9936-65b7ee471eea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cf165ca-9bfd-4068-9bea-2db45cfbcb53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01412b8a-7230-43c7-992c-477a668d1189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e35dae-2e82-44f3-9a8f-936f111fc6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1493245d-2808-4583-b405-cb56774a1be2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f001fb16-8d18-4392-9cb0-5dd77a32b294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab99e01d-2c82-42a3-b17f-ee5999121c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89d4c1d-b0b4-4fce-9cf8-ffe0497c35d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1045ab8c-2e2a-403b-a890-ebc378410606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3aa5fc7-ceab-4c4f-a20b-94cc0fed09c8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c212df06-16cc-4570-9a15-b6b10e6abc7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e37622d1-a962-4dbb-9b24-35a94ff08ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b7f9b9-44d2-421e-af8f-1842038a05bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f604344-9cfb-404e-a448-57a990ae7fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4610d5-760e-40e1-9308-6c5e5f06fbcf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda25b21-9a55-4a10-b27e-d88395be9bef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "224223d2-78c8-411e-a483-c81b964eba6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e381b35-db42-4439-a0fb-ad5a11565100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4a9a13-38ff-4643-9aad-527198c3706e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ff8dfc-f8df-4de5-8d66-9e8253974941",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52605512-8e26-4744-98af-55b9594ea36d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf18c016-3a3b-48e1-97f7-1ee144aaa517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d491c18-d2e7-41cb-831a-62574c4ad140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a383244-2dc8-4c93-a051-331ee981859f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d2f220-fdba-4b7b-b1cf-ec77612a8938",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fa579c-f76c-4e7d-b2e9-69ea4105084c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d491b056-d1c5-46dd-9c97-2e9163b676b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96afecd0-281c-4ab5-8ee6-4ae5a93eb12e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b1beb9-0dbb-4621-a2b9-21c8c430af58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2655b495-3e8f-4a25-828a-456e94c249e6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01d90bf-4399-4c9f-aaa0-1ea4da77565c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0ed5b7-7399-49ff-a384-96d1ca48a440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb13221-1eee-41c3-9723-76930ca3168c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66859f65-2147-4459-b0bc-b02d49eb3ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f771a47a-082c-4ced-8fd1-5f7695cabdfe",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e923a1b-e896-4263-b523-dadb7caeaf35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68a707e-ca3d-4909-9a4c-e6247e0fc5ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3435bd3a-286c-45e8-b4ea-c209647d3741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165eb975-d596-48ac-9618-5464ebea4acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb12a0f-d8c1-4d76-8c59-23b257bc7eee",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40a7fee-6a8c-4792-8c38-c896e8b86744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdcd74ae-7b92-4ee0-9aad-110cae4abc0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "772a2f4b-3496-4dea-9ec7-17c41beebafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea39e35e-c833-4245-ae2d-45876fc31643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a549db64-b542-4fc1-8a75-ab0653ba918f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7647d93-8506-4dd0-8c82-42ce7c3a0355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9939c3c7-8a9c-43f8-aeba-d877f4c3c1df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97ed138-9e71-404a-a62c-da1796a72ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ef4ff0-5230-45ce-b519-0c4db26377be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22000075-f01e-4a7c-92a7-d6809d9b4458",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8807b98-f970-44f1-81fe-258dceb5ee4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1def364e-5337-4f55-bd33-32b7f193af1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "715b5037-ebc4-4607-90ab-80a34ac6161e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4a094d-52af-4c71-9259-1829e99508cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c609ed-8439-45ef-8fcc-cf8a6294da1b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebb230d-f3f8-40f3-a543-092af423709b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab512ad-65c2-4bb1-89f6-399e4aeb30e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfd3cdf-87a1-4ba8-8497-38c90eaafda6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1bfdf8-67e0-429a-98ff-e273c099f2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff861c1-8fb0-4f36-8593-71631248b362",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3d1a48-baa8-4dda-aa74-a0a2cddafaa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9256a85-a1da-474e-abce-82b9ca3b88c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1376824a-d019-41f8-ade7-282f7985984c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78a876f-dd0d-418f-bdb6-471d18ad6649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b646daa-5e98-4a9a-96bd-ed21957459bc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68fdc51-b3a8-4905-af1c-9f920c238de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c16fe072-d52c-4dc9-8f52-3935fc2075f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47afdf67-dcff-4bd2-b6d3-5ba086c6aa80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0303b2-0afa-4c4d-97ab-11942c66db14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234891ba-09f7-4ec0-9722-be87b5b5eb36",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e826e6a-1754-4fab-92a9-18bfac49970b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d85c36-f4e9-4dcb-ab6f-d186e15c26f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2126348c-663b-4214-b587-ceefff34da7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc318d3-2b76-46f5-941e-075c9bcff66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27971e5-e3ca-4ad6-86e8-cf5ac82d79a7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313ce039-1ccc-462a-91a5-fa5ac1dc243b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e778a6a0-cbcf-45ee-a342-f3589121a6dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0b74be-344e-4c66-a98d-00a80a845754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46278aef-5546-4b15-a216-03ef55037a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c83944-d01f-4e1c-9138-147550c20ada",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9724f2-a360-488f-acdf-ba9638649404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7f7cd1-f9b9-4b36-91b1-93dc6728687b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc5a38a-36cd-4c78-bbef-9665325738b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d62aed6-e476-40c1-b91c-9dabfee4e71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b9dad9-64e6-4fdc-8c21-670f408a16d3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd21e3ce-a65d-47ab-bd20-da888563adb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe8d34b-f123-40d3-9576-847297963265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955c640a-b383-4ad0-8030-310ca86b3785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6776ba86-1bda-4c1b-9b1a-0056a66b1c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dae447-c7aa-43d6-b762-54b8b64a7c73",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6275121-f341-459d-bec7-4da5673afdc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fdf24c-41b5-46c2-a694-7e75663ec9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbd5cf3-addb-420f-b53f-91876fb1c72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dffaea9-67ef-45d8-8a2d-52ac1a5d5731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea22ff2-3cfd-4130-a1d4-c1cee6c5228a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85f03eb-8628-4037-a24d-e329a9667016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73242f73-2a7a-491c-9094-084b1c111349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7102972-50f7-4b63-93d1-b0ed0a9dd9cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f5f20f-95cd-48e7-85d1-5a4df2981167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42091ef3-8484-4726-9a28-66f533258395",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc6d7a5-be45-41c8-af64-c609bcb78b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "343bc25d-3516-409a-8b0b-fab5d5816ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c7da4d-ad61-44c3-88b8-b8f39e3598c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc049278-db93-4e44-a406-0a0137babc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ff3866-a8a0-4d7b-9f85-163d02954a61",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0bde59-d871-41bc-b9ff-97f88d2326fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415f4b6c-d947-4efb-b5e8-538d24979b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0061bd8e-a1ab-49d9-8c88-fbd4ad1f997e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7aecab-5dee-419d-87ee-01a35e70cf1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744375db-c633-4f63-8ef8-3d7eb82a58a1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81066530-74e2-4f71-b329-8ccaeaddae35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dedf9de-7e85-4dc6-93ed-98e98386caa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b57ee46-8c09-4c8a-91a3-04dae0a00c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75618be4-d270-44a0-b27a-f2da615a438e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a556cfe9-e42a-4a3c-84d7-b8a585f567d6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de6671d-99e9-459a-9a0a-1adae74af9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1217b6bd-bfa3-465e-b314-d816cb2f316c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "270bc51c-b93f-42d3-bae6-1530d7392a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2d63bf-09ca-43b7-8fae-08ca901edfdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c41a147-3fd2-4635-addf-10c42d93fe91",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe4e6a1-7fe3-4bd7-824b-70b3751f3c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7702ee93-acce-44b1-b2df-a71e228a98d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1af4e1-e9f1-42d9-a1c8-a53a16e7d915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162bb8cd-9291-4962-af12-205c0417d455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653222c5-f578-4a86-a34f-a69d6ec43df1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c02d75-eaeb-4174-bc78-4ac660778c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5767151-ec45-49a8-abb7-a0cac5de8985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c49c42-a6a6-48ee-ae4d-6d4037809238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e738fa3-99f0-4a88-a91c-b30c96832224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0943ffd8-6f14-4ef2-91a4-6b306afeb004",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6227fb50-acc2-41ff-be9d-c4ff093256fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9504cd1d-9b4b-4bc2-9acc-1b87cc9ca311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b202e3-6571-4742-bada-e0d4269b36cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf89abd-5100-475b-a13b-3613d7267d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7d1c05-44eb-480d-9f9a-82f1ee1f5138",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4f701c-ed70-4098-92cf-a83292605abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d46b0e-847a-4285-a24d-a09c62179d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814aade1-4a2c-4bdc-b318-3c3918f5a05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9490292f-18a7-489b-89a8-7b1397334433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3c68f8-10e8-4bbd-822c-4bb317af58c7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d79f0a-70cc-4232-9a1c-73c8fe155522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8edd11-a121-42d6-a975-eb2a806b4e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ea44c2-8386-48fb-a642-17e8cfda05d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa879bd9-a605-4007-a3c7-0e1119ecf711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9660f5ca-d1e5-418d-a9f7-6d74c16ead54",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a638e7ab-550a-4de5-85c5-6945f3f52032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ac0103-4b7d-4b66-a88a-af5ee209bb50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da1d57a-9d80-48d7-96ab-93e02301e0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f885b45-32b1-4520-bc83-9ba0b3aab386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b774e2bf-8e1b-445a-ba88-c194eeac6112",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d69e1d6-53cc-4fcc-be7c-b91ceaa6bcf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d8c95f-35b9-4d11-b707-91d3fdc5f63d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af6d642-bc43-45f5-98e0-ce8382072ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7a2ea4-c7cc-439a-ad07-57741e27f548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248cf497-4099-4c08-b522-5c6c8a48fe1f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2ab897-ee69-4a5b-84b2-cb42a9027720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc85391-c1a9-404e-96df-3eafaa29467a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2e1f4e-24a1-48c8-8126-6314f1c13d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf0557cb-e6ef-48fd-b3e1-29cf5137c29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3461faf-4a2e-458c-bf98-f80ced05f2bb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b956c6-dc66-4c0c-ad36-e1d20444b4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41689416-ec0e-40cc-9b40-ef80abf00601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "258eaf9f-9447-47d2-8d69-cba58c0affa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19fc866-af39-488a-8056-544ff5b60e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7c8037-da2e-48ee-b5fc-9ab746129211",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0935b7d-718e-4764-b91c-4538e80496d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4a7d39-aef8-475f-82af-f69f25678eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b678d5-41e6-459b-b771-6fa4efa58677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4437783-c11f-41c6-bc20-6ea62144f855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c422df1-2383-48fc-b9db-b39a3fa04bfc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1aeea11-67c6-41b8-b8ea-5079af448ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d51af0-40f6-4cc0-bb61-ffc40466d366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a3c8a3-74a1-4375-8e0b-12e2c4d3cba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac3c348-d4d4-4ecf-bfe8-da0d16df7ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a691bd-d4cf-460e-b3a5-ee146dbf3bd8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b045d4cf-9ecc-4f80-ab2a-1ad6db35c0bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8cc4428-3ebc-4b0c-b5fc-5fe87e03cebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8054a5fe-4e69-4788-b206-762dca178139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e48972-a1ef-44ce-a97c-ee5649e835c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ce38d1-29b5-49ce-ae9f-87367b1c1771",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eaa1e72-ab0e-494e-99e8-3e5674e3a0b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2cb1463-0420-498a-8661-6b7bbbb9c569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20faa5ce-bec3-4d95-963b-3da75df778f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef10603-4085-40a1-9989-b192b61644b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f3ad52-0b82-46a5-9bd2-bf2b690acd91",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4ee514-3cd8-4de7-97e3-224c550d047c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c27f595f-129d-4081-a95f-ceb911100e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a510c8d-c0af-460a-9e08-863b8e5b57bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869e9d09-8e14-4a25-a3d1-4b95ef39a1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5704963-e8a7-4f8a-a3e0-6ab52d404b9b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993d388b-6b80-4803-be7b-9d3c83b75cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0907d36-c761-49f8-be19-4508125adf68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff03a7ac-bc83-4cdb-8139-d1f458e167d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631b325f-fef5-4951-8821-7867ede9b317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe9f1ce-2cfc-4f0e-9617-63e7c8ee21f1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c61a509-102b-4b2a-89fd-7ef404385daa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e92bb7a9-3808-453a-ab2e-a9098e140f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f769b5-34cc-46c9-b848-230cb7b3f6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ec710b-2c73-4a88-af2b-0ffe4f96c2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b297ac-f4a2-474c-b6ae-1a1fa95da1fd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b37161-b19f-46b3-92a0-35b4b8f48399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0fa65c6-8fe2-41a0-8bde-66382584832c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e5d251-db95-47cc-947f-fbedd4086ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf56b33-82ca-4997-a6e7-1ae02aa4bbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb73d27-9b72-434e-b122-e7b9d4fa5c8f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da08d94-5bc0-4705-84a8-faa755d6403a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a6442e6-b9aa-4538-9770-9715cc45ae33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6690f05e-9a9d-49a9-ba41-02d07b9d1906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82c1324-d663-4253-a963-6f7916b36636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0aec89-14d7-4e58-8760-370bc892f40e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf64dc1e-bead-4029-889a-91e99277fb54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "611ede28-ae67-416f-9859-5a5b4d7a74e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7ee714-fd4f-4f8e-8289-523d3e0bb221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e79d97a-c047-4410-a1b0-8f108b0346c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e802e7-c494-4d70-9f1e-66b984ed0d03",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22f7be7-76f2-4fef-be6d-ffcf351bb3f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85aaadbc-c6b2-4239-bec7-a01b7f5b566a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa524f9d-1124-4e64-82a9-b767e7bd748c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb8024b-c56a-4086-b7a7-6c04d1279de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4a7a9e-6943-4c9c-bd65-adbcfda000fa",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0a84ad-d63f-4948-b03d-6152bc824d58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8532363-222a-44dc-9f90-a660c99d881a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec8ad62-0c27-4335-83bd-b48317c22d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac7e83e-487c-4694-aa9f-dbe576e61fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0d8bc7-4023-42ec-a271-7915ece6128c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaaed98a-300d-4003-b70f-a4d94bd93f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3556fafb-0afd-467c-9206-4145a366ca93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bc7738-3739-4252-ba67-54e25744b7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a38246e-153e-48f9-8098-fb1a053adf4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27138d1-e1a9-4c36-a394-95eec04e39f6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc9d98a-fb83-46a6-a9b4-5ea29e25178a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c0a107b-9f43-43ec-ac89-d2068c1104c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c02c97a-abd2-4f4f-bec6-a972f96e0b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d54387d-9f2c-4c3f-80ab-a890eaf2044e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006cf0e2-9891-4ac6-9bfb-72f6a9274a27",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa940214-c70b-493d-94a7-2241fd996183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7d42dfd-ec5c-425b-9551-250c958c56a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d8bd62-21a2-4214-89fe-ccd7d9cec5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ae66d0-36a1-4672-b5e3-7c247a9e3659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb59049-e37d-46a1-809a-b3e305a57413",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f28ee6f-79d2-4fc0-b64e-42507e2e15a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eea76230-62e6-4dff-a651-63b9ce045a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d626632c-bd27-4cb3-8d99-180802014e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ca950e-e6d4-4360-90b7-e4f693e92cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9bf865-11c9-44b8-99ed-e709609dffbc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509c4916-f66b-4c7b-a7a1-340762026847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6096bf9-8eb5-4763-921b-ea510e1ca63f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03d2dbd-60da-486f-8e65-bd562d93c26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc054901-8231-4768-b812-3926edcc87a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e655c901-cbd5-4220-a515-0ddff7efdb4b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a863a8-9bec-416c-88ad-09dcd4b4e0ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16b67c19-4fea-4b7e-bcc8-de27a4a0720f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b271ad-f335-449c-a71d-fb55f9a146c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f30b9de-aeb7-4901-ba69-d1da5e2d7f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4c447c-54e3-4036-9fb5-632339e61278",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af161b5-2da6-4098-a3fa-0b72f6f54bb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c526ef62-bb69-4ab0-9843-173c38ecbeb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3417e8ac-a132-42f3-9706-b3b9a18d5fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd0dc0b-49f5-4a3e-ade1-2cc4c5c9db8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c590c19-6ad4-479e-bfaf-dcecdbff245e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e2da50-e551-4577-9b53-1ebd31cbfbeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb0a8ecd-7b0d-4328-a878-fae669fa3ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b777f0-c46b-4dd3-86bc-c59126a91216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3611791b-d2d4-4ee4-959b-5fe5b594b864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d05d770-adeb-4b60-9fc7-65440944e445",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ead428e-2dfe-4acb-a86c-4452391b2db8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ac22d94-40bc-4e36-a322-5751aa8ca3a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c5a789-c123-408e-bf8f-8ec1d60d263c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1f21ac-7aa3-4397-ab86-e21611ef2674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffa18f2-5dcc-4840-821c-72a92796bb21",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fb92fe-fe5a-4abe-8e3c-a719d585f3a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd7aa865-e03c-429a-95c8-356aae0e69bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152163f8-abb1-425a-b281-ecc1e3b85bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c2280f-10c4-4b5d-ae63-329b55f81467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedd11f1-bb76-4e20-b923-568bb42a83b1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cb9da2-d9c6-4946-84e9-e73b55591fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "192d5f6a-d19f-400b-a751-80538976a6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4c0b93-b826-4c7b-9d06-c16e52f4d65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baace5f0-e311-45f9-9b55-7d0e35576554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1902552-cd2b-4b1d-b1e9-72b976050959",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867234cb-7626-4bcf-a447-f5780856a590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1245b96-9c4e-437e-a478-6f61bd858c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd9eaa8-5766-4a51-8f88-c6f3e50ad7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b247ceca-b3c0-4a7e-b01b-12e77a14f6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7172ed1b-45fb-4145-8962-295aad229817",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53770a33-d18a-423e-8686-0826da005303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f37b2823-f0b6-4259-b652-f9331d5fcbdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81de3c91-a9c3-4dce-8aad-c61ff587c6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5cfff6-f596-4e6f-8833-6bb561c02167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ae0ef1-a938-46f3-a72e-465490d082f9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138a476c-ff8e-4de6-8c1d-91a34caf7188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a452a5b2-94cc-46fe-ae71-1b3e72c6db56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aef404d-0889-4db6-aa89-5a50a4b8111c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb93d74c-ed2c-4867-be4b-7ca66fed3eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05618693-5b94-415a-9dfc-34f4d8e48f16",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd60282-0e84-43ab-b504-be1d0e8c57a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84da3505-4c08-4555-85ee-179cb801a760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254f7d1a-fa52-4238-abe7-c4cad429df6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb314b1d-e299-42ad-80b7-f1d1261db0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe666f36-9f2a-4ef2-9b61-cee2c79b5a2c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbeac6c-0835-479e-9fc6-df9bcdb25654",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56f604ff-9ef0-49db-a410-d2e9569d3829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d55d10-8114-4d6b-8fbb-9df74df76867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f487fc-efda-4a8d-a068-09d401d81a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1351dc5-273e-4a0a-9d65-29ab38d0e744",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1995a667-32a2-46d1-9552-6b7acee04ff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe61f59b-f360-4c72-80b0-87f43c6ffdf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286c22c1-89be-4ea6-9a18-2226a396554c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7432e4-5ad9-4d27-afab-385898565277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0d892d-86ff-4cee-a464-25b6ed7bcd78",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e57d160-8a8d-489a-8669-dc266c6799e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c6605c-d0e5-48e3-9b91-76bc47af63b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7f7ee8-d184-43a9-aa18-2da59a4c2541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4438b1c2-f741-42a0-937e-c8f91dde74fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013f25a9-dd28-4e92-84c2-9f35bb35aa71",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4d2834-83f1-4661-8deb-399ab9d19cf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74e26c16-e2d0-450d-acae-62e05e1e257d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "204d81ae-01f8-46c6-9f41-d0eb900d6e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4e1c07-cdf7-4179-9e6f-d905615c5470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668f2b6b-5a2f-4452-a260-32922ad4affe",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346eee76-9e5a-4b8a-9c4b-7f60efdfeffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd139b7e-de86-4265-9ece-25d273d19b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fc6821-1bb1-4c67-8deb-a5617557ca50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0d6eef-813a-41f2-a8fb-98e42039a5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c42e0b-86bb-45b4-af9d-7ccaf39d53c6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5063c0d7-c44a-446a-b34e-6b56e565d675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d075185-a4d4-480d-b2a8-d3a2532e125c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e43c272-8bff-4b19-be75-2e3d85d5e99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a405f1-e1bd-40c0-9818-3890bb169281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db7dfbb-d1c3-4139-bab0-00b91c0bc331",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e966e97c-9ba0-4088-b333-00c62bb5bf33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "331e185e-80ba-415d-8cf6-cd2f48a23d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d4296d-ca00-4ea3-b625-c512f8c429df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c06468c-aba5-48ee-87b4-67f48ef37ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e16a9f-eadd-4502-9d09-d48d1b8c489f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcca87d-17eb-4c83-97b8-b654aa025661",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08d9446c-bc67-4fba-af26-1b78ccb8cd60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fec108-42e2-406d-948a-9079321740d6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dccf87a1-7f11-4c3c-9ca4-17e6728895d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9f5ac0-0ac0-45ff-a746-64b2ede667c4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d61260-eeed-454b-aead-36bc2d8517aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8327fe6c-bc2c-4f6b-9217-e65daff8cdcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f781eca5-41eb-4170-b92e-1eb2f06e3331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b3f90e-1156-402f-a008-d4e8b3ac8ecb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f5eeb02-497d-4926-b860-d063c059c6c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "959c4f3b-f2a5-481b-af4f-7819bd249a79"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c12d1ec-5f09-49c3-828e-8ba100594a10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "232716c4-a52b-4dee-954c-e1a9594a7dc6"
                    }
                  }
                ]
              },
              {
                "id": "b900b44c-6404-4677-a8e5-62ccb2569ce2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f18a6a4-256c-4579-883a-8d591645ba1b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cc2fbe-802c-48c9-bfd6-599a6d28b3f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "876ea988-2a53-4546-8008-e218ab04dbaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477b3992-6dcb-4d20-86df-6d31645e9da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bd90772-1fba-4de9-9914-966570832403"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b176bac1-38e5-4e95-b32b-f30fb2824adb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26df8e47-0793-4b4b-a76d-a29c882da2a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03a47863-a957-4e02-82f5-3a56d892fb2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8970c54-faf1-4d8a-9b21-2adf05cfb488"
                    }
                  }
                ]
              },
              {
                "id": "d82cc1ba-01e9-4e8f-9e58-ab060cefae14",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6abbd49d-8a7d-43f0-9f53-c40baac17d2f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09f1ba4-c9e1-4bd2-8665-23daa841098c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3e2d2565-b2f1-4a17-b562-e6dac32ebb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e842352-0113-4d15-a039-f66172f7e07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbd7978-de82-41f2-8862-fa5d0f8617b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a7f3f1dc-69ad-4750-bced-f62d2da44f48",
            "name": "Positive Testing",
            "item": [
              {
                "id": "04d5eafb-716c-4af7-bf24-1a0040c6ea86",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3688576-691a-46dd-85f0-366630f576b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "16db5089-edc6-47a9-b0bb-59bb0a1ed149"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dd0b231-221c-4c9f-9057-5653c56edfde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "846c2c0a-0f65-46f6-ae91-ba5dd97e93f2"
                    }
                  }
                ]
              },
              {
                "id": "cc726c8f-4c11-4dcf-ab04-fa798de10615",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7930ebb9-5021-4cc1-ba51-a60fcbe2819b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "939b53df-ce75-4d00-9e1f-e6bc6ebe08c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b50e014d-785b-4a84-a9e6-13730ef668f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da40043a-a2d7-4d17-9794-fe3d45b621b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a9cdfd7-0971-4fa6-ad60-2ff1a1a0c9fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e3bcdf09-2741-461f-afcf-1de709f61f13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afbd7028-ab59-4201-b4d9-25bf36c64da7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d04e6c3e-98f1-4d61-8505-aa1e2fef5828"
            }
          }
        ]
      },
      {
        "id": "cd920d98-dcca-4edc-830f-0f42fd7fed52",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "90a1ca49-77bf-4934-b731-8fb8633edf12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d6136c6-4bd1-4514-9b1a-a62662779ee9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d47aa1d-f86e-4204-a61d-53d5739e45ba",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a9347b-447c-4b51-8035-595996db3f63",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3e254ad2-30e0-4185-8bd5-6f64669c7c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12357f1a-ac21-43cc-86b8-4d1c3a38326e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9393e7e-acb0-4ff4-bb55-3532f0e22935"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19388af6-8984-440e-a851-0a2cc6565156",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3561cafc-6788-41cc-ac88-3fe5e3ca7b1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dabe49d-34ba-4dba-8de8-8b58be194278",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43178a95-a9ab-4c7e-aeb7-2640d28e11b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af8c307b-0d81-4ce0-a4d8-879e030eeb1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e07425c0-685e-4a1e-891f-ae5cc6122b80"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5bb80eed-93d1-4383-bcd0-7e588139ddcc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c17abe3-e850-4804-8dcc-0e602a007ac8"
            }
          }
        ]
      },
      {
        "id": "2fc1f817-694a-4eee-864b-8fa5107bb328",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e080cc51-b033-42d8-8313-1e697e1cee7f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a64be4bc-fc0f-45d4-8c2b-fbed6c577e21",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61c92a81-b274-4ff0-a7d1-928413e67774",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa340c28-e1d0-4d3a-8bdf-7eb3ae5749ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11add3da-c40e-4a59-8377-2f4f6275964f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37911a5-cf74-4046-8d28-d47e0fc459c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d79881e-7f63-4e54-b7ef-f407850235fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db5b8aa0-89b1-463d-add3-1c9106dbecfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dba19726-2788-4dd9-b5c7-7bfeb2c65b38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31a3a38b-3351-43a4-81f0-aebcfd3c9b6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3459e31c-4389-4ed5-96da-efd39080bdd5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5425a193-2306-4af4-9641-849f5bbd97df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8aa4059d-69f7-40d4-94c9-4e10a855b5da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d90bcbf-f280-4af6-b1c7-266347f8b515",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37e2f239-31ab-46fb-84c2-741b217270c2"
            }
          }
        ]
      },
      {
        "id": "954a0ead-7f8c-4f7b-bd95-47bf5404c916",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c18693dd-9058-4588-9962-737bed4bc821",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57c99d2a-0f5b-41be-9042-01c5a6b3f1f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef51d22f-9cba-41c4-9ed6-a6886441c716",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d705c498-6a20-4528-94e2-b84ee94d398c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d97a5e5b-7abb-47d7-99f6-413bc584b222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0139997-0351-4633-a9f1-269f427c86d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12b9c064-9e42-43fc-87a0-c35028b5ef1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c16bc97-a878-4a0b-9ac7-bc578a657096",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f2c1a85-dcba-45fb-9836-61b4d283f1ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "899750f0-6e5e-4af2-bb4c-4a8acfd2f76c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee171fc3-75dc-4c65-9ccd-beacecd133ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10705752-6bbd-4799-b7dd-c6c02a7a3629",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e45a1df4-da0c-4be8-831c-b13c6fb1400a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5127d0b4-2181-4dec-acda-e89ce0ed9e25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80e4f0d3-2846-4730-b6f2-fe6220c499c8"
            }
          }
        ]
      },
      {
        "id": "d3abeade-ad55-4210-a19b-361b397de94b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "385c4d91-90b6-495e-9922-70986e72f333",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0362787b-6167-4a74-9674-ceb33e4b929a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b849ee40-ebea-4851-a647-390464429fb4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06214f6c-dbfa-41c9-b096-87aa0b44c270",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b362b729-9e41-41ac-88b4-a8d1235efa28",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.515873015873012,
      "responseMin": 7,
      "responseMax": 313,
      "responseSd": 22.5672659859167,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722818516357,
      "completed": 1722818528567
    },
    "executions": [
      {
        "id": "265ac80b-baf7-45d1-9d26-3da9b665567e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "79f43158-3282-4af5-8ed4-79a4b6118588",
          "httpRequestId": "85f21ec0-aebb-40e3-ac3d-809bf1edafdf"
        },
        "item": {
          "id": "265ac80b-baf7-45d1-9d26-3da9b665567e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2b39335b-0ead-41b8-911a-ff905c7d2170",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "f736bf0e-5b82-4706-9988-5d3f498e0dba",
        "cursor": {
          "ref": "5b2f0dd7-9f19-45b9-830f-4216037f74b2",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ba937424-b443-481d-a8ac-626dff7138c9"
        },
        "item": {
          "id": "f736bf0e-5b82-4706-9988-5d3f498e0dba",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "267389a5-1fd0-4a42-adb7-1695a000611c",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "445546e9-d1f8-457c-a45d-e3ccc599d07f",
        "cursor": {
          "ref": "bb1afe25-489a-487b-8fcf-04463e840840",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2c52fe10-76e8-4f2a-9a67-d4d095f525af"
        },
        "item": {
          "id": "445546e9-d1f8-457c-a45d-e3ccc599d07f",
          "name": "did_json"
        },
        "response": {
          "id": "bcc3c69f-af99-4499-9d08-67f7b7ec0cee",
          "status": "OK",
          "code": 200,
          "responseTime": 172,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b927de-7b6f-4980-9c08-402a7c0517f5",
        "cursor": {
          "ref": "be062c8e-6eee-4761-9c38-1e2110b6ab8f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c3e7e427-fa57-44e2-9bed-91105d6eb264"
        },
        "item": {
          "id": "f7b927de-7b6f-4980-9c08-402a7c0517f5",
          "name": "did:invalid"
        },
        "response": {
          "id": "6f74d374-e2fd-4dc7-8266-e14f5365eb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b927de-7b6f-4980-9c08-402a7c0517f5",
        "cursor": {
          "ref": "be062c8e-6eee-4761-9c38-1e2110b6ab8f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c3e7e427-fa57-44e2-9bed-91105d6eb264"
        },
        "item": {
          "id": "f7b927de-7b6f-4980-9c08-402a7c0517f5",
          "name": "did:invalid"
        },
        "response": {
          "id": "6f74d374-e2fd-4dc7-8266-e14f5365eb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a5f340-ed7e-4084-9188-5b39dc3c7824",
        "cursor": {
          "ref": "b2674499-85b8-4453-8ed4-113bf4e00e55",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a59da16d-6108-4033-9b03-f555dc6a0c00"
        },
        "item": {
          "id": "c8a5f340-ed7e-4084-9188-5b39dc3c7824",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7cebc015-8ae2-460d-9777-683b0adadefa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50d2e73-4cd6-4a2e-9025-d8bded45106b",
        "cursor": {
          "ref": "c39e333a-c46a-4fbd-87e6-6d2ace64822e",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2947ceb1-94da-4cb4-bc7d-849be4aa20dc"
        },
        "item": {
          "id": "b50d2e73-4cd6-4a2e-9025-d8bded45106b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "249c3a9c-a205-445c-b3cf-68adc34edabb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a239363d-f002-492c-9c4a-473f084efcde",
        "cursor": {
          "ref": "2e1ecc25-0d54-4a54-bcca-528a8cf23542",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "400ad25b-9ffb-4560-a674-405f52d10dfa"
        },
        "item": {
          "id": "a239363d-f002-492c-9c4a-473f084efcde",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6e9b67d0-8232-481c-9e18-4a59554984d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04b7256-99ec-4253-9bd1-8796900571c4",
        "cursor": {
          "ref": "a65267ab-5d4b-4ceb-9b55-09e0543bacc5",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3fe1cb9e-7759-4954-8bfe-9dfd5f523ed1"
        },
        "item": {
          "id": "e04b7256-99ec-4253-9bd1-8796900571c4",
          "name": "identifiers"
        },
        "response": {
          "id": "14d2d8d3-5a55-4f86-894c-126dfbb69c08",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93a7204-2f99-4ffe-b19c-dac6ae6869cc",
        "cursor": {
          "ref": "1dc2134f-b169-496c-8991-714ceaff9fd6",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a9ca8f59-cfd3-4b96-be04-cd3f3e377cbe"
        },
        "item": {
          "id": "e93a7204-2f99-4ffe-b19c-dac6ae6869cc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "662a2685-b263-4454-a241-418d936c52e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40a4fec-491b-40de-817d-7fe63464a262",
        "cursor": {
          "ref": "f26ac25b-f0ee-4ff4-82ef-7a3d2f0acf50",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fe38a0dd-b7d1-4d1c-a099-b31278cc1c7d"
        },
        "item": {
          "id": "e40a4fec-491b-40de-817d-7fe63464a262",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7775e717-2194-42f7-baf7-aa4dbf70f416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6178a8a4-2f70-41a5-9bb0-2cf639765b0b",
        "cursor": {
          "ref": "d5f23d99-1b25-412c-a4b2-ba96b7f1403e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1633f0a0-d1cd-4786-9406-21a90a238919"
        },
        "item": {
          "id": "6178a8a4-2f70-41a5-9bb0-2cf639765b0b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9ff57749-a437-4d08-9651-4e0eded4ed1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259a51f9-86da-459a-a18f-d2e58ac00d82",
        "cursor": {
          "ref": "79b2c6a3-d259-4e4b-857e-ff9c17ecbb91",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "582a4768-6c3a-4c39-ac8a-e4c17df88498"
        },
        "item": {
          "id": "259a51f9-86da-459a-a18f-d2e58ac00d82",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7071f869-0d77-4391-98ee-cb9ac20a2ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69170b8-a6dc-4905-a04c-af40107f66ce",
        "cursor": {
          "ref": "2177f037-dec6-4d7b-8308-3adaac63cf56",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "00815c1f-9d30-4570-9985-78ede8065cf3"
        },
        "item": {
          "id": "f69170b8-a6dc-4905-a04c-af40107f66ce",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ad6119dd-ed5e-4e9e-bd00-3d6e89c28799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7caab0b-d87a-4ea0-aae3-90431a28275a",
        "cursor": {
          "ref": "b299a993-0358-4910-8316-a2bc9d23eb56",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1e69b435-664c-43e9-b155-5a247b5e79d8"
        },
        "item": {
          "id": "f7caab0b-d87a-4ea0-aae3-90431a28275a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7961ab0c-87e7-4db9-a5a6-cc74c275dd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a635734-96c4-4a58-ab1e-9d8ba98dd972",
        "cursor": {
          "ref": "901f83ea-315c-422e-9f66-9a2d214528f9",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b7405af7-79d1-4011-9b2e-89c93b5e5c61"
        },
        "item": {
          "id": "7a635734-96c4-4a58-ab1e-9d8ba98dd972",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ffd55207-0ac8-42f2-a76b-8920bc19f42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703676d4-1abf-4fee-983e-093de07d26b9",
        "cursor": {
          "ref": "31ea2256-c30f-43c6-8f8d-b5ae7e8de5a7",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "99055d56-9579-4bd2-83e6-be582924b989"
        },
        "item": {
          "id": "703676d4-1abf-4fee-983e-093de07d26b9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8f248ab6-7f89-43bc-8dc8-6de7039e4c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad72387-97e4-411e-ab75-d582297d8a0f",
        "cursor": {
          "ref": "23f42228-47c7-4004-bbb8-b0fbaa70c106",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a421155f-7c53-4e8c-aa21-e27b5cc7713b"
        },
        "item": {
          "id": "fad72387-97e4-411e-ab75-d582297d8a0f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e7c34f37-cb06-45c6-8334-b3433167dbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524e68e8-dd4f-4276-8d29-016114bd06db",
        "cursor": {
          "ref": "9ff82d1d-451f-467b-b520-29837e466882",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b3fe7686-fa39-4417-b929-bbe10b5450ac"
        },
        "item": {
          "id": "524e68e8-dd4f-4276-8d29-016114bd06db",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "94c1ac13-9f61-44e9-a1ed-ad79f68d2aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebf5a38-e0f4-4157-b1f0-a4c475ff1818",
        "cursor": {
          "ref": "dd9a72cc-1b63-4028-b8a7-402436add679",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6e3332ff-a43f-4bfb-a00f-e2471ae6507d"
        },
        "item": {
          "id": "9ebf5a38-e0f4-4157-b1f0-a4c475ff1818",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "72519333-3f33-4bda-953b-ff12c07cfbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db969685-f51e-43b3-a962-8e48587cf27c",
        "cursor": {
          "ref": "e90d8fed-1239-412d-bab6-026c90b32157",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "67e5693e-2a12-4970-8d7e-f8ced590a0e6"
        },
        "item": {
          "id": "db969685-f51e-43b3-a962-8e48587cf27c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "233a2f00-911f-49d2-aa8f-46709b35c58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d9b119-8feb-41fd-83b7-8a793978333c",
        "cursor": {
          "ref": "c85567d7-68a2-4a4d-a824-1804209e002f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9204132c-04b6-45d7-8596-0cf737e67ebf"
        },
        "item": {
          "id": "09d9b119-8feb-41fd-83b7-8a793978333c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "58a431a9-6409-4e7c-b347-a1cfcf04f2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ed7dc4-5fe1-4c74-8e84-1f1e2c8ac3f5",
        "cursor": {
          "ref": "98992f19-5f04-440d-a1a2-ced2370d41c4",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "442a92b2-8f4a-4434-ac87-6a414b58fbc4"
        },
        "item": {
          "id": "69ed7dc4-5fe1-4c74-8e84-1f1e2c8ac3f5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "48af19c5-9d7c-4163-903f-77dcf8fa51c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef51fbdc-03a3-49a3-998d-8a053c80b86f",
        "cursor": {
          "ref": "a381e035-1d96-4b1a-af61-5bba633c02b8",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f2ef9b2a-4d16-4f6c-8c34-633dff38e3a6"
        },
        "item": {
          "id": "ef51fbdc-03a3-49a3-998d-8a053c80b86f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b58d1130-3819-4443-9735-424e86e0ead5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b520fba-7489-43be-b4a9-5eb61db397c6",
        "cursor": {
          "ref": "5279124b-4cd9-4401-bf2d-17a95e596e91",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e4562d86-deef-41b8-ab2b-152a3e428eeb"
        },
        "item": {
          "id": "9b520fba-7489-43be-b4a9-5eb61db397c6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ea72526d-88d8-432b-b006-8df9c4d3874a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3816db-056d-43b5-8655-c5dc737b815b",
        "cursor": {
          "ref": "8f25e12d-c0a2-4c14-a87c-29a9c6f176fd",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "753643a7-4c0e-4e7d-a760-92c2ae850de9"
        },
        "item": {
          "id": "9f3816db-056d-43b5-8655-c5dc737b815b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5020a39c-f0f8-4263-9327-426d04c97e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5deeac-db45-4119-8e10-7a1a62f0478e",
        "cursor": {
          "ref": "00d81635-ea76-4836-8456-8f60be702c5a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2760a092-7a29-4c66-9d37-45007a628550"
        },
        "item": {
          "id": "df5deeac-db45-4119-8e10-7a1a62f0478e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "73f575c3-726a-4cb2-b9d6-ce8330246e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e320b13-3d3c-4d9e-a6b2-950c70766fbc",
        "cursor": {
          "ref": "0d952c87-2453-44a8-a570-3065f209d62a",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "77b31025-f02a-44e4-92c6-bcc8b1ac8426"
        },
        "item": {
          "id": "9e320b13-3d3c-4d9e-a6b2-950c70766fbc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a1233a3c-942b-4a40-979a-c8af801bc9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829e0e61-9b65-4110-9d15-5bea5cdd151d",
        "cursor": {
          "ref": "bff353e9-c8f5-4328-80ab-e15fe6a0eae3",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "994ce154-d393-4142-bd87-5b6eafb43c7b"
        },
        "item": {
          "id": "829e0e61-9b65-4110-9d15-5bea5cdd151d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0d5ee9b6-d03d-440d-b17f-b997a4213f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0689b1bc-538b-4843-8241-1201ed9fb2ee",
        "cursor": {
          "ref": "b14e9215-3491-4336-8ded-7a8386962729",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "15e41060-bb64-4b85-888f-801914610f89"
        },
        "item": {
          "id": "0689b1bc-538b-4843-8241-1201ed9fb2ee",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a287bf07-0d53-4e04-a845-c8932f9219b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb0fc1a-f79d-4484-b50e-e924ac404bfa",
        "cursor": {
          "ref": "46504a94-c213-43b1-bde1-fce788c6b955",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8dbafc81-b287-4dc8-a3f2-f3ccb937f7fa"
        },
        "item": {
          "id": "0cb0fc1a-f79d-4484-b50e-e924ac404bfa",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d05c87e6-85fe-425b-b58a-9a060956785c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4bf966-be8c-4879-8a5a-811d69c5581b",
        "cursor": {
          "ref": "b15a1116-a665-4c0d-a6a1-7c32f381b310",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "648eadf1-1b35-488e-bbc0-44a60bdb5241"
        },
        "item": {
          "id": "dd4bf966-be8c-4879-8a5a-811d69c5581b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bcf1e530-7d43-4c07-bc40-93d9caaa8a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3cfdfe-94af-4b0c-a9f1-4dcbb7810e92",
        "cursor": {
          "ref": "39ac3371-8b59-4674-aa76-e843b086c2ed",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "94d6ddc9-13f5-4b72-8468-02c111f65125"
        },
        "item": {
          "id": "ca3cfdfe-94af-4b0c-a9f1-4dcbb7810e92",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "69537fe1-deae-4e35-8ebb-21d3d49d1e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae83503-c349-44d0-8948-c66a4015ad18",
        "cursor": {
          "ref": "d0be89ea-bc7a-4e8a-a019-24ae975f651f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8af74c03-f5f5-4214-aba8-a6d6a4e64f30"
        },
        "item": {
          "id": "1ae83503-c349-44d0-8948-c66a4015ad18",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "09720d09-ff33-4b9b-896d-6be6689fd9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc6c960-8b79-4ddd-8d63-216f41237b74",
        "cursor": {
          "ref": "7383430b-ef75-456c-90ee-3174742b0ba6",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cd87a7c3-3f0f-447f-9e7a-51d513e52faf"
        },
        "item": {
          "id": "8bc6c960-8b79-4ddd-8d63-216f41237b74",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cb52e989-9a7c-4234-926d-83274b47064f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ae81db-407a-44b0-9b1c-b64b8bc40508",
        "cursor": {
          "ref": "e23e8c57-debb-455d-a61e-a400b1d96947",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "13f03650-6153-4bf5-885e-f59d82d7a737"
        },
        "item": {
          "id": "63ae81db-407a-44b0-9b1c-b64b8bc40508",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f9601c24-7da9-46ed-8c8f-f30ad5aa94df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0727411-ce27-4b58-bd3f-3670bb2dda2a",
        "cursor": {
          "ref": "7f0461ef-b720-43f0-a2e1-96238e082d02",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "61958add-951b-4e7b-81e2-310687da7873"
        },
        "item": {
          "id": "c0727411-ce27-4b58-bd3f-3670bb2dda2a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fb51df8b-e0d5-4ddd-848b-64fab1e5bdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c632a69-90c6-4a95-b596-0ba1d4726bdb",
        "cursor": {
          "ref": "12d74b04-a6ed-441a-a4af-fab228dd6b41",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "be6446ac-91b2-48bd-bcb3-35cbcfab27fe"
        },
        "item": {
          "id": "3c632a69-90c6-4a95-b596-0ba1d4726bdb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "cee67580-b7a5-4efc-9127-afc3ca1ece53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b246b8-3f98-4a85-bf2c-6a88905bd06d",
        "cursor": {
          "ref": "487e14af-13aa-49c1-8222-3b222f192190",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "492c8e93-8b49-4412-90f2-833c7e1899d8"
        },
        "item": {
          "id": "c9b246b8-3f98-4a85-bf2c-6a88905bd06d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "04f2c49b-2cb8-4e44-9485-6356e762513a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277b9d0a-1a99-419f-8a56-67b626f54f8a",
        "cursor": {
          "ref": "98fac60f-72fe-4c65-bef9-55c127514183",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a92c7559-804e-428d-986d-1cad1e353eab"
        },
        "item": {
          "id": "277b9d0a-1a99-419f-8a56-67b626f54f8a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "335ffeb9-2dba-4b2b-80da-c486b04e3f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af562fe9-078a-413f-b511-aa82c342c964",
        "cursor": {
          "ref": "f00876f3-5b15-4813-8ecb-d32a427517bf",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "358bdbec-3cd5-4895-a206-4f2806f81a33"
        },
        "item": {
          "id": "af562fe9-078a-413f-b511-aa82c342c964",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "57852e6c-57c2-4590-80b1-3d52e6214abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245fb1c4-ffae-4b77-b229-838c8bb0e54b",
        "cursor": {
          "ref": "3d96dafe-2c78-4de1-8ec7-83bc28ce3835",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8c54dee5-21f8-4e73-8ec3-e79cbcccdba2"
        },
        "item": {
          "id": "245fb1c4-ffae-4b77-b229-838c8bb0e54b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "71098f4a-48f0-4858-b7ac-fb7b22a2a0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c878f7c1-4a66-45be-ac3f-73dfc60758d1",
        "cursor": {
          "ref": "24c60234-e8f8-4d3c-88ea-e75d76fe51ab",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cdbdce49-17ed-4c11-b994-822b287f1730"
        },
        "item": {
          "id": "c878f7c1-4a66-45be-ac3f-73dfc60758d1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "11c3ff00-e483-4df5-9382-eff007e13817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d18133-581c-4eae-a1cf-9f6026cdd084",
        "cursor": {
          "ref": "58ada07a-3032-4ecb-a567-6c44faddb31d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "19172383-1c55-42c5-ae6c-259a527bf1ab"
        },
        "item": {
          "id": "b7d18133-581c-4eae-a1cf-9f6026cdd084",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9edb9553-9201-4588-a422-0534ae64abb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827cf550-0ef2-4131-a3fb-27058330e0be",
        "cursor": {
          "ref": "553c6a7b-8132-4292-bc08-930652f6055f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c5ee5566-7b13-44c4-b47f-5f731201d553"
        },
        "item": {
          "id": "827cf550-0ef2-4131-a3fb-27058330e0be",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2498535a-0e38-447a-bb56-f249e602bfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a687a5a0-f39f-423b-b0fc-ddd7d71e7962",
        "cursor": {
          "ref": "75df3440-1137-4133-9d62-e01c6e980574",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f5f42487-f20e-40b0-b2f2-805c173ba6fd"
        },
        "item": {
          "id": "a687a5a0-f39f-423b-b0fc-ddd7d71e7962",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c0589ba8-b6f6-45d7-8db2-14d7f3aa262f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842ab57f-032c-499d-bb4f-fddaba7cbd94",
        "cursor": {
          "ref": "2ed82a4f-1d1f-4ab3-95c3-7c626dad5550",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "397cf608-cb9a-4e2d-b8ac-be6335d7584b"
        },
        "item": {
          "id": "842ab57f-032c-499d-bb4f-fddaba7cbd94",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "620924f8-f9f9-4fdc-a1b1-6bdc56d6a775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23de7c7-2fd4-4a0b-a8b3-5eca3cefa0a6",
        "cursor": {
          "ref": "04611754-6439-484a-ab0e-2e1e275bcf28",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ab083943-987e-45d7-ae0a-c70676dce6ef"
        },
        "item": {
          "id": "f23de7c7-2fd4-4a0b-a8b3-5eca3cefa0a6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4482e16e-3b3a-44b0-ac19-7eeef2927401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd247aa-7fcd-4fd6-96d7-e414aae66f92",
        "cursor": {
          "ref": "3afcc081-ed2b-49df-af56-ea02814eb2f8",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fee9b433-002d-42d9-987b-40fbd6f34051"
        },
        "item": {
          "id": "fcd247aa-7fcd-4fd6-96d7-e414aae66f92",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6188e37f-de6c-4fc7-a3d2-8a26319e7850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d876cf-3ed3-4b09-9bbc-bfeb1864ac70",
        "cursor": {
          "ref": "5b3e5a12-b5a6-42a8-a691-90027b412455",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "987fc221-05a8-4970-8069-864b877a89c8"
        },
        "item": {
          "id": "26d876cf-3ed3-4b09-9bbc-bfeb1864ac70",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "195e47db-cee6-4316-a860-d6c870ac1a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8655894b-ad72-4dc9-b23c-c14309f70e0f",
        "cursor": {
          "ref": "fa4bab5f-e21c-4d61-9b72-0fb575494247",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dd8c95e3-b0d2-4c74-b4a7-0a2705a88998"
        },
        "item": {
          "id": "8655894b-ad72-4dc9-b23c-c14309f70e0f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ea51996a-1fea-4f69-b9e8-fe4af5a6c8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f761e8-3f91-4941-bf44-cb04740ce55e",
        "cursor": {
          "ref": "c8fd231a-4708-4242-acd9-4cd214c3e2df",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "41aab9e2-7c98-4b4d-b821-d707c84bd697"
        },
        "item": {
          "id": "67f761e8-3f91-4941-bf44-cb04740ce55e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cedc9635-8527-47b9-8502-cf3648d7d711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7837cf58-5efd-4214-804b-27cdd1707f73",
        "cursor": {
          "ref": "42e5d844-2791-4297-b785-3388e8b7cf3b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "652354c3-0947-464a-8c5b-8e15617d71a5"
        },
        "item": {
          "id": "7837cf58-5efd-4214-804b-27cdd1707f73",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a1ac35cc-2548-41f2-9e1c-da7c08078751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a079d097-8a14-4d27-a2e5-628ebb5ac407",
        "cursor": {
          "ref": "2d7a98dc-e891-48fc-ac25-df5e4ae9b95a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7a557dac-e5a7-4ea9-8605-f216000e11e1"
        },
        "item": {
          "id": "a079d097-8a14-4d27-a2e5-628ebb5ac407",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e70d2147-afc0-4559-ad51-9b41151137f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af1ab3a-02c9-43a6-8d85-7cf31d5a9e25",
        "cursor": {
          "ref": "e8e23428-4ee5-468c-ba41-544045738484",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9cb3b0e2-05e6-4e00-8b0c-5f27345cf63a"
        },
        "item": {
          "id": "1af1ab3a-02c9-43a6-8d85-7cf31d5a9e25",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f54bbe1e-e582-4728-b40a-563d7875ad20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4649ed5d-5c60-45ee-ab0f-8c8c09a4865b",
        "cursor": {
          "ref": "0a70e0ea-1e12-404a-bc95-7f0caf32f78d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d85452e6-b014-43f0-a311-58acbb00e1b0"
        },
        "item": {
          "id": "4649ed5d-5c60-45ee-ab0f-8c8c09a4865b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d6423664-1f08-4fe5-9dc9-18fec2e59f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375e1cb5-83f3-40a5-bdcd-2dc6e1d4ac6a",
        "cursor": {
          "ref": "87176d5d-fa3a-4fa1-b67a-c1ff26aacf0e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d72bcbf6-a14b-4882-bfe2-39034eac96dc"
        },
        "item": {
          "id": "375e1cb5-83f3-40a5-bdcd-2dc6e1d4ac6a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cd3ee95e-30f2-49aa-9810-db230c1830e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0301d0-2e7c-4929-afd1-2413e94387a0",
        "cursor": {
          "ref": "0c47dd12-ddbe-4851-ac16-26bc81e392ad",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9a645fdc-9335-410e-85e4-f922d7ca1cb8"
        },
        "item": {
          "id": "5a0301d0-2e7c-4929-afd1-2413e94387a0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1285daaa-5896-4d7c-9abb-45220bb99c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a49b5a-6d47-46fa-9079-78a83874e6ef",
        "cursor": {
          "ref": "cd136063-cd8f-4736-8394-00b30165214f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5748974d-db5b-48cb-a96b-1f3ce93685d7"
        },
        "item": {
          "id": "a6a49b5a-6d47-46fa-9079-78a83874e6ef",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "198889e4-fe33-42a9-ae4e-a4f72e7c078b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de769fc0-6cc6-440a-82c1-113423573485",
        "cursor": {
          "ref": "d5b7bb19-a06b-4076-9b5c-a84cc296c50b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1d71cecb-0b30-469a-b3af-7c3ee6dff14a"
        },
        "item": {
          "id": "de769fc0-6cc6-440a-82c1-113423573485",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fbe97db8-5af5-4363-9739-8e0b3d7345e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55632ee9-8ff3-4410-b540-9cdd47aa5e75",
        "cursor": {
          "ref": "41f61119-a5eb-4709-964f-c9ebc5974fbe",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "efb505e4-f26f-4d70-b995-093ceb5a7a05"
        },
        "item": {
          "id": "55632ee9-8ff3-4410-b540-9cdd47aa5e75",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2bcd5806-d197-4fe7-bf76-eeda8fbeb8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0549f33e-dd8f-4e0c-93b0-c94a01642b35",
        "cursor": {
          "ref": "43a34b0c-1120-4772-9ab6-cc0b02082845",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e50d40c8-6279-4891-8af5-0e6a68e94f75"
        },
        "item": {
          "id": "0549f33e-dd8f-4e0c-93b0-c94a01642b35",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e113741a-623f-40c0-b1e3-3c2c0f193bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5caa35-5a2d-4896-b776-cc799f093eb5",
        "cursor": {
          "ref": "726b1fba-4c88-43c1-ab1d-f5cce1a4ea8e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "398a719c-aa4b-42cf-94b9-b1fa8a3eddab"
        },
        "item": {
          "id": "6a5caa35-5a2d-4896-b776-cc799f093eb5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2294c495-f21e-4c71-9cdc-13dfaca190de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1155641a-f03b-4f22-be26-2462bb9f0628",
        "cursor": {
          "ref": "84b6fe32-855c-4c5c-969d-0533b837d94b",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "41d9caad-3760-4fd6-ad92-edcdedf5cd4d"
        },
        "item": {
          "id": "1155641a-f03b-4f22-be26-2462bb9f0628",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "89f7e22d-bee4-4aae-af5b-4d64eebb24eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0a541b-428e-491f-9fb8-b6adc0390125",
        "cursor": {
          "ref": "ab4e5920-12dd-404e-bcdb-1a9702b6eae9",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8b32b574-77ef-4467-bef4-3eb10b3fa041"
        },
        "item": {
          "id": "9d0a541b-428e-491f-9fb8-b6adc0390125",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "891822b8-f2a0-4108-b426-ebcc188a506c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33a4c07-c56b-4757-b40d-4aacdf329ccc",
        "cursor": {
          "ref": "c24f9cc5-c38c-4bbb-91d4-4440df9442eb",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "60847324-ccc6-4ab0-ac06-6358f4465f52"
        },
        "item": {
          "id": "b33a4c07-c56b-4757-b40d-4aacdf329ccc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "90dd54f7-0d80-43ad-ad3f-6195894bc61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac28496-35f5-46a2-99f3-008288b2411c",
        "cursor": {
          "ref": "31982339-64b9-4c5e-b229-08f6d09eb99e",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "964e8b96-652f-4c8b-99ae-8789178b8912"
        },
        "item": {
          "id": "8ac28496-35f5-46a2-99f3-008288b2411c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bc948d58-92a7-4840-bdb7-5192ba44a6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d257ea6-eeb4-4df0-b392-087020bfd6b7",
        "cursor": {
          "ref": "b66ef29b-8ee4-4f66-89de-eb1d5d0a102c",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f3e06934-115a-4e88-9091-f5c45ac84145"
        },
        "item": {
          "id": "4d257ea6-eeb4-4df0-b392-087020bfd6b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0956c73e-5453-4fca-8449-0abcd3db7c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3621e2-7198-4f0c-a5e6-a5ccfb68af0d",
        "cursor": {
          "ref": "c1cb8c48-8b0f-4692-b5ad-d2a807527e5f",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bf7a7a0d-24a8-4ae1-bb31-2700a5a5a526"
        },
        "item": {
          "id": "fe3621e2-7198-4f0c-a5e6-a5ccfb68af0d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "dab7bf99-e149-4907-bae5-4b1c9bea57f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f39ead-be22-4b2d-9263-6cd90f728721",
        "cursor": {
          "ref": "14f0505c-ade3-4382-b590-ec5926ff9256",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8ceb00f4-7c8a-4b8e-8710-17dfa59a3d36"
        },
        "item": {
          "id": "29f39ead-be22-4b2d-9263-6cd90f728721",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6affea60-2821-4e34-911d-25659be04714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad42f6e4-6413-4b7c-b42d-597cbd2ae1ed",
        "cursor": {
          "ref": "60924784-9976-4673-8bae-55d129434b48",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a5a206e8-c1e7-4068-9a1e-4aa0b4930fa8"
        },
        "item": {
          "id": "ad42f6e4-6413-4b7c-b42d-597cbd2ae1ed",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "59fc7ee2-2108-4eea-a06f-a4b1cb1326a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcc5520-a7e3-4682-a3de-244f11993eea",
        "cursor": {
          "ref": "8a12c28a-66da-45e6-aaac-435b58334569",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8eb1e5bf-c8ee-41ba-be59-0eaeffcf4a39"
        },
        "item": {
          "id": "ebcc5520-a7e3-4682-a3de-244f11993eea",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "767a427f-174d-4352-be87-d55aa902b07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285b3340-804f-445f-9b3e-72b84aac6bf1",
        "cursor": {
          "ref": "11f5d92a-f39d-4fc0-ad24-b354fd1b06d2",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "07581f6a-0ce4-42c1-a68b-4a89fdee8895"
        },
        "item": {
          "id": "285b3340-804f-445f-9b3e-72b84aac6bf1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a40089d5-6a8f-4946-a362-c85ea3f8f764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656f5561-aa32-477e-bd56-bd72d04ffe3b",
        "cursor": {
          "ref": "1c99fc5b-0d5e-4ae7-b453-2c6092b4d1e8",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d26e8be0-9237-4900-be73-464a40b2e780"
        },
        "item": {
          "id": "656f5561-aa32-477e-bd56-bd72d04ffe3b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "deb92b2a-577a-4315-8b28-8e7547b4f810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dda03a-7dea-4faa-86ef-c2d7751e6d03",
        "cursor": {
          "ref": "f54a8bbd-d1b2-4fd3-b833-59a772c722bb",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "70da0865-773e-423b-b8ba-4381c0e86da3"
        },
        "item": {
          "id": "46dda03a-7dea-4faa-86ef-c2d7751e6d03",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "751127f9-bb56-46c7-828c-e913eb050f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe17ab3-b112-4f4b-b66c-df82732b5b83",
        "cursor": {
          "ref": "9a90864d-5c9e-4554-b250-53d3fdd96da8",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a02162be-22e0-4703-8745-339a5990fbc4"
        },
        "item": {
          "id": "ebe17ab3-b112-4f4b-b66c-df82732b5b83",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dbe7d85d-3a99-443c-a4dd-9a065f4c7adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045ee8dc-163d-4a83-86eb-4f48e2946258",
        "cursor": {
          "ref": "118b08fb-f607-4f9e-b16e-1f3865772c62",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cc366e10-27af-4607-b0e1-ff644550a254"
        },
        "item": {
          "id": "045ee8dc-163d-4a83-86eb-4f48e2946258",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f5fd3018-9761-4b00-948c-61086c51a4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d1c90b-bc42-478f-b5b9-27be31b6c18f",
        "cursor": {
          "ref": "a2c4ce72-0a98-426e-8446-c29ee7a24519",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "01b252f5-e9ca-4bde-895c-525f2ab7573c"
        },
        "item": {
          "id": "56d1c90b-bc42-478f-b5b9-27be31b6c18f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a7d14345-1685-40ff-b120-0c579d520b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33a77b1-24f8-4d39-9547-7ff8bd8004c6",
        "cursor": {
          "ref": "be82da03-0f9c-4265-aab8-de8ee6eca517",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "efd43913-430b-4904-a0a7-0c5d908730ac"
        },
        "item": {
          "id": "a33a77b1-24f8-4d39-9547-7ff8bd8004c6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3e22428e-1fbb-49da-a339-cd3969a51c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c29b154-058e-43b8-afba-84bf4e3de79b",
        "cursor": {
          "ref": "6ce08187-46d2-4b97-933b-b5e7ccf2c440",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c405db05-d3e0-4663-b417-2eed41774755"
        },
        "item": {
          "id": "5c29b154-058e-43b8-afba-84bf4e3de79b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bc93f61f-9187-40e1-9cf1-7e5b7eaa97d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabcfad9-db47-4319-8f83-513012eb3af9",
        "cursor": {
          "ref": "6de84fef-4a67-4432-9c1f-7b02bea0c4a4",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "31fc866a-5008-4316-89ac-2f376b6f4a9c"
        },
        "item": {
          "id": "fabcfad9-db47-4319-8f83-513012eb3af9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f897f5c3-1e63-4830-a338-40dcbdae3ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0511f7-5b0f-41ff-beaa-c0aad2f74350",
        "cursor": {
          "ref": "1702da25-2b2f-4a48-97fa-9cf6ae0db73e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "127809a8-b569-4034-8f7b-c349163749d7"
        },
        "item": {
          "id": "ed0511f7-5b0f-41ff-beaa-c0aad2f74350",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6a10e12f-0b4d-4a76-9f4e-dd5279c7ef8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f2725a-7902-4d5e-ae47-07dd19fa609a",
        "cursor": {
          "ref": "5f643886-0e87-4429-aadc-758dedb510a4",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "058d8156-34d0-406e-b69d-e46135a56ca5"
        },
        "item": {
          "id": "33f2725a-7902-4d5e-ae47-07dd19fa609a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2e146039-f18e-4281-a7a4-a6ccdcb22a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0788f9e-c340-450b-bedf-48c6c60c6bc0",
        "cursor": {
          "ref": "7d8f63d5-2dcb-4c09-82b9-39998d27e730",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cb3fcbd1-1281-4057-a131-3d4f2792cab2"
        },
        "item": {
          "id": "f0788f9e-c340-450b-bedf-48c6c60c6bc0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b6aa4dc9-6914-4cdb-87d6-854e33bf89c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3f8a65-5174-4a04-939d-c40b0b4e147b",
        "cursor": {
          "ref": "9ef6b0ae-59a4-4e6e-805c-b3b472fe6680",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "069d5bcb-f0b3-4770-926b-8869ce2d4417"
        },
        "item": {
          "id": "fb3f8a65-5174-4a04-939d-c40b0b4e147b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "19ca145e-0871-4eee-a3cf-b0e77d7b56af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e12cf4e-b62b-458b-bb2d-a3925be7e335",
        "cursor": {
          "ref": "a4e42961-4d9d-4fd4-bb6d-2d7753852b8c",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8ef028ff-e442-4bc3-88e7-aa08940f8e10"
        },
        "item": {
          "id": "0e12cf4e-b62b-458b-bb2d-a3925be7e335",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7005079d-3347-453e-ab12-c3cecc80db61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4734da43-fee6-4a3b-b5ad-1bc63e07119d",
        "cursor": {
          "ref": "be5baaf2-a199-4c9a-8f2d-9bdede3ab424",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "69d81af7-6d44-4376-ad67-daf0cf1780a5"
        },
        "item": {
          "id": "4734da43-fee6-4a3b-b5ad-1bc63e07119d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ebd60c96-ca56-4ddf-8711-26f88e904104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a42fcb-d6f1-4467-bbb0-5c8f3a9845d6",
        "cursor": {
          "ref": "64df2927-db64-4382-8817-93f019fe45e4",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4ff5d92d-20cd-4a3b-86b8-921671cf48d4"
        },
        "item": {
          "id": "03a42fcb-d6f1-4467-bbb0-5c8f3a9845d6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "729e42a9-232f-4e35-8dcf-06a0edd64312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213090b0-a1bc-4dfc-8810-c44cfef7da58",
        "cursor": {
          "ref": "7d875519-43be-437a-8a0c-c62bc3df2f74",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "148de219-e829-43be-8629-b32d5e927ab4"
        },
        "item": {
          "id": "213090b0-a1bc-4dfc-8810-c44cfef7da58",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "aeb4647a-a894-4fdc-8de7-313428ec3957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ad27b2-a94d-49eb-9a7d-084e09a86a6e",
        "cursor": {
          "ref": "61867cba-4b7c-4c3d-b4e0-0ca1b9a94c93",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bdf382c8-6215-45ea-b0e0-b2b557d5ada4"
        },
        "item": {
          "id": "03ad27b2-a94d-49eb-9a7d-084e09a86a6e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1b9e8d4e-7184-4869-bfff-615263d46706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c4454c-dc35-45b2-bd20-4209be911d7e",
        "cursor": {
          "ref": "f2912f50-1d54-4449-a5c4-5bc68adf54e7",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "73adcb79-f2ca-4c21-a648-f3c9cad15f77"
        },
        "item": {
          "id": "26c4454c-dc35-45b2-bd20-4209be911d7e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1ae8556d-a7d4-45c0-8db2-ada6ced8863e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67f727b-51eb-41e3-8d95-4ddf2e776679",
        "cursor": {
          "ref": "3abbe24d-8c70-4e02-843f-fd5e1a6eef5a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "417898a7-1d8e-4bae-9ed7-ce58dea437ae"
        },
        "item": {
          "id": "d67f727b-51eb-41e3-8d95-4ddf2e776679",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8e37e316-13db-4edd-885b-3acbd171dbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56596ad2-4a54-4642-8b3a-70cb1f8cb34e",
        "cursor": {
          "ref": "b171f9ba-7a52-4b14-afe2-a0e647c38f86",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "551c6b21-a71e-4358-bc47-413551081515"
        },
        "item": {
          "id": "56596ad2-4a54-4642-8b3a-70cb1f8cb34e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fe97df40-d2d8-4a3b-90c7-459c02ae9451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0e9b86-e5c4-43c8-afef-40e10bac7fc7",
        "cursor": {
          "ref": "c6830054-5ed9-483a-9896-ee3ec7df88e6",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dcddb91c-e9a1-4452-90f7-d4835aece39d"
        },
        "item": {
          "id": "5e0e9b86-e5c4-43c8-afef-40e10bac7fc7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c2c7cdba-8ded-417d-8bef-258d502b5dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0d4f4d-d257-4364-be45-b39ed16e9f8f",
        "cursor": {
          "ref": "46263b2b-a1f1-4d47-8ab2-f4d83eda2926",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7c711042-8087-40ec-970a-c7d1f22324fa"
        },
        "item": {
          "id": "1d0d4f4d-d257-4364-be45-b39ed16e9f8f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "05a7b6cb-97f9-4db8-8d0e-9df7a4c70a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff826ca-be9d-4ab5-b91e-68e65795d111",
        "cursor": {
          "ref": "f8e8f896-79e8-4977-bed3-b10849f482a9",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "87ad0451-5774-4899-9f1f-756b8c7fe5e3"
        },
        "item": {
          "id": "bff826ca-be9d-4ab5-b91e-68e65795d111",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c61c03fe-1932-4338-a945-60e12c96d933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c0bb8a-f80e-4b95-96f6-3bb1481017f6",
        "cursor": {
          "ref": "c1f3e231-f470-4056-8b0a-e8e2129957c4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6417cc5b-1620-465b-a058-6c3dc8c7bd5c"
        },
        "item": {
          "id": "21c0bb8a-f80e-4b95-96f6-3bb1481017f6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3b0ee799-1604-45a7-8d11-0456a43b4a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f670511-5dc0-45ab-9b46-a588f5019f3c",
        "cursor": {
          "ref": "c1ae4539-dcad-4d68-9066-cdc8780ca423",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a83005f2-4df0-4182-b093-f99e22c49cc6"
        },
        "item": {
          "id": "9f670511-5dc0-45ab-9b46-a588f5019f3c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "eb8d30e6-b4f2-4d82-86ab-b5f23c8dbcd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c1e3b8-c833-4836-a8ca-adc6d5069e6d",
        "cursor": {
          "ref": "4ec862c3-7912-46ab-9467-e024bba0f5fd",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8e3e6c35-2aae-4242-b6f1-43233e919bae"
        },
        "item": {
          "id": "b5c1e3b8-c833-4836-a8ca-adc6d5069e6d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "59c1382a-7ef5-4acb-a93f-bafc6754aa1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cfa31a-1fca-4e32-8973-ca3ac1d6077c",
        "cursor": {
          "ref": "adb1e580-65e5-48c0-bce1-c61158557b96",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f3ea9b36-5264-4b63-a856-886fa73879df"
        },
        "item": {
          "id": "b7cfa31a-1fca-4e32-8973-ca3ac1d6077c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5f8839bf-6690-43c7-88fc-c1f45ece22d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee49a188-618f-41f8-93e8-9a54c3edabf4",
        "cursor": {
          "ref": "bf25d7a4-f872-434b-a2b4-b01faf27c0b7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a5fe4870-614a-4e60-ba91-72081aa49831"
        },
        "item": {
          "id": "ee49a188-618f-41f8-93e8-9a54c3edabf4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cc0f218a-81d9-42e7-beac-829990c96626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76f12ae-5e92-4bac-b72e-81decd960609",
        "cursor": {
          "ref": "340e404a-e442-4118-b435-2f52993a424e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5512ad40-b431-40c0-949c-00b9313d6cd7"
        },
        "item": {
          "id": "a76f12ae-5e92-4bac-b72e-81decd960609",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a2b0ced1-7f7a-4726-8942-66bb7daae58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6d9241-88e7-412e-a740-72fc9dfbd3ca",
        "cursor": {
          "ref": "b818b929-8b8e-4c0a-accd-542549cc8af3",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "befc6355-3023-4a5c-b2d3-f0eb50b8a91a"
        },
        "item": {
          "id": "ab6d9241-88e7-412e-a740-72fc9dfbd3ca",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ab34cfb9-7824-4a6a-8acc-269fe940f657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "67d53ba8-a758-438a-bbda-e7367383e182",
        "cursor": {
          "ref": "8da63d77-7050-47a3-94df-648480105506",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5f8d83d2-a50d-4e8a-8140-1a2fc10fbae2"
        },
        "item": {
          "id": "67d53ba8-a758-438a-bbda-e7367383e182",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a7494fff-d4d7-4a37-b8dd-4a3948b2acde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7555c9aa-5016-4eec-aeb2-f11abb2ef9cb",
        "cursor": {
          "ref": "610e572d-b017-4b50-91c9-2581f41142a9",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ecce4976-73d6-429a-b236-9c14e467dfca"
        },
        "item": {
          "id": "7555c9aa-5016-4eec-aeb2-f11abb2ef9cb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a9ac6b27-cfcf-4132-b83f-6bb8956b8a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a77b1c51-75f0-48a4-a0c7-eec28425c4dc",
        "cursor": {
          "ref": "be060405-88c9-48ef-b0ac-bf13ea898f92",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "10194509-00a0-4cbb-a5d0-e0780ff0828e"
        },
        "item": {
          "id": "a77b1c51-75f0-48a4-a0c7-eec28425c4dc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dde39f2a-c8ea-4161-a56f-434be58af12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ac3eb719-5724-48ea-9ea4-a4b4c6ad639d",
        "cursor": {
          "ref": "d3eac707-ecce-4dc5-ac30-a39f959bdf8c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "aa1aa05d-cc53-41f3-91e2-a6282e54d288"
        },
        "item": {
          "id": "ac3eb719-5724-48ea-9ea4-a4b4c6ad639d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5600481c-5197-425d-8854-d83078570123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "7d8f3e63-68b9-42ae-aaf4-348c91c2a071",
        "cursor": {
          "ref": "c382ff69-1821-4b2d-a9b5-cd3c9c7a4208",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7290a408-10e0-49c4-8dde-ff7b00031232"
        },
        "item": {
          "id": "7d8f3e63-68b9-42ae-aaf4-348c91c2a071",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "398bcfdb-bed5-48b0-b92c-eb5343f83669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "184effd1-2371-49a4-a28c-1797bb8b377e",
        "cursor": {
          "ref": "34e5e610-866f-4b24-be85-4e96d3e5982b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cf144a41-b8ce-4a53-8e37-52f3f5396fd2"
        },
        "item": {
          "id": "184effd1-2371-49a4-a28c-1797bb8b377e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b396d061-3b54-47f2-98a8-3d444091a8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9a042fdd-6090-4efa-af4f-6125e6e36184",
        "cursor": {
          "ref": "104b7695-6654-47a0-b181-0716ff7f0bf1",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5d0913f0-8c56-48d8-acd0-0139f9fdf741"
        },
        "item": {
          "id": "9a042fdd-6090-4efa-af4f-6125e6e36184",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "95bffa11-107d-4663-99ea-e53d5d0fa230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a99294-4f1c-4844-8c66-d191bcb60a30",
        "cursor": {
          "ref": "0e5a22dd-9371-49cd-8eb7-bd896bdb3d88",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "12f27975-5c8e-4652-a6b2-deb5c4f2d3ed"
        },
        "item": {
          "id": "95a99294-4f1c-4844-8c66-d191bcb60a30",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "accac6c0-de08-4ee0-9aec-e786f4085936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff5de76-badc-4bce-92ad-b26415d46842",
        "cursor": {
          "ref": "ef6eb2e4-daf1-4277-9942-d5fbb35497c3",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "56768fa2-f574-4baf-9f54-cea2f160f779"
        },
        "item": {
          "id": "1ff5de76-badc-4bce-92ad-b26415d46842",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3e17b9b3-025e-4be0-9e0e-7e42e16e1077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4440c567-a7af-4530-a43b-290620174a9c",
        "cursor": {
          "ref": "712d3244-5aaf-492d-be19-ee094c67297b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cd99ce7f-3220-462d-843e-51d3e573e6de"
        },
        "item": {
          "id": "4440c567-a7af-4530-a43b-290620174a9c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "70145c04-f225-4fdc-a230-aef93fc9ee3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c85fc6-090d-471d-b32e-5ad419a779c0",
        "cursor": {
          "ref": "e9f94cfe-5ee5-40f5-9f50-542f5cb1c766",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f6fc649a-cb06-4aa9-bbe4-2f0adc34297e"
        },
        "item": {
          "id": "58c85fc6-090d-471d-b32e-5ad419a779c0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2fa893ae-3721-4dc7-9d0b-af48468afce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d53843f-c8b4-47ef-b73d-ef1c410d6b4d",
        "cursor": {
          "ref": "73ea2262-9029-4e53-aeae-91ff2462a376",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "75a70279-5a22-43e5-8b19-e99cb4e9778e"
        },
        "item": {
          "id": "6d53843f-c8b4-47ef-b73d-ef1c410d6b4d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b6974c1d-f30e-445f-8ecc-663233844ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02891b3d-3feb-4076-a32f-0a609b6a7e80",
        "cursor": {
          "ref": "67261edc-1cbc-4339-a6a4-cae58e2786c0",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5b4434b0-1991-4d34-adad-ca648a737e3e"
        },
        "item": {
          "id": "02891b3d-3feb-4076-a32f-0a609b6a7e80",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "619164d2-9182-4cd4-94bb-cc99bd88ce97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e0bc56-4cff-4b51-91e6-8fc24115c1eb",
        "cursor": {
          "ref": "d5ff365d-36f3-4d55-9340-7f17797bbc93",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f37ec41d-5df4-4d9c-a557-04222c0260f3"
        },
        "item": {
          "id": "b3e0bc56-4cff-4b51-91e6-8fc24115c1eb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f1103b78-5fe6-4890-9499-d553417288bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c761d6cc-5542-46c1-b3fc-253af7e5026a",
        "cursor": {
          "ref": "0259e622-2633-4a67-952c-78aa8239294b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "02617248-a9ab-4ac3-b386-43adcf1f2a6d"
        },
        "item": {
          "id": "c761d6cc-5542-46c1-b3fc-253af7e5026a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "250fb677-f50e-4214-b3a5-48711085d924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab699e4-e476-45cb-a0bb-1abf4e506108",
        "cursor": {
          "ref": "99cebfae-3716-47a0-a4c6-13e8a85b669f",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6b9eadd6-2ed7-4dfe-b66b-a1a4af58d0ee"
        },
        "item": {
          "id": "0ab699e4-e476-45cb-a0bb-1abf4e506108",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "64d077e9-5130-4c5f-a812-0122b1bf21a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c5f134-65d6-412c-8fae-4d18298ad72a",
        "cursor": {
          "ref": "ffa357e1-1053-4baa-a45b-3dec702fe1f0",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "723309c4-b675-4737-b04b-a3c9058506b4"
        },
        "item": {
          "id": "a1c5f134-65d6-412c-8fae-4d18298ad72a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "57d682ac-6690-4ef5-b6af-24a074f7b6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed739e1-288e-4c8c-9d09-e90bf956552f",
        "cursor": {
          "ref": "47cfac3f-b650-45ea-9845-d341fd84748f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d80bf0d0-2c2c-490c-a40d-c5ac2cf5958f"
        },
        "item": {
          "id": "7ed739e1-288e-4c8c-9d09-e90bf956552f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "edb3ed16-02f6-40a3-9d0e-f9c6bc425a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800130e5-1da8-403a-8dcf-9e8edb69de1b",
        "cursor": {
          "ref": "f1a85c10-2baf-4637-86ed-1ee62d8d6ffa",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6167df54-6e8e-4beb-9af0-afa96e700e7e"
        },
        "item": {
          "id": "800130e5-1da8-403a-8dcf-9e8edb69de1b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9d1c2ea2-8397-4696-95c7-84ec2c4af5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531df3fa-e9af-4c7d-878e-29d9ed63cd10",
        "cursor": {
          "ref": "a0dacc64-5f07-42c5-a573-33d51ed53b41",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "927fff8b-2665-4e95-882f-2255da50d355"
        },
        "item": {
          "id": "531df3fa-e9af-4c7d-878e-29d9ed63cd10",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ae8cdabd-9c11-4242-b357-2f8310f7208e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0beb9cea-0bf6-4c96-a57a-a062721a0cae",
        "cursor": {
          "ref": "d90d31fb-e11b-44f6-b251-987ea6186515",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7a83d1d9-75c4-4151-8bf1-a2fdc32612dd"
        },
        "item": {
          "id": "0beb9cea-0bf6-4c96-a57a-a062721a0cae",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "53eefd25-bf9b-4572-aaca-bd1b21ace98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bf914f-4375-462c-b4cd-2faec3d9685b",
        "cursor": {
          "ref": "8ede0eb6-f6ba-470b-878a-d05e502a641f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "dde2e97e-45ea-4a9a-bcf0-1a0ca9b4a7a0"
        },
        "item": {
          "id": "63bf914f-4375-462c-b4cd-2faec3d9685b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2c274fe0-8be6-4915-9807-b4b1a71d5d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85b522a-df0c-4c6a-8852-e4c7a85ce5ab",
        "cursor": {
          "ref": "82f9065f-7779-487d-a22e-43488d9b12d5",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2f839ae0-9ae1-4c5c-8d31-eae60d8fb977"
        },
        "item": {
          "id": "b85b522a-df0c-4c6a-8852-e4c7a85ce5ab",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fe5b97f4-db78-4b81-971e-42ca3a660ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0c1a98-1335-4e3a-aa13-77a71dd7a14a",
        "cursor": {
          "ref": "338c49a5-4f12-425b-b778-10faab39f3b0",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2654eaee-bf5b-402d-a921-9c55be958b4b"
        },
        "item": {
          "id": "7e0c1a98-1335-4e3a-aa13-77a71dd7a14a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "72c7ecb8-5b33-42fa-a03e-5808f114494a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1dc49b-60c3-4ede-891a-3e265e19d0bb",
        "cursor": {
          "ref": "276277d0-42cc-4d25-a4c2-6b63bedd82e8",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0767a273-074a-4535-985c-d733d051be38"
        },
        "item": {
          "id": "df1dc49b-60c3-4ede-891a-3e265e19d0bb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "eedaeda6-63e4-44de-8d71-a712d8e5c8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccb28bc-92cb-4363-8e44-1efd84cc7157",
        "cursor": {
          "ref": "6e863fa9-04ad-4b41-80fd-61885376e8cc",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1f539d40-3141-434d-af73-56f0dc744d4d"
        },
        "item": {
          "id": "3ccb28bc-92cb-4363-8e44-1efd84cc7157",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bd3ce8de-2c44-4785-bac0-6e558527b98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac238e49-65c2-4233-8d63-e99152d820f1",
        "cursor": {
          "ref": "3ea49eb7-3f94-48e8-9878-9a0bd8840d00",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a4af91dd-0c33-48a1-a9e0-757e7a4ec423"
        },
        "item": {
          "id": "ac238e49-65c2-4233-8d63-e99152d820f1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "676f6e50-758b-4e63-8ad8-8a621b9c080f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae00356f-1ea5-4704-a877-1b1ea6ee4712",
        "cursor": {
          "ref": "86622290-9578-41b0-9fb9-7cc0f7f8bdea",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4d3351f1-d125-4067-9449-d8bc300f391f"
        },
        "item": {
          "id": "ae00356f-1ea5-4704-a877-1b1ea6ee4712",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3bae920b-a108-413b-ba11-dab3589d0edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2180104-b8d5-421f-9c4b-b73a1cd85196",
        "cursor": {
          "ref": "6b5df5dc-6296-4579-a3c4-70d20aefa094",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "02c269cb-6067-4d99-aa2a-bf3adc15e5e1"
        },
        "item": {
          "id": "e2180104-b8d5-421f-9c4b-b73a1cd85196",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7028788b-8220-4bdd-a781-0bd6a60aae4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9af28f0-ddc6-44f7-8f64-688b6a94be12",
        "cursor": {
          "ref": "ab510992-3f50-4401-be0d-b208d1ccba60",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dfc44732-4fe3-4001-8f1c-089a0773330b"
        },
        "item": {
          "id": "b9af28f0-ddc6-44f7-8f64-688b6a94be12",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f35fc5b3-d01d-429a-8241-82220524d375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5183c65e-ba1f-4802-bc17-82bd39a7aec2",
        "cursor": {
          "ref": "8c2c44c5-9577-4a20-bfb0-91ca3a8a13a1",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2d6fc40e-bb9a-406b-a524-62d4254bc6ad"
        },
        "item": {
          "id": "5183c65e-ba1f-4802-bc17-82bd39a7aec2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a9d0bcd2-5f2d-42cc-b0ab-c10a725a9b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0749921-a379-4ee7-8410-69524856763c",
        "cursor": {
          "ref": "cd427926-61e1-450c-a9a0-71164c020352",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2de87cab-2797-4478-a7d9-d77700a56ff4"
        },
        "item": {
          "id": "d0749921-a379-4ee7-8410-69524856763c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7b8cc4c1-a382-45da-92f5-dc2846f2001e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63901068-ac0f-4a24-8055-84b0493f1de2",
        "cursor": {
          "ref": "56689e08-6ff0-421c-80d1-0d516c6587b9",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "82855d50-9c7d-4530-93b7-1b7b280336a4"
        },
        "item": {
          "id": "63901068-ac0f-4a24-8055-84b0493f1de2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "059a502c-9a31-49cb-8d2a-9e54d1dabe66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016554e7-1a40-47db-808a-ccb02066aa58",
        "cursor": {
          "ref": "4a3eef6b-2f78-4805-adb1-66b605bdae0a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ddbc2a87-9326-4f6a-8cd2-429bc86ab42c"
        },
        "item": {
          "id": "016554e7-1a40-47db-808a-ccb02066aa58",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0b002a82-cf47-4318-afa6-9150ddd8fa4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7d5748-8606-459b-84e9-ef7f0b7879ef",
        "cursor": {
          "ref": "21d6d8f9-7686-4ef0-9d3d-4a0c8319f264",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "02e30138-cfd6-4670-8978-9240e5386da1"
        },
        "item": {
          "id": "fa7d5748-8606-459b-84e9-ef7f0b7879ef",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "622e3e69-0ad8-48d8-81bf-0267dbbe1120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8be974-a5ea-470a-a741-2380473987e6",
        "cursor": {
          "ref": "f8881761-ac1b-4e25-9f66-42d5bd9f0cf6",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fc39ffbb-3717-485c-8528-02892e3b041e"
        },
        "item": {
          "id": "1a8be974-a5ea-470a-a741-2380473987e6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a9fb177c-50b2-4f0e-867d-54700bd50a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8273f9-79d3-43b3-9540-b8c508a6b440",
        "cursor": {
          "ref": "d3345cda-449f-47e9-ab49-4768ca0f6c13",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7a179991-742c-48d2-beb9-0a36818f7cfe"
        },
        "item": {
          "id": "3c8273f9-79d3-43b3-9540-b8c508a6b440",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "80e9c6dd-ecb2-496c-a031-16bff8bd485e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fdfc68-c597-4a61-b73d-ab6b498e2712",
        "cursor": {
          "ref": "b08fea8f-c593-4632-8fe3-206ef32df040",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "80bd09e0-ca32-4b85-9b77-3f6a27e4133e"
        },
        "item": {
          "id": "39fdfc68-c597-4a61-b73d-ab6b498e2712",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "97cf6561-d061-48d5-8ae8-77a0acc55d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24894248-bd4e-4844-b9f5-3e63de0ff77e",
        "cursor": {
          "ref": "e1418eaf-d8eb-4837-81f3-8c8c03656a62",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "31e61050-5dd2-47ee-9397-a3a7aee808b2"
        },
        "item": {
          "id": "24894248-bd4e-4844-b9f5-3e63de0ff77e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "106b19b2-e5b2-4b65-8b3a-ca639ef58fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb22f56e-227c-4e25-a8a0-d0cc4ccc4456",
        "cursor": {
          "ref": "c8d545e8-0da8-476c-8b71-cfb039bfeb79",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "32e5f61b-75b1-4236-8294-2145f78311ab"
        },
        "item": {
          "id": "fb22f56e-227c-4e25-a8a0-d0cc4ccc4456",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c638e277-c4a5-4cde-9dbb-024a42530a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a53254-0b52-47cf-b8ce-e03a43a5a0ad",
        "cursor": {
          "ref": "7b6b27ee-2334-46e2-b086-e3ac0ae99d9d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e01b262c-8931-41bf-b6ce-c7998a05dfdc"
        },
        "item": {
          "id": "17a53254-0b52-47cf-b8ce-e03a43a5a0ad",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cb9ef2d4-a6cd-4916-a15c-d69b4e5cb292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdd36da-c1db-4c9e-b38a-5f87732979b7",
        "cursor": {
          "ref": "bb1bfcc8-67e7-4bb4-9260-3fca6d981bbc",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1c171ac0-39c0-4d57-8e17-38f10bee55df"
        },
        "item": {
          "id": "6fdd36da-c1db-4c9e-b38a-5f87732979b7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d1cb1d54-e6b6-4309-bbda-1273a79178d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa42600-1408-4a1d-8605-6144f2226e8b",
        "cursor": {
          "ref": "69c063d0-dde4-4023-bac2-915e4cc655ae",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "70df32b6-6386-4ccf-b501-815795a7033c"
        },
        "item": {
          "id": "faa42600-1408-4a1d-8605-6144f2226e8b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b64acc85-c103-43a7-ad11-ab39aa518e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7145499f-a90d-42e7-9ec0-7070239b1e60",
        "cursor": {
          "ref": "776484d8-f5d4-4a36-8985-1b2700381e2e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bc49008f-1084-4e06-a3a0-88122092170e"
        },
        "item": {
          "id": "7145499f-a90d-42e7-9ec0-7070239b1e60",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "74892522-2b57-48fc-bae6-3777170d71b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817eca9f-f231-4b0b-9a27-cc1cdc796747",
        "cursor": {
          "ref": "05f7be86-3f33-430a-86a0-fc71b531d903",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "212d2e64-705c-4405-886b-c503d2ae52b5"
        },
        "item": {
          "id": "817eca9f-f231-4b0b-9a27-cc1cdc796747",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7c76ca8b-1c98-4ccc-b5b6-4fd5a2a9bf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55e42b5-67bc-468f-a82f-ebe0edaef830",
        "cursor": {
          "ref": "ab12901e-8a3f-443f-99f3-00992519d476",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "16a15787-ea46-47fb-b5d2-a8a304c4d9ae"
        },
        "item": {
          "id": "b55e42b5-67bc-468f-a82f-ebe0edaef830",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "25d1f17d-331f-4268-b920-a406aec79e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f481915-9c1a-4736-801a-04108fbb0ecc",
        "cursor": {
          "ref": "04353d92-8434-4ec9-a5f1-c9957787a961",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d8c6885d-53e0-4c2c-97c7-4f8d22bd52c5"
        },
        "item": {
          "id": "1f481915-9c1a-4736-801a-04108fbb0ecc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "adab0902-0f3e-441a-bcfc-8751c458739a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139757ef-84c0-42f5-8fdd-54f0d2818429",
        "cursor": {
          "ref": "880bd40c-3cf6-4474-97b0-2ea90721fec1",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6fff61ad-540a-4d03-873e-6c5a5d781a88"
        },
        "item": {
          "id": "139757ef-84c0-42f5-8fdd-54f0d2818429",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "51789102-2ea6-41cf-90ee-3f4b6e3a6ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7596c852-8a82-4049-9956-1ec9e0c63c78",
        "cursor": {
          "ref": "92e676bf-84d1-4d3b-a2e3-fc256687c229",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "397d4e65-80d3-4d0c-aa2b-596930efe227"
        },
        "item": {
          "id": "7596c852-8a82-4049-9956-1ec9e0c63c78",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bb33aa7b-f459-4840-ace8-ed69a0cfc3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb543db-aa77-4e3e-9d68-8b8898cf5c3d",
        "cursor": {
          "ref": "3f1b8fe6-23e7-44f4-9a1f-b16a7c7ec71e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d91a6ab2-4264-4e78-aafb-525963400638"
        },
        "item": {
          "id": "4cb543db-aa77-4e3e-9d68-8b8898cf5c3d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b5204911-3b11-42a1-9832-041a490c35c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b251b05-f40a-4a69-94f6-644f4fa25351",
        "cursor": {
          "ref": "6ca00802-955b-4349-89fa-2ec3eec02813",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "061bb04b-fe1f-4c47-82b4-4324facc6ec2"
        },
        "item": {
          "id": "7b251b05-f40a-4a69-94f6-644f4fa25351",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ab4dac51-4b8e-4de7-b86f-2caf61470411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b72afe8-8c60-4daa-bf05-da1546232d23",
        "cursor": {
          "ref": "41627156-68c3-468a-96f2-827395617a7c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a3a3bd14-1114-4ce9-b7b5-21d2e5db4baa"
        },
        "item": {
          "id": "4b72afe8-8c60-4daa-bf05-da1546232d23",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "72a1c9f8-29bd-4b39-b2e6-21d1ed8e1767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600f24c7-182c-401f-87d5-a72ab1a3aeb7",
        "cursor": {
          "ref": "8a49755c-15dc-4e55-a1be-62c13fccfc10",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ef122c7e-620c-4237-8349-665e46cde676"
        },
        "item": {
          "id": "600f24c7-182c-401f-87d5-a72ab1a3aeb7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "720f34ad-a263-425c-aa15-b8043162cf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8883bd2-10a5-4e39-931e-b738a167c803",
        "cursor": {
          "ref": "fe146024-4929-48d5-ae98-a4a3245c10cb",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6b58c4a7-cceb-481c-81bf-ae1be4332417"
        },
        "item": {
          "id": "a8883bd2-10a5-4e39-931e-b738a167c803",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "adccff97-2875-4d7c-a5b6-6bcce01c5453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2519749c-2fc5-4bfd-8e9f-c1bd779895aa",
        "cursor": {
          "ref": "912291e4-6b40-461c-bb04-43bb81329f1a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "30b26520-bec4-489b-a316-f3900e066210"
        },
        "item": {
          "id": "2519749c-2fc5-4bfd-8e9f-c1bd779895aa",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4d3a6a72-207c-4a3c-b977-250346573784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e149d7b7-8f65-4691-b301-276839da5a4c",
        "cursor": {
          "ref": "34b0568c-716f-485b-a0ed-d8e08fb70dde",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "417a4950-2fc1-4b84-bf90-6b7f013bedea"
        },
        "item": {
          "id": "e149d7b7-8f65-4691-b301-276839da5a4c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8fa76c7a-f13e-49ae-bff3-70962d649235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6433f8-a1ef-45a3-92eb-45c95059fd28",
        "cursor": {
          "ref": "be80ec34-82c3-48f4-8e25-f499264f5fe5",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "93830da4-b7da-4934-8ffd-6c6227fae23d"
        },
        "item": {
          "id": "6b6433f8-a1ef-45a3-92eb-45c95059fd28",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f42a2931-454c-45cf-8fa5-f024285c7125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abce95c-cb59-4823-b4b3-cda8013d83e9",
        "cursor": {
          "ref": "2f76e133-bebf-4487-95ab-fce83af9eb85",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9a2e7615-37c5-401c-a16f-4fcf1c80d158"
        },
        "item": {
          "id": "8abce95c-cb59-4823-b4b3-cda8013d83e9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7cd2aad7-e4ee-4149-a2f3-8904883141e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d862c2-289a-4539-9131-c3b43822f2c1",
        "cursor": {
          "ref": "c8715507-9702-4c39-9b70-e8874087ce06",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8fb0aa00-5d35-4dc9-b6c9-13d8647953a6"
        },
        "item": {
          "id": "55d862c2-289a-4539-9131-c3b43822f2c1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "39ae2966-5016-4da4-b034-00b31883f834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31252dad-e66d-4f43-b7eb-a98a10b51f4a",
        "cursor": {
          "ref": "678426fb-ce39-4cf5-93cf-32df74f8f947",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "914f2597-be22-48d0-b0ef-cb576b53f688"
        },
        "item": {
          "id": "31252dad-e66d-4f43-b7eb-a98a10b51f4a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6ba5349c-126d-4cef-b8b4-c5c099ddfc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf7b56c-cfd8-4b74-b0a0-928106f37cdf",
        "cursor": {
          "ref": "d02a4a11-06cb-454b-8faa-f32fc8941d93",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1f3ace67-56ef-42ce-a3b8-3da573edbc95"
        },
        "item": {
          "id": "6cf7b56c-cfd8-4b74-b0a0-928106f37cdf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c54f3db5-0adb-47ba-b5e1-d0c6ced8602c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac496c6-3062-4b07-8db9-646431e330cf",
        "cursor": {
          "ref": "1fa0f803-cd85-47ed-a92a-3df466d866ce",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c4c49cc2-9e8b-42be-ba5f-a0441cd782dd"
        },
        "item": {
          "id": "aac496c6-3062-4b07-8db9-646431e330cf",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5f032e39-2e07-4243-aab2-b86dafdad0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231c02a0-4a92-42c3-8825-f84a70354c58",
        "cursor": {
          "ref": "5f84b5a1-2119-463b-97b5-ccc9c5ced4a4",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "42fd71df-bddb-42fc-8a53-5f7a327e6020"
        },
        "item": {
          "id": "231c02a0-4a92-42c3-8825-f84a70354c58",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5f47dffa-475c-4210-9231-2fa522bf21ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc317a9-5746-4e86-a6f9-39b7c657fb1b",
        "cursor": {
          "ref": "8dc19228-8c3e-4f47-a2d9-0e62d35b75de",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "da665c2b-25b2-40bc-ade0-e56b391942ab"
        },
        "item": {
          "id": "edc317a9-5746-4e86-a6f9-39b7c657fb1b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4e04c1f9-0e00-4e02-a7d3-702df7b344ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bb1412-2393-41ea-a259-6701403de328",
        "cursor": {
          "ref": "6bc2d5db-5014-4497-afba-c41533378037",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9cad19aa-1fee-4699-86bb-991df75cb948"
        },
        "item": {
          "id": "32bb1412-2393-41ea-a259-6701403de328",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d3a27325-8bcf-46ca-a3f6-9a0d8fdc68e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c64e3a1-59ea-4f7f-9046-8b91eadb1e0a",
        "cursor": {
          "ref": "eb4bee79-0fef-43e3-bc82-83d0d19800b6",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a1f1029b-40b4-46cd-b580-4bb518ac656a"
        },
        "item": {
          "id": "9c64e3a1-59ea-4f7f-9046-8b91eadb1e0a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a9a0cdcd-21bb-4f5e-bd69-aaec69979107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa71d5ac-14ae-4a8c-993c-b93c48c40d9a",
        "cursor": {
          "ref": "c0ab522f-fc39-4011-9593-e38882df407c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c2c58ee5-02c2-4bce-a9ff-29dfccbd9a06"
        },
        "item": {
          "id": "aa71d5ac-14ae-4a8c-993c-b93c48c40d9a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6e764326-8710-4819-8e0b-c9234ed49f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5ea59f-dc11-44af-b891-ed531ea9ecda",
        "cursor": {
          "ref": "7d6e2c62-d77e-422d-8d38-132cae0a0e27",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0c12ab2e-d616-44dc-b684-396782c694d0"
        },
        "item": {
          "id": "df5ea59f-dc11-44af-b891-ed531ea9ecda",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6fd8e21f-1f38-4fc1-bd22-fa5c31cb80a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed3fd53-11cc-4ea3-9aa3-135a8c540440",
        "cursor": {
          "ref": "aa414491-5bfb-444f-ba06-d73d8de346d1",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4ba9e011-d798-4e20-9fb1-4bc499327beb"
        },
        "item": {
          "id": "2ed3fd53-11cc-4ea3-9aa3-135a8c540440",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "da7d7734-e8d7-4a63-89e2-773fcddea721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59452e39-844a-4ed1-9e66-f4800321dd5c",
        "cursor": {
          "ref": "69867970-e3d4-4f51-9fe2-fb4cc2995305",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "da6038d0-665c-4b30-bab2-f62949f88164"
        },
        "item": {
          "id": "59452e39-844a-4ed1-9e66-f4800321dd5c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2a4a5990-ccdb-4c56-aa73-781d6d5b15bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ae3d00-7a34-4ace-89c5-0446c93d21b9",
        "cursor": {
          "ref": "4058e6a4-81d6-4b6e-8547-eb99ccd6e1d4",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "39806c22-a3f5-4c02-83c2-df9492d22239"
        },
        "item": {
          "id": "e6ae3d00-7a34-4ace-89c5-0446c93d21b9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "359609fd-3eb1-4bb5-a8b7-a6ee22bb9267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c175bf5c-db3a-472d-9f6d-adc77285f75a",
        "cursor": {
          "ref": "355c90d8-8cb4-4cfc-9d0a-7e1c87351230",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c15b2d6c-5eba-40d8-949e-49f33c2599c2"
        },
        "item": {
          "id": "c175bf5c-db3a-472d-9f6d-adc77285f75a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "35031775-f4e3-459e-82b1-6fcf6abb52a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391487c2-0463-4776-92b3-514290a4119e",
        "cursor": {
          "ref": "efb1a2c7-8af5-4a53-911f-1bc372b39608",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d76890ac-f878-4e1d-937b-dceb5525efb5"
        },
        "item": {
          "id": "391487c2-0463-4776-92b3-514290a4119e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4a03a233-12bf-4154-ac07-a85581136bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1493245d-2808-4583-b405-cb56774a1be2",
        "cursor": {
          "ref": "c7e75e5b-65e2-4157-95ec-891eb8c3a87f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "18914680-1ffc-478e-8bf4-43505dbe14d6"
        },
        "item": {
          "id": "1493245d-2808-4583-b405-cb56774a1be2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9faf1fe3-94d9-4c9b-9be8-166db0ca1fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3aa5fc7-ceab-4c4f-a20b-94cc0fed09c8",
        "cursor": {
          "ref": "a9247a0b-4117-4f1d-845f-785bab2a40e1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f94f57ad-4ea2-40ec-9abe-bbf9a04e2dfa"
        },
        "item": {
          "id": "a3aa5fc7-ceab-4c4f-a20b-94cc0fed09c8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "fe0e7a5e-2744-484c-a7c9-79196926a345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4610d5-760e-40e1-9308-6c5e5f06fbcf",
        "cursor": {
          "ref": "7f3f6bfc-f761-4ff7-a484-41d12402f8f4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "56d36afb-a781-40fe-981b-d65ec4a5b187"
        },
        "item": {
          "id": "df4610d5-760e-40e1-9308-6c5e5f06fbcf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cc8a742f-2498-4b09-ae89-c3827c7f636c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ff8dfc-f8df-4de5-8d66-9e8253974941",
        "cursor": {
          "ref": "518d9e36-5688-4dd1-b966-8ba5e5c81ccd",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "77c8934f-0416-48c9-a331-c8bb4e218c4a"
        },
        "item": {
          "id": "f1ff8dfc-f8df-4de5-8d66-9e8253974941",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "89e00da6-830a-4dec-a401-70221d011689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d2f220-fdba-4b7b-b1cf-ec77612a8938",
        "cursor": {
          "ref": "29d6c718-d524-4e47-b386-16dd11b6d8b2",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e0d1dd9b-0260-4453-977f-e670e44156be"
        },
        "item": {
          "id": "48d2f220-fdba-4b7b-b1cf-ec77612a8938",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "281ed610-2775-4cea-9a86-26927e4e260f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2655b495-3e8f-4a25-828a-456e94c249e6",
        "cursor": {
          "ref": "05830bbf-b533-4dd8-9b63-816060c3b468",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ca2a884e-8452-4dc4-b809-36321ea0d82c"
        },
        "item": {
          "id": "2655b495-3e8f-4a25-828a-456e94c249e6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "403bbdd9-f0c3-4659-aa20-36a7c51012ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f771a47a-082c-4ced-8fd1-5f7695cabdfe",
        "cursor": {
          "ref": "476bca5b-83cf-4191-b705-fb0454b05f66",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f3ae7154-b4ed-4211-a055-f410d845d4cf"
        },
        "item": {
          "id": "f771a47a-082c-4ced-8fd1-5f7695cabdfe",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f7b7e84c-f4a7-4557-9320-de968f48cbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb12a0f-d8c1-4d76-8c59-23b257bc7eee",
        "cursor": {
          "ref": "31b2fa06-8eb6-4d05-87d5-41317cb5ea11",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "755d079a-c0db-4f02-9623-496d698a3e69"
        },
        "item": {
          "id": "aeb12a0f-d8c1-4d76-8c59-23b257bc7eee",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0b6570ad-b095-4a55-8d5a-dbc033b39739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a549db64-b542-4fc1-8a75-ab0653ba918f",
        "cursor": {
          "ref": "6c72f5b1-7d8a-4fb3-a205-162f38fbfae3",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "82cddd30-e7aa-4722-9ac6-6da8398921ca"
        },
        "item": {
          "id": "a549db64-b542-4fc1-8a75-ab0653ba918f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2acd29e2-3c02-4b66-9ae4-b530014e0d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22000075-f01e-4a7c-92a7-d6809d9b4458",
        "cursor": {
          "ref": "746b6bcc-016b-494f-9815-59e005d9c86a",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "60723710-27cc-45db-9579-6eb5572652e1"
        },
        "item": {
          "id": "22000075-f01e-4a7c-92a7-d6809d9b4458",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7af52bc6-5b61-4645-80ea-7552a8c0c992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c609ed-8439-45ef-8fcc-cf8a6294da1b",
        "cursor": {
          "ref": "cf482bb2-ae19-4603-89a9-ba69a5085dc1",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "29d87d9e-dcdf-4817-8019-d92201e90061"
        },
        "item": {
          "id": "e8c609ed-8439-45ef-8fcc-cf8a6294da1b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "aef48d4c-44c3-4168-aabe-e35e6fca73ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff861c1-8fb0-4f36-8593-71631248b362",
        "cursor": {
          "ref": "5dfbd1a3-7145-412e-8c6f-2d2ce72ab303",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "715bcf5f-af32-4c31-81b8-fe7ab0424516"
        },
        "item": {
          "id": "6ff861c1-8fb0-4f36-8593-71631248b362",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7268c092-7131-45af-8311-e76b423a51c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b646daa-5e98-4a9a-96bd-ed21957459bc",
        "cursor": {
          "ref": "17e74891-61bf-4356-9ca6-4ac1c360dcdf",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5dc70cd5-266f-41fd-930f-f3a122d782d7"
        },
        "item": {
          "id": "9b646daa-5e98-4a9a-96bd-ed21957459bc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6049c8f0-5317-46b0-90f7-32d6082123b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234891ba-09f7-4ec0-9722-be87b5b5eb36",
        "cursor": {
          "ref": "86356ed3-68c7-442d-a1c7-05fc9bfc1745",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9b3eebe6-fb98-46fa-8e52-032f2c02fcf2"
        },
        "item": {
          "id": "234891ba-09f7-4ec0-9722-be87b5b5eb36",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5a063787-e172-4100-ba30-688272aecb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27971e5-e3ca-4ad6-86e8-cf5ac82d79a7",
        "cursor": {
          "ref": "e4beb227-2100-4684-975b-3fb19bec8500",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ed8ddb08-dbe8-4929-91e3-aaa7af07ae95"
        },
        "item": {
          "id": "a27971e5-e3ca-4ad6-86e8-cf5ac82d79a7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "86a20d64-6b1f-4213-aeb1-838f48250ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c83944-d01f-4e1c-9138-147550c20ada",
        "cursor": {
          "ref": "249cdfa7-18c4-4493-81ac-11ce25fd8b69",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "947b7047-e09b-4f68-94f4-d4f5aaecd809"
        },
        "item": {
          "id": "d6c83944-d01f-4e1c-9138-147550c20ada",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5aa1b834-1db0-4560-8386-a69a2db795a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b9dad9-64e6-4fdc-8c21-670f408a16d3",
        "cursor": {
          "ref": "edf19c7f-227b-4572-bfa6-28bd6ccc5cdb",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2189c2d9-cab6-4fda-9810-3467ac9ca0ba"
        },
        "item": {
          "id": "87b9dad9-64e6-4fdc-8c21-670f408a16d3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "338643f1-8ed9-440a-a1f3-a5c75856e7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dae447-c7aa-43d6-b762-54b8b64a7c73",
        "cursor": {
          "ref": "baa08738-2a6c-4d50-bb43-0127325d25a0",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "522cf807-e3f0-415f-a461-62266669488e"
        },
        "item": {
          "id": "64dae447-c7aa-43d6-b762-54b8b64a7c73",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "02febc93-df73-403d-ac18-afd7196862dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea22ff2-3cfd-4130-a1d4-c1cee6c5228a",
        "cursor": {
          "ref": "ddd2da76-3b6f-4450-afe8-37eda10c986e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0130d379-1ffc-47c9-bc0f-8fed71822227"
        },
        "item": {
          "id": "dea22ff2-3cfd-4130-a1d4-c1cee6c5228a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ea19fd3c-1112-46ff-a650-c272aebb73b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42091ef3-8484-4726-9a28-66f533258395",
        "cursor": {
          "ref": "bb743263-92f1-4ede-a79e-ef731f246aa1",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "11c77262-bde0-4fe4-b143-3f8da2d50a73"
        },
        "item": {
          "id": "42091ef3-8484-4726-9a28-66f533258395",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "78537a65-6690-4cb4-977d-44ed205901ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ff3866-a8a0-4d7b-9f85-163d02954a61",
        "cursor": {
          "ref": "fb484c3a-cc1b-4ea7-852e-858503aa4155",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a5459fc7-1959-48bd-826a-00beb3ff8bf9"
        },
        "item": {
          "id": "05ff3866-a8a0-4d7b-9f85-163d02954a61",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3f3cca1d-ae07-4ef0-b2d3-1dbae1784f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744375db-c633-4f63-8ef8-3d7eb82a58a1",
        "cursor": {
          "ref": "533a26cc-45f3-46a2-89b6-311c339a4270",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "326ceed3-b165-4d0b-be32-454cc9b07d50"
        },
        "item": {
          "id": "744375db-c633-4f63-8ef8-3d7eb82a58a1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ef41aec3-43d4-43ec-8ff7-e01249314013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a556cfe9-e42a-4a3c-84d7-b8a585f567d6",
        "cursor": {
          "ref": "a2131f6c-2a66-40ef-b3c8-621192c2217f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e8297e5d-d851-4add-acaf-a060f04fe031"
        },
        "item": {
          "id": "a556cfe9-e42a-4a3c-84d7-b8a585f567d6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c3beb9c1-e331-4b1f-9eae-1123f80ffc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c41a147-3fd2-4635-addf-10c42d93fe91",
        "cursor": {
          "ref": "5dcf83a5-8852-4646-ad41-081d1d5fb642",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4972468e-66bc-4277-bb0e-6741a532d056"
        },
        "item": {
          "id": "5c41a147-3fd2-4635-addf-10c42d93fe91",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6a654754-542a-48cf-b1a0-66f117e77ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653222c5-f578-4a86-a34f-a69d6ec43df1",
        "cursor": {
          "ref": "dc211ba9-eaa7-4e28-9fcd-40fbd8d28aa2",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7abc4963-b89a-4fec-841e-4d3f8ff4b61f"
        },
        "item": {
          "id": "653222c5-f578-4a86-a34f-a69d6ec43df1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0d6e4820-b987-474c-af1a-f1c163f5b6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0943ffd8-6f14-4ef2-91a4-6b306afeb004",
        "cursor": {
          "ref": "8358577b-b038-453b-ac02-9e8a02a01510",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3cadb05e-0d20-4ba6-8767-402a7540aa54"
        },
        "item": {
          "id": "0943ffd8-6f14-4ef2-91a4-6b306afeb004",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "676c2ac2-84a4-4280-91b1-765b5f9697fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7d1c05-44eb-480d-9f9a-82f1ee1f5138",
        "cursor": {
          "ref": "981413e7-c22d-42cb-9153-50a18706e2ce",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b78e5b71-e52d-4e51-82c9-f1302d44de20"
        },
        "item": {
          "id": "5a7d1c05-44eb-480d-9f9a-82f1ee1f5138",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "13f41c27-2c25-4f66-86c7-50d7798c9861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3c68f8-10e8-4bbd-822c-4bb317af58c7",
        "cursor": {
          "ref": "e69684bd-d7b6-4df2-855c-faf26f0c8744",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f58bd216-875e-4cb1-9982-c5d1b5734968"
        },
        "item": {
          "id": "0a3c68f8-10e8-4bbd-822c-4bb317af58c7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8967d9e8-0e35-4edb-bf94-21ea3566d855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9660f5ca-d1e5-418d-a9f7-6d74c16ead54",
        "cursor": {
          "ref": "43d004c3-f016-4e9a-8c7f-291d44c9fed8",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "37b93313-7856-4c72-b10e-813af7c9c780"
        },
        "item": {
          "id": "9660f5ca-d1e5-418d-a9f7-6d74c16ead54",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2d9f6327-2cf3-4a53-84e9-3aab1ab77b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b774e2bf-8e1b-445a-ba88-c194eeac6112",
        "cursor": {
          "ref": "7894c811-95d3-4eab-9618-5cbe65761721",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cde31aa1-8507-40ec-8d47-a946f80b837d"
        },
        "item": {
          "id": "b774e2bf-8e1b-445a-ba88-c194eeac6112",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f2e8cd7e-314c-4b7d-9563-c648d89cb608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248cf497-4099-4c08-b522-5c6c8a48fe1f",
        "cursor": {
          "ref": "daa7bee4-64c7-4c79-87be-977ae21981fb",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6870ff73-bd50-4362-8b37-9961ceb9b589"
        },
        "item": {
          "id": "248cf497-4099-4c08-b522-5c6c8a48fe1f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7184c79f-2b58-42c8-b887-be06d023a86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3461faf-4a2e-458c-bf98-f80ced05f2bb",
        "cursor": {
          "ref": "751078de-cfb4-4b9c-b91f-12a6ce44cb61",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cc47606e-813a-458c-9e85-9b69d1a8c13a"
        },
        "item": {
          "id": "b3461faf-4a2e-458c-bf98-f80ced05f2bb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d810f8bd-15ec-46a0-a423-2a697f4d82a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7c8037-da2e-48ee-b5fc-9ab746129211",
        "cursor": {
          "ref": "e6c11672-0abf-405b-8df9-78c83599ee64",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b2086433-4f82-45de-a83e-1d499802f1cf"
        },
        "item": {
          "id": "bf7c8037-da2e-48ee-b5fc-9ab746129211",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c32d391e-e5f4-461d-bae9-480fb83073b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c422df1-2383-48fc-b9db-b39a3fa04bfc",
        "cursor": {
          "ref": "1268a71f-63a9-4225-90d3-6e418e90a372",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c7088c33-471a-4c33-9d77-a13d1a4ddc77"
        },
        "item": {
          "id": "0c422df1-2383-48fc-b9db-b39a3fa04bfc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "194d214f-9f84-48c5-846c-d52f8d5d725e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a691bd-d4cf-460e-b3a5-ee146dbf3bd8",
        "cursor": {
          "ref": "1c8e29f6-706e-4303-b40f-ed1239d67e48",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "00c20f6a-fc99-4d6e-9e7a-10bf4977f47b"
        },
        "item": {
          "id": "06a691bd-d4cf-460e-b3a5-ee146dbf3bd8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7334f639-a2c6-4b62-8437-89447f0ee980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ce38d1-29b5-49ce-ae9f-87367b1c1771",
        "cursor": {
          "ref": "22cb11b1-49e6-4076-94bf-a510d96fcf53",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5ad4a794-9187-4db1-a55d-2a0cf5022df7"
        },
        "item": {
          "id": "f7ce38d1-29b5-49ce-ae9f-87367b1c1771",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b3a11273-1f7f-4452-9229-d8048fdf8025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f3ad52-0b82-46a5-9bd2-bf2b690acd91",
        "cursor": {
          "ref": "57e7e0c2-d89e-4e9a-ae72-60fd2d376eee",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6d1827b5-5a47-425e-a078-1981561f6f52"
        },
        "item": {
          "id": "e1f3ad52-0b82-46a5-9bd2-bf2b690acd91",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3333a4d1-e720-4791-a9a9-b8dc84aabc39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5704963-e8a7-4f8a-a3e0-6ab52d404b9b",
        "cursor": {
          "ref": "ccf5c74e-5d1d-4d2f-9cd4-4ee51cb5b3e5",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f9b889b5-00fc-4173-9e3f-f561b9424ea5"
        },
        "item": {
          "id": "a5704963-e8a7-4f8a-a3e0-6ab52d404b9b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2bdac694-f9d5-4164-b1cb-0bbf1f36b076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe9f1ce-2cfc-4f0e-9617-63e7c8ee21f1",
        "cursor": {
          "ref": "a975b660-1d76-42cc-9730-3bce1c4a21f2",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "50ab3016-b457-4e72-8afe-f6a3a48c399c"
        },
        "item": {
          "id": "1fe9f1ce-2cfc-4f0e-9617-63e7c8ee21f1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7e2f8210-8253-4f62-95b9-8597c53130da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b297ac-f4a2-474c-b6ae-1a1fa95da1fd",
        "cursor": {
          "ref": "62c21b40-68bf-4929-8b5f-68f0dbdab7dc",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "18606ed4-4a38-4d97-9ac7-6b4065b84ea6"
        },
        "item": {
          "id": "25b297ac-f4a2-474c-b6ae-1a1fa95da1fd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "38293f3d-2c56-4d2d-b8cc-d69bfc3ccbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb73d27-9b72-434e-b122-e7b9d4fa5c8f",
        "cursor": {
          "ref": "a3b4ddc2-7d32-4040-a94b-2bc64b6787cd",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "dae0a84e-d456-4821-a768-95dade677d90"
        },
        "item": {
          "id": "bbb73d27-9b72-434e-b122-e7b9d4fa5c8f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9a4e7805-3457-4931-a57e-dc9c1733ef23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0aec89-14d7-4e58-8760-370bc892f40e",
        "cursor": {
          "ref": "81f5eb4f-3528-4eb5-939a-de364f85112d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b40dea91-2172-4e19-a17a-5877e63dc5a6"
        },
        "item": {
          "id": "bc0aec89-14d7-4e58-8760-370bc892f40e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "416aa9a8-1012-41d8-a2ef-170f76152a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e802e7-c494-4d70-9f1e-66b984ed0d03",
        "cursor": {
          "ref": "4680ff29-c46e-444b-91a0-4f66dbfeb555",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5890eada-9630-459c-b49a-781c9601cce9"
        },
        "item": {
          "id": "64e802e7-c494-4d70-9f1e-66b984ed0d03",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "62d405ab-76fb-4696-9ff1-c2affba1ec18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4a7a9e-6943-4c9c-bd65-adbcfda000fa",
        "cursor": {
          "ref": "b8071390-e66d-4bb5-a71c-e458aeb99d5d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "be8a7b81-a1dd-4d1f-a216-4fa2f2f8074b"
        },
        "item": {
          "id": "da4a7a9e-6943-4c9c-bd65-adbcfda000fa",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "95db33f2-c968-4aee-a670-9c41a735e6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0d8bc7-4023-42ec-a271-7915ece6128c",
        "cursor": {
          "ref": "a031a063-e854-434c-a12c-c7abbf1b8faa",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2aedaff9-ab60-42c4-9384-6bcb861f29f9"
        },
        "item": {
          "id": "1f0d8bc7-4023-42ec-a271-7915ece6128c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fc496bdf-e8d4-45bd-a44f-d09ed0c94d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27138d1-e1a9-4c36-a394-95eec04e39f6",
        "cursor": {
          "ref": "d20f8369-5025-4038-8dd3-6e6331e96dc8",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "58dfa90b-d74b-4760-9e6e-5457be7361eb"
        },
        "item": {
          "id": "b27138d1-e1a9-4c36-a394-95eec04e39f6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "64ffa3fd-e074-43a1-9eb5-5500a686250e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006cf0e2-9891-4ac6-9bfb-72f6a9274a27",
        "cursor": {
          "ref": "c80c23cd-746a-4d5d-bd49-d347be7c4fe8",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d79e874e-e5f7-4bd7-842e-f40999420e44"
        },
        "item": {
          "id": "006cf0e2-9891-4ac6-9bfb-72f6a9274a27",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "35d612f6-2760-4cc0-b43e-863c45d1b673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb59049-e37d-46a1-809a-b3e305a57413",
        "cursor": {
          "ref": "769f2b12-ec46-47ef-9087-82dd6ecc3ba2",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e69d3f57-f5c1-4927-9fef-c8ba9fde108c"
        },
        "item": {
          "id": "cbb59049-e37d-46a1-809a-b3e305a57413",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0de8ae52-21c4-4677-9c66-852db4dfb583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9bf865-11c9-44b8-99ed-e709609dffbc",
        "cursor": {
          "ref": "654e8864-c35b-43c5-9782-e1678357132b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a9add9f6-4287-4932-afac-0bc70ceafb74"
        },
        "item": {
          "id": "8b9bf865-11c9-44b8-99ed-e709609dffbc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7859573e-4a24-4820-8ed8-4e272c1b1a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e655c901-cbd5-4220-a515-0ddff7efdb4b",
        "cursor": {
          "ref": "659a19d8-eb34-4de3-a4f8-9205803b33c7",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2d4dbb58-132d-410b-8094-bb60e9703568"
        },
        "item": {
          "id": "e655c901-cbd5-4220-a515-0ddff7efdb4b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d3db2d8e-c3ff-4572-a0f9-d086178428fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4c447c-54e3-4036-9fb5-632339e61278",
        "cursor": {
          "ref": "5fa67148-2a90-41f1-bb72-5acc14f71a12",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ffe7b268-d36f-4ac1-989c-2997f65129ec"
        },
        "item": {
          "id": "fc4c447c-54e3-4036-9fb5-632339e61278",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a199a9c9-b5e9-4118-a824-208e371c9267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c590c19-6ad4-479e-bfaf-dcecdbff245e",
        "cursor": {
          "ref": "8291d48b-0d47-4785-80b4-b3c69583e153",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a3477a7a-85b1-4196-95e4-44176d1c57ed"
        },
        "item": {
          "id": "8c590c19-6ad4-479e-bfaf-dcecdbff245e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a36d9ffe-649c-4ce0-85ad-a6740832c47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d05d770-adeb-4b60-9fc7-65440944e445",
        "cursor": {
          "ref": "2b895bc5-e1e1-4b78-86c7-9295e5271988",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2ef3d7a4-9c31-4a71-81dd-93927d7bd9be"
        },
        "item": {
          "id": "8d05d770-adeb-4b60-9fc7-65440944e445",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "80c66dcb-7a7c-4201-bea9-f2e555ffcc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffa18f2-5dcc-4840-821c-72a92796bb21",
        "cursor": {
          "ref": "a80dd135-ac63-4239-adbc-18d8a84eb08e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f1ea846b-3c94-4519-9a13-0b9264dc912f"
        },
        "item": {
          "id": "bffa18f2-5dcc-4840-821c-72a92796bb21",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b919778f-2d92-4adf-80c4-132f49a085a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedd11f1-bb76-4e20-b923-568bb42a83b1",
        "cursor": {
          "ref": "5285a66c-2fd2-4158-b0f9-b5d5b85325fc",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b10cb9ac-88ca-4851-8754-0c04c1873765"
        },
        "item": {
          "id": "fedd11f1-bb76-4e20-b923-568bb42a83b1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ec87a720-728d-4a9b-92a3-3f031394d350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1902552-cd2b-4b1d-b1e9-72b976050959",
        "cursor": {
          "ref": "2d601d5a-a8d8-47ac-a1bf-6a4ab1e094cd",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "187898d3-0320-436d-944c-93b1abf9a714"
        },
        "item": {
          "id": "b1902552-cd2b-4b1d-b1e9-72b976050959",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f972ee1e-a949-4f65-a164-e130eae9ced3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7172ed1b-45fb-4145-8962-295aad229817",
        "cursor": {
          "ref": "9e4507a0-c4e6-4a3b-a54f-1cf8fba776b4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "887eb594-7d97-4f01-b3f5-71a78576d78a"
        },
        "item": {
          "id": "7172ed1b-45fb-4145-8962-295aad229817",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3e7dc8d4-7e2e-4a3c-a4e3-d19c3b85aa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ae0ef1-a938-46f3-a72e-465490d082f9",
        "cursor": {
          "ref": "906af4d4-c20c-4cc8-9222-55cfa85622c2",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "82379fe5-1713-4e4a-a107-2a1aeb9fb09a"
        },
        "item": {
          "id": "b9ae0ef1-a938-46f3-a72e-465490d082f9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "43870441-a0ea-48b2-832a-a05d2e28863d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05618693-5b94-415a-9dfc-34f4d8e48f16",
        "cursor": {
          "ref": "a17d7296-b738-48ff-8a87-56d5c19a9d51",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9adf3a64-a377-4b4e-96c8-2299ad05c0b8"
        },
        "item": {
          "id": "05618693-5b94-415a-9dfc-34f4d8e48f16",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bd98c252-a9e1-48d9-94af-67cd8adb21e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe666f36-9f2a-4ef2-9b61-cee2c79b5a2c",
        "cursor": {
          "ref": "385f006d-b414-4509-b808-857d47dae1b4",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "828dea66-77a3-4018-b194-be1139bb23c1"
        },
        "item": {
          "id": "fe666f36-9f2a-4ef2-9b61-cee2c79b5a2c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b787376a-fba7-4772-a839-a576adc5bc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1351dc5-273e-4a0a-9d65-29ab38d0e744",
        "cursor": {
          "ref": "db7a2b79-f9fe-4e5b-b05b-ccf062d347ea",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "93ef886f-1ac7-4dda-9bc8-fb63f148634c"
        },
        "item": {
          "id": "e1351dc5-273e-4a0a-9d65-29ab38d0e744",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e14bf391-deb7-458d-b4d4-ff034b79d81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0d892d-86ff-4cee-a464-25b6ed7bcd78",
        "cursor": {
          "ref": "359e1d34-024c-45ab-97b1-6e881f571e8a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "19f1e07a-08d7-401e-a4b3-89b196d1fea2"
        },
        "item": {
          "id": "9f0d892d-86ff-4cee-a464-25b6ed7bcd78",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9edd80a5-88a2-44a6-bcee-b23cafd43365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013f25a9-dd28-4e92-84c2-9f35bb35aa71",
        "cursor": {
          "ref": "7a1f8880-8b0e-4ac3-8a73-e3b746c27efc",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cb43cc48-fc80-4c47-a85a-fb730e0fd922"
        },
        "item": {
          "id": "013f25a9-dd28-4e92-84c2-9f35bb35aa71",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fc8d6961-0041-4206-bb6f-251dcae13fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668f2b6b-5a2f-4452-a260-32922ad4affe",
        "cursor": {
          "ref": "34dc5c6b-fb71-4ce5-a9e2-a95b24bd18e3",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "59b9fea6-fa7b-4896-a944-97192913a9c4"
        },
        "item": {
          "id": "668f2b6b-5a2f-4452-a260-32922ad4affe",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "79cb4d59-1ef4-416a-aed0-cfec87bea2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c42e0b-86bb-45b4-af9d-7ccaf39d53c6",
        "cursor": {
          "ref": "e42e8773-d26d-4a59-8937-428696f80de0",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "598e6b58-5c41-4252-bbea-ac257b8b9e33"
        },
        "item": {
          "id": "99c42e0b-86bb-45b4-af9d-7ccaf39d53c6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c9b991b7-d030-4a97-8a04-23b471878d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db7dfbb-d1c3-4139-bab0-00b91c0bc331",
        "cursor": {
          "ref": "603ddc3e-8b61-4db0-adef-0ee2975dd27a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1090ebf1-d21a-40f2-acbc-3f297d614c17"
        },
        "item": {
          "id": "8db7dfbb-d1c3-4139-bab0-00b91c0bc331",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "eb68cc44-eecc-4e40-a14b-8d02c2bfa5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e16a9f-eadd-4502-9d09-d48d1b8c489f",
        "cursor": {
          "ref": "fb2a0fec-c71d-45a3-a19e-29754be6ec1d",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5797ddea-80a9-46d6-bdd8-f2a8ba560145"
        },
        "item": {
          "id": "88e16a9f-eadd-4502-9d09-d48d1b8c489f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2545667d-8d5c-41e1-9643-35aa03bd5d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9f5ac0-0ac0-45ff-a746-64b2ede667c4",
        "cursor": {
          "ref": "ad79d4f7-a658-404b-8bad-2879f2c4088d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d63cca3f-ddf0-4ead-8e33-5dcc131e6ce9"
        },
        "item": {
          "id": "5c9f5ac0-0ac0-45ff-a746-64b2ede667c4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dd2881a3-3e2f-4a74-9085-451c69655431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f18a6a4-256c-4579-883a-8d591645ba1b",
        "cursor": {
          "ref": "d34b2ac8-6cb6-4263-9c46-b4c90aa13901",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a053dc30-6574-4b44-a49f-dead3ad7d240"
        },
        "item": {
          "id": "2f18a6a4-256c-4579-883a-8d591645ba1b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "026a2745-60c5-46ea-be06-1c0fec7902bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abbd49d-8a7d-43f0-9f53-c40baac17d2f",
        "cursor": {
          "ref": "d715a2ed-e098-4df4-b033-83b729bf65f2",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "19afcdba-1163-4069-8ee6-01409836e1c5"
        },
        "item": {
          "id": "6abbd49d-8a7d-43f0-9f53-c40baac17d2f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "94ba9312-d12e-4ce1-98e3-ed196cf89db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "04d5eafb-716c-4af7-bf24-1a0040c6ea86",
        "cursor": {
          "ref": "854a15be-a787-4ae9-a2c3-0496233fe9bc",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f4e14c6d-4036-475f-af2a-b4f31cd1fb6d"
        },
        "item": {
          "id": "04d5eafb-716c-4af7-bf24-1a0040c6ea86",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6cf02e16-2327-4312-b273-62b7ab8a4650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "cc726c8f-4c11-4dcf-ab04-fa798de10615",
        "cursor": {
          "ref": "b762e503-fb7c-45bd-b7b8-c156e0484bf4",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b061231b-3bdf-4589-8cd4-83d1fd9cff0a"
        },
        "item": {
          "id": "cc726c8f-4c11-4dcf-ab04-fa798de10615",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "19af0c46-5341-41ec-9402-a4bb67c204e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "7d47aa1d-f86e-4204-a61d-53d5739e45ba",
        "cursor": {
          "ref": "4e1a5583-b307-4e15-b168-ff5fef1dc527",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "474c39e4-0e29-4c03-b57b-8e11873ad230"
        },
        "item": {
          "id": "7d47aa1d-f86e-4204-a61d-53d5739e45ba",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "baf6027d-ead7-4b75-9133-69ce75816990",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d47aa1d-f86e-4204-a61d-53d5739e45ba",
        "cursor": {
          "ref": "4e1a5583-b307-4e15-b168-ff5fef1dc527",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "474c39e4-0e29-4c03-b57b-8e11873ad230"
        },
        "item": {
          "id": "7d47aa1d-f86e-4204-a61d-53d5739e45ba",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "baf6027d-ead7-4b75-9133-69ce75816990",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c92a81-b274-4ff0-a7d1-928413e67774",
        "cursor": {
          "ref": "ecc81576-bc8b-46c0-b2ca-fc8da45f3e7c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6c017956-38d9-4095-971d-70c492b1975b"
        },
        "item": {
          "id": "61c92a81-b274-4ff0-a7d1-928413e67774",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "da71f6a4-6de7-46ab-977f-fba97b0eee28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef51d22f-9cba-41c4-9ed6-a6886441c716",
        "cursor": {
          "ref": "33d89485-d7c4-4026-9f07-04a50740c2c2",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fb3dde70-9fcf-4091-8715-6639d12b29e3"
        },
        "item": {
          "id": "ef51d22f-9cba-41c4-9ed6-a6886441c716",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1228a4b7-ad0a-4162-93de-bf5b7649f924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}