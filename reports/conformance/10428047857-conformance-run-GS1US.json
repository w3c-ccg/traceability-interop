{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ce020f54-e493-45aa-a5b3-010b18605aa2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "82bf0c4e-b07c-4017-a0de-4eafe6ccf54d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88dd9b6d-e3ae-450d-bf73-360067b4332d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8be56fee-5ccf-41f1-a1cc-4e1daa8386ef"
                }
              }
            ]
          },
          {
            "id": "56d3afd9-21d0-42de-9042-fe79c2c335a4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d932cee-69a5-4250-8c60-43c25600ec9e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d15b3043-e15e-4cb8-b2ea-198d1042b5e5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b9115509-1213-4f59-9ac9-68a85ec31bc1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9aaf3bef-f2cd-49f1-b744-3ea15fdb2901",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1def32b-34e9-4226-a4cd-cd7cfb0d0327",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ede2a95-8e0a-45f5-86ba-0709545161c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "418dcc7b-ce6c-442f-b9be-8a7b238153d3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97480e8a-b4e4-427b-964e-57d0f78efac1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "552a42eb-4f96-4d01-8dcf-7619f3bb4b43"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b10393a7-6aa8-4f7f-89e9-c3d401430b33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef820c9f-2291-4980-b834-9b82c9301c2e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "957b6332-e12a-4909-9875-0841fdb4de41",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5c46a777-d7d0-4ebb-bfca-e9889a7103c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7812bfb-59ce-4ae6-b8bc-eb7821a38d73",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abdb508b-b416-41f8-8c35-651c64a4fd78"
            }
          }
        ]
      },
      {
        "id": "e3794cb6-f226-49c4-a9a5-47269848e7bc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fe80bb04-08af-4d1d-95e9-9e78a95634a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4e798ab-17fd-4f78-9054-bd9437fa4849",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "16d232a7-11d1-403f-9a57-68ec332ad28a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826c455e-13a9-4206-af84-0d275c9cd881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df691f2d-8a0c-42e5-af48-43561352e215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7aa1a1-0116-4c88-a382-c2f82c256c59",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe3a507-033c-4326-934a-f1a6dadb35b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0440cd7b-a40f-4a8a-8bd7-d72617f63453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3937d35e-5aaf-429c-81cc-e929dd50fb46",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3057fa0-ef9e-4cfb-a91d-0fd810b41e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c58df760-a556-4643-94c8-38243e28e30f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8de246c-f6e8-4693-b20d-461766543829",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d1e0a18-391a-4c8f-8ef1-1d6f2c568916",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863cf0f6-2a43-43b0-b479-3350fee6331a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56468148-9115-4f3b-9952-7f5166090d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c54458-48cc-4a30-8cc8-8f592426cf30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed7ce70-f230-43d5-ae37-9a08fabd56cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8bcb88ff-6432-471e-b26a-72e549a8d21d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3fe32920-e2ce-4271-9698-c0e04ba4a8b6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08904e07-612d-49ef-aec2-970abe533b85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b373c2bc-7a34-46f8-ad6b-0d9d9cace961"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8aa1a7c3-b096-47e5-b769-78553b29ed2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e5e9a515-4cdd-474e-b34a-f84d0c0c7854"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19a0dd0e-1287-4b4d-9042-4b99747eacd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac0297a5-c42e-4606-9482-8e132c4d325c"
            }
          }
        ]
      },
      {
        "id": "3e1b6c81-3e13-4c3b-83f0-ea9e7ed43554",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b6f1bf8c-cd33-4fb1-a669-568ccaaec42c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d28811cc-8156-4f03-878c-03390625dbf2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bb1eb03e-4dbb-44db-aa9f-07bb4cbb0d84",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fd8e23-cc04-40b6-bca1-197725a3640b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6f9d07-1bf9-4730-8951-ff3d0d5c08c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3c9e54-07b9-413b-b0ac-f01aca1a043b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5531cb10-2de0-4395-ab73-0dc744661326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fd06af-6c93-497e-96ba-9efac413524e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d991c363-3a54-4939-9247-3a7b51b21b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490deb79-d759-4869-90fb-c88cb1e2836a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14c4605-4fdd-406e-9e41-d59da1938cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a10e1800-5006-4069-94ba-65e355205833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb1d3f7-8f90-491d-8080-4f31f40b534e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48fb43c-f439-4926-b4fb-e6dcc52ff7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178be7fc-8310-4be8-adf6-8f868aa8456c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e5532b-f35d-448a-bcf2-858504b75a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "012e323e-1bc6-4540-840a-1acd3872afaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad01e1a-b8ea-4e28-a82a-e93d0ba810ec",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4270589-2a0e-4419-82a6-41a186128a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dac2938-5fdd-4ee5-be89-30025f32522d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec91379-4504-4c30-bdff-867d55de5c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "672cd2ee-bd0a-42e6-973c-5d22af0471e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bb468e-1143-4b03-a7b5-27d82fda6ddf",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4d5996-befe-47ca-9e9d-a02f70f5451a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "701d4463-c189-4d80-99d2-06ce570f096c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360b537e-bb36-48dc-81e8-2e00a981b618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79ce7cec-0678-43e3-9d0c-b3f34df1a7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfff19dc-5b20-4bcc-b1cd-20e8509ec101",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e6386f-5017-429f-b837-9ec58af9f0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c407a1-c4fc-4e36-953a-2f9ea272d6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee941fbf-b0e3-436e-a798-005d0ec6e934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24bf2def-fa2d-4234-8502-dc353b199ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18096cea-1a30-464f-84c2-a303ba6b86a1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05145b51-ad6d-4fe5-9059-85cba1856289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25aba6a-1a5e-4749-baee-db1e99ed97ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d4b8a4-21b9-4a53-8d6f-83ded316883c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71b9a0ff-795f-4317-8f36-390e675e3786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa8fabd-30d7-4346-8486-558fc3216580",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78e7979-a3df-4e4c-920d-7332dda8ec44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48de5664-738c-412b-8d81-6719e2dcf089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c55ce36-bd10-4c3d-a60d-371214837b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "519a36ea-5a57-4a28-a969-3324bf99f508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4c7acc-7589-4f7e-a61b-d94a9a482d31",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01a44d6-d652-4d53-aaea-5b610c0ceda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f65e79c-c33f-40f2-8e26-5e9e2f5015d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe199bd-f66e-4d7e-9dd0-9b10678014af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f69681f-d09f-40d8-b84a-fa59a88b58b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e8370c-0212-4084-9884-dcc27d86d8ef",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe53aa17-2e62-43b0-b7ce-18751949fb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ebcafad-6488-46ee-877e-748a6ea852dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fa5a2e-3cb5-45c3-bd65-ee23b473e759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b285a7d-d142-4e38-8587-c0db5cd91c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76644c7-ef6a-4cc6-ba1f-5c6ff6237987",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6afae6-ef82-42a0-971f-2b5b7bf3f13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222f2dcf-3fab-451e-b2f7-1b3de9de5f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc254a6-40b0-4468-9984-ba4d1ccb50da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb0618b3-56b1-4bc2-bcea-fa73f7965bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95260090-8a8d-4057-a7cc-38e371db0393",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37dedcc-f433-47df-a18a-c69feedad8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ddb742-64c3-44f4-b537-55704ef1c734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620bbda3-048f-4783-a23f-06a2c20dd83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fec577ec-cbc6-4704-824d-d329831d209f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cc15e0-e90f-469d-8f13-09e290fa583a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d61e4e-2a31-4a0f-8103-b13dcdd152d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d018e04-22dc-421e-97c8-c85d788ac74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4624fc3-2e3b-4cfc-bbf8-ac09c192c8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c215d80-bfc5-4dd7-b341-d6f52c7e38e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323bbc4e-05bf-421d-bc12-81d9cdf51e53",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28336817-c378-462b-9dd9-61ec5b8ba8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81028ff9-7b0a-49e0-beda-d6edd6a88124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e451982b-437c-4a6d-b6ce-33630434997b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8180e81-14e7-4037-9baa-2290ad574233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6c9060-cf14-4675-8c69-1232023f73b6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5b782c-75fb-44ea-a789-99de524b7636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42aec622-27bb-43cb-bce4-1ec7cbdf67aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0db2de-a773-45ec-90d5-230e3b945f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abe8031c-7dbb-4d46-85ca-906298d87472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a927a1e-f309-44d3-990e-f6a8594bb72d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4502116-7fdb-4ace-b5e2-f12de22dd425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e651acf8-9748-4f61-a41b-bc28ad157f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356c8a0d-c10c-48a7-9e76-e77e79bbed6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2603067b-42d7-49ff-8f02-d648522d5008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9740e89f-1512-4368-86c9-09e4c8bc24be",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eade8b1a-769d-4741-b876-cfafac0dd1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb111507-f09a-4713-b86b-108a35fc7384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a895c4-26f2-47a0-8cb3-5e2bc675e6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5d8b532-6871-42fb-aa81-a345d1782304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ddc34d-334d-4a69-a397-4be668de80e3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02f3e2c-0f13-4e29-9d73-9f2f2e2b48ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832ac54e-51c7-4490-babe-37883435595a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786fe8da-50d7-447f-942e-3755657561f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "04cd3acf-58e0-481d-8fbd-ca79f9e1cc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d1ef5c-1a75-4276-9749-14aeb92df09a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7359d6ea-4ece-4999-808f-6655197df3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5bad1f-3f54-4dbc-ae41-2a37168cae4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4e73d2-6a7c-4427-943b-e2f063803d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d096e3c0-81d7-42fb-a537-d71f585ab6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19a4104-e173-4841-bcd5-f0c63b5266b7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4ee350-fbbb-4aa7-bbec-2c6f1f0d359d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08c3bea-8538-4f92-b35e-a8ea05a413bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2f8fed-0aa6-4049-8b71-8ac4550cd35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d147d36-2a46-4e5e-a64c-24fbf9326c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4405ba46-ce08-4ef3-b3c4-a1e15cf067d1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fa6d86-8728-4c48-a3fa-8fc1119b7b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6818fc11-b261-4731-a096-fcb1beb65687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0031e703-7155-41df-bf8c-af693b49c2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b65f2cec-d4c0-4b62-b1a2-4ae3f496bd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded5a242-0e07-46c4-864e-7f053bf3a113",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6b26d0-8a9a-4b24-9770-85afe3abb18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b79413-ba89-49c3-81f1-5c5dfd098175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd5f415-51d3-4e14-8a9c-773fac8f3d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e96c2101-65d2-4d5b-866e-e2a1fd88312e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e21b64-9b8e-4963-a748-e0ea6c547d61",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825481f6-6685-4194-97c6-bff53ea6f23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cddd57b-f813-48fd-ab73-1308c265eb87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0e9d57-ded3-446e-9be7-5b49bb24ee9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4ce29a-5195-45bb-8948-6e60e36c8996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e9d99b-b7b6-4d44-8d5e-3e8b48da48ca",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2dc992d-7f0c-4227-8485-ac414f000685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469b23d0-df9f-4d25-a80b-b77f8b3846cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef52f9ff-edd2-4f5e-b767-af69e14c08d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab179d5-21b0-40fd-afd2-8c3035f8f2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2737b7e1-3251-4a48-8372-f2227de4f352",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc43aba-897b-4dbc-b65b-3bd8cddbc175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2492b62-c9fd-46ca-bcee-c79434b6d78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c178c1-8058-4e6d-b467-4c7f34e2f594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "047d3d5f-f909-4f2d-acc8-55fbe7386f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01fdf12-3220-41eb-9152-47b098b3b555",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b7ddda-f6bb-4572-abdb-db15c93a8311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584f9cc1-4763-417a-a631-9396b7086ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514be5e1-04d2-4413-b003-574d7cf2dc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ecc0a7f-f28f-42ab-925e-eef91c801e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbcaa11-da58-47a1-9047-c37247185679",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1914c31-2896-45d0-b02e-b600991848c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77104df-8e78-43df-ab8e-e7d89525dd1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af65ea1-7b0e-41e8-8bf4-50ac2e1c9817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec55a313-a3eb-4621-aec9-906d2efa1024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb2eab1-c26d-495e-a230-cc069b926f8b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b591a226-3da5-468d-b993-05ae4864672f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3632201-7574-4060-be37-74e68dee53f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b64a410-6d3d-4dd4-811f-571b85f270c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb32351a-e591-4827-9aa8-238ddd5a1f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c496e1c-3d6b-4d1a-afed-a0813968747c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfcbd6f-9c29-48c6-a771-0ba9fada01a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4197d9d9-fcde-40e3-9b66-37aa0429720b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680a7bef-2019-4eb8-b156-c10747a0617e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d25f0cee-62a9-4194-889a-ee95374543b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492c5692-24f9-448f-b6ff-e850b840f137",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7657f7b0-a339-47b0-b81f-a491487ffebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2950e57a-0546-42c9-9040-539dcf9164ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6af43b-1c37-4e5e-94da-51d11e124be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "00b464a5-a764-4deb-9fd9-993e572c2c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e37c17-78eb-404b-ac58-531d469de678",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11aae365-82f0-48ef-8a4a-06f3aa067493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6881a5c-1d64-49dd-821c-5108770606a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ab75bd-fc6f-4185-921c-c9b1dc84f522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15beb220-d3f7-4620-80cf-4dc0be798e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecc2952-28a2-43b8-b6d2-6ec876fc96ba",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e574d8c3-15ca-44e5-8694-e21a3ec5cb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c65409-9693-40f4-9d36-a36069865a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b367996-c445-4b0b-9c36-dbc597354f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a11942fb-1fe6-4866-92ce-8423843b67b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b1d359-29ab-4e0f-9b22-c0de95733004",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f45c0a-4712-449b-9a59-bd87651eab24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e4a508-b731-4dbb-85e4-622bc8fd963c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3084fe6-c550-477e-92fd-3d69d809188b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "534e1dc7-7a29-45e7-ad30-88bf8e6760c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7f917c-14cd-4e75-8511-0e0801792a54",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ffb9d4-47bb-464d-835a-7f948a4b8a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8cf0eb4-77aa-4527-a258-dd1751b8f4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb875aa6-274f-4024-b783-798eecd5ba40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "405fb7b2-c10b-4782-a809-871f0b5aa4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a4b218-7628-4268-be52-40a864639439",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603eeaaf-6b97-4af5-bbb3-2628cbe478b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96574b2-b380-44d9-9d86-aea1477e0c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80a2847-8508-4c70-a8a8-b9c1ee2f235f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4176e6-73cd-4bd9-aa99-cf4377a2eb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b5d644-d62a-4ccc-b388-6436b58e7207",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd905b4-94f9-428e-9212-48622677d445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f64bb0d-c9a4-44de-8b07-dedf1657cefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cf447d-50c3-42a3-8875-0a91df65ae39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96cb0f5b-8eb7-465c-b894-f8dfaf2341a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3729bd5a-fcfd-40ef-b5fa-434865d97600",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115a3ded-45e2-4fce-8bf9-696019560e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f56396-88d7-41f1-9dad-365733620065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a612a45c-b609-426c-bce6-f0ec7e5ae1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40a7a29c-5972-4dd2-8647-2f27afa71adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c04b076-16a5-490b-b0a5-353ba72b6320",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860ea8a4-6ef5-4471-bc14-49a07ba4d957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b57d50-41db-4174-a523-8bb3bc0f73f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2075a06-00fd-489f-95af-0a856703646c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b13d49-901f-401c-aaaf-40b9cbffd5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d948a38f-1cc3-4a80-9909-bdb2115fbb3d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2124f1e2-fda5-4b36-bb16-591fe9a20779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd4505c-398f-4345-bb9b-d5929b09876b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55998b67-075a-42c9-8123-c719543665a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf0802e-a082-433f-9102-0a223edccbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7622130-404d-4d44-aa1b-84c9e04d87c0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6412e2bf-eb48-4fa9-96b8-73040f77d7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bf1ce4-2d33-44f6-8271-a7854f9ee3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e89f9aa-c6e3-45ff-829b-1f1cb4a309ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb44c69-376f-4e80-85e3-2b21568f21e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70eb92a-d3c5-4365-9ecd-14a54aa76cec",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf829f1-b535-4e2f-a96b-adb2315dc316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0672bd-6a68-4a9c-9f86-3ac5761ca8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb0a4cd-b204-4eea-817f-1489d3a22852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9fad41f-7cfd-489d-ae58-ca4921ddc1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f92449c-9031-4563-8608-847e237d57c8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15457988-fc5e-4c8d-a328-2369cd9d4a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6f3954-bd56-418e-89f7-6826648a08cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dbdedb-6c59-4f5f-b1fa-3f9b50dd862e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d376317c-daca-4846-81ca-5910ce181447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ee6c18-e7e4-4124-ac05-c617754a06d4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33de8aa-60a8-475b-961b-b17748e6fbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fbbb25-92fa-4f1e-9ffe-05f851a15232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c88c803-c12e-4881-8eb5-e0081ef26dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d72f7b5c-555b-4513-a4e3-98b39a5c3023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afa5b60-fa74-4c50-9297-156f25ccd4b9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43271a89-801c-45a7-bb15-09d6f3312c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea079192-ac50-4b14-a254-904b95265ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ae8286-2edb-46d3-8ff4-28f5e9d98c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eae47ff-3b48-4f61-a1eb-f01c4700399d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdef1db-486d-48d5-bcf6-efc6931341eb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3106a455-e572-43a0-bfb9-2bebf2b2dcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daea96f2-78a6-43d6-b64a-390afe7f82ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c6deb9-1e7c-4d11-8b47-a81a94bd9a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9064d7-e697-4703-93c7-0459eb019ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffa88ac-de5c-4ad4-816b-b7683b032dd5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f11db8-4b55-4a6e-af57-d085a060f1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376372c3-ab21-41c9-94d1-3cf0904c5fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be157a5f-7961-4542-be00-39057e1ca0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b813422-6f43-4dad-9237-0c215471621c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581545ac-780f-4721-87e4-ad51e0f6419d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b87401-cf15-4a1d-ba8c-db36b0ec852e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075062df-8c12-4a21-a146-37ee285354a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f9ac7e-ff6a-41b9-aef7-b83a27a4ad93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c561ff12-5d3c-4fd2-a8b4-21d47b6e8bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4670d1da-47c6-4c3d-b55a-ff0ae402207a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98918452-08aa-4a88-a516-bd23635690fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab78235a-42eb-47f3-97c8-0d0ee0237401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a172ba1e-b9af-420c-9889-c29b88ad8271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "927b2e57-526c-4195-a1e4-a47ae966253c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46491c01-61e7-401d-acf9-c286b03aca0e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3daca70e-db86-4edf-a96b-5c5bf643383a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5c36e8-1f20-4b96-962c-cdef7d20dd99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d395ebf-ccdf-4863-8ba2-a8146f0053f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccce411e-9eab-480f-b527-01783cfd8534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2150c8fd-7c8a-4156-8b4e-7667ec25dbd8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ec8d31-0f95-485f-912f-57cf255ddeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179535c9-caf9-405e-b286-3f35f54c49c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d1088c-0e0c-4830-9bb2-b64bd693a2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76b5b68e-9882-46b2-b2b7-ca1e4a23f380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6afdad7-4fb6-4a83-85c4-28d2b2423ee6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6738e0-3b5d-4f18-abc6-3cdb275070cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9eb38b-ae0d-4f0e-9587-130db1a23e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0da59a0-3d76-471c-ad8e-eb72ae8cc58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e92bc54-319f-4419-b3aa-84b33e197233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118e9782-c926-429b-995f-8d79e28f571d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b47a72e-c9a3-4bed-9ce2-f960c243fad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54adcf89-5b1c-45c3-81a9-dca30d4061db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9feaf53-89d6-4380-bbc5-76fe0aceac80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f63608fa-e255-4ee6-928b-e7e180260f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7baf9887-c233-4122-8bb3-4f8dbd7feaf0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b78413e-18a1-4933-a2af-76449b3d3d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69948f88-d263-4b0b-a252-d614f8447dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bc81df-761e-4abf-a38b-fe6653fbb4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e03c408-a7fd-4d0b-a99f-a92b608c6f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db9daf7-1432-4d0e-8f2e-125bb4ba1fdc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f125f8c3-caa0-4876-b5a7-99f24cdb3ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d34d47-78de-4fd2-a2da-b671d85b6dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72015bb-af20-43f9-8441-538fd70c6310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48dfa1de-e006-4437-8d9e-e75ecc767a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b38c743-a979-4396-bd19-b96b8eff59c5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca47745-21a3-4e4d-8fc0-138c97ae3a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d4f4e5-c7c0-402f-80bc-6dc9da93d46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710af6e0-fb75-4ecb-9f38-e71b89a3863c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d96f3f-2046-4ec5-a998-ac4ecd1086ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53034fc0-64e2-4702-b964-b1cf4fb8dc7c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d50a35f-c67b-43bf-9c2b-c548ecafaad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c66fb57-e40f-4331-90c5-f2fb2310236a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d2ee5c-1f37-4f43-8027-2d48ca416bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6ae155-6c2a-4ef3-84ca-206e859afe31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46f7afa-5594-425e-8eed-c6fbf8f203be",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bd7c05-8011-476c-b9bf-94c2ed432b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f88671-7369-4344-ad4e-5dca425a59d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d24689-6e97-4978-9fd0-7720530b6f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e715b959-dae8-48ca-9eb7-de98a30d8318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8df479-b6a5-4207-97ef-5a60fc9ec10d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b632958-1020-458f-b1e7-c9af3bbf3275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558f85cb-b988-4794-a61e-cb7cde5173d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96c7664-93fa-4078-8598-fda1b0e15ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b79501d0-3773-4946-94e2-718c6b39225e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a157a8-328c-4c45-8530-20603b646957",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b467c2a-a947-4842-87af-a39bc8eb5453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0883e95c-dbc3-4866-93d7-dfcb014f1716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a00db53-71eb-469a-ba0f-dfb97f9fa615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "829112aa-8563-4bfd-aa4e-104796586673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d80924-5cf2-4214-be9c-c4031e3f4e26",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82759a89-0839-4894-b54f-84f5f847466b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6ffc01-36dc-441f-8685-12efd5b34859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ea96fc-00e8-4bc6-bc61-15ff608da09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0428e1-07a0-49d8-abdc-3de79361ddac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9e9f4b-ee3d-4086-9e26-42c850f6ace7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b9d27f-4786-497a-927a-4f9e00c8fc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e178e250-9232-443d-8182-7cc02f7d3df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f50740-3fe3-4a40-91d3-c9ff0b4044cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "164132a5-bd01-4d86-8dae-cd52e6bd92eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30712b2-0445-46f1-b0e9-3c97e7a3fd4a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404670ae-b525-41cf-aa76-7b89ce8d4792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7bb466-5210-4fdf-a006-0987b3dd8dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a937424d-36cb-45fc-b824-982c50a00ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5749b684-f5c5-4121-a335-675ce9187642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fedf983-1826-4fe8-a40b-0032a95e18ca",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84dc3ed-7bef-4b5d-8a1f-1bb2d8d3e162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13d1874-8ec8-41a2-8e54-e58f291e3477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe37f789-edec-49da-96d6-01fb716a1060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "08fcc895-c427-4f73-a8e7-0e0383e33cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5f249b-5ad7-4f69-b141-d18bf127deda",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999a3b9b-bb85-4af3-919a-2cdb89e0c6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1843393-373a-430a-9e27-5d285b9f8be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adec0d68-4133-4324-a30a-77c2bbfb193b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "650cd8a3-4da6-4c26-88d6-d716f24384de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ca8d36-1c92-4f27-af06-f6ea5086daea",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904cf711-ced0-4157-a13f-e3ef88e98afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930e4929-6051-4941-8a86-b70b04cf581e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b924ae-db68-488d-a6fc-3c4bce1dc176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb296090-d059-48a4-9ece-c4b3578bb5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350ab832-5efd-417f-9ce5-c055ca85c897",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e306819a-0df7-46fb-991a-47607b85323a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71227302-c58a-4c2e-9ee6-0bde0ee1491c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7007c9-b78a-42cf-b9c4-223fcdc3bfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6da7fded-7a74-4ff1-accc-8a3c9e5c58f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315a1763-b341-4ceb-a6a8-26659710ee67",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7bcfc6-14b6-4162-8bc2-ff8cf415044b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06980fbc-0e67-4c91-9bb1-8e6ca610dade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93ed3f6-c541-47ff-a591-f2c8cc91642a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b05c9fd-97e8-46d5-90af-ad348383902c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e22c2c3-44af-4a90-b785-bc2d41ff7bb2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da19e6d-6759-4bf6-b214-9e836a2c9c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5ddec7-2c4c-40a6-ac31-5841d57b0199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94801b61-7baa-4256-9eea-b91653b6846c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc9619a-0fa3-4dca-a302-093d6b718ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4da3a7a-8ae3-4427-9915-caf309f92367",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84046fb-593a-4812-b69c-1e0945f27155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b22db3d-7870-4168-a469-8e9c8040465f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3ed7bb-5695-49ff-a1ca-082c5a77dece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3d8642-5543-48cf-b449-c0d5caf70305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8324d9-a333-4600-aeaf-9b2478663ad3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af061fe-7d28-483d-8861-43f404fc53d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954d3487-1986-40d2-8afc-98187a4bb5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7a0b28-16b3-482b-8de3-4705a20c3998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36d79853-2f05-4ea8-8d87-7506c3f3ed4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bf919d-eff3-4e50-aefb-7f5a59f6f206",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca44f76-7ec5-4157-81a3-77aabcf11686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8bbfe1-fa45-4086-a82e-98666175b4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64bb667-ee43-452c-85b5-9226c3e13132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f395960a-9c49-4370-86a2-689d8c703c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cacaeb-93c8-49cc-8e5c-5b480f7cdbc5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368476a5-b8f4-4272-addc-7ee47396e4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835af7ec-8d49-4e6c-b132-ccfa82319c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b241eea7-f2a1-4c58-ac36-e16066c9e851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed8dd49-d99c-495b-825e-63daf83d2684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0544448a-c2fa-48c8-a29d-c85711e7367e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd79dcc0-48f3-4906-9358-fd8bcb8f646d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26580238-9fcf-4609-a457-46c336a764ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70152140-50f3-4d1e-85f8-a54e2c9c5165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9e260d-6e67-4ed6-b6ef-6403d7652fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca20d3c-0b7f-4fe4-b9ac-7742cd03f751",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c7d76f-f5ba-463a-9af7-6f8018f55829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a4f7a8-b948-4977-ac09-75e628e22d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e928f86-2dfc-4baf-a8a9-e8be0e8128eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e67e6a70-672c-495e-9f4e-ea79de366209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4c7d3d-9479-480c-9fb3-4667cf5d90c6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e200d4f-c7ae-49fa-bba3-9a38f54abe3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d5f118-61ca-44bc-ba9a-4509e6bdadde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae66db0-dea9-4681-a0c8-60145ee9df09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "102b007c-d22e-4aa5-82a7-921f5bedaab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1c094e-df86-446e-872c-5b7e7d3463d8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ecb1c3-459c-4e25-9122-8bd8cd26abf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3503b812-16da-49e0-9b22-19d458df71b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f6a780-f39f-4667-a875-b25a68caaaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31e2a20d-4edb-48f5-a8ed-0ff5a2fab319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62202285-455b-4f1d-8c53-58271b6635a9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a62c9a-c2ab-421a-bc4f-a19e82f99269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86292a64-af64-4c14-8f51-8094f079cda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697269d3-9b03-4856-be8e-d9731fab8829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8518d342-ab06-48fa-8489-a2739bd2a073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22b59bf-89a7-4ec3-b953-1d0c8dc3a176",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b27403-8aab-46a8-bd10-77d7c59d95d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9c66e7-d899-45d7-aceb-9ef099702689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebb1fed-b4cd-44ad-bfee-698c6d7e5497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f821477b-bfe8-43bf-8c6e-b50b7feab58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c0f9bf-5ac1-4256-aa02-0aeb9db5dec4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34af9769-df11-488b-a931-488352c0c1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93a33c4-7946-4835-a3f4-99e7d9844774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fa6fc4-df77-4a3c-aa69-b4374a307fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f857cc-f49c-4520-8b47-f35d29d2d6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef20e5f8-c6b8-495e-b4fe-2e9e3af988a7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4678cf50-750b-43a2-ac51-fcd59707b5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0b0ce5-d069-4d7d-b889-ed7648e1addf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14948358-18e7-4c35-9c51-11b356600688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a74b2292-5450-4a11-89b4-3bf0e9376a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d941782b-88e0-441a-9449-8ff1bf171042",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020c4af6-0d6a-4fc1-a1dc-15c58f3eebc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a510fa18-bc5c-4c06-a005-ff3d44821fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991647c9-e714-4804-88c4-d81c217a34d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85ef2acc-accd-4210-b14e-384857d8fd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e975789b-e826-44f7-8e8f-c3c796c09d30",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ba0cef-98ad-4481-99cc-779ac5403f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2965d2af-2d63-41c6-8c03-86c5b9224fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb81ecb-dbf0-4534-bf27-699ad3985356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3112a1b9-c4fb-4e8e-a5ab-c558ee081213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556601a6-92cc-4b7e-b4b3-473f22160b5e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8502af1-76bc-43de-9a06-e9fe59c9e018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf99686-3522-4e17-8299-5162f7ffb70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639b26e3-4d66-4fe3-937b-444b7c85f3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de069dc0-5f5c-4c5b-8ad7-606920c2a94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150ab343-640b-45b9-9497-3c9527a04e4a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb45314-12e0-410c-a7ac-22e1cb850675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6868bd-b606-4a66-8d3e-8a10e22ba1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e414a409-c2ca-40b8-acb4-99340b613ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf8e88a-c77c-4fea-a858-13078c24b61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9eac7e8-077b-44f5-8c27-ddeea6c83b6b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa193f6-fc34-4500-8e44-7de30095cace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8f4fff-e013-4ff9-8685-66f0be02bad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8123bfa7-4c36-4268-a19e-ceccf719e3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32c050d8-814f-43c7-8198-c5b1c17b4783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c144ace-8343-47f5-87f6-f11f4c5a734d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68051ee-ea63-494a-9c04-49429172f940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec67be8d-e628-4415-b8f3-1f0f6e3e40c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cc5616-1bdf-4815-a302-c834123c6c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8a75c8-33d4-4bf4-8192-9d1dde6b0308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b23947-7cb2-481e-a1cb-ce19d7b51a46",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593a5e91-da05-4371-b66b-d6d81dafd594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc80dbf3-c279-4e31-818c-a7d9728d9f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dac933f-ac80-48a4-bdfd-3b562ba0af42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "72cc56f0-b24b-419a-95bf-f9dfa8346e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f82c47d-ebba-4ec8-856f-202cb8cddeba",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e1b9b3-c646-4446-b9e6-aa78540a316f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4c24b4-5fe1-4208-b300-8b3163c2c93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618be5e4-6c6d-4b73-a3a7-84c6f97c0d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7de81125-b430-42c3-aa8b-162ac9327710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248db1e2-fc33-4310-a5de-80e705b21a9b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c56071-a45a-4df9-a49e-b715c7ee1331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15f23ea-5360-45f8-ab39-c937ccf9902f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44eb0b26-2b64-4931-a3cb-f55e93a409f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d7dbbd-f9d9-4897-88b8-037eba7da859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d0dedc-54fa-4aca-ab80-1bf73c96b7a7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66db3b44-1f63-4cdc-a02c-3c203f39985d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90156ece-592a-4971-b145-3163cc5dc39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970df02c-a882-4af1-ad1a-0ee1e6a43e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bec8e7d-8a1c-4fd8-91c4-ad498fc6fca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c512e6a-b3b3-431a-af97-c260b71bbc41",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c39e6a-aca8-4cd2-8a64-70c3aa92203f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e579c26f-c644-4894-9da0-48ed64dbbfc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3057a98e-22df-44dc-b3c5-800a4b14af66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d37a29b4-1d04-4ece-8753-93ae94c43c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a741a728-4b22-4e1c-b38d-91bd0d8a0a8f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603a2da3-e46c-4dd4-8efa-9e2ca4000b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a48d6c50-053a-4f7e-af37-3672d6cae2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec4dfa5-4ea8-45fc-848e-a94fd3dc7bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "83a08cea-4d17-4adc-89dd-fb516d27857f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ff16e203-93ab-4a0d-9e57-c63fc6a79f46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86c41c97-cf18-46b6-aa32-0c695ff87747",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06812693-8a35-4408-96d2-ce243a8dcf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be96f741-1c9d-48fe-bcd1-51a45bc46680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b33534c-20c8-477d-b3aa-af5b65d24d43",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dccef7e-4bc1-438d-bc3c-58c14c74ccb3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86ba2007-167b-43f9-907c-b138817e1aaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bf36f3e-d7a6-423f-b78b-77ae28695913"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18f6d217-160c-42d7-a33d-8d408906513e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4008ce2-3088-4d1e-be0d-5848933b23ea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8990b41-c2f6-428f-b41e-70bd649e4db3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a324d856-848f-4d9d-bd98-17f21ff9178c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a2967bb3-4972-4def-a5a8-1c496f7721b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fdac4547-946c-4e33-8aae-9720b041cc94"
                }
              }
            ]
          },
          {
            "id": "e1b2814f-7a50-4eff-8f7d-ae260b33d020",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0d96ebd8-a2b3-4872-bc79-2ad894e740fe",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d2220a2d-51dd-47fb-97be-b188cdd55bc2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589e6985-8414-4569-8ffe-9075227b9393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "defd6245-a19c-4441-9f42-059674109bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf1bd81-e08d-47c5-a712-87e54c371e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd28729f-6feb-4aa1-87b8-2937c42e4bd5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a322115e-7c5a-4fda-bdaf-ca9d5084d5fe",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33cb5afc-d828-495f-8609-783b3b698dc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6f7f46a-2d0d-424b-a78d-4c035da499a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8e96de6-048f-4f52-878a-bb301d35eb27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "44fd5984-4fec-4de0-9f76-cb741872edbe"
                    }
                  }
                ]
              },
              {
                "id": "c7f636e0-66b2-40c9-91b8-ed449a665c14",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8e533d3-93b6-4a70-8cdc-2b4bbe2c9853",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71e0bde9-4870-45d5-a274-eaf563628207"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99ce5090-116c-472f-a74c-a6db88ed507a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1bdd2332-030b-49cc-b79a-3026c648cc74"
                    }
                  }
                ]
              },
              {
                "id": "092cf591-1c80-4609-b51d-9eafedffedc6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a1adf5b-1365-4903-8954-d04ed897bad6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2087dccf-103e-4f18-b707-4d0244ccc015"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "094257cc-7444-42a2-a9a5-d106a184a364",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "111144c4-95db-44c1-b0af-5ace6f545787"
                    }
                  }
                ]
              },
              {
                "id": "7164aef4-17d4-4615-9e16-2a439fa8ae14",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21f8df74-ffd6-4e7f-a4e6-c40a420a18b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da0a61b7-2193-4934-93a8-5ccd6b18e959"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e570c39-2d4b-4d9c-bb7c-1f5cd2e1fde7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6929847c-aaa6-4d63-9554-2e26fb7c8c63"
                    }
                  }
                ]
              },
              {
                "id": "e49a0d1f-1fdf-4f2a-b7a4-54b3ec65d9b5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa3b3859-e7a7-4216-b595-e4c74668775c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16e7a135-f10a-4fbd-9a7f-4383f6d6e68f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c58e151-a2eb-4b2c-8f4e-3f66ebd4ca45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d6270c64-a9d6-4538-8f49-737eff2df121"
                    }
                  }
                ]
              },
              {
                "id": "09527bfc-b976-44eb-a956-f6d598076a55",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc4ee528-599c-4bf5-b0b0-21f8e865ac88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ec7ba3a-e7ed-4eda-8279-c6d962250efc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c36dcae5-e3ba-4210-af73-27d69478f186",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a4920b1a-82e0-456c-9ecf-cf379f8f75ff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e578fa8d-464d-47dd-b218-9966f3d0befd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8870c07b-23a2-4ef5-8a38-08e49677f8a1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6792e1ab-14b5-4ce4-9467-d150aa138c3b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "427528db-a354-4bef-a436-6238e92c3d3b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cdfd5c4f-41ed-4af4-9128-e92b436eb139",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "21cfc6b0-dc55-45c7-8042-003e6cf3b524"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce209d6a-a571-4df9-84b0-0c1f29a44e3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86bddd0a-4530-44c1-9f94-65b82b450fad"
            }
          }
        ]
      },
      {
        "id": "0f9871a3-35d8-4689-b238-b594945e439d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ebc632e5-d50d-44cd-86d0-364791af1209",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed95e444-8eb0-41f4-b91a-916968f09a63",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "089d8854-31de-46fd-89dc-13ba8689dcd9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344a45a7-4c66-4567-a4f8-b505eb04325b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bac712-7810-436a-8b4e-37319fd9cda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188aaa75-5af0-44a6-992c-949abfd1b384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "695c776d-a461-477a-bd02-4a77af5f6ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f8823c-5b0a-46e7-84c9-a9afc4add9be",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbcef7c-b484-44da-bad7-f978b210ef39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a273818-98f7-4a9d-8e0b-6c6485d9121d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d05ab1c-6553-4608-9f2b-3a18635f7987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "326013dc-921a-4b3f-98dd-751a6d97aeeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727c7128-ed76-47a8-9cf3-9e69d93e321c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823f9df4-bccc-47d6-bc9e-1142c513803d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272d2a60-4005-45d7-a573-d2ab2748fcc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7c324c-acdd-4ee6-9e3e-7b6532aad2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6bc7a80-bf0d-4516-8b45-f052f8292e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867a12e6-e8c7-44bd-9c38-ac811f7ba1e7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f8788b-c310-4d7d-88d0-3769d3698c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8771e13a-9134-4679-aad6-a056b0a40f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff59774-2021-4581-840f-377c618cab4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56235964-c877-4c88-adac-33274519ac59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d41001-eca9-4030-9ebe-cacb225b2c1e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4575afcf-c6b0-44c3-b3da-736f77f89f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcb2f41-07fe-42a0-9afb-784269d3ff7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a99b358-9511-4442-b669-af47ea4bd5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc6b70a-2b8f-4d6f-aceb-a55964c5e2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1e98aa-4a57-4e6e-9219-c6e1280e380d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce2ed6b-7336-476b-a5f8-78ae46ae2c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7208be30-0097-4766-a077-b699c1ce724a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a173b50-2662-4f79-8d22-e5a22e8f7c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "405f6bf2-ec66-4cb7-9f6f-9b89cb9a8d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a45e7e1-d2b9-45fe-946f-d3b7650d859c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef92b605-20c7-4477-905c-a9e7448f0324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d14446-258b-4b1d-96b5-2aa4f4737c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc92efc-f6e7-4262-9543-1b5f24d4b0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6523e0-32f1-4c8d-a219-3f22e132bf71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1053d2d-cc56-411b-928d-2c86cdfa8569",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e54acec-b026-44c5-986b-07da16cf2fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a19d2a-f6f7-4bed-834d-0cf3ea286eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d298578-2a9d-49d9-822f-993bbb351e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "603ee454-ae84-4b0b-a6db-3e00cd2a6dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60837829-4de6-492d-be01-bcfd28bc3368",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fcd258-adde-4457-84f2-932939e07565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90babf5b-40e9-4c3f-bf82-6dc632d30424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1ff4de-c3e5-42cd-ab31-e117f9d2988c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd20db36-45fd-459c-b9c8-258ba01ab451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cfa0a3-e09a-49b1-bed7-c95d733ae198",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cc4287-a352-4430-bbfe-02540b65154a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a28a40-be26-4ceb-8fcd-3be2aeb23fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca64563-b011-4762-8fc1-95bd7fec8752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c629a7c-92c3-4a20-9273-3f7327117ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97bcb02-c2e2-4a8a-8ab2-77b8c14af77e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb44b1d-5733-42e8-97c5-aea83bf6dd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cf9bf0-b410-496d-98d6-bc9d9157ac10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eab05d8-e33e-4520-90b5-c0d6c970ad20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0452742f-41c7-4a2a-93e9-20fb2475fa45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9423e029-6f58-4dcb-84f9-f3e1ab9ea44d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d975a294-c6dd-49d9-a163-8f8f735f8e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551182bd-475e-4854-b8a9-0f875bc831c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e676067d-1bd0-4736-8ed7-cf99bf1823a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb4b9100-3158-4d69-a68f-3dc5ffb5aeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9245eaf7-9f76-4e8e-b6ca-b621fdd61975",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222c6d1e-f9cd-4d0e-b199-bc85921a1748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54037621-1c09-4223-aa7b-bc9807bd0bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fdce36-5bab-4356-90f0-e140f9897321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f8aed8-847b-4f22-b892-daa9394c5099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b6d926-351c-4092-89a5-539b2363985b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30c5526-ebfe-466e-8efd-5b1221f94686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83cb63f7-f4bb-47c6-93ca-b87e71cd8964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f98ad89-d75a-415c-86ec-fb68a30be468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "323fd6a1-37fb-4e6b-a834-47bb09795729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f90fa3a-3ec8-448d-a847-8f0b32c00f4c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb5dfa6-809c-4191-81ac-21f8ccb27ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e163c4-ade3-402a-bbdf-39109cf9462b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329cf77c-178d-4a7e-9421-7d4e0325a0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0be43496-5ded-4a84-9f4b-7ed8b1059cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7abba1-cb5f-43ca-bd86-bcc27415f2ba",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4246da9-fde1-4c52-b953-9dfbd2f4a497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5d13f6-130c-4aa3-9b77-d018ecad143a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec709a5-638e-409f-9f32-148471c30056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ccae11f-b3e3-442b-bc3e-deafae2b5234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef02ce0a-fa02-4b70-92cc-08c8e6aba376",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038a79a6-a915-499c-92c4-38bb5ba2ebd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65fa577b-8bb7-4528-a9a4-ce43ecd2e31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d30c12-e446-4e84-b216-ce02d5855a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "65996b7c-d908-4201-a940-40154ae231e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addbe7fe-a812-420d-9808-8b05a57dd2b8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccb9b9a-3d95-47c9-b455-9f979c892862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b08e6e-99af-493e-a42e-bc35d4b08537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4c2781-dfbb-49cc-beb5-b0cafd4fd46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19917eaf-b1b9-4579-8d07-9a1f7bb2fed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776b5f87-0f07-44bf-8b52-84582e454c96",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282eb879-01ac-4cdd-8404-29a0b0e32951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed9f5a0-c309-443c-ad5b-5d6825ec9ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7597691-fafd-40a3-b605-243b2d8de778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f904bc1-8859-4f28-b88a-bbe64a499f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42eab2b9-4785-46c7-afeb-363ed9f4717f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b05f67-28a7-4e4b-9b90-3c89d3d7f414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f7c858-f7e4-4433-a7ea-b89d796d0d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb54d1d-91c8-41a1-88f7-cf4e325c699b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "221b782b-98d1-4694-b108-8ca58d02870c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8208d3-4c9a-4ef5-89b8-e588566acf0b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55479a6e-b211-48f9-b321-18bfc37cd704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a14dde-587d-49c4-bb2a-432a842c8f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3544b2d2-4fcd-44d5-8562-2f4edccf5c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c91477a6-5dc9-4e1d-887e-90c6aeade3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032147f7-8502-4107-bf53-011604d3a998",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81406c1-f442-4271-bd71-2e5aa13a41e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7424b2d-5596-40cd-8bf6-53b25651ed9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374c1b0c-909e-43bc-90b3-14bc36e98ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1203c8-776e-4422-a8fc-6d57bc4f3560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f0a1c7-6111-4780-bcdf-3dd334482713",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b10a84-97ba-4e35-be63-3f0d136c5a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da88eeb-295d-4ffe-aa8b-5edd6f697132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c18f5d1-048e-4837-95c8-cef46b39ebed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6aa30b-d67f-41e9-a9c1-dd8959e82ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d061e84-0719-4233-83e0-4203d9a00435",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c667db2-4074-498c-bed5-6e3dd6797ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64f5098-bf7e-46e5-b7d9-d9fd9839f566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5290a9-e3e6-470c-b538-7f967f3d7574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6ce93c-fadc-4797-92d2-5182b041d867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4536a8f-48cb-4e57-9867-dc3cfd487e1c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4561fd-9cab-49e8-8125-20d2996e7f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d4b006-6212-4ff6-a787-cf314e9c12b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84b3360-55b5-4aa9-b4ff-59eb2f517058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e11b4db3-849a-47f6-967c-d7b9444469c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc70e50-d852-4999-a273-029d4ebcdfd3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb17b4a-a08b-422b-8e74-1aab4cb94f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6667df-0ffe-44a9-a497-82be2e261f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151d6567-854d-4f5c-9d3a-31b0250647e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc04024-3e0f-48aa-9005-9a9793df48d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92c0e2b-7b5e-44a4-bff0-edd03a57c69f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4122b4-127b-4f95-9792-a4ac6085551d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050abf2c-d8c0-4d0c-a049-3c65eef4fb2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95b02d1-5758-4ad9-81bb-40f06170bc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75c400de-72f9-479c-a7af-043e791b61f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d522ac-dfd4-443c-b21d-05200a170169",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139c1fa1-6918-4137-9c8d-0494af8f962c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3194f070-f7e8-49da-b030-ac7b165abfa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3b0a6f-9588-4bf8-b5ca-983b700739f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4756b9f7-2635-47b8-8d08-da3a04c1c3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950ea1e7-605d-4a5f-b440-5d50bdee8507",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2c7afc-580a-4119-89ff-4dcdb8db7cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2842c8d0-a54a-4bcf-add3-b4df4c8bb9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f449da3f-1b46-4225-b8b3-809f1e98382c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a66a11c-512d-4e9b-867f-ca12459d9a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3aacba8-6ff4-431a-9220-a2b299fbc377",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b72318-7aeb-49cf-a5e6-703cb36a89f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084fd865-a61c-4f34-b91f-2c9a85a438ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2449f807-3f81-4081-8f32-61c9fe895778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f33dd9-9afb-47a6-9ebd-4ef94456ea6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10af196b-6e41-4095-aeb6-e93dc9710295",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42104ac-f1a9-4fcb-b410-35f4670d2bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b73d48e-94b8-4afe-acc2-5df5819dc830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8fd6fc-79b6-46af-b9bb-989e6f71b79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b016b4-c507-4291-9dff-45a2bef3c809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8af6fa-5c86-4224-bcea-8eaf1a59b79d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "decb43ba-fcff-49bd-bf76-b2ff00d0fb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f37aeaa-0b9d-4d38-a8b6-ccd820762c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ecc1d8-48b7-4e47-a461-6f446c5302ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4371ec41-f09a-4a2b-83c1-74eb53ba739f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737a0345-bb2f-46ec-b6ca-2f947c4b1d80",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7421ab-ff8a-45cc-91ee-5f53a8e2707a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d4109d5-97f9-44af-8a2d-399836ed816d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b010e0e5-ee4a-40ee-8610-1caa63e60598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "092955c7-c140-4ed2-b415-343f74016b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8dda72-e654-40f5-85b0-c2824d8336e8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdeab6bd-db38-4306-94ae-6a76045acdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a55dfc-96dd-4cdb-863b-c16cc46d744b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa10a07-faed-48b5-a3aa-7760a0cd99cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3404c5c0-7c57-41b4-abe4-0440f94423d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8df8b8-3f24-4aef-b7a3-cdfce6293f03",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289456b4-35b6-4b4a-b72a-09486f97322c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360e27cf-f9bc-436d-ae2d-3465cd4c5987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f455fd08-d5ae-441b-b584-4c8cced60472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc8a9ee-71a1-4bfe-8e81-b8d2f05fe77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a19ca32-f872-4e60-b5ee-19ad33542a83",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2240986-09fe-4ef5-8daf-80144e7c05a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331e92ca-f91f-4ba7-b3da-e2dc0ec83503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18363843-6749-45e8-adf7-9e565e544a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7d42b4-2849-47dd-99cb-3f6a95a32169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96d6aac-da0a-4e0e-ba25-c42c234d7a36",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cb5b55-d724-48d2-ac7a-2ee2f8d5fa77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ff7eb4-0acc-42ea-885c-0474a3ffa3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd37058-ccd8-4118-8cb8-f8016d72e7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b609d72-8da9-4a1d-90f2-be63314095e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "806f6d0c-02a8-4796-b2e1-c18debd1402f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6ea8060-3a20-4ae2-a85e-9d893fc0cd80",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aacb3e7-50c0-4adf-b025-29565c90c614",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c591f1dd-4dda-4d1f-90bd-3f307014bd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe81f20-0d6d-46cc-828f-952dd4b15c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33785648-86c2-42c6-89c7-7133f4c3d87a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41420f54-67db-4d87-a8b1-7ce03981701e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdeaaa1e-c586-458a-9ba0-d78660fcfb60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af4c656d-75ce-48aa-ba15-3e07f3bcb653",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9f18bb1-ce87-4e7f-877c-c11235a8410e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7151416e-7a8f-494a-b959-48aeb9149b59",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "24438858-4e8c-411c-bf0a-a43a6ff73e6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19c8c942-217c-4268-97e1-e02a78580c54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddad3618-80d4-4b4c-97f5-db87cdc81d33"
            }
          }
        ]
      },
      {
        "id": "9729b06d-026e-4f57-805e-dbcb8a2e564c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "325c0f36-eed2-4649-8bb8-d80795f08867",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f21613ac-0467-40eb-822c-bd1e3fb21a2d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9af1ef93-b37e-4761-8b0d-02bf4ca6d5c7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd6c8cb-6ad3-4fcc-9bb8-8c43c8742a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1dad705-ad88-4984-b944-44a12cccfc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa9f3f1-baa7-464e-b98c-306c766cdcc1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfaffee-22ad-4e62-898e-245915c115e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08edfd3d-2379-4498-aae5-7602881a53f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62faa94c-f298-45cb-89f3-ed42df4fc149",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423ede9a-f46b-445c-aa6e-33f202868269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c151d57-35ca-4d9a-b599-a6335609b352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e7b1ee-3260-4318-a4ef-534118cddfdb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bea604-5c01-4f63-977a-b51b297def4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f6e288-8304-4b60-85ef-21efb6e1b1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2e46a5-8354-4eb9-a5d8-95788472ace9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846134a9-19d8-476c-bb3e-ee77cfe8742a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a213f51-cf98-4eb4-a0b4-20623517934b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f95a40-0cdc-44b2-a174-e5c3041a9780",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f53f9c1-0902-4135-9f93-617aa06cdf0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981de9ad-9729-4a83-afef-0ba1ae021fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b813b0-5977-44ca-9129-22b0f46ad7a8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ff2635-a917-4c43-8568-8c6ab4bda7a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df52497e-9285-4330-9267-bde20957bee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3102116f-24d3-47bf-bd8e-4442044f61fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5820ca9-7750-42eb-b4ca-1c4e0cf77147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929aa251-c799-415b-bab9-ea67053e26e7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b474586a-6b17-4a71-903a-fc95b439c76e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab002edc-3faf-4ccf-9092-4a8a8978639a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785985d2-0de7-4854-bb3b-0a24151de706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbb2d14-8a6a-4f0c-9f70-5ab0ebb95002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37612834-ab1e-407f-bd3c-8051af76d60c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9199fc1-615b-4705-bf49-786993b149f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddeb0517-6bd2-4bab-a85d-2baedac54f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fe6532-7f65-41ae-a854-b6c8f957afae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b921ba96-4265-4a1c-ba2a-cc90018cb7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b1ab95-f22f-4817-ab51-356c129ddc0c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c742216b-5146-4ebf-8216-8e12f840d6c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24cb08ec-6a7b-40d1-9fcc-137b24f97187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31decc2f-a033-427c-aa75-7183c7494374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03c2987-8c1d-47ae-a5a7-a522bcb962d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eda4e29-7817-4352-88ca-1502df6c3df7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fea8ab-d7b6-43ad-9ef4-5757eb18a08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b2c30f-dc75-4510-9351-c2180bc370a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20671400-a3a4-494e-a59b-eb227341bda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae58d50e-41de-4f2c-85e0-9f9641602a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d67f18-f6d7-4d7c-8752-1e3cd03578e5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcd3b4d-76af-419f-9800-28c7dfaae2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42df14a-7966-4942-8d8e-2650ed02d515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e4d525-fb94-4b35-a36f-5bc87fff07b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4533305c-9b4f-4a70-832f-c2b574424213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8549a021-30c7-4d4e-895c-f5abc4251331",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e76843-1834-403a-8f75-c9794586e65d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c718baaa-0cdc-4d17-9a84-0bb7d1b8e999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f661f04d-e07b-45af-a11e-85e468afac4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69d5650-6867-4bdb-81db-07c582a2f1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3082a731-9b80-450e-a06f-2b48986e7535",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f104dbfe-3f69-4f57-a704-19be921a9e25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c29a385e-c662-44ca-b071-5afd026a260f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41485563-cad7-467e-83b7-c73214203339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8af6e73-1691-4106-8b2b-df22d7705242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62be247d-aaf4-4971-a0b0-4d9b631dc5f8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c77bc7e-0283-486a-8c3d-f8ac19aeb2b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1362668-a72b-4c0a-9689-fbceb2884d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1f9b40-c564-4b8c-9f1b-e402d4e5faf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e93efc6-0d6d-4cd5-8f9a-b417f85f9fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c3c3e9-2c41-4826-95d3-4dc14f193e48",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7b453a-14be-4239-8cfc-f9da77a911e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d8d326c-83a6-4223-a596-deed3a8d5e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616f7941-56e1-40fe-a5e8-7748b14af1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0bbf2ab-be6d-4a15-b758-6c4941311118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deba3d90-6140-4df8-90d1-ec2c29d1739a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4925f93-0601-4711-bc30-109cd476347b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24cb320-8041-4f53-aa2d-d4bfab615e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ca4293-65d5-435e-a506-57c85cdb6b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f7e0f91-eebc-483b-b283-a2cd7b42fc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dfa72e-9f99-4949-8b9c-39d6d523c77f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086a87a7-eb6b-40bd-a8a1-2c31c91285d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca3d2e5-d1ce-4fea-b229-980b51c5b2cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f8fce3-6192-48ed-9bfc-81aa3fb890d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c68329-9dba-4f4a-82b4-5ce39ee7bd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7176bc-332e-4b20-b830-a37d4b6ad665",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d9ee17-61b5-4b94-8d42-68108c786350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ccc2fc0-65a2-4e24-89d0-26978b637202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0e84e2-e9ae-41a6-9bcf-bb00de15fa12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd94acd-82a3-4991-9e67-905dc163a141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a5c973-b8ec-4728-9f73-714daceb742e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd186bfa-cf32-4113-8389-9a6101f36080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d136f3-20ca-4308-b208-1f1bd1b75dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044dea5e-2d09-477e-abe3-707061fcbd36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28627e7-ac80-4fa2-963c-40d1d79c5c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f53052-7b68-40a5-a2e0-31a5c26efd1f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab4f32f-0e73-4413-845e-baa1b1280b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e35f3c-4f79-4b8b-bd7c-308b603c8ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce7bffa-5711-48f2-9fe8-22f745e61482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdfa01d-f6fe-4a09-91dc-97e9cc2236dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0125dca0-3d0d-43c3-8029-e5685f45cba9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f6f52b-ae20-4060-9e9d-4b597e1d8dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed9c4a9-6b0a-4fb9-9d37-113a251cc5ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fad615-8cd7-48e5-9fb1-7eece4bbfe28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e246f9b6-162a-45f0-a991-a6543bc62750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e964bb8c-cfad-47fe-af31-d64ec370ad2e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bc8197-c4c5-4d6d-ace3-7739898ac2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f838875-82f4-4fc0-ac53-16f8da7108ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adead848-44c0-4899-b54a-5de7a93ec3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68706aed-79c8-4745-9d06-69644f5401c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ee3ef0-2754-4890-b863-466f64f8b69b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9dab77-0102-4475-9d2f-37bc193938e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00fb2a60-9009-4258-b209-c3589ba99541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc9bdc0-7fef-42d6-bf43-fd5cd55fcdd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b599ea-823b-44f8-a729-65a34578b88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de95d90-a509-4f21-bb49-f89155d765ef",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05035291-ad0d-4807-8e50-41d5c7d4dd62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d9899dd-4b1e-4696-8ef6-074c180185c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d38af91-44fe-4e6f-88e6-2291daf9d2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0cedd47-ce37-466c-b9bd-1445228d6d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2686011e-e573-4be3-874d-f64eec0801ca",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96868eb2-5a9d-47fe-8d04-8cf377c9a762",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb81997c-77ed-49c6-ac15-91f073490c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a894f8fe-ccc3-495b-a371-054eac6b3ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac648e6-f808-4b45-bf5a-12f70b86e2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ad88a0-aef3-46a8-bb23-537088cb44cb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9865b48-d5c9-4181-bd32-5ab7ddb1a0c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15c37797-4029-45d8-9508-270c02910761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892d8604-bea9-4ff4-9d3d-e2c89b00f36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02b29c0-6f45-4a94-9dce-c12205aed495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a70882-5964-462b-b168-89e60ea1c31c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ab0915-7c6f-4eab-880b-873f3878e315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2716770e-7422-4f3a-90f1-65531b54cd9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3176bf8-8eb2-430c-9bc5-21579a92a9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c274f259-a8ae-4145-83ee-b1822bb83a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fe219a-fcd8-4eeb-9f2e-1773e95fab61",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaba690-2a3e-43da-b7cb-1eb1c308adb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56c04cc6-9a60-415b-8516-1a12c09a461c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abb0126-3f4f-482b-b9b4-565b561beac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90386bc6-2ff7-44f4-92d2-1e45639f2115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9060299-68a6-4554-8dfb-4723d1df60c1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55558c2b-00c0-448b-af64-e648dbed6855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "516d34f2-40e9-49c1-b93b-531fdd97894e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cb3ed8-ccba-4ed7-ac6b-8a4ca333deb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0fdd82-0994-4d09-88bd-a70e67fe6dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3068ea10-75c7-4219-a967-27e5d7c67369",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91afc0b4-8e8c-4589-8383-f689730755aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d837dbfc-2600-4469-bc6d-c9c3f4ef2acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d64cf4-aef9-419d-8685-1a323e41fece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f9b7dc-11b1-4b59-8cc6-4c70cfe4833b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09aa607d-1b99-4396-980a-a0f01323d577",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba86ba17-42cb-43ff-8896-0c1ada3241f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f13896c8-fa38-4e23-a79e-ef2231b20c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9240e0d-9b68-42ec-a97f-a5819d19f9cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296384f0-7126-4ab8-991b-e80eceef03bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6bce5f-2e71-452e-a877-e1845416921c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2171e34c-17e7-4d1f-8dee-53ebaa408690",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c425f4-d836-44a4-9ab1-62511caf6604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bdd248-b1e4-485f-b22d-1be02f66df6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbefba3-16bc-4b0d-9522-4dd67f87e55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52354d16-f23e-4321-b22f-6c255ecfe98c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c6af68-6ced-4c55-9bae-eed77450a328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17584ffe-ffe6-465f-8b72-decb4dd2fafe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee92185b-cf35-4897-81c0-63f3fdde5233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae9f400-a741-45d6-8164-4ca4d88d404c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5c32f0-4358-476a-a690-5e7be25414a3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b115b51c-0c45-4d91-b5a0-bed1a081ad1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d5a8b4-6e86-4a0f-af4d-5d737d2dfcb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e3c742-bb44-4871-a42e-77b4ac1e67fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c409efd-9939-455d-a199-285c2405d63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41813a17-8f5b-4e67-a83d-11c9ca9cee49",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd5cecc-330e-4d20-82fc-0058f668a77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154861d6-73f2-4b01-8a72-c46d1ff83bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670fa220-9bbf-4008-b31f-796a2c28be53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063dfa89-7391-441f-b315-891fdb488567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8b5f99-88a6-4001-bab6-c1ab0ee1834a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f512bc-cba0-48bd-9e11-e891e0b1a368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9929290-7db5-43b7-ae21-5052544396ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38efaec0-82d1-4a5e-b3fd-c3af8176844a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c840887d-3f13-4e4d-b42e-bdc6c7604b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3c6961-b51c-4775-8afc-d127baa8aeb7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5efe28-ea22-41c3-b21c-ba32073b1e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f39e455-aefa-4f49-a51b-e35a9ddbb931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7db0fde-700e-42f4-9347-442c49ed5465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82926fe1-66cc-48b4-8a5d-4a458632bce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6136f3a-0924-4403-b441-536ae534cff3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9972dbcd-fe69-4bc6-a0f1-6cae06d7ea12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80f8f8a-bd95-4fbd-947b-b782013bd90e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf189ba-1902-43c1-ab07-a6678d056f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ab1330-8726-4b85-b6bd-f1deab1c218a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa80b9f-c508-4846-9cbd-ab8f63f407df",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8628bd8-cd09-43ff-a092-2fe1b19d3386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c58d9fb-1e58-4898-9e29-aeed2b7514de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a7948f-55ba-4c5e-9de2-b29b6d1f805e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528802a8-a921-4dd1-aabf-670675a27ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6551651f-e77d-47bc-bc7f-e60f15f1b6ab",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbdb257-cdb1-49b1-b3dc-6e49ab490161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7470b4-6558-4f15-8b9f-93e26f44aead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9665054b-0a89-442f-ab02-ff28069a36f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65ecd5a-3ea6-48bd-ad20-33a2425d69cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664bb932-8422-4d27-a93f-ad621d7bcca8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3160d1-b630-4d73-b4d1-7420f7e78ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27303dc9-6d5f-48c0-b3be-e80e1a147ee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea46c8a3-8d4b-4f38-bc54-5483f34c6621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0cbb27-97e4-4900-8b0b-a8d7f12b51d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc790ca7-ec8e-44a1-b568-c48eb7bd6831",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3342ccbd-44a1-4268-9d56-02db306b59b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b138bdd8-9572-4461-86e0-4037a0089019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c49154-32a5-4527-aa1c-cdb4d0d894c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd86b0d9-ec88-4904-a1d7-1af8a28f0f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e50c161-3ad8-4489-ada8-8b80a611e952",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83aa633-a487-4240-8f8c-ee17fce53689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c1068a-ba4d-42a3-bd72-0079a9cbab89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01197485-8d39-4027-8524-44f4ed92bac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04d254e-50a6-48d6-8b82-463ffa622345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b38df8-5e24-49ff-b5af-722503188843",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1afc351-9e9e-4cdf-949d-9477cde4b690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a57956-4b27-4e32-a4e6-163a4a2ece50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d651987-4857-44ce-881d-622889756564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fba4074-1e78-48ab-a721-b12b0de04e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9506e167-d3ca-4552-b9e1-827d5cb4e18e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57b966d-35a9-4798-b9f1-1ecea0d425d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67df9814-fae7-4911-af8b-621ccf6f98bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9225a783-2cd0-4570-8a64-402e5ea13af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdefed23-91c2-4239-b173-70ffb0263e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eba8f11-050a-4db2-93e1-18ee822391a0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe493c5c-0d37-47a4-bd65-b1622c680971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c7f380-3641-433d-872f-7db63dac1093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "962e4dc9-00d7-4fbd-b1f1-3a32bc41ce27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30cf3f7d-f006-4573-a444-81602ebe6266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7f27a3-1e3a-4727-a50e-017f06f67873",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf205317-5090-4d30-90d8-a6a0a7dd0253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e6b53d-605c-4834-9276-2e4da7cb1dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445853d9-3930-481d-8d57-f6d4c5f12c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067ddcbd-22a5-40b6-9b43-7b2794eae23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5a03c7-bb11-4f73-bb86-bdfed645c464",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934b2188-d0a1-431e-bf24-c7cf2fac399c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df85308-cb1f-4faf-a856-03798d60a35d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30250006-2b4c-4fb6-b8df-85bea12ef680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29dd1cf-04f9-48ba-9bc5-f11b49f4aeeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9895ba-ff9a-4816-b5e7-727f88406f24",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddb5359-8cae-44f6-a6fc-b20ff3f068b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce716a1-cc91-497f-8ed9-610fcfba53c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89eddd3-a57c-4bb3-9b65-fc20ffff5077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd45011-8a4f-4d0c-b9b7-3514aace1809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11de3abb-56f4-4f74-bab4-de31499cdde7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b175811-e281-41ba-ab29-61bebe466003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af664ae-d642-4fe8-8d51-2ebdb2d58d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5701ab-4511-4848-b7d0-a0539d33bbea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016bfce1-cc38-4e71-ac71-d5bafdd69d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546a7ce2-182f-4c30-8b40-a5b466508209",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0317ef60-4f2f-4935-9bb6-e4f7f4e46c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8af456-9369-4d6b-ae62-e3bf5417e0b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3e81a7-1d86-4ef6-a658-82b297f55368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ce776b-d3ae-4010-96e2-7afadefe118d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4da9eda-3525-4318-9165-3de6c03c8468",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1f7d72-aec9-4b54-8e09-aabb8e5ecbb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ebd6721-7326-454d-8271-a82650d4ec23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebb9c2d-1eac-4180-a68f-55282023ad4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5791a18d-da37-4255-8fb7-4378694d5903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09218436-6f92-40be-8350-b2671ce37da4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52476882-798b-499b-a5dc-f37b1768148c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef707101-c629-484b-b0d4-22b0e0df9d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1088b9de-164d-4440-af16-2266bbbdf0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2e72c1-b286-4e14-ba1b-79ecc143efcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a06980f-ab54-486d-95d9-327162b296de",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3f27d8-5bfe-4a79-9202-e58bd2d38d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf1e250-d390-4f54-bdab-3ac8aebc1b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48be8d05-8f4e-40f2-8e6b-54e4182a011e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57eaf6e1-1e23-43f0-ba09-99477a096449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e54619b-68e4-45e9-ab02-447f839f052c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fcbe64-f600-4fc8-ab64-e0a9e42e5c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f606aa-4fff-4baa-9fb8-0c17df63c997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52266784-d053-4489-9c50-2026478e356e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503f2cc8-40d6-4269-8a4e-1ac2f4348686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89102a5-c172-4083-a179-ad9c5ba0d8e3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0b4898-7f3a-46e8-8fb6-44e6a754ab15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9122758-fa88-48e8-82ec-7e609e46ca23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2690f5d1-96bb-4a8d-81ff-754af4713576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95aa27b5-ca41-46f1-bf25-b05b8c4b5780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c82ab8c-48a7-4f84-819e-21f89457e1d8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f364c8-9b34-4ebc-9dd3-50f2dc577295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6157ca-12bf-4769-a015-5313a71889d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86f413e-dbd4-40c2-8efd-aabe41795f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8383ab57-ca74-4702-9a6f-a9ae1d2d00da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad72e3e3-6a2d-42c5-b77c-9093b3697b29",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7bc691-3524-4e06-86d1-da9e3a8a1df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc007ba-8486-4e77-b3c4-8260fcb7e776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a6a769-7f7b-4021-b1da-f434da60c2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b61dc7-84cc-4ef6-a59e-41debaddbbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46071abb-b370-4a88-9a21-2360338258eb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08bbf20-949e-4e87-821f-8220a8848482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25d31cc-2009-4eba-b345-b50c7d25bc04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad57e805-9073-46fc-b168-bb74c28875d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54380ef-a348-428a-babb-4e7698c9a73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7358f1d1-08d9-45fd-bb41-2a6c5656680d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc04ae6-5207-428f-b2ab-3f30b53cb970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd00c545-d09a-4d5b-976c-d9079a02cb24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90cacc8-31ab-4440-8126-b25df38ae9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb94a4c-be1e-4221-b4d6-224756867ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f396ea9-877b-4e40-b454-88e0fe9f6950",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055dd192-e63f-42f4-905a-afab11498949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226098bc-0d9c-4257-ae68-d38ab28534a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "550b6939-39e8-423b-9eec-4a121be7289e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc8bee8c-a385-4e6b-a54b-a307362c45f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95576924-e39b-47ff-a43b-ce0a1d480265",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c32bf6-c7b5-4bea-bc4b-02392c819c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15a3cf4-8b4c-4de5-8947-8df0a0eaf99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb6ee20-e753-4799-884f-4b47e03bc717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2666d6-7c3e-48a3-9d05-3545e4100948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57e25e6-a44f-4c83-b820-20400683f36d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1d9f64-6f89-4871-89d8-be80b2f02372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fa9a310-8aa7-458c-82a6-9ee2f3e0fae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db017917-5b5b-42e6-91d6-24876a32eab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac5dbc4-245a-4104-b1a1-93d43b04683d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72644afb-333b-44d2-8fa6-310865ac11eb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642197af-c61f-42df-9fda-5cbc5f346917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "540476a8-05dc-45a3-b6f3-c271fff4dc27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4dd0a2-0805-4179-9600-415d41bcaead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cdb9dc5-c063-4c8f-ae84-4f234ed56e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c65d9c0-0ac6-4dce-8588-bb04d497c80d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0178f0db-28d5-4ee9-ac68-ee785f047325",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e4a4de1-3b37-4a8f-a420-21e748571c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167013bf-b009-4dfe-a7a2-ab15df530013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbcfda63-fcdc-4d53-a233-b92406eab107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3b058f-4f13-479b-bab9-74b4a42d1c02",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf5a8f5-af53-4a09-a921-5e538b70bc2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "382657f5-6e3a-4040-bba2-b2d0f5085e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb6caf2-98ea-453a-bca7-4fb9e81773f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2905bc2-975c-4005-a122-d97d537d607c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e09463-d5a6-4b63-8735-ad0909717175",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de277af-5872-48e4-86d9-b11da2a468af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b558d96e-cb0b-4a6e-91a4-df8341f43c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c1ad77-27af-4367-bcfe-d9b1ca1bc238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ddf55e8-1c7c-4d80-8c81-ebc96594e009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8ffc27-ed3d-47ab-862b-6ab78ff8f5aa",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f9b943-23ad-4da5-be7b-19c81c7b89d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2784f38c-4390-48ee-a014-474837945c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40352ed-0922-4411-bc3a-e80c5cdca0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48310de4-5b24-4a65-8ef4-366ab40c2f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17907cb-340d-4312-ba61-b7300f382a56",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7b47f4-5c9f-42ff-9226-f32639eae158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "092de7da-5773-45ec-b3ca-8204e133d0fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dc45cf-9b34-4c4f-bc10-76da8e15d411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb06b429-e3dd-49ce-99e5-e173cd1a6853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39929a9-e995-4e28-8022-aa197831f03d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50696ab7-258b-4032-9319-de322444cb73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27a4e6f2-cb9e-4cb6-ab70-4c001036761e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158818c0-a7ee-42e1-9f92-d519da3bf381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b709dfe-c479-47f3-a8d6-986a9e8366a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a25aeb6-2b16-45fa-bdc1-77859994cc58",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5133cbb8-37cc-42b4-9204-6ac335c9fb56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd8b0f50-7b7f-4fee-b59d-9d1f39cda2a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16224842-ee27-48f8-880f-1a0a6c0732d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410cd20a-68d7-4c32-94f8-861217a2a13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fe1bc5-fdad-4c73-8b67-91b65784c15b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1ce2cd-c075-4e6a-a11e-1640e5750734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaf6513e-97eb-4770-9fd0-37be22cab405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82d8d07-935d-4a72-bd91-24dfe341cb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f55e5f-baa9-44c4-828e-5a6f4cfc1500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301af45b-80ea-4d99-b192-2dbcec1a0662",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffe7cd4-8464-40e3-a32e-38b5bf3f32f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4218c13-ab29-4656-afbb-34dd0caad491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b050ff-12d7-40c7-bf07-402ad8131323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b60293-9a03-4e4b-b5e0-8a0e32704112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee741a1f-b7d3-4f87-a9af-c2425bef0ea5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1066c268-d9df-47d8-bb73-8f5aa0b98a53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88f15f83-ac44-4f53-ba45-04eeb9dce8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b11cdd-d6bc-443d-aab2-4aff9f272e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75247b05-9f07-47d1-9a7b-8daf10eca4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d3a8a2-3a17-4096-9c6a-62f61a65c886",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b5cf2a-10db-42ca-a0ce-b20dc31b7a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "363b5331-8fcf-44f6-9452-790119f9e441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e038778-69fd-4876-aa43-596a1b1ef597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f725caa8-aaf7-4bae-9c7c-7f9f962d13ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e733bb4-68ba-4876-bc58-809cc5cc534f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db37ad62-94f1-4848-9d5d-463ba6b684e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "841b6a89-8f39-441b-b0c9-c9f7a7007086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76b65da-9f79-430a-b4b3-6a5436d95729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693601b1-ad4a-48f2-853e-34483d29d9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac11c3d-b635-4a1e-aaf1-0d419fd6cc1d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bafcd7-d84f-4787-9968-6e5361f00724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "178325db-9e0e-476f-80cb-9250e305f929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021b6d31-a9ba-42f5-a8af-165b3b4a3e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0989230-2a74-49d9-8085-4fcde66b2c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f59f67-35d8-43b1-b783-6295d35ec64c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad048d0-4bf1-48ce-8278-05e98bd1baf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ec11dd-2baa-4e77-a24d-e6afa225aa50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7293b980-0e4f-48ba-be4d-c48ab860cf4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69be90ec-6528-4aa4-8803-d823c945cfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd06856-62db-4968-a19d-536e279a1237",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3935d5b1-e414-41da-b7ff-fd574a202bb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27e33014-4592-4278-9b66-bcbc2b2873a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1890bb-31fa-4282-8218-d34489157c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3ee2d7-5f24-4dcc-85b4-9f581adcc612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3dded3-17f3-446f-a90d-fe170b518465",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a3dafc-9713-4a03-8899-c54ae263a456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3d34b18-80fa-45d2-9a99-e113a02da401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a823291c-0aa1-4773-bd1f-b94a3ac90e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d597af-bba6-407a-b538-0f616dc92e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c53678e-2f3f-4077-a20b-8da6e8f6f92f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af2e4ff-0e95-4ce6-b985-96267cb47eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e931b5c-f063-4c73-8096-86bace59d397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d8b8f0-e342-4966-9e27-38a1e137f606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d77f95-09eb-402f-a007-4226a0789924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7219988-8f26-48fc-b03d-2a77a03cc5bd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2e4f98-3a89-478e-b9c3-77d9e20facdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "528f28d0-9db0-41d8-92eb-ae640224d544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f966713-ebfa-41e4-ba01-1bd2f115b897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38946e76-0aee-4884-ac6a-cba6717477b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a9b013-3c0a-4546-99ee-4bba60c9c88a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3783267a-eb03-48c8-888c-37c2501be7da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c688566-4aa2-4ed4-b7d8-d484d762312f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97e3c39-439c-445e-9caa-bf4219962b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105631bf-0419-4a18-8012-74ca3324552f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0827e38-4124-4bf8-9b40-7fa067e9e3e4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3d4725-475d-407f-bae1-209720caa2d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffea6e52-648e-4129-a4ad-7c13d2c787d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d77e0a-ec5d-4586-afa1-b2e8583f61d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c84783-32c5-4848-baa8-c3a9ad78685f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ebe00c-e1cf-4a81-94b4-8b3396676423",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9287228-ecfa-4f90-a542-1b088754d886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "960cd4a3-8e39-49bd-afbb-398b7869c03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab556e4-321f-43dc-ad48-8989ef174bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfde6937-a5d3-4ff7-9a95-26a0f6c4f354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9e4c44-9e7f-449e-ad2d-a169a0cc507a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f74049-0710-4d27-b174-b6e0a63c80f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "884cd8f5-1245-4cc2-a223-bb73a261a1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2a0dc0-006e-431b-ac4c-09e6daa7f8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea894179-962b-4c30-8cba-1c053b9a42f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c9fee6-8a77-4d66-9cce-8510a94f82a0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b777e7-bdc1-4517-a30f-ad79b6c38f22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd4ddda6-c48d-448d-a382-a2633b1fdc46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac98011-2c7a-43e2-be8c-3e30cd563377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13517df9-d69d-498b-a91c-b26facd97b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf0d140-bb94-4c9a-ab25-2a3a5e053b88",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa29651-d497-4380-aa85-91bc6aa9d3f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd64d01b-e50b-41bd-89a0-77d0e80274b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3967a43a-e025-4c7d-9f21-a654f936606b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc0ddc0-882a-43be-8faf-4d9def038974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e09ef3c-b5ff-43cf-a2a4-eab49fb938f3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63148911-471f-44f8-9933-69b3bf2946d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d51a478e-8c02-444c-9769-30c232ddc808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9506f8b-f1f0-41e6-9468-9d4753d23689",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6519d79-7034-4f5c-b33d-2d77c84a63e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a553ac8d-da4f-4e03-bf10-7c139a5116b5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeff5b40-ccf6-49ab-b075-4094c857df97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68d12aa1-acc1-4ab7-b1c3-1c4d6748f54d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896127d1-07f1-4862-a1eb-bf4af370d3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdd725c-519c-4989-acb5-4ead7daf5706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d58dc0-a9dd-4b61-981f-dc7e6c827033",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a2b451-b594-413d-8a7a-a4808ab2ac3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2dd77cc-ec4d-4b88-979d-3cf9b0b9472e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04248303-5e36-4e0c-b1f6-bde4b008e934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf4b30f-d966-4ddf-8f13-d4aea4c33b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfade74-27f2-403b-9d3f-4aa810974d49",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5a1dae-4bea-411a-85d3-0b69a30c1db5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "697719bf-15bf-43c8-b413-79490c5d3cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9785d68a-1873-4c80-8fad-e9667758cc8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79cb76cc-925e-4809-9ab7-0cb5a0123d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9cc911-7a44-40aa-8015-c9760c46d0e5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6653e6-7e37-49af-a88f-cca35dd6a3ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dcc9fc3-5385-4798-91da-3649c29ab73c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7808ec-6814-46c9-a7a8-b0a36ce8b513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55652bdc-befe-43f1-b1d3-0d12db8b7760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464f160f-01b7-4a94-b45c-4fa3a292793b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4944440-e505-4285-be44-ced32a58dc39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfe65ffe-6136-4b26-98c0-deafeb2a3d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb418560-80b5-467b-849b-18a5d0ee03e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab1ffef-01a4-4211-ba32-3d3e7ab8d126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8100de9b-25fb-4fc3-9d85-a8065c6a30f1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed04d635-f4bd-435c-a491-654bd9814cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a301a56a-c782-4688-a7a7-4e0c70317c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efd6700-f32a-4e87-8dab-a3b46f21f5f0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee64381-6077-420a-af4d-40f55bf8264e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335dad22-a786-4a44-90d4-bc608a8ff973",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bb5d56-9653-4ba7-ba82-5cfa09ac5816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efbe279c-e6fd-4ded-8f35-b6f8c4048e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef413ec2-c9f3-4141-9e1e-5e326d86c651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a704c73e-94ab-4f02-9f00-01af450cfe32"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a18efc31-8bc4-44f7-9cad-6ab972230b15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a2f17bd-e188-4598-a348-e38a448150bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7c85231-2213-4eaa-a9c3-a2888eafdd9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0293cd99-dae8-48a4-bfb5-540f44316f3a"
                    }
                  }
                ]
              },
              {
                "id": "afae768b-17b5-4b68-99e5-01079e46a5aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f9a2308d-01e1-4294-9a03-13d82ffbab29",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5488d81-1063-48de-8773-b19b66e6c155",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a27f2ac0-e90c-4ead-9697-b8b8d57e5f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e29a127-8f9e-43eb-a64e-37afe47d97c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bac7b6cf-09a3-43f9-92d5-a9b062387ad3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0e2fad9-02ed-46a1-b704-67cad43ea081",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "289894e7-bb33-4d94-b7fe-19e80a401af3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50944aec-782b-47e9-9cb6-5c45c8c6c7f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30ee0ddf-4ae0-4250-8a35-533ff0187dbb"
                    }
                  }
                ]
              },
              {
                "id": "a7c24ff2-dbd2-4cca-a960-c58b497304fd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3b95b175-f4aa-4e93-8519-5abe9161fdb6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1da1b09-6809-42bb-a19e-03656a11aae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "aa9fcb86-03dd-47ca-bc7f-6a7be0aa13de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1abcf3-a3d8-48df-a8a8-46e6a42b97aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773cc959-27dc-4637-be68-98f6316c66f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0e5197c1-73e4-4fe0-a782-23bc4b70c410",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e2bd7b7f-9fbe-4008-a614-f93b04dbde13",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efad2588-16ca-4ebe-a349-f780872b5c95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3f43c860-039d-46d8-abaa-5be31b0ae751"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f60cffb-773a-4716-83ea-4f5d522577df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "110ab99d-f2ca-46bb-af20-9af7a2bcfa46"
                    }
                  }
                ]
              },
              {
                "id": "611e3c4a-83c7-45d7-bef8-bac716a381ed",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2a891f9-41c1-4922-bcff-a0e44a430b6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d4d0f888-366e-482e-86cd-dda58d3bd129"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11298ff2-cf72-4853-9cea-c3fe23d5f5b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3387ca78-8768-4579-8074-fffa5157827a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f963b0c9-1a4d-42a9-8366-1bcb47118cef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8d9d836f-58e8-4b07-951f-71134406c0b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f0dba46-cdbe-4065-b000-5418c7fad8a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94582510-eeab-4f6b-940a-f651470b1ef2"
            }
          }
        ]
      },
      {
        "id": "1b288ce8-e59e-4e55-8df0-a8f584923e96",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "42e3a3b7-69c2-48ba-bf61-db49abc8e5fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37b15f20-c4ce-4929-bbee-57fd127f4efe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05a5e391-ccbf-40e8-a570-49bb135d5cfd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c5c765-2aac-4a7c-9403-be560b026298",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b83f0efa-6a1b-4aad-947b-1d902eec11ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf356126-0ce0-4de0-9b6b-b5cf399120e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b24f5dc5-9f85-4d3b-834e-59df577baff4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25737223-5481-4dd8-bc3c-26672a1035f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a79b4af8-4421-4fd7-abea-0faa9dc5ad5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d96f8f0-63c2-4a51-bffc-af819ec4d3ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d712c51e-a36f-47a7-8ded-e4beb10c2629"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d002c1a8-dbb3-4aa0-8a9a-4c9bf0ae9988",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2c94a37d-2ac8-4dc5-9779-cb4a86e4ee1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7639a7d-d922-4f94-904b-f6f99d6ed06b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c2faa90-db89-49f3-8df8-238133eb1f5b"
            }
          }
        ]
      },
      {
        "id": "60330b97-3c85-4a4f-9a42-584b386a803c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0925b926-d9bb-4edd-8005-fabd074144ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3063afeb-bdc2-4c1f-a0e7-dec5ce70208f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c4d85fc-08da-4dcc-9094-42290fc73592",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4998d36d-a072-4602-8dba-7dc167e0666f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d079b92f-4277-4b19-b19a-66dd90f72e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46afb9b5-b274-4119-b138-3202618be0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52d4afa3-f2ff-4381-812c-6411063c4986"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5263c120-7055-4049-a90a-748d990d6a08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4b43907-c998-4cb1-af18-a914d191f5f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3463b40-59aa-481a-a6e1-f623c81cfe2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1a3703e-5ffd-428f-9f24-bfa04456c4ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f14401cb-2227-4a80-9295-8b14d3637edb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "049361c1-b82b-49da-b59d-605f378c08de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f79d3a5-eb5a-4418-9e5d-0b0bbc2d1e01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6f0d76e-7da6-4bd4-bf6c-2a086e5a695f"
            }
          }
        ]
      },
      {
        "id": "d8e871c6-471a-4856-ba81-0085e86952c8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "96662080-a50b-41c3-a05a-7c51a03c8c07",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcd3d714-19af-495b-8f08-08ed7284f833",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8f65384b-9b0a-4de3-9362-c6a7d552cb7f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6fb9ce-be6b-457f-a133-d2500e5281ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b54de55b-fd0a-4ea2-b5ca-6f37c79d2dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3fba7a-8b9c-41d5-8afd-59500cdc0326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62eab2ac-a697-49a0-92a4-1474a44fa943"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "139071c0-99ad-44f4-b714-cba0ab164d7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f445ccba-6c65-4d32-8633-c0505dbbe7ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3f51d26-56b1-4e54-9075-bad647f9d473",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fe03624-d70c-4d60-9f33-72fb894fc262"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "887abf56-5941-4d83-8b53-efdcff6b8b5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9721ec81-59f6-48de-b519-c9bf12251c83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b49a6376-4268-4fa7-9fb7-120672141d3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af3e2c66-cc0a-404a-a4db-4903f96a2a3d"
            }
          }
        ]
      },
      {
        "id": "97c60fc6-f674-401a-bf73-d9915dca4fcb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6bde94a6-eb2c-4fda-b0a5-4d6a1989d4c1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c35d248-9012-41cb-966f-9e302c0d00ec",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8f32be2c-79da-4c78-879c-8fe37b9b49ad",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a429fcb-47e5-48ca-88cd-23ff6e233623",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "870b7380-f13e-4c97-bff8-56a377f70ebe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 134.05952380952388,
      "responseMin": 10,
      "responseMax": 14413,
      "responseSd": 937.5045398983048,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723855150509,
      "completed": 1723855192384
    },
    "executions": [
      {
        "id": "82bf0c4e-b07c-4017-a0de-4eafe6ccf54d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4a6cb69d-7c49-4c64-bd34-6f52528e48d2",
          "httpRequestId": "3ab36f1e-58e9-4f96-8b3e-b01b6508d36e"
        },
        "item": {
          "id": "82bf0c4e-b07c-4017-a0de-4eafe6ccf54d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "19461013-e17c-493d-9693-ae53922e61b1",
          "status": "OK",
          "code": 200,
          "responseTime": 132,
          "responseSize": 0
        }
      },
      {
        "id": "56d3afd9-21d0-42de-9042-fe79c2c335a4",
        "cursor": {
          "ref": "fe0c4245-86f9-44d9-b90c-1ce34c6d2d02",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e0b9086a-b91a-45a0-94cb-8d8dacd5d1d3"
        },
        "item": {
          "id": "56d3afd9-21d0-42de-9042-fe79c2c335a4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "53d820e8-8fdd-4f71-898f-ba4ab176e8ad",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "a1def32b-34e9-4226-a4cd-cd7cfb0d0327",
        "cursor": {
          "ref": "b19f785f-f95f-4f79-9d44-6acb379a7f4d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ff24a65b-13d7-43c0-8cde-1f8717d86bba"
        },
        "item": {
          "id": "a1def32b-34e9-4226-a4cd-cd7cfb0d0327",
          "name": "did_json"
        },
        "response": {
          "id": "7275350d-1b21-4810-a51a-49575370d48d",
          "status": "OK",
          "code": 200,
          "responseTime": 421,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d232a7-11d1-403f-9a57-68ec332ad28a",
        "cursor": {
          "ref": "8fac0f9b-5eb4-4d85-8b50-a3c4d58b3cd9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "43728596-e9f6-4519-8f9c-5df3e6c9ddc6"
        },
        "item": {
          "id": "16d232a7-11d1-403f-9a57-68ec332ad28a",
          "name": "did:invalid"
        },
        "response": {
          "id": "06c6e075-b8e4-4c24-8194-e0a91e3a8d96",
          "status": "Not Found",
          "code": 404,
          "responseTime": 554,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d232a7-11d1-403f-9a57-68ec332ad28a",
        "cursor": {
          "ref": "8fac0f9b-5eb4-4d85-8b50-a3c4d58b3cd9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "43728596-e9f6-4519-8f9c-5df3e6c9ddc6"
        },
        "item": {
          "id": "16d232a7-11d1-403f-9a57-68ec332ad28a",
          "name": "did:invalid"
        },
        "response": {
          "id": "06c6e075-b8e4-4c24-8194-e0a91e3a8d96",
          "status": "Not Found",
          "code": 404,
          "responseTime": 554,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7aa1a1-0116-4c88-a382-c2f82c256c59",
        "cursor": {
          "ref": "ee114fed-bdef-4110-a0c7-e03ecdab93d4",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ab0d35b5-529a-44e1-af90-804c88429701"
        },
        "item": {
          "id": "cd7aa1a1-0116-4c88-a382-c2f82c256c59",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "26fb6ead-eaaf-4957-9f32-b82385fb8ae2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3937d35e-5aaf-429c-81cc-e929dd50fb46",
        "cursor": {
          "ref": "8ba0b443-acf5-42d9-9f58-17afe3e80993",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "52519d84-11db-4090-8714-ed676fd3b0f2"
        },
        "item": {
          "id": "3937d35e-5aaf-429c-81cc-e929dd50fb46",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "551b38ba-dcd2-4770-a8b7-4f140fe0a772",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1e0a18-391a-4c8f-8ef1-1d6f2c568916",
        "cursor": {
          "ref": "2952bb6c-5a10-4c8b-9944-dc9ea0db1588",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "370b140a-8659-4ec8-95b8-9b0597eaff53"
        },
        "item": {
          "id": "5d1e0a18-391a-4c8f-8ef1-1d6f2c568916",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "30b4bf83-3266-4186-8689-2f829ad133dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe32920-e2ce-4271-9698-c0e04ba4a8b6",
        "cursor": {
          "ref": "c0b003e3-afd1-4228-80db-d058870ccc5f",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "488b30f4-aa63-433d-a718-7eb85a98a079"
        },
        "item": {
          "id": "3fe32920-e2ce-4271-9698-c0e04ba4a8b6",
          "name": "identifiers"
        },
        "response": {
          "id": "4fb4a1f1-8b9b-4918-a21c-d3a20151f569",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1eb03e-4dbb-44db-aa9f-07bb4cbb0d84",
        "cursor": {
          "ref": "59d74590-4da6-4b7f-8de7-0694ab6af41a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5d818a4e-54fc-4c98-93de-4683413def87"
        },
        "item": {
          "id": "bb1eb03e-4dbb-44db-aa9f-07bb4cbb0d84",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c5fce7a0-a527-4077-a70b-d81eb24b983a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fd06af-6c93-497e-96ba-9efac413524e",
        "cursor": {
          "ref": "15048948-c43b-47d7-bcfe-f22c71d9e290",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "81241d3c-bae1-480e-a746-e4a0b70bd6c7"
        },
        "item": {
          "id": "31fd06af-6c93-497e-96ba-9efac413524e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "781d49f1-bfb9-4da8-8da8-d397b9dcb1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb1d3f7-8f90-491d-8080-4f31f40b534e",
        "cursor": {
          "ref": "322cc5f6-59e0-473f-8f0c-2126f8a7be8e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "690e0521-f2b8-42ba-802a-ed1913de3cc7"
        },
        "item": {
          "id": "4cb1d3f7-8f90-491d-8080-4f31f40b534e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4ab18ff4-b300-4d5a-a8c3-4abeb39cb998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad01e1a-b8ea-4e28-a82a-e93d0ba810ec",
        "cursor": {
          "ref": "59be6d7c-f39a-416e-bca8-4682411c1f8a",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b9cdf4f6-d308-405e-bfd7-07c24adeb42d"
        },
        "item": {
          "id": "1ad01e1a-b8ea-4e28-a82a-e93d0ba810ec",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "df75102a-17a2-4e5f-b763-d9e71b2c40f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bb468e-1143-4b03-a7b5-27d82fda6ddf",
        "cursor": {
          "ref": "6b4ce3ee-98b0-46a7-8589-e7fa1c84ef93",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "58393579-f7dd-46cf-a2ff-4b0e7b30be39"
        },
        "item": {
          "id": "17bb468e-1143-4b03-a7b5-27d82fda6ddf",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e28204cc-f648-4e74-bc62-9bb6798fab46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfff19dc-5b20-4bcc-b1cd-20e8509ec101",
        "cursor": {
          "ref": "d4f65e18-75b7-4372-873a-d88c6d3b47b0",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ce331ca7-b1f1-4f3e-a977-064e595cf6b8"
        },
        "item": {
          "id": "dfff19dc-5b20-4bcc-b1cd-20e8509ec101",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c1b3a1a8-bcd1-4e9c-8089-47f3d8919245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18096cea-1a30-464f-84c2-a303ba6b86a1",
        "cursor": {
          "ref": "84410e41-47d0-4342-8a81-c3f1894b8e94",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "50d17a16-ced3-4c97-9f15-6a73e6733078"
        },
        "item": {
          "id": "18096cea-1a30-464f-84c2-a303ba6b86a1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "289e6dcc-ca80-4bb6-a769-03c0f40ca04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa8fabd-30d7-4346-8486-558fc3216580",
        "cursor": {
          "ref": "6a10704d-4b8d-48f4-a638-d2993a3dd058",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "53e9fc5a-0e96-49ea-b78a-832712c54d23"
        },
        "item": {
          "id": "dfa8fabd-30d7-4346-8486-558fc3216580",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "169cced6-645d-4dec-b8dd-61ffbcf2a244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4c7acc-7589-4f7e-a61b-d94a9a482d31",
        "cursor": {
          "ref": "ade224d6-72ca-448d-a0a9-6a746ae3ce94",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "16d67bf0-462e-480b-8152-ede9e0e7cd3a"
        },
        "item": {
          "id": "7e4c7acc-7589-4f7e-a61b-d94a9a482d31",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "480c1fc0-69c0-405a-ae86-677406bcc900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e8370c-0212-4084-9884-dcc27d86d8ef",
        "cursor": {
          "ref": "c05ec82f-5c7e-4146-8bcd-459eee716d99",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "da7a53c6-9784-4b97-84ce-37bf3a5b39ef"
        },
        "item": {
          "id": "29e8370c-0212-4084-9884-dcc27d86d8ef",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "eb0c1192-3184-4200-82ce-b1d86b332ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76644c7-ef6a-4cc6-ba1f-5c6ff6237987",
        "cursor": {
          "ref": "c5ae9a97-102b-48ea-9a51-f3a53c0f20df",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "706becc4-4201-42ee-b8d3-5e241917789d"
        },
        "item": {
          "id": "b76644c7-ef6a-4cc6-ba1f-5c6ff6237987",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1d26e986-0335-493a-9583-1a2e8db5f4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95260090-8a8d-4057-a7cc-38e371db0393",
        "cursor": {
          "ref": "ba342e9c-8b9a-4c40-856a-079e2351fb43",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "02fa899c-3eba-4b1d-9dde-789b4d32814c"
        },
        "item": {
          "id": "95260090-8a8d-4057-a7cc-38e371db0393",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3657d8a8-7441-43e2-a88f-87aa24be8866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cc15e0-e90f-469d-8f13-09e290fa583a",
        "cursor": {
          "ref": "8bf8896f-4c6e-452d-96ef-01f15e8fbb64",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d5ac00ef-3209-43d2-ba72-b281896db698"
        },
        "item": {
          "id": "57cc15e0-e90f-469d-8f13-09e290fa583a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fa4b44a4-a40a-444f-80d7-5c1c341738a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323bbc4e-05bf-421d-bc12-81d9cdf51e53",
        "cursor": {
          "ref": "54c50a51-2b56-45a4-a6ce-bbb0a219fdc7",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5635fee3-3d4f-437b-ad4b-4dc5ff1a5ade"
        },
        "item": {
          "id": "323bbc4e-05bf-421d-bc12-81d9cdf51e53",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "efa33962-a601-425c-a1cd-203f0da7b544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6c9060-cf14-4675-8c69-1232023f73b6",
        "cursor": {
          "ref": "c5623ea5-7420-4f02-ac00-b292095d067f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f196e8d8-df43-47aa-a833-f485116f3001"
        },
        "item": {
          "id": "8b6c9060-cf14-4675-8c69-1232023f73b6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9a47e267-1845-48ef-8ad8-e9a476028a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a927a1e-f309-44d3-990e-f6a8594bb72d",
        "cursor": {
          "ref": "2d3ec648-b36a-43a8-9090-a0b977a171ab",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d6de49f6-2e77-4000-991a-7b86aaf912c7"
        },
        "item": {
          "id": "0a927a1e-f309-44d3-990e-f6a8594bb72d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "52c39d94-2f0f-4a0e-9abb-e68b9083d5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9740e89f-1512-4368-86c9-09e4c8bc24be",
        "cursor": {
          "ref": "a7d6b8c3-8ce9-4b0e-8b34-259570d2c4bc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fe8810bd-508e-4c33-862c-522f3cc1a5d6"
        },
        "item": {
          "id": "9740e89f-1512-4368-86c9-09e4c8bc24be",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "11148b24-d0da-4b30-8050-8d6998cac6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ddc34d-334d-4a69-a397-4be668de80e3",
        "cursor": {
          "ref": "8d83a1b9-684a-4722-8d6e-9a94e69fcc62",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5862da1d-b5c6-4d59-86f7-934ea775d02c"
        },
        "item": {
          "id": "11ddc34d-334d-4a69-a397-4be668de80e3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a5d36cef-6468-4aef-8c6e-7dd41b6b951b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d1ef5c-1a75-4276-9749-14aeb92df09a",
        "cursor": {
          "ref": "ce9aa68c-e4df-4d43-92ce-4e6c5ae32960",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3c009b50-7fc9-4a31-8a6d-ecbd2b7cd30a"
        },
        "item": {
          "id": "a2d1ef5c-1a75-4276-9749-14aeb92df09a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "92a88dca-2d2c-4a17-868a-e6653e617e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19a4104-e173-4841-bcd5-f0c63b5266b7",
        "cursor": {
          "ref": "26218b66-2398-409a-b7dd-d00a58e67024",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a08d87c3-3b15-4206-870f-0be5dacdca05"
        },
        "item": {
          "id": "b19a4104-e173-4841-bcd5-f0c63b5266b7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6848ec40-53b2-4324-bf38-a31866ca1548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4405ba46-ce08-4ef3-b3c4-a1e15cf067d1",
        "cursor": {
          "ref": "3a30e781-5629-46d3-b686-57083e3b1bf5",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8dc5a2e8-6292-4763-abf9-03b6cf7aef04"
        },
        "item": {
          "id": "4405ba46-ce08-4ef3-b3c4-a1e15cf067d1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f35cd3d1-118f-4897-ad61-0ac2ab24ca21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded5a242-0e07-46c4-864e-7f053bf3a113",
        "cursor": {
          "ref": "f552b0ce-e217-4801-b429-3d77918f62d2",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5a832427-c819-4e26-a7ec-544138bd1250"
        },
        "item": {
          "id": "ded5a242-0e07-46c4-864e-7f053bf3a113",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8d922840-74a7-47d7-aebc-7eb16f822781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e21b64-9b8e-4963-a748-e0ea6c547d61",
        "cursor": {
          "ref": "2461a919-b594-4777-9891-d1d947f214dc",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d9a5f8ec-8da3-4d92-8a41-b2e962b52423"
        },
        "item": {
          "id": "27e21b64-9b8e-4963-a748-e0ea6c547d61",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "30568686-3903-41f2-8135-1998adab3a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e9d99b-b7b6-4d44-8d5e-3e8b48da48ca",
        "cursor": {
          "ref": "1f013471-aa1a-45bc-b35d-8b268bf93a09",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b1169183-eaa2-4862-baae-6c2aef237165"
        },
        "item": {
          "id": "92e9d99b-b7b6-4d44-8d5e-3e8b48da48ca",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "83a24be1-1da6-4d01-b353-fe9036cb606e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2737b7e1-3251-4a48-8372-f2227de4f352",
        "cursor": {
          "ref": "b9b98d56-cd2b-4f11-97fb-1da75997aa95",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5f657090-a8ba-4302-bd4b-f50bc27ed2a8"
        },
        "item": {
          "id": "2737b7e1-3251-4a48-8372-f2227de4f352",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f903f1ca-8aa4-49f3-b12e-57632712df1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01fdf12-3220-41eb-9152-47b098b3b555",
        "cursor": {
          "ref": "b03446e8-5453-42d2-a921-5daf9d5c3c7c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c8827947-83b4-4a69-ac68-d8773fb10bf0"
        },
        "item": {
          "id": "b01fdf12-3220-41eb-9152-47b098b3b555",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "066491f3-98af-4056-80f0-894a485a79b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbcaa11-da58-47a1-9047-c37247185679",
        "cursor": {
          "ref": "86f3a794-8eb7-4e5f-9e19-5874559ed632",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "66387af4-6550-4806-b164-a5170735dbe5"
        },
        "item": {
          "id": "8fbcaa11-da58-47a1-9047-c37247185679",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2fea52e9-fa43-40c3-966a-126b5c026b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb2eab1-c26d-495e-a230-cc069b926f8b",
        "cursor": {
          "ref": "5aea9440-ced5-4045-8758-004b2b8981c1",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0a46bdd2-9f1d-4d05-bfd7-4d0668d092b4"
        },
        "item": {
          "id": "ecb2eab1-c26d-495e-a230-cc069b926f8b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "274e5885-4c2c-48fb-96fd-0b8f0d59c3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c496e1c-3d6b-4d1a-afed-a0813968747c",
        "cursor": {
          "ref": "3bc5965b-769c-49d9-a506-ff2111168787",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "49bbbb40-f4c0-47cc-a344-d559b89c6e56"
        },
        "item": {
          "id": "3c496e1c-3d6b-4d1a-afed-a0813968747c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6a381cd9-d9fe-4018-ae29-f1d830b41086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492c5692-24f9-448f-b6ff-e850b840f137",
        "cursor": {
          "ref": "af7d59cc-c574-471d-90c1-be5070d70f1a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "63d25e64-beb3-4138-918c-59ff518d7334"
        },
        "item": {
          "id": "492c5692-24f9-448f-b6ff-e850b840f137",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7a76ebbe-c634-45bf-aac1-1fd83866bc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e37c17-78eb-404b-ac58-531d469de678",
        "cursor": {
          "ref": "09c2bb02-0eea-4179-892c-db42ea7dc9d2",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e3386e19-2cb6-415c-8d58-70ebec014222"
        },
        "item": {
          "id": "19e37c17-78eb-404b-ac58-531d469de678",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0c51cea1-55a6-4748-9407-5d581aef55cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecc2952-28a2-43b8-b6d2-6ec876fc96ba",
        "cursor": {
          "ref": "079ff301-3c8a-4430-acb7-e98bb8d215a6",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5c40f391-b272-4162-a24c-a2bd3046f8d5"
        },
        "item": {
          "id": "aecc2952-28a2-43b8-b6d2-6ec876fc96ba",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2d17c493-c80a-4696-bbce-a512a8bbea0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b1d359-29ab-4e0f-9b22-c0de95733004",
        "cursor": {
          "ref": "833da2b5-fcdb-4be0-8488-020ce30b2919",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a12cb6ae-a8e5-41bd-927f-f9cad8039bcf"
        },
        "item": {
          "id": "e8b1d359-29ab-4e0f-9b22-c0de95733004",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "608216c1-c8fb-4ff2-b025-0d790c7219f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7f917c-14cd-4e75-8511-0e0801792a54",
        "cursor": {
          "ref": "27e5ca40-f026-42b0-aafa-1e68e67940db",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6ac956e2-6f59-4588-aa68-426ffabec3f9"
        },
        "item": {
          "id": "cd7f917c-14cd-4e75-8511-0e0801792a54",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8e007485-c9b5-4fdb-bd78-2d579dc6e711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a4b218-7628-4268-be52-40a864639439",
        "cursor": {
          "ref": "5a24fdf7-9d4d-4765-a3fb-74b05d50c2fe",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c6732c97-70a3-49c3-812f-8f49ab4d44e7"
        },
        "item": {
          "id": "e9a4b218-7628-4268-be52-40a864639439",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2013dc36-4038-4d24-8e6a-805612f9f93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b5d644-d62a-4ccc-b388-6436b58e7207",
        "cursor": {
          "ref": "80e0f5b5-b6b3-44d0-8cb4-5e80d25c6c1e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "dccc9e33-7bff-476f-aeb9-3efaea475e96"
        },
        "item": {
          "id": "62b5d644-d62a-4ccc-b388-6436b58e7207",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d9c2d00d-6296-4305-87fe-42f35ea5420a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3729bd5a-fcfd-40ef-b5fa-434865d97600",
        "cursor": {
          "ref": "a6b9633e-dc1c-4c38-9a04-dcdca029a923",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fc78d64d-be84-4060-a255-d16f8a565cc5"
        },
        "item": {
          "id": "3729bd5a-fcfd-40ef-b5fa-434865d97600",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "812c1f2c-8383-4a96-9c07-26cc0ee1cc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c04b076-16a5-490b-b0a5-353ba72b6320",
        "cursor": {
          "ref": "808cb88d-cdae-4b91-b466-b25987d2ac8c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c5d4f0ff-e4cf-44ea-a38d-4cc1bc34f91b"
        },
        "item": {
          "id": "4c04b076-16a5-490b-b0a5-353ba72b6320",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8c47f42f-95f3-4358-bc47-41dcca2c2299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d948a38f-1cc3-4a80-9909-bdb2115fbb3d",
        "cursor": {
          "ref": "e0843ade-2e60-4698-89ed-abf980840348",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8381c048-9214-421c-995b-247bd462181b"
        },
        "item": {
          "id": "d948a38f-1cc3-4a80-9909-bdb2115fbb3d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "58015d20-938a-40c5-9958-0dbba1d63dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7622130-404d-4d44-aa1b-84c9e04d87c0",
        "cursor": {
          "ref": "b2d8809c-8318-4bf0-a19f-df936e3fc977",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "216e77cd-5229-48c8-81b7-8c560606bb4b"
        },
        "item": {
          "id": "f7622130-404d-4d44-aa1b-84c9e04d87c0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "06b788be-d8c6-4366-b560-6e24d4f78440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70eb92a-d3c5-4365-9ecd-14a54aa76cec",
        "cursor": {
          "ref": "8cda0919-19b4-4302-a5a5-aa70948a4d63",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b30952fd-916e-4dba-b18d-31efa42b5e8b"
        },
        "item": {
          "id": "a70eb92a-d3c5-4365-9ecd-14a54aa76cec",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "330fab3f-a829-4d2a-b55a-580b1213ea0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f92449c-9031-4563-8608-847e237d57c8",
        "cursor": {
          "ref": "43773240-14ad-4f1b-9a25-3f04e19bfc70",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bf2e0c8f-7a6b-49c5-af78-61260b880f6b"
        },
        "item": {
          "id": "4f92449c-9031-4563-8608-847e237d57c8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8f7d43f4-9454-4940-b1a4-c25c684e23e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ee6c18-e7e4-4124-ac05-c617754a06d4",
        "cursor": {
          "ref": "2717a226-fa8d-4c0c-b98f-6e8a7a064561",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6bc1176e-3579-4769-a347-c4bd587ea5e3"
        },
        "item": {
          "id": "27ee6c18-e7e4-4124-ac05-c617754a06d4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ef17150f-c7cd-464a-a163-0d9af860fe2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afa5b60-fa74-4c50-9297-156f25ccd4b9",
        "cursor": {
          "ref": "e0cf85cc-5c5f-44ac-b668-0059fc5fec0c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2a94fd5a-8299-41ec-930a-e82fec6f5971"
        },
        "item": {
          "id": "7afa5b60-fa74-4c50-9297-156f25ccd4b9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f5b6a82a-7293-4129-8e94-10ac5f028e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdef1db-486d-48d5-bcf6-efc6931341eb",
        "cursor": {
          "ref": "0bdc0d06-db28-45bf-a60b-9c75a44420af",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "743b4f80-2ccf-4e1f-acd7-93dac1fc774c"
        },
        "item": {
          "id": "5fdef1db-486d-48d5-bcf6-efc6931341eb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d7317e48-43ad-4657-b2ad-ad20dc88c63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffa88ac-de5c-4ad4-816b-b7683b032dd5",
        "cursor": {
          "ref": "20516c8e-b931-42bc-a0a7-c48981ea6536",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ec6c9a31-5581-4af4-b303-92e8f503a61a"
        },
        "item": {
          "id": "fffa88ac-de5c-4ad4-816b-b7683b032dd5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7c61a16b-916b-41b8-8872-3d4b722e37f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581545ac-780f-4721-87e4-ad51e0f6419d",
        "cursor": {
          "ref": "97958a39-5142-40fa-81f9-083e895f0271",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f6243974-115e-495b-acc7-3eed61b8011f"
        },
        "item": {
          "id": "581545ac-780f-4721-87e4-ad51e0f6419d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "db5f5709-a9bf-4dd4-9407-865284b42f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4670d1da-47c6-4c3d-b55a-ff0ae402207a",
        "cursor": {
          "ref": "d83f456f-51ec-429a-aa8d-9ba1c14f4453",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ed4895c5-6fdb-457c-886f-fd686d3d29fd"
        },
        "item": {
          "id": "4670d1da-47c6-4c3d-b55a-ff0ae402207a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a57c917a-34b3-46d7-8c16-86badecb097d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46491c01-61e7-401d-acf9-c286b03aca0e",
        "cursor": {
          "ref": "5cc71cd0-7034-49b0-a29a-fc9b85597c9b",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "178449e4-2f80-43f8-9957-45b2c39c4aca"
        },
        "item": {
          "id": "46491c01-61e7-401d-acf9-c286b03aca0e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "18f377c0-1723-4b50-94aa-9b9084f5e083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2150c8fd-7c8a-4156-8b4e-7667ec25dbd8",
        "cursor": {
          "ref": "a6943c83-5848-4f16-a3d5-30f8538a6b92",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "51982a3e-e666-4380-9558-233b6ab49de8"
        },
        "item": {
          "id": "2150c8fd-7c8a-4156-8b4e-7667ec25dbd8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bb433c1c-6880-4793-afdd-9d8160f47a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6afdad7-4fb6-4a83-85c4-28d2b2423ee6",
        "cursor": {
          "ref": "fb192a8d-df35-4a84-ab12-2bdc17b82ade",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "78ba1d1e-9170-4ef4-b2f8-0cd439fbab1d"
        },
        "item": {
          "id": "c6afdad7-4fb6-4a83-85c4-28d2b2423ee6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6e626f5f-d844-480b-a181-19e18097ffca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118e9782-c926-429b-995f-8d79e28f571d",
        "cursor": {
          "ref": "8d03bbb9-94ea-4218-ba5d-c2cb8dc12b51",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a259d2bc-c6e2-46c6-83cb-664219815c99"
        },
        "item": {
          "id": "118e9782-c926-429b-995f-8d79e28f571d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "106ee119-4367-43e3-8f1e-881bdb00d283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7baf9887-c233-4122-8bb3-4f8dbd7feaf0",
        "cursor": {
          "ref": "f2e32d42-a402-457a-a12e-4d42db01aefd",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7bcfcacd-ca51-4066-87e9-3fc8fcf8f20c"
        },
        "item": {
          "id": "7baf9887-c233-4122-8bb3-4f8dbd7feaf0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "33b139d0-5ef5-4897-ac6d-fa7943e47d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db9daf7-1432-4d0e-8f2e-125bb4ba1fdc",
        "cursor": {
          "ref": "3980a26b-4dc7-4d2b-9f4b-ca6a385461cd",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fe0bc9e1-faf0-45d1-a232-859022939872"
        },
        "item": {
          "id": "0db9daf7-1432-4d0e-8f2e-125bb4ba1fdc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dc08beac-769a-4e4b-9512-0504f0260fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b38c743-a979-4396-bd19-b96b8eff59c5",
        "cursor": {
          "ref": "b1a37182-7c3e-40b5-aaae-333df938b7e3",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "75cf70a3-47ba-4aad-8934-d7448be534ab"
        },
        "item": {
          "id": "4b38c743-a979-4396-bd19-b96b8eff59c5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d1932c4c-ae91-4d97-ab3a-016fd6b80837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53034fc0-64e2-4702-b964-b1cf4fb8dc7c",
        "cursor": {
          "ref": "89258bbb-585a-46d9-99ee-b7e8885aa678",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "50ab822c-4ab8-4d49-b5bf-3eea3bbdedd2"
        },
        "item": {
          "id": "53034fc0-64e2-4702-b964-b1cf4fb8dc7c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dd27024e-9440-4cbb-9666-efa68a2ba958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46f7afa-5594-425e-8eed-c6fbf8f203be",
        "cursor": {
          "ref": "b9fe1875-8b3f-4fa0-b04a-fa6fb36b415e",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "00f5881f-6f9b-4e46-a997-3ae72797aadc"
        },
        "item": {
          "id": "f46f7afa-5594-425e-8eed-c6fbf8f203be",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f85aca62-aa3f-4338-b7ea-da8f62b6758d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8df479-b6a5-4207-97ef-5a60fc9ec10d",
        "cursor": {
          "ref": "e6bc6a59-2d81-47a4-8361-b85adb51fbbe",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3adb1100-723d-48ef-acde-ac2b9cdebfab"
        },
        "item": {
          "id": "ad8df479-b6a5-4207-97ef-5a60fc9ec10d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a9a7cd2f-98f9-4d1f-8b8b-0ceb721a7076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a157a8-328c-4c45-8530-20603b646957",
        "cursor": {
          "ref": "bfb7bc9c-5e51-46d1-983d-661e9da5dd5b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "35b3d541-8ec4-43a9-a6e9-57b3f62cba0d"
        },
        "item": {
          "id": "b5a157a8-328c-4c45-8530-20603b646957",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6a393dfb-5cb1-49f3-a1a4-8329496c300c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d80924-5cf2-4214-be9c-c4031e3f4e26",
        "cursor": {
          "ref": "5d5d2866-7532-499a-b04d-8fb234a0b634",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "01eb94f2-a1d8-47c1-b639-2b82cdd7ce5c"
        },
        "item": {
          "id": "03d80924-5cf2-4214-be9c-c4031e3f4e26",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bcf6b3b6-6b7d-4768-a3d2-cc04d9de63ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9e9f4b-ee3d-4086-9e26-42c850f6ace7",
        "cursor": {
          "ref": "04d11937-0742-4387-9177-53596f634ef9",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "694fbf18-62bf-4c7d-a95c-695b61323be6"
        },
        "item": {
          "id": "6c9e9f4b-ee3d-4086-9e26-42c850f6ace7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6388a1be-ac4d-4abc-97e6-257c92fcec01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30712b2-0445-46f1-b0e9-3c97e7a3fd4a",
        "cursor": {
          "ref": "7f2b253f-7f7d-4e72-aa0e-aa57edd0afa0",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "34aabce1-6e9f-4a8c-a178-be63f6396e5a"
        },
        "item": {
          "id": "b30712b2-0445-46f1-b0e9-3c97e7a3fd4a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3d55e6d0-723b-4a19-8902-2e7d6777d8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fedf983-1826-4fe8-a40b-0032a95e18ca",
        "cursor": {
          "ref": "76a8e9dd-ac2d-4e59-a598-33eaacd196a6",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3008464e-f6c5-4378-8be3-de0317055150"
        },
        "item": {
          "id": "0fedf983-1826-4fe8-a40b-0032a95e18ca",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7e0809ea-07cf-4665-ab7d-bdf38fcdde14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5f249b-5ad7-4f69-b141-d18bf127deda",
        "cursor": {
          "ref": "c4388fbf-3b87-4656-ba6d-9559aaa1894c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "73a129a8-777d-4a24-a307-3af7166024f8"
        },
        "item": {
          "id": "3c5f249b-5ad7-4f69-b141-d18bf127deda",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b9c353da-e0d3-4dd0-ba7d-9cf73626bbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ca8d36-1c92-4f27-af06-f6ea5086daea",
        "cursor": {
          "ref": "bb68859a-4abb-4af8-b3ab-16c3e9c9f410",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c38bbca5-6220-4988-b418-bdcf92876faa"
        },
        "item": {
          "id": "02ca8d36-1c92-4f27-af06-f6ea5086daea",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cbbbb358-312a-40a4-9b60-f394eecc2986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350ab832-5efd-417f-9ce5-c055ca85c897",
        "cursor": {
          "ref": "f6e7a039-7ab0-4fd1-af83-c3b1d5e3e74b",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "184cf6a7-533c-4aa9-b4a1-04efe3de37df"
        },
        "item": {
          "id": "350ab832-5efd-417f-9ce5-c055ca85c897",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bbcf4da1-1a40-4c21-b7a9-797fff4f43f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315a1763-b341-4ceb-a6a8-26659710ee67",
        "cursor": {
          "ref": "be04ec2f-7a93-466b-817c-ce43d9f154be",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "90356be3-8238-40f4-ad78-22281111fca7"
        },
        "item": {
          "id": "315a1763-b341-4ceb-a6a8-26659710ee67",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1b3111d8-80a4-4980-80ad-c8e49ab66a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e22c2c3-44af-4a90-b785-bc2d41ff7bb2",
        "cursor": {
          "ref": "30510666-a0c1-455f-a580-d812356f05ee",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1ffc9e01-5167-404a-b2eb-c20f1d8701a5"
        },
        "item": {
          "id": "4e22c2c3-44af-4a90-b785-bc2d41ff7bb2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "42473677-7fd9-4b4a-8b3f-f39c9269be0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4da3a7a-8ae3-4427-9915-caf309f92367",
        "cursor": {
          "ref": "193d5f8b-f7ca-408b-a24f-b4c4a204cc79",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a91da9d8-0e8e-4a47-b493-feb715185d0c"
        },
        "item": {
          "id": "a4da3a7a-8ae3-4427-9915-caf309f92367",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d6f98f84-e132-407a-b63f-1cd4a3fa4afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8324d9-a333-4600-aeaf-9b2478663ad3",
        "cursor": {
          "ref": "6e052065-62e8-4091-a88c-4b00a7cac361",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "03c273b5-1a47-4c62-9be0-173b0a18963b"
        },
        "item": {
          "id": "8e8324d9-a333-4600-aeaf-9b2478663ad3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d9a74e96-97ab-487c-9c1e-c05061db4d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bf919d-eff3-4e50-aefb-7f5a59f6f206",
        "cursor": {
          "ref": "b15ac690-b107-4ee3-ac48-4c02235e5491",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "388d7c2a-61bf-4239-9ea8-111e7b5fe3f9"
        },
        "item": {
          "id": "f8bf919d-eff3-4e50-aefb-7f5a59f6f206",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2ceeb44a-ca0d-4f0c-b84a-f2c5835ba1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cacaeb-93c8-49cc-8e5c-5b480f7cdbc5",
        "cursor": {
          "ref": "756fca0f-b4d8-483c-b3e3-fecb2d0d306b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "54108c07-eda2-4525-8e68-8d8a8691cc60"
        },
        "item": {
          "id": "92cacaeb-93c8-49cc-8e5c-5b480f7cdbc5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6bed25a2-d921-4b26-8629-fa3cbdba8e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0544448a-c2fa-48c8-a29d-c85711e7367e",
        "cursor": {
          "ref": "f73a4ca1-cfd8-4aae-8335-cc1437c93f27",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cea4c930-6230-46f1-a862-1ef526d8319a"
        },
        "item": {
          "id": "0544448a-c2fa-48c8-a29d-c85711e7367e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "53c4c89b-edf2-41b5-a15f-f9e9429c17e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca20d3c-0b7f-4fe4-b9ac-7742cd03f751",
        "cursor": {
          "ref": "51d8c2a9-9bca-4c12-8454-b4c0ee2c9116",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "80a7c4d8-bac7-4ed9-97d2-8cde4c00bd24"
        },
        "item": {
          "id": "cca20d3c-0b7f-4fe4-b9ac-7742cd03f751",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "39d38630-aa80-4c67-9a96-59d6b4209ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4c7d3d-9479-480c-9fb3-4667cf5d90c6",
        "cursor": {
          "ref": "574f4525-4a55-413b-a2e7-0ba0ceee8871",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "83739363-00ac-4296-a987-01bdb66f3422"
        },
        "item": {
          "id": "ea4c7d3d-9479-480c-9fb3-4667cf5d90c6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "132364f2-aa87-4344-97c4-086b9456f0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1c094e-df86-446e-872c-5b7e7d3463d8",
        "cursor": {
          "ref": "ba7f846d-1275-48ea-9b0c-b64a355afc97",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "421a1e07-f470-4ef1-81cf-6a5884acb974"
        },
        "item": {
          "id": "4b1c094e-df86-446e-872c-5b7e7d3463d8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2552086f-93c4-4458-9343-cde62523db53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62202285-455b-4f1d-8c53-58271b6635a9",
        "cursor": {
          "ref": "cf65cf1b-1a6a-4112-8b58-2e68de178710",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "80c710c1-277c-4542-a6bb-c923a24a5ff0"
        },
        "item": {
          "id": "62202285-455b-4f1d-8c53-58271b6635a9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c21f1261-ddcb-4f35-a70c-bca4ccc262f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22b59bf-89a7-4ec3-b953-1d0c8dc3a176",
        "cursor": {
          "ref": "404a349b-e958-4c01-b764-dcb11b66f749",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "34bf5a54-06bb-41a6-a5d2-109bb2b86098"
        },
        "item": {
          "id": "b22b59bf-89a7-4ec3-b953-1d0c8dc3a176",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "31d03904-94c9-46b8-be68-b92bc2741a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c0f9bf-5ac1-4256-aa02-0aeb9db5dec4",
        "cursor": {
          "ref": "3e2e6f8e-1dbf-43bf-910f-39026d96153e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "444655f4-cca7-4487-8d9f-a97bae5fa830"
        },
        "item": {
          "id": "46c0f9bf-5ac1-4256-aa02-0aeb9db5dec4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "33a8535f-9085-4fd9-a6cc-7c81d8de3b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef20e5f8-c6b8-495e-b4fe-2e9e3af988a7",
        "cursor": {
          "ref": "f34a8341-68ef-4afd-b76c-947ffcbdbf0b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "56a47db6-a4ee-42f8-b132-44f3ddfd6a5f"
        },
        "item": {
          "id": "ef20e5f8-c6b8-495e-b4fe-2e9e3af988a7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a8e864e5-3935-4b05-9b6a-e4e7d7ea0637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d941782b-88e0-441a-9449-8ff1bf171042",
        "cursor": {
          "ref": "74a9659f-ea90-4c77-8693-1e9ec009be79",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "496188d4-024b-4952-9f10-1df367b8250c"
        },
        "item": {
          "id": "d941782b-88e0-441a-9449-8ff1bf171042",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cbd1beef-b2ad-4422-9f7d-3e192e03aac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e975789b-e826-44f7-8e8f-c3c796c09d30",
        "cursor": {
          "ref": "ebe95bc5-780c-4941-8d82-f6a21084b4af",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f7e18bea-c93b-4e68-9189-b3b5da221d26"
        },
        "item": {
          "id": "e975789b-e826-44f7-8e8f-c3c796c09d30",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4f84fef8-4f86-4deb-9e83-8ff0bed612fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556601a6-92cc-4b7e-b4b3-473f22160b5e",
        "cursor": {
          "ref": "10b9f6fa-7a58-43b3-9bb0-a89e3e81604c",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "402ba2f1-b00e-48cd-8b72-8bad479683a1"
        },
        "item": {
          "id": "556601a6-92cc-4b7e-b4b3-473f22160b5e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bea2bc22-83f6-405a-9a02-e91634da62ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150ab343-640b-45b9-9497-3c9527a04e4a",
        "cursor": {
          "ref": "1b9db442-f4ef-4503-9d4b-f21468e9d646",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8ecfeb88-bf2c-4f21-ad75-b4103acbb055"
        },
        "item": {
          "id": "150ab343-640b-45b9-9497-3c9527a04e4a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "93d9d218-9419-4576-bb9a-5a3d470a75d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9eac7e8-077b-44f5-8c27-ddeea6c83b6b",
        "cursor": {
          "ref": "224f7223-95b3-4d14-98ca-74c236b7ca19",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ab9ec6dc-efdb-4a5f-95eb-06e18a77228e"
        },
        "item": {
          "id": "a9eac7e8-077b-44f5-8c27-ddeea6c83b6b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7c0bf3a0-1806-4cb3-97f0-0f3305873881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c144ace-8343-47f5-87f6-f11f4c5a734d",
        "cursor": {
          "ref": "e46323fa-150c-4d07-9b29-3dfc4e943083",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e2c87fd7-aeb2-49d4-af17-884429d1e393"
        },
        "item": {
          "id": "4c144ace-8343-47f5-87f6-f11f4c5a734d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b69091b3-79b6-4579-aaa4-65dc5d184b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b23947-7cb2-481e-a1cb-ce19d7b51a46",
        "cursor": {
          "ref": "47a8b320-0cae-4dca-8e1e-b7e05765378b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "096c3df8-6e74-4bda-9771-56252f114915"
        },
        "item": {
          "id": "a4b23947-7cb2-481e-a1cb-ce19d7b51a46",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c74f5991-b03c-49e6-b30d-b1e42ce0433b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f82c47d-ebba-4ec8-856f-202cb8cddeba",
        "cursor": {
          "ref": "7e4ce0f2-f899-4a75-b627-2b351f2c35f8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d966b791-6d75-40a0-8b74-6d21694d6e81"
        },
        "item": {
          "id": "8f82c47d-ebba-4ec8-856f-202cb8cddeba",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1f8571fa-6cbf-4b28-9a59-98011a4404e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248db1e2-fc33-4310-a5de-80e705b21a9b",
        "cursor": {
          "ref": "604bccf3-c2a7-4547-a8ca-fc25cff300d2",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fcf61756-17be-40c0-aab3-9017a8e09cee"
        },
        "item": {
          "id": "248db1e2-fc33-4310-a5de-80e705b21a9b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "614d14bb-c9d4-4631-8e80-4f02adc8947f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d0dedc-54fa-4aca-ab80-1bf73c96b7a7",
        "cursor": {
          "ref": "ee4a69f7-f57f-4b89-a657-c8d7a1abe2cc",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "feb91933-decd-4fcb-85bf-cf32e26c6221"
        },
        "item": {
          "id": "87d0dedc-54fa-4aca-ab80-1bf73c96b7a7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1c739b39-486f-43c3-8787-146121442244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c512e6a-b3b3-431a-af97-c260b71bbc41",
        "cursor": {
          "ref": "8c42047e-d6c4-4b9c-a831-87272559e2a1",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cde4a75f-877b-4a5c-879a-807d00e39a5a"
        },
        "item": {
          "id": "4c512e6a-b3b3-431a-af97-c260b71bbc41",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0f5d8fb2-24ab-4f21-b32e-a598a2c68442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a741a728-4b22-4e1c-b38d-91bd0d8a0a8f",
        "cursor": {
          "ref": "9dcff151-093d-4fa3-bbe1-048d44ca6fd6",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "aefa189e-0a29-4549-8dac-e10ecc5e3f9d"
        },
        "item": {
          "id": "a741a728-4b22-4e1c-b38d-91bd0d8a0a8f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5bb7d608-7c46-4d47-b2fb-6b0101bc44c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c41c97-cf18-46b6-aa32-0c695ff87747",
        "cursor": {
          "ref": "f1050a59-eb98-4ae3-b3dc-b2abd3da3949",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d11d0a83-f86c-4933-b92e-75f759f9b1ac"
        },
        "item": {
          "id": "86c41c97-cf18-46b6-aa32-0c695ff87747",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "95d8636d-272d-44a7-9bdf-978d17f4f63b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2220a2d-51dd-47fb-97be-b188cdd55bc2",
        "cursor": {
          "ref": "f21534a9-8a9b-465f-b483-e47dc55154ca",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0ea2da24-4970-4cdc-9f4f-0de49fa20134"
        },
        "item": {
          "id": "d2220a2d-51dd-47fb-97be-b188cdd55bc2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ab15f113-469a-45de-850d-9c50e801ad7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a322115e-7c5a-4fda-bdaf-ca9d5084d5fe",
        "cursor": {
          "ref": "2099c621-3e90-4783-b11a-cef1918054d4",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bad701e5-0f0a-4318-9efc-f55bbc829bb8"
        },
        "item": {
          "id": "a322115e-7c5a-4fda-bdaf-ca9d5084d5fe",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b1ba0dbf-8d57-47e0-ac5c-0bc910c72fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c7f636e0-66b2-40c9-91b8-ed449a665c14",
        "cursor": {
          "ref": "7a8504a5-e458-4782-a41c-6ff58cfea495",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cd5571fa-716f-4486-9710-9599aa318a5b"
        },
        "item": {
          "id": "c7f636e0-66b2-40c9-91b8-ed449a665c14",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f0e5e764-e924-4172-a13a-274c862460b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "092cf591-1c80-4609-b51d-9eafedffedc6",
        "cursor": {
          "ref": "de8e42b8-37b0-42ac-85df-e1bf726578fe",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b1083481-4624-443f-a560-0f7ae26879c8"
        },
        "item": {
          "id": "092cf591-1c80-4609-b51d-9eafedffedc6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2b0baee2-5eb5-492b-9ba1-e69244dc11d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "7164aef4-17d4-4615-9e16-2a439fa8ae14",
        "cursor": {
          "ref": "89a7d9bd-6422-491f-880b-1b0a2e2509d9",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b5dbb3af-4610-4fdd-bbeb-c389270400c3"
        },
        "item": {
          "id": "7164aef4-17d4-4615-9e16-2a439fa8ae14",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e4c1242e-4f67-44b6-8e6f-8ccb128acdc6",
          "status": "Created",
          "code": 201,
          "responseTime": 14413,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49a0d1f-1fdf-4f2a-b7a4-54b3ec65d9b5",
        "cursor": {
          "ref": "c1ea198b-eb2e-4694-9a8c-8616a5bee39c",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c6603b4a-27ea-4a13-9f89-a8088241e7dc"
        },
        "item": {
          "id": "e49a0d1f-1fdf-4f2a-b7a4-54b3ec65d9b5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7f4c9ca2-e706-405b-abda-42d1c6e8ad19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "09527bfc-b976-44eb-a956-f6d598076a55",
        "cursor": {
          "ref": "16161c7e-a436-4c25-9d43-ae4afbb00e36",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e892966e-59de-4f8e-8d83-c2a6f597e739"
        },
        "item": {
          "id": "09527bfc-b976-44eb-a956-f6d598076a55",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7174eabb-2713-499e-a6cb-40a4fdfcc2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "089d8854-31de-46fd-89dc-13ba8689dcd9",
        "cursor": {
          "ref": "040cadbf-9648-4699-ae0d-098985d7930e",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c07dcc70-a46a-4595-b0a9-d8985e58e5f2"
        },
        "item": {
          "id": "089d8854-31de-46fd-89dc-13ba8689dcd9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d4a1d3af-6821-454f-b43d-788f13f423b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f8823c-5b0a-46e7-84c9-a9afc4add9be",
        "cursor": {
          "ref": "d9a98c45-2c08-48da-83bf-bd3dff786ad2",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "10bf3ca1-a3b4-4a67-8eaf-299fcbf1e04a"
        },
        "item": {
          "id": "83f8823c-5b0a-46e7-84c9-a9afc4add9be",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e86ed3f9-2330-48bf-844c-4551e679fdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727c7128-ed76-47a8-9cf3-9e69d93e321c",
        "cursor": {
          "ref": "538bc139-002f-4ff8-a5f0-44c6e8dd1eed",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3b51d533-7851-4d3d-901c-fa0d2da1113d"
        },
        "item": {
          "id": "727c7128-ed76-47a8-9cf3-9e69d93e321c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1a43fb14-60d0-4ca1-984f-63b2783b8fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867a12e6-e8c7-44bd-9c38-ac811f7ba1e7",
        "cursor": {
          "ref": "27dab1e3-306b-4350-9ad7-976298eb3c83",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "11aba9ee-83f1-4675-b3de-e78d6b3f0ea0"
        },
        "item": {
          "id": "867a12e6-e8c7-44bd-9c38-ac811f7ba1e7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eb3e7aa4-0217-40e3-943e-7900a5569e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d41001-eca9-4030-9ebe-cacb225b2c1e",
        "cursor": {
          "ref": "74b96077-b773-4225-ab05-36cefd57260b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "addcb108-6f44-426a-8f1d-119a453e089e"
        },
        "item": {
          "id": "d3d41001-eca9-4030-9ebe-cacb225b2c1e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "abe44e6c-98eb-4a8e-b493-67fe244cc635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1e98aa-4a57-4e6e-9219-c6e1280e380d",
        "cursor": {
          "ref": "9caafac5-29be-4876-b782-21958213a69b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cbd391c2-d229-4e61-92b4-c657d4893e21"
        },
        "item": {
          "id": "6c1e98aa-4a57-4e6e-9219-c6e1280e380d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2f509a2c-ae7a-4606-b923-62be405e1c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a45e7e1-d2b9-45fe-946f-d3b7650d859c",
        "cursor": {
          "ref": "50f5cf0c-d82b-4059-8256-12b5344e152e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "725a2ae7-0efe-4110-989c-45603827c45c"
        },
        "item": {
          "id": "9a45e7e1-d2b9-45fe-946f-d3b7650d859c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ef68e931-a089-4a2d-adca-7e5d891e90df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1053d2d-cc56-411b-928d-2c86cdfa8569",
        "cursor": {
          "ref": "9f5c589f-56b9-439c-bfab-905dbe051200",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3e89467f-9c8b-407f-90a5-a29154608a05"
        },
        "item": {
          "id": "d1053d2d-cc56-411b-928d-2c86cdfa8569",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cd2c9827-e2bd-438d-8410-daac27c9a2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60837829-4de6-492d-be01-bcfd28bc3368",
        "cursor": {
          "ref": "734c6c43-f0da-4e79-a264-b969ed9075c5",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "410ab0ce-8945-4730-8aeb-65af2607c957"
        },
        "item": {
          "id": "60837829-4de6-492d-be01-bcfd28bc3368",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "09c18276-2356-4d7c-bc40-8ea8cad7a22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cfa0a3-e09a-49b1-bed7-c95d733ae198",
        "cursor": {
          "ref": "ff6dd5a6-b41b-41f3-834f-bbb83f30d9e6",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d7371297-c92a-43a9-9222-2099d5858893"
        },
        "item": {
          "id": "00cfa0a3-e09a-49b1-bed7-c95d733ae198",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "00c7a14b-5226-4c28-8bb8-d5eb2dac0357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97bcb02-c2e2-4a8a-8ab2-77b8c14af77e",
        "cursor": {
          "ref": "dbcdcd28-e61e-4e54-849b-21dfe3802fac",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "07a0f8bd-f899-47df-8b40-dad891999544"
        },
        "item": {
          "id": "b97bcb02-c2e2-4a8a-8ab2-77b8c14af77e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6ff62f87-c4cc-471d-92ae-849f5c9c29a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9423e029-6f58-4dcb-84f9-f3e1ab9ea44d",
        "cursor": {
          "ref": "de12b0af-648c-47a1-9919-5c49714a1a81",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "354b6e17-a631-41d7-afcd-8f05f9730934"
        },
        "item": {
          "id": "9423e029-6f58-4dcb-84f9-f3e1ab9ea44d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a8e2fde6-2efd-4c7d-b5a8-5af19f3c51a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9245eaf7-9f76-4e8e-b6ca-b621fdd61975",
        "cursor": {
          "ref": "594a5ad3-88fc-46fd-b0f0-2a0e9c78f7b4",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a1dc3dc9-4357-472b-9ab8-c2723a727e2d"
        },
        "item": {
          "id": "9245eaf7-9f76-4e8e-b6ca-b621fdd61975",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "561d7848-ed1c-481c-882f-93776fe7a104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b6d926-351c-4092-89a5-539b2363985b",
        "cursor": {
          "ref": "48942471-176c-4b62-9a83-429ab6bf9aa1",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b3e36671-f166-4acf-8bbb-2ea948b61979"
        },
        "item": {
          "id": "91b6d926-351c-4092-89a5-539b2363985b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9f284048-a07e-4de8-91a5-23be32c10998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f90fa3a-3ec8-448d-a847-8f0b32c00f4c",
        "cursor": {
          "ref": "8c0d3bef-d2d3-462c-996a-6e031c64b1a0",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0d6576a5-235b-4a24-9228-dbb0dd22b9cd"
        },
        "item": {
          "id": "8f90fa3a-3ec8-448d-a847-8f0b32c00f4c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6dff0660-f7da-49aa-9617-604d4729296b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7abba1-cb5f-43ca-bd86-bcc27415f2ba",
        "cursor": {
          "ref": "822b2faa-2866-4f3b-9411-04b517cb6ed3",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "133fcab8-323e-4d16-afcf-9eaf54b63856"
        },
        "item": {
          "id": "2c7abba1-cb5f-43ca-bd86-bcc27415f2ba",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c7279846-5bb8-44fa-a674-0f5d1467413f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef02ce0a-fa02-4b70-92cc-08c8e6aba376",
        "cursor": {
          "ref": "29b20614-2835-4922-8f64-b3012380d5cc",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b7d7f0d8-c722-4456-9644-29ec9e4af6b1"
        },
        "item": {
          "id": "ef02ce0a-fa02-4b70-92cc-08c8e6aba376",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bff98682-c9e1-4e41-9c7e-fb6e24e37dea",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "addbe7fe-a812-420d-9808-8b05a57dd2b8",
        "cursor": {
          "ref": "676940e6-a580-4ed7-be1c-2b232dd3039c",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "840418e2-deab-4b7e-80c6-ae0af2982ca2"
        },
        "item": {
          "id": "addbe7fe-a812-420d-9808-8b05a57dd2b8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d1a3cdc7-f88f-4ff1-af00-25f821b684c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776b5f87-0f07-44bf-8b52-84582e454c96",
        "cursor": {
          "ref": "411f724a-5363-498a-ae39-76552b130f6a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "833122b4-71b9-473a-8ba6-709a2db91647"
        },
        "item": {
          "id": "776b5f87-0f07-44bf-8b52-84582e454c96",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c8c0666e-3845-4ebb-891e-6818b3752f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42eab2b9-4785-46c7-afeb-363ed9f4717f",
        "cursor": {
          "ref": "7b0c5840-e04c-4677-b2f4-b4364228383b",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "db101ec5-7b2f-4464-8f4d-79e7208fe840"
        },
        "item": {
          "id": "42eab2b9-4785-46c7-afeb-363ed9f4717f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c5989c6a-b715-4ebd-b2ea-baec1b44c8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8208d3-4c9a-4ef5-89b8-e588566acf0b",
        "cursor": {
          "ref": "a5ef4671-13be-4a50-b6f9-3a5bb7d6b7aa",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "31528949-0598-47da-b989-bb001cfbaa7a"
        },
        "item": {
          "id": "9e8208d3-4c9a-4ef5-89b8-e588566acf0b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "35d1e1c5-e508-4703-b7c6-0eb6a7209e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032147f7-8502-4107-bf53-011604d3a998",
        "cursor": {
          "ref": "29a5dd27-0829-46b9-b535-ccc64382197a",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "93bc0607-3e47-476a-9658-8c7e37e4484b"
        },
        "item": {
          "id": "032147f7-8502-4107-bf53-011604d3a998",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5384570e-50b8-4b2a-815f-9b5f1f4f4caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f0a1c7-6111-4780-bcdf-3dd334482713",
        "cursor": {
          "ref": "3074d55d-7173-40d1-a7ea-1635afd67074",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "715e78b1-7770-4d58-9488-19f87f6d607f"
        },
        "item": {
          "id": "68f0a1c7-6111-4780-bcdf-3dd334482713",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3aa9d64e-d88a-498b-9c5e-3f04e94eafa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d061e84-0719-4233-83e0-4203d9a00435",
        "cursor": {
          "ref": "b8976991-e5c3-492f-aa08-24bddcac0d25",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "082472f2-fa07-409f-b090-200e951fd8b8"
        },
        "item": {
          "id": "7d061e84-0719-4233-83e0-4203d9a00435",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "85a28bd4-694d-4987-b9ab-defa6dd1d9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4536a8f-48cb-4e57-9867-dc3cfd487e1c",
        "cursor": {
          "ref": "301e4a85-08a4-42e2-a396-2ef89e7a2ebe",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "57b5e124-7209-4305-ac9b-d197fffef4b5"
        },
        "item": {
          "id": "c4536a8f-48cb-4e57-9867-dc3cfd487e1c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "67e357f8-da95-4000-b935-2b714bea24bb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "9cc70e50-d852-4999-a273-029d4ebcdfd3",
        "cursor": {
          "ref": "d517c313-2de1-4701-a928-bae87c1eb78e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dac1feb8-e8cb-43eb-ba63-d85ddfb946f7"
        },
        "item": {
          "id": "9cc70e50-d852-4999-a273-029d4ebcdfd3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "49583706-81b8-4bbc-ade0-c9b1bbbe5b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92c0e2b-7b5e-44a4-bff0-edd03a57c69f",
        "cursor": {
          "ref": "9e6d2ab1-f30e-49b9-8f1f-5389b6b42316",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5476fc4b-b6c2-4db3-88b9-5d7e0fe79e27"
        },
        "item": {
          "id": "f92c0e2b-7b5e-44a4-bff0-edd03a57c69f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "97086cf9-11c5-4aba-8142-cf3b90c58b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d522ac-dfd4-443c-b21d-05200a170169",
        "cursor": {
          "ref": "01240aba-07e0-44cd-a9a7-acd0d9b40362",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1c40e2f9-accd-400d-b404-d6232dc6f070"
        },
        "item": {
          "id": "47d522ac-dfd4-443c-b21d-05200a170169",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "93a19208-af14-48bf-9061-7befe1c5d3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950ea1e7-605d-4a5f-b440-5d50bdee8507",
        "cursor": {
          "ref": "ffdde940-1210-4a24-b9bb-946b10f27371",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7ff5eb76-1fc6-4091-8686-1d590ef75a1e"
        },
        "item": {
          "id": "950ea1e7-605d-4a5f-b440-5d50bdee8507",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9b4d7a12-7195-46e8-a4e0-6249943ab0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3aacba8-6ff4-431a-9220-a2b299fbc377",
        "cursor": {
          "ref": "8ee1fcc3-9545-40e0-8ef4-dd351a140292",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fe3e3761-93ad-4597-aeef-37061923449e"
        },
        "item": {
          "id": "d3aacba8-6ff4-431a-9220-a2b299fbc377",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7bef090e-f7d6-4a87-9ddf-3184577a4bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10af196b-6e41-4095-aeb6-e93dc9710295",
        "cursor": {
          "ref": "f4b953a8-f21f-4831-b2a4-f8e88f16839f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4bfbf357-20b4-443a-bf9e-72c96b4238a6"
        },
        "item": {
          "id": "10af196b-6e41-4095-aeb6-e93dc9710295",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "93c39411-543e-4398-9dc9-67a20785bf0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8af6fa-5c86-4224-bcea-8eaf1a59b79d",
        "cursor": {
          "ref": "137b4034-80b8-42f5-9147-0fa0576bcdda",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2ed7e4f3-64d1-4279-959f-77a0c63a23ff"
        },
        "item": {
          "id": "af8af6fa-5c86-4224-bcea-8eaf1a59b79d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "914abd50-7944-4663-ae78-c478d9f7a9f7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "737a0345-bb2f-46ec-b6ca-2f947c4b1d80",
        "cursor": {
          "ref": "6f550bf0-dd0a-43af-9449-27d9a2e4f87b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7d620dd2-1d15-411e-9b35-bfd19165ea19"
        },
        "item": {
          "id": "737a0345-bb2f-46ec-b6ca-2f947c4b1d80",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "55d4b069-f023-4a6e-98bd-a36372e1aafd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "2b8dda72-e654-40f5-85b0-c2824d8336e8",
        "cursor": {
          "ref": "0f972542-c3c4-4f73-8be8-1f373dfc7dc1",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "81634377-9034-482d-be63-d8060f6f0e50"
        },
        "item": {
          "id": "2b8dda72-e654-40f5-85b0-c2824d8336e8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a6779e61-e244-4ddf-bbf9-f8ff2bd55e83",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "5a8df8b8-3f24-4aef-b7a3-cdfce6293f03",
        "cursor": {
          "ref": "a6666e42-a865-41df-a173-8f58327d838c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "31369013-99a1-48c2-a854-381e71dd9881"
        },
        "item": {
          "id": "5a8df8b8-3f24-4aef-b7a3-cdfce6293f03",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "163030f7-3406-4346-8426-f2c84ad4da3c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "2a19ca32-f872-4e60-b5ee-19ad33542a83",
        "cursor": {
          "ref": "4e8f83cb-1412-4e73-b7a0-757f3eafc95c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ccd40213-5291-424f-8cc9-4e8ce262566f"
        },
        "item": {
          "id": "2a19ca32-f872-4e60-b5ee-19ad33542a83",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e8868e81-056d-4042-b3b4-54719b38df9b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "d96d6aac-da0a-4e0e-ba25-c42c234d7a36",
        "cursor": {
          "ref": "854772b3-cebd-4886-9217-0567e9a8b501",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b87aa4bf-a3f4-4989-b651-1724c396c9f4"
        },
        "item": {
          "id": "d96d6aac-da0a-4e0e-ba25-c42c234d7a36",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4a447b6a-4a47-41d5-b38b-3835285ffba7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "f6ea8060-3a20-4ae2-a85e-9d893fc0cd80",
        "cursor": {
          "ref": "be2c1282-35ba-43a1-b8c9-999c097278be",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d2a0ea31-15e0-4320-9313-148d97dd8a8f"
        },
        "item": {
          "id": "f6ea8060-3a20-4ae2-a85e-9d893fc0cd80",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1ac43a99-5ea1-47c2-85e7-744634149e9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af1ef93-b37e-4761-8b0d-02bf4ca6d5c7",
        "cursor": {
          "ref": "1c96f131-8f47-4bab-9d48-b6224dee40dd",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a1769acf-d60b-44e1-ab2a-6af61611aa67"
        },
        "item": {
          "id": "9af1ef93-b37e-4761-8b0d-02bf4ca6d5c7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "feccfa54-6e61-4ff1-afda-356a4a9cba50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa9f3f1-baa7-464e-b98c-306c766cdcc1",
        "cursor": {
          "ref": "62ee9ddd-04e5-4788-8bd2-6be52ede7dbc",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c0b75b6a-8b7c-4d08-b296-a12805e956d2"
        },
        "item": {
          "id": "7fa9f3f1-baa7-464e-b98c-306c766cdcc1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "74d57def-000f-4feb-8e3b-199b0de6cc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62faa94c-f298-45cb-89f3-ed42df4fc149",
        "cursor": {
          "ref": "da456dc0-632e-412c-8973-3fdb679c83d0",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3689e9c1-5072-4185-9a07-33cf527e13f9"
        },
        "item": {
          "id": "62faa94c-f298-45cb-89f3-ed42df4fc149",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9e733607-4134-477a-be10-6370637c1dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e7b1ee-3260-4318-a4ef-534118cddfdb",
        "cursor": {
          "ref": "933d1808-f968-4795-90c3-a672bcd770e2",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a34919bc-f9de-4c13-9a61-17d0f6245586"
        },
        "item": {
          "id": "e9e7b1ee-3260-4318-a4ef-534118cddfdb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4f021828-f6e6-4aa1-b529-d61272310c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2e46a5-8354-4eb9-a5d8-95788472ace9",
        "cursor": {
          "ref": "1d011ea8-ce84-4ea1-8f28-4655d9db6275",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "58a8e41f-c29f-4da9-beac-1b627ab421e4"
        },
        "item": {
          "id": "3a2e46a5-8354-4eb9-a5d8-95788472ace9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4b68181f-8cb3-49b3-83cd-f3536275eeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f95a40-0cdc-44b2-a174-e5c3041a9780",
        "cursor": {
          "ref": "9a3bd07c-bd47-4300-af48-11906bfea63a",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "66f5491b-a70b-4a74-a7df-66dec901c300"
        },
        "item": {
          "id": "22f95a40-0cdc-44b2-a174-e5c3041a9780",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9690ed60-4731-4d0a-804b-ac6a83b01630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b813b0-5977-44ca-9129-22b0f46ad7a8",
        "cursor": {
          "ref": "0dadbf8d-3517-434c-87f0-4b5ff2d510a8",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8b94481c-9a1a-4e7b-8814-e6637ed40105"
        },
        "item": {
          "id": "18b813b0-5977-44ca-9129-22b0f46ad7a8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "435ad3a2-035c-44d9-8e15-b6fe853eda27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929aa251-c799-415b-bab9-ea67053e26e7",
        "cursor": {
          "ref": "ddce3bc7-ba36-4517-a499-52212779f546",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a7cfedb7-a691-48dd-95db-0d5b9d0a9d98"
        },
        "item": {
          "id": "929aa251-c799-415b-bab9-ea67053e26e7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "aa9f837e-a959-41a6-a25c-2d60f6efad1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37612834-ab1e-407f-bd3c-8051af76d60c",
        "cursor": {
          "ref": "fd40d75f-c076-48f0-b47a-b33eca497240",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a9e5e769-02d9-48c7-ab4d-78c03e9ed197"
        },
        "item": {
          "id": "37612834-ab1e-407f-bd3c-8051af76d60c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "98a728e7-5ef7-4606-95f1-91a252b557ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b1ab95-f22f-4817-ab51-356c129ddc0c",
        "cursor": {
          "ref": "b8494d22-cd99-4efa-a800-96b1f6afd52f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ef506495-33b4-44eb-8c10-72a8f533d0ff"
        },
        "item": {
          "id": "f2b1ab95-f22f-4817-ab51-356c129ddc0c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "047ee697-f372-40c1-9e88-fe1604275984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eda4e29-7817-4352-88ca-1502df6c3df7",
        "cursor": {
          "ref": "861e7211-a398-4d3f-876c-de45b9748573",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "65bab66f-7d29-4f28-8619-c0038b2dc256"
        },
        "item": {
          "id": "2eda4e29-7817-4352-88ca-1502df6c3df7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a08fccc4-3bdd-4184-8feb-5e6365476a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d67f18-f6d7-4d7c-8752-1e3cd03578e5",
        "cursor": {
          "ref": "c24992b6-9819-48ae-81e6-0db37e90174f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2b99fc57-e9d3-4958-b985-2e1feabb0ee3"
        },
        "item": {
          "id": "34d67f18-f6d7-4d7c-8752-1e3cd03578e5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a307db3b-e1d0-4c44-88b0-9fc38d9d216f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8549a021-30c7-4d4e-895c-f5abc4251331",
        "cursor": {
          "ref": "6c5dd689-c3b6-494a-8dfb-e8116b57233f",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "eb5a593f-03af-4b50-8c92-df8791c632ac"
        },
        "item": {
          "id": "8549a021-30c7-4d4e-895c-f5abc4251331",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "32e23665-e00d-4b9b-91b9-234f438ddb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3082a731-9b80-450e-a06f-2b48986e7535",
        "cursor": {
          "ref": "23ee1bc0-2f02-47d4-b7c3-48fd93cdccf1",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a2929e30-3997-4678-9b4e-808c3f09dc60"
        },
        "item": {
          "id": "3082a731-9b80-450e-a06f-2b48986e7535",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b86303c6-ca5a-4626-9bc2-1575a0dcf1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62be247d-aaf4-4971-a0b0-4d9b631dc5f8",
        "cursor": {
          "ref": "88ea671c-ebcd-473e-8471-5922effb0bc3",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d2e27c2e-f6aa-4c4b-bdd0-ea463425b019"
        },
        "item": {
          "id": "62be247d-aaf4-4971-a0b0-4d9b631dc5f8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "88672676-6c4e-41fa-932e-de6f0e238f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c3c3e9-2c41-4826-95d3-4dc14f193e48",
        "cursor": {
          "ref": "8ecc269e-f80b-4b33-b1a0-83f5b10e5041",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "12f1577c-4b19-407e-9a6f-ab18b4e80048"
        },
        "item": {
          "id": "62c3c3e9-2c41-4826-95d3-4dc14f193e48",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f219bee2-955a-474e-ad4c-fd9ebce453bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deba3d90-6140-4df8-90d1-ec2c29d1739a",
        "cursor": {
          "ref": "a3bb491a-20e5-4e4c-b604-1a8bae1ee9cf",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bd764dff-fc37-4c98-96cd-1a6e78631ed2"
        },
        "item": {
          "id": "deba3d90-6140-4df8-90d1-ec2c29d1739a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "856cbd96-b70a-48c7-832d-aa2c979289d6",
          "status": "OK",
          "code": 200,
          "responseTime": 148,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "00dfa72e-9f99-4949-8b9c-39d6d523c77f",
        "cursor": {
          "ref": "b48ba922-2929-4cea-9e40-4ce51cb90814",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f0765f68-ec5b-46da-878d-aa4c5c86e974"
        },
        "item": {
          "id": "00dfa72e-9f99-4949-8b9c-39d6d523c77f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c40cd2d3-326b-4105-bbf8-177069932452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7176bc-332e-4b20-b830-a37d4b6ad665",
        "cursor": {
          "ref": "78f77702-a3e6-4ee6-b8e0-1b43574a45b2",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "11967a34-5593-4277-821c-e1f6fa0e367a"
        },
        "item": {
          "id": "cf7176bc-332e-4b20-b830-a37d4b6ad665",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "070505a9-382c-43d2-8a47-45119d35393e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a5c973-b8ec-4728-9f73-714daceb742e",
        "cursor": {
          "ref": "fb6414cc-5784-429b-b3d9-63e785c0fdb0",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6590f40b-47a7-4856-a8be-c179c4af69c9"
        },
        "item": {
          "id": "25a5c973-b8ec-4728-9f73-714daceb742e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d07e9681-fc3e-4713-b6f7-6a6a458439e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f53052-7b68-40a5-a2e0-31a5c26efd1f",
        "cursor": {
          "ref": "a6357bf3-4253-49e2-9de4-8e9f8a51413c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "00f8fa89-305e-4c13-97ed-4089eca8530c"
        },
        "item": {
          "id": "42f53052-7b68-40a5-a2e0-31a5c26efd1f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3db2a063-536d-4cd8-a79a-94a416d681a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0125dca0-3d0d-43c3-8029-e5685f45cba9",
        "cursor": {
          "ref": "5f711481-07a2-4d48-af25-3534511f8b42",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e54af0e2-1c43-461d-a30b-60520ee5fbbb"
        },
        "item": {
          "id": "0125dca0-3d0d-43c3-8029-e5685f45cba9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "20294e9f-da42-4f32-9b80-d9fe1b0b0861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e964bb8c-cfad-47fe-af31-d64ec370ad2e",
        "cursor": {
          "ref": "0d306818-174c-4a7c-a500-5415a882741d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f9d63511-438f-4d06-89eb-f55592c72dfe"
        },
        "item": {
          "id": "e964bb8c-cfad-47fe-af31-d64ec370ad2e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f5ad4c4f-52f4-42d9-9cda-03e10ddb5b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ee3ef0-2754-4890-b863-466f64f8b69b",
        "cursor": {
          "ref": "ba62bf11-6d48-4305-a73e-d208426447fb",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "30a5aec8-b32d-42c8-99c2-862ef6d963dd"
        },
        "item": {
          "id": "e8ee3ef0-2754-4890-b863-466f64f8b69b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "16ab53fd-84af-4859-8c03-7e73e3607091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de95d90-a509-4f21-bb49-f89155d765ef",
        "cursor": {
          "ref": "8df4eb71-1919-4d8f-a44f-1e35e9636dbf",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ba4188f1-85e2-45a4-8e33-82cb8675fb89"
        },
        "item": {
          "id": "8de95d90-a509-4f21-bb49-f89155d765ef",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f1ac26b4-cb65-4e16-99d7-2255c0793c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2686011e-e573-4be3-874d-f64eec0801ca",
        "cursor": {
          "ref": "bd86af00-1017-4eef-b5fc-92d759020fad",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "18755d55-69ad-4448-afd7-e5a31c312ee4"
        },
        "item": {
          "id": "2686011e-e573-4be3-874d-f64eec0801ca",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "785f584a-4378-40a1-976a-530c6ae9ebd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ad88a0-aef3-46a8-bb23-537088cb44cb",
        "cursor": {
          "ref": "d7f754a6-40bd-4620-80c5-7285a148f665",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "62748e3f-2883-4a7b-a9cf-74245a4f261c"
        },
        "item": {
          "id": "22ad88a0-aef3-46a8-bb23-537088cb44cb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e93a31b5-5366-4e4b-adc5-b9c30e8bbcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a70882-5964-462b-b168-89e60ea1c31c",
        "cursor": {
          "ref": "3df52e1b-4fac-41b0-8dec-11e619a6cc73",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fc55618f-ed0a-4492-b4b1-7c9bff27be8f"
        },
        "item": {
          "id": "58a70882-5964-462b-b168-89e60ea1c31c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f3ea5f24-fff1-4caa-8e8d-cc336ea016a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fe219a-fcd8-4eeb-9f2e-1773e95fab61",
        "cursor": {
          "ref": "5bd566a3-c302-44eb-8fdd-5cd582399d17",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "466dec2e-2384-455a-a566-3fda3c7a0309"
        },
        "item": {
          "id": "59fe219a-fcd8-4eeb-9f2e-1773e95fab61",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d84b3161-019f-44d3-8700-0c1dc6f3e14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9060299-68a6-4554-8dfb-4723d1df60c1",
        "cursor": {
          "ref": "756c8faf-5e2a-4af6-b72d-629c28781da6",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7273f1fa-cbd7-4835-85b5-f1c2bdd4b7c0"
        },
        "item": {
          "id": "a9060299-68a6-4554-8dfb-4723d1df60c1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6efd047b-36f3-49ac-b6f1-0fe087eca179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3068ea10-75c7-4219-a967-27e5d7c67369",
        "cursor": {
          "ref": "7df5797b-af8b-4c0b-8515-fb599550eb86",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3a7a9a0a-56fb-41d7-8d5c-6ab5b4e1128b"
        },
        "item": {
          "id": "3068ea10-75c7-4219-a967-27e5d7c67369",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5a1522e4-37c3-4f36-bde2-5ad2d5c0061f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09aa607d-1b99-4396-980a-a0f01323d577",
        "cursor": {
          "ref": "902775f4-68d0-4c61-ba89-3f54567b35b3",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ea5f879d-5f11-4d06-bb63-5264f31d6897"
        },
        "item": {
          "id": "09aa607d-1b99-4396-980a-a0f01323d577",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8ccabb22-30fd-4190-a32f-1a2e5e6bff15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6bce5f-2e71-452e-a877-e1845416921c",
        "cursor": {
          "ref": "9598505d-3613-43ba-a021-fbdfbc832e4f",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "13fc8f2e-a8ed-408e-9ce9-1dd2f4289315"
        },
        "item": {
          "id": "be6bce5f-2e71-452e-a877-e1845416921c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4bc1b5c5-1c5a-4bf5-95a2-cb44e0bad230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52354d16-f23e-4321-b22f-6c255ecfe98c",
        "cursor": {
          "ref": "f4376f8d-5110-44d2-bc2e-781b6c0ce016",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8e6a00db-4b81-403c-8d85-5f06c403df16"
        },
        "item": {
          "id": "52354d16-f23e-4321-b22f-6c255ecfe98c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3371eb71-96a5-412b-8037-272686902067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5c32f0-4358-476a-a690-5e7be25414a3",
        "cursor": {
          "ref": "161755f0-68ff-4d06-a6c4-c0b89ac2da58",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5c6977fb-851f-4983-a953-d1bc16646f07"
        },
        "item": {
          "id": "0e5c32f0-4358-476a-a690-5e7be25414a3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "037036f8-c268-447d-9817-6daab088ab84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41813a17-8f5b-4e67-a83d-11c9ca9cee49",
        "cursor": {
          "ref": "9072a7ec-5b25-4893-96a2-eb1ec3f20eb2",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6817298e-1faa-437e-965a-f426ada51310"
        },
        "item": {
          "id": "41813a17-8f5b-4e67-a83d-11c9ca9cee49",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d5ef5f8f-d0a5-4e06-b6cb-b8e555fe9764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8b5f99-88a6-4001-bab6-c1ab0ee1834a",
        "cursor": {
          "ref": "5aff314e-0a8c-47ce-8cbd-92a92e62bc4d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5c32a8fb-de4a-490a-8f16-fecb14f1c17b"
        },
        "item": {
          "id": "6b8b5f99-88a6-4001-bab6-c1ab0ee1834a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bff91d2a-5acd-4bed-91b2-5c195a3e68df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3c6961-b51c-4775-8afc-d127baa8aeb7",
        "cursor": {
          "ref": "60decef5-6598-493b-9012-0b614889642a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a985a59a-921b-4407-ba6e-0b37e7f2adcb"
        },
        "item": {
          "id": "ac3c6961-b51c-4775-8afc-d127baa8aeb7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ac00e8f9-2236-430d-b0e6-03f41c6d8bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6136f3a-0924-4403-b441-536ae534cff3",
        "cursor": {
          "ref": "430cdc60-6374-4d8e-9128-1a059f5e64b4",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b739dd4d-9ccb-4274-a0b4-3c3297cbee97"
        },
        "item": {
          "id": "f6136f3a-0924-4403-b441-536ae534cff3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ad1cfebf-10c8-49fe-a582-6e4d34b1a2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa80b9f-c508-4846-9cbd-ab8f63f407df",
        "cursor": {
          "ref": "0ad23378-1a5a-4580-bbac-7f58c8e98a1b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5253c920-5bc8-4c12-bc01-200a1c9ade6e"
        },
        "item": {
          "id": "faa80b9f-c508-4846-9cbd-ab8f63f407df",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "85c1e320-8c51-490b-9e4f-f03909cfc072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6551651f-e77d-47bc-bc7f-e60f15f1b6ab",
        "cursor": {
          "ref": "14785b2d-974c-48a0-88d3-3435acdce4ad",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1429da19-dc50-446c-b4bc-0f4932b61194"
        },
        "item": {
          "id": "6551651f-e77d-47bc-bc7f-e60f15f1b6ab",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7a57e4ca-dcad-4476-9b96-384259b2ecf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664bb932-8422-4d27-a93f-ad621d7bcca8",
        "cursor": {
          "ref": "462400d0-8967-4f8a-b087-83f1a0c2c123",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7d8be864-bd5c-4c50-aba2-04dd3a1913cb"
        },
        "item": {
          "id": "664bb932-8422-4d27-a93f-ad621d7bcca8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d80704ba-3614-48d5-ae04-057af77a4a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc790ca7-ec8e-44a1-b568-c48eb7bd6831",
        "cursor": {
          "ref": "f06c71be-d02c-445b-ae32-283687636c1e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6bb0a410-ae42-4f2c-aa36-cf0164cd2afb"
        },
        "item": {
          "id": "cc790ca7-ec8e-44a1-b568-c48eb7bd6831",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9592b517-c653-4c19-987b-3d5719b3d483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e50c161-3ad8-4489-ada8-8b80a611e952",
        "cursor": {
          "ref": "adebc255-1942-4ee2-9ed9-aa9db5ddabe6",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "521ac492-2e26-415c-91b5-eb635fa06bf2"
        },
        "item": {
          "id": "0e50c161-3ad8-4489-ada8-8b80a611e952",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "06db4229-ea4c-4263-adca-9086309609f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b38df8-5e24-49ff-b5af-722503188843",
        "cursor": {
          "ref": "df9e7f78-cea1-4064-9758-049ca94cc8fe",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "47733951-b798-4d4d-819b-d373bf784f19"
        },
        "item": {
          "id": "c8b38df8-5e24-49ff-b5af-722503188843",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f5be9072-aa75-4b2f-88c7-229e8ef616cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9506e167-d3ca-4552-b9e1-827d5cb4e18e",
        "cursor": {
          "ref": "fdd23db6-d3a5-4450-9468-d5d32eb6775c",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6a13c1dc-3532-4279-b911-0506e9450881"
        },
        "item": {
          "id": "9506e167-d3ca-4552-b9e1-827d5cb4e18e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "16a2728f-e194-4d59-a35b-fe2f02bea1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eba8f11-050a-4db2-93e1-18ee822391a0",
        "cursor": {
          "ref": "692295ba-a518-4664-ba0b-cbe37527a384",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "142d3b77-e23f-4f5e-9f0b-13c75b79bf98"
        },
        "item": {
          "id": "1eba8f11-050a-4db2-93e1-18ee822391a0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "98c3c62c-691d-4354-aa19-d0d47758b480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7f27a3-1e3a-4727-a50e-017f06f67873",
        "cursor": {
          "ref": "d00ccd0f-5b16-468f-be12-2dcb6b432aba",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4a8511a9-3803-4906-bb33-21d072deb269"
        },
        "item": {
          "id": "4c7f27a3-1e3a-4727-a50e-017f06f67873",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "663c0461-ba74-4fad-a275-0a3f82e45163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5a03c7-bb11-4f73-bb86-bdfed645c464",
        "cursor": {
          "ref": "7e392017-5183-48b1-a0e2-a1c932537f3d",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ad2756c3-a5d2-44a7-a1af-c7e91b44f057"
        },
        "item": {
          "id": "ea5a03c7-bb11-4f73-bb86-bdfed645c464",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ef6ef224-44da-45c8-8af0-c7a7f396dd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9895ba-ff9a-4816-b5e7-727f88406f24",
        "cursor": {
          "ref": "ebe0a4de-23ac-48d8-8e67-64cdd4b4eb1d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8e446b87-9391-4539-b909-6f1e313005a6"
        },
        "item": {
          "id": "5c9895ba-ff9a-4816-b5e7-727f88406f24",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "41c299b1-a3f5-4d0f-8c3b-13e50d05d335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11de3abb-56f4-4f74-bab4-de31499cdde7",
        "cursor": {
          "ref": "c0798620-ba17-4255-816c-d3d689d8e8d0",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "37459c83-440c-49fc-bdb4-b50996e59fe5"
        },
        "item": {
          "id": "11de3abb-56f4-4f74-bab4-de31499cdde7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "be075b70-6ddc-439a-9a64-f94a0581fa01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546a7ce2-182f-4c30-8b40-a5b466508209",
        "cursor": {
          "ref": "7af3180e-88de-4a14-904a-f0b23b3b4039",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "88ac7073-bec0-40a9-8eee-a7c8f1a36f30"
        },
        "item": {
          "id": "546a7ce2-182f-4c30-8b40-a5b466508209",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "830ee5d0-1aa3-4569-98a8-f2ac26a3a155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4da9eda-3525-4318-9165-3de6c03c8468",
        "cursor": {
          "ref": "cee6daa8-b602-4bae-b997-97ae35531e09",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b7bf60fd-186e-4a4e-a894-c9073a840e66"
        },
        "item": {
          "id": "a4da9eda-3525-4318-9165-3de6c03c8468",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a17fcc52-c81c-4d1a-a75b-e99454cf23db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09218436-6f92-40be-8350-b2671ce37da4",
        "cursor": {
          "ref": "8cabbc4f-b4cd-4d6f-a644-54eb28e2c824",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "627b4017-6a2a-46da-a8ed-49acf46ae1fb"
        },
        "item": {
          "id": "09218436-6f92-40be-8350-b2671ce37da4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c678e1e8-1f63-4086-be0f-f7a03a5044a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a06980f-ab54-486d-95d9-327162b296de",
        "cursor": {
          "ref": "4a4e0565-c756-4d01-a8f8-5ea66b06386b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bc8e1cc0-63a6-4d96-bd1e-93def67fde8e"
        },
        "item": {
          "id": "1a06980f-ab54-486d-95d9-327162b296de",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "293236c7-2420-4c66-97ec-1f954288dff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e54619b-68e4-45e9-ab02-447f839f052c",
        "cursor": {
          "ref": "be27bfdb-06bf-4cc0-bbfc-47d2d263a2e8",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6a228241-a6fc-41a3-9c83-76dbd9216d06"
        },
        "item": {
          "id": "1e54619b-68e4-45e9-ab02-447f839f052c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "01e56e41-4367-4bdb-ad91-e8ab3f330e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89102a5-c172-4083-a179-ad9c5ba0d8e3",
        "cursor": {
          "ref": "33e0adc6-ffc8-47d3-add4-7d902c33dd59",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4d944e6a-8aa6-4797-9a3b-c7991a4c4d03"
        },
        "item": {
          "id": "f89102a5-c172-4083-a179-ad9c5ba0d8e3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c0d6e73d-ec6d-40a9-9b2c-ae58f96e9796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c82ab8c-48a7-4f84-819e-21f89457e1d8",
        "cursor": {
          "ref": "e5ad46dc-7a78-428d-b7a0-7324535ad770",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "435d5ed3-9cb2-48b6-bc86-4807736c3d83"
        },
        "item": {
          "id": "9c82ab8c-48a7-4f84-819e-21f89457e1d8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5acd92f6-1aff-416d-80ea-b4775e3f4dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad72e3e3-6a2d-42c5-b77c-9093b3697b29",
        "cursor": {
          "ref": "7b1afa80-97a9-4140-b4b2-98268335feba",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ef1f0876-7161-4c8a-9b77-3ecf00d0ebba"
        },
        "item": {
          "id": "ad72e3e3-6a2d-42c5-b77c-9093b3697b29",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "41352677-4b02-447f-8cc6-84acb2bd279b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46071abb-b370-4a88-9a21-2360338258eb",
        "cursor": {
          "ref": "890b3c1f-d080-4b9d-81eb-eb4541123a14",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9e7267d1-1071-49da-9024-5ed58729304b"
        },
        "item": {
          "id": "46071abb-b370-4a88-9a21-2360338258eb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4a5a9374-aeb9-40a9-8b3e-c4e948cba54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7358f1d1-08d9-45fd-bb41-2a6c5656680d",
        "cursor": {
          "ref": "7d73bc92-06f9-4985-9079-9e7f821c8ac6",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a98765f0-deb4-464c-ae85-a2fb38727995"
        },
        "item": {
          "id": "7358f1d1-08d9-45fd-bb41-2a6c5656680d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "986bf475-77ff-425c-92da-fdf87695bcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f396ea9-877b-4e40-b454-88e0fe9f6950",
        "cursor": {
          "ref": "f0f59ba1-8df8-4cf6-aa50-6f425414e4cb",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5be56efc-0c4c-4079-900e-92e32b1f49a5"
        },
        "item": {
          "id": "5f396ea9-877b-4e40-b454-88e0fe9f6950",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c7129880-2af6-4d73-a2e6-624c6879e5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95576924-e39b-47ff-a43b-ce0a1d480265",
        "cursor": {
          "ref": "1fd86344-c8e8-4811-917b-d229fa3c6186",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "82a5e2b9-0e92-494d-a6bc-100d46d8d3e8"
        },
        "item": {
          "id": "95576924-e39b-47ff-a43b-ce0a1d480265",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1526b908-5525-4f56-ab3a-3a8269a19ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57e25e6-a44f-4c83-b820-20400683f36d",
        "cursor": {
          "ref": "4074b6d6-1ea1-4f85-a1e9-2082d8532c10",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5b7d78ca-d8eb-48e3-8a8f-c674ee770b09"
        },
        "item": {
          "id": "f57e25e6-a44f-4c83-b820-20400683f36d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e1e08b38-5fb2-4b1a-b14c-d70e5f6b0371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72644afb-333b-44d2-8fa6-310865ac11eb",
        "cursor": {
          "ref": "ae344485-aca0-4bfd-858d-ee8c725cad88",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9a50bda5-b003-4ec9-a34a-81a2c17b6c00"
        },
        "item": {
          "id": "72644afb-333b-44d2-8fa6-310865ac11eb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5c554237-7b3c-4010-b22f-6d4909ef789d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c65d9c0-0ac6-4dce-8588-bb04d497c80d",
        "cursor": {
          "ref": "32aac1cd-6858-43c8-8459-7df4e9155c00",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cc7c2cc4-fefb-439f-9575-4a2d9da8d711"
        },
        "item": {
          "id": "1c65d9c0-0ac6-4dce-8588-bb04d497c80d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "61e9e815-1b49-401b-b652-f381cc64f428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3b058f-4f13-479b-bab9-74b4a42d1c02",
        "cursor": {
          "ref": "5f5d323a-f651-4880-af58-1e3917c32b51",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "444f6b1a-a980-4f5c-8dd6-83b5819fe2f8"
        },
        "item": {
          "id": "5d3b058f-4f13-479b-bab9-74b4a42d1c02",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "47731918-29be-4b14-b104-7423de3352cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e09463-d5a6-4b63-8735-ad0909717175",
        "cursor": {
          "ref": "01decd91-4ca1-4c07-a9f8-10578b05be5c",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a849e50c-56a6-4c51-a263-29ee96a06682"
        },
        "item": {
          "id": "a9e09463-d5a6-4b63-8735-ad0909717175",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "435ea198-c9ed-4b2d-8718-254f21152862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8ffc27-ed3d-47ab-862b-6ab78ff8f5aa",
        "cursor": {
          "ref": "09af1524-5b3c-400c-b697-43ddbd95c0fd",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "85da74fe-6410-4528-bf0c-826d9a82c4d3"
        },
        "item": {
          "id": "7a8ffc27-ed3d-47ab-862b-6ab78ff8f5aa",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c511155a-5e5f-444b-9c8a-cd5e3cd64305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17907cb-340d-4312-ba61-b7300f382a56",
        "cursor": {
          "ref": "ad5f669d-eb92-4dc3-8fdb-80c206b617ae",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7ebe5db6-3099-4530-b7e3-b417ce7d6a38"
        },
        "item": {
          "id": "f17907cb-340d-4312-ba61-b7300f382a56",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c656e1e3-419f-4d72-a7ab-4c78bd550239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39929a9-e995-4e28-8022-aa197831f03d",
        "cursor": {
          "ref": "15f0c5de-dad4-4c4a-90da-67eb31d5adb9",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "55430e43-7c09-4793-924b-c9bb76a8fe16"
        },
        "item": {
          "id": "c39929a9-e995-4e28-8022-aa197831f03d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "89a53e27-fabf-41cf-bbf3-1cbc3c2fa373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a25aeb6-2b16-45fa-bdc1-77859994cc58",
        "cursor": {
          "ref": "7ebf69f1-861e-499e-ba60-5b57b5b92182",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dc20322a-f35c-4e0f-bec7-d8bef3efa2f6"
        },
        "item": {
          "id": "1a25aeb6-2b16-45fa-bdc1-77859994cc58",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9a77af55-8250-48a2-9f28-ea0c7814a1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fe1bc5-fdad-4c73-8b67-91b65784c15b",
        "cursor": {
          "ref": "9f91f42f-91cf-4d99-b103-287fe9d5788f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7bc7c759-fb73-47ce-9a31-0c23c3a0da65"
        },
        "item": {
          "id": "54fe1bc5-fdad-4c73-8b67-91b65784c15b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "853e0279-8d9d-4733-83d3-259f5eb68cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301af45b-80ea-4d99-b192-2dbcec1a0662",
        "cursor": {
          "ref": "d7911990-4d31-4587-877d-6a9e23b943f8",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7eee2785-2034-4498-b8be-bc6835656d1d"
        },
        "item": {
          "id": "301af45b-80ea-4d99-b192-2dbcec1a0662",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f222f111-97ea-4f37-9b7a-a9833109e2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee741a1f-b7d3-4f87-a9af-c2425bef0ea5",
        "cursor": {
          "ref": "3de08d74-a80d-4323-954d-adf6a735b2f5",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "58c549c6-6e55-4f76-aabe-9e16fca45bd2"
        },
        "item": {
          "id": "ee741a1f-b7d3-4f87-a9af-c2425bef0ea5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "78ddf90c-2da1-4269-8e99-93b4e9636ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d3a8a2-3a17-4096-9c6a-62f61a65c886",
        "cursor": {
          "ref": "5d47ea07-a6bd-474b-97fd-b4f3f54b7f65",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b2b3f137-9f09-4088-bf3a-37f5cbdd9a4e"
        },
        "item": {
          "id": "d4d3a8a2-3a17-4096-9c6a-62f61a65c886",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "543cfb47-ff68-44b3-8278-c33c5352853d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e733bb4-68ba-4876-bc58-809cc5cc534f",
        "cursor": {
          "ref": "66536ee0-7608-4870-8ba9-1b10d76b5b71",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bfac3834-4d23-4b78-87a7-5d2c9ab142d7"
        },
        "item": {
          "id": "7e733bb4-68ba-4876-bc58-809cc5cc534f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8261f824-3e5f-4055-817f-8d6a4be694c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac11c3d-b635-4a1e-aaf1-0d419fd6cc1d",
        "cursor": {
          "ref": "0809b089-a5da-4add-9198-84924e434dea",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ca6e7acd-d681-41ae-8074-acb760e892c4"
        },
        "item": {
          "id": "2ac11c3d-b635-4a1e-aaf1-0d419fd6cc1d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ea399a78-635c-4ec5-80cf-a4e427dd962b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f59f67-35d8-43b1-b783-6295d35ec64c",
        "cursor": {
          "ref": "41c0d541-1d47-4d01-a3eb-fe37cab334eb",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fbfb8701-ad1c-4f0e-9247-fb31a77691f5"
        },
        "item": {
          "id": "90f59f67-35d8-43b1-b783-6295d35ec64c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "850f5dfd-1050-47c5-900f-01329c279848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd06856-62db-4968-a19d-536e279a1237",
        "cursor": {
          "ref": "0ba604ef-51cc-4070-8447-ca17d11ea367",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "91cefc65-bd82-44b9-a0d2-16ba3fe8461a"
        },
        "item": {
          "id": "bbd06856-62db-4968-a19d-536e279a1237",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b76c154a-3c47-40dc-bd57-83662be9958b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3dded3-17f3-446f-a90d-fe170b518465",
        "cursor": {
          "ref": "73371df5-bb1a-42b3-bd1b-4e70755d7a18",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "aa35f26d-754e-48ee-858d-b44e6469cae1"
        },
        "item": {
          "id": "ab3dded3-17f3-446f-a90d-fe170b518465",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "890d465b-430f-4c6c-acbc-2b561cef07d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c53678e-2f3f-4077-a20b-8da6e8f6f92f",
        "cursor": {
          "ref": "fb6cc9a0-62c0-425a-b24d-d461d4a8ac9d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fb2ca539-2704-4f03-ad86-573fb97dd790"
        },
        "item": {
          "id": "0c53678e-2f3f-4077-a20b-8da6e8f6f92f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "26ca21ed-7c65-4df8-aed4-9a2c9f19ff4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7219988-8f26-48fc-b03d-2a77a03cc5bd",
        "cursor": {
          "ref": "eca149a8-7069-4bba-8dff-071436779389",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fe29bb20-3d21-4895-aebb-fa29bf2064e5"
        },
        "item": {
          "id": "e7219988-8f26-48fc-b03d-2a77a03cc5bd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1dbc0468-6b82-47b7-bb29-679ed2a70767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a9b013-3c0a-4546-99ee-4bba60c9c88a",
        "cursor": {
          "ref": "794b6dad-f587-487c-8f46-912a9c392694",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "09b08d42-b9f3-42b5-a3dc-d7b011bf35a2"
        },
        "item": {
          "id": "88a9b013-3c0a-4546-99ee-4bba60c9c88a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e0f7cd47-a27e-4e74-8afe-9635c5bb1fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0827e38-4124-4bf8-9b40-7fa067e9e3e4",
        "cursor": {
          "ref": "d4c357b4-1f09-487a-9a98-7ed5a4240dc8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4496c92c-768f-4b03-a1f9-d9cb99ca57a2"
        },
        "item": {
          "id": "c0827e38-4124-4bf8-9b40-7fa067e9e3e4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9ba888e2-8ca3-473b-8069-b814ba7992ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ebe00c-e1cf-4a81-94b4-8b3396676423",
        "cursor": {
          "ref": "4992a469-7427-41f8-a50f-18bcbd916a19",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1b67e119-704f-4384-9ce2-276028e60c25"
        },
        "item": {
          "id": "b4ebe00c-e1cf-4a81-94b4-8b3396676423",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4a6e8061-4c49-4fda-8478-12cfa641f758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9e4c44-9e7f-449e-ad2d-a169a0cc507a",
        "cursor": {
          "ref": "08468d84-554a-4eb0-a90d-565a6146e2d2",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "76155396-f6af-44fc-83c7-a36f678ee052"
        },
        "item": {
          "id": "2d9e4c44-9e7f-449e-ad2d-a169a0cc507a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cf4cf870-02f0-4f28-acb5-5d305bcfd404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c9fee6-8a77-4d66-9cce-8510a94f82a0",
        "cursor": {
          "ref": "e0cc4f84-b695-45d3-b5ea-b3ae900794f0",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "558178a6-5220-499a-91dc-2ddbcdba6baf"
        },
        "item": {
          "id": "71c9fee6-8a77-4d66-9cce-8510a94f82a0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "57bce41d-3de5-4306-9d4e-937f815b6d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf0d140-bb94-4c9a-ab25-2a3a5e053b88",
        "cursor": {
          "ref": "611c43dc-e01d-4bf8-9d56-0863c8f32428",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a4a39bd2-fb1d-4598-8e02-e7f05c521e03"
        },
        "item": {
          "id": "5bf0d140-bb94-4c9a-ab25-2a3a5e053b88",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1b6094cf-dbf6-4e65-99ea-5d16e633d027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e09ef3c-b5ff-43cf-a2a4-eab49fb938f3",
        "cursor": {
          "ref": "259ae8ea-eb09-4bf3-b069-6ef46976cf60",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f95f0baf-af89-48e8-b2f5-fc6afd67abdb"
        },
        "item": {
          "id": "3e09ef3c-b5ff-43cf-a2a4-eab49fb938f3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f4153770-bf9f-4c96-9c31-86f738d2ddab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a553ac8d-da4f-4e03-bf10-7c139a5116b5",
        "cursor": {
          "ref": "5690c226-7d73-4d28-a09a-566243abe6b6",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4115c4c2-5dc5-4764-892e-7d199529d671"
        },
        "item": {
          "id": "a553ac8d-da4f-4e03-bf10-7c139a5116b5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "170494ed-0f87-485e-a87f-b72977dc4447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d58dc0-a9dd-4b61-981f-dc7e6c827033",
        "cursor": {
          "ref": "e9f5507a-32a4-4e60-b8e8-a0e4a8cff576",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e6fff660-a4d0-48da-84ca-f4cc53b04f2e"
        },
        "item": {
          "id": "d3d58dc0-a9dd-4b61-981f-dc7e6c827033",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a032ec7a-fa2e-4bd9-ae6f-784bc694c77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfade74-27f2-403b-9d3f-4aa810974d49",
        "cursor": {
          "ref": "2178f2cb-080a-49b9-a717-b9dcd2cead65",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "561eedd3-ac58-462c-a9ea-1aac5099f83c"
        },
        "item": {
          "id": "2dfade74-27f2-403b-9d3f-4aa810974d49",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "07b0e281-80dd-4c55-8112-6cb5fae9b045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9cc911-7a44-40aa-8015-c9760c46d0e5",
        "cursor": {
          "ref": "73116f21-2ef8-40df-b306-2c5d44a8e26e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "05c82d4b-6308-4d1d-b4a9-44efce98957a"
        },
        "item": {
          "id": "1b9cc911-7a44-40aa-8015-c9760c46d0e5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "06f6db48-8804-41cc-8ba8-2f32ba77f02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464f160f-01b7-4a94-b45c-4fa3a292793b",
        "cursor": {
          "ref": "0f555cc6-0c25-4407-8aae-9255091f1511",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "497a74c8-fbcf-4364-a89f-776292586636"
        },
        "item": {
          "id": "464f160f-01b7-4a94-b45c-4fa3a292793b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d0d0b853-cf68-4fa4-8e5f-7f33d9728743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8100de9b-25fb-4fc3-9d85-a8065c6a30f1",
        "cursor": {
          "ref": "7dc0c592-fc10-414b-8e0a-2f41eaca3309",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6ae6d545-6ac3-47fa-afcc-6694695e4668"
        },
        "item": {
          "id": "8100de9b-25fb-4fc3-9d85-a8065c6a30f1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "666e1248-5437-4ec8-a7e9-6e12aae3e617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335dad22-a786-4a44-90d4-bc608a8ff973",
        "cursor": {
          "ref": "2a4cf5b5-971e-4254-b953-369987be028d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "11c3a30a-cb9a-4790-837c-2cf24bb86264"
        },
        "item": {
          "id": "335dad22-a786-4a44-90d4-bc608a8ff973",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e4f13f18-3f5e-4c18-9596-bb499479de67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a2308d-01e1-4294-9a03-13d82ffbab29",
        "cursor": {
          "ref": "91f9c2a3-898e-4866-a6f5-46ead45c259d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6cbe2642-834c-4d8f-8b8b-daa4e7c2b756"
        },
        "item": {
          "id": "f9a2308d-01e1-4294-9a03-13d82ffbab29",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "40fa1d98-945b-4f6a-a6e0-1c7a40319f88",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b95b175-f4aa-4e93-8519-5abe9161fdb6",
        "cursor": {
          "ref": "905791dd-c4d9-4000-9841-ae19e284d5b2",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "de3027f7-852f-496b-98e7-5ef59a468210"
        },
        "item": {
          "id": "3b95b175-f4aa-4e93-8519-5abe9161fdb6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f55bd9dd-9d9d-433c-9a03-ce6311b3682e",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bd7b7f-9fbe-4008-a614-f93b04dbde13",
        "cursor": {
          "ref": "68e59ae2-ee21-4df1-ad72-b8e5834a8014",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1dfec333-a812-45ce-857e-9a1e81ba242a"
        },
        "item": {
          "id": "e2bd7b7f-9fbe-4008-a614-f93b04dbde13",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7f65f4e6-09e8-414f-8316-452fe3aaa43e",
          "status": "OK",
          "code": 200,
          "responseTime": 2539,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "611e3c4a-83c7-45d7-bef8-bac716a381ed",
        "cursor": {
          "ref": "cd2d603e-cbfd-4264-9f2d-4665ffba1f1a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "385bc793-5f97-4bfb-a021-2845c9eb870e"
        },
        "item": {
          "id": "611e3c4a-83c7-45d7-bef8-bac716a381ed",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "be0ff97a-4d3e-4287-b655-c5550a2a7e87",
          "status": "OK",
          "code": 200,
          "responseTime": 2778,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a5e391-ccbf-40e8-a570-49bb135d5cfd",
        "cursor": {
          "ref": "613dbe8b-c424-480e-a5a5-9a2571a3d69d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0e06c0d0-790a-48b9-bccd-60a68241ce17"
        },
        "item": {
          "id": "05a5e391-ccbf-40e8-a570-49bb135d5cfd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "609c86f6-14ea-4704-b93f-f602c05b284b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a5e391-ccbf-40e8-a570-49bb135d5cfd",
        "cursor": {
          "ref": "613dbe8b-c424-480e-a5a5-9a2571a3d69d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0e06c0d0-790a-48b9-bccd-60a68241ce17"
        },
        "item": {
          "id": "05a5e391-ccbf-40e8-a570-49bb135d5cfd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "609c86f6-14ea-4704-b93f-f602c05b284b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4d85fc-08da-4dcc-9094-42290fc73592",
        "cursor": {
          "ref": "c05930bd-102d-425d-bc17-e6164945c63e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "261aba0d-414c-478e-8ae6-da737a758c43"
        },
        "item": {
          "id": "6c4d85fc-08da-4dcc-9094-42290fc73592",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ece77647-36d4-4f71-b911-08ea1ec95f55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f65384b-9b0a-4de3-9362-c6a7d552cb7f",
        "cursor": {
          "ref": "ff737da7-42a2-442e-9b72-7c02e4f1736e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1becf4d1-1266-4bc4-8716-00d80dc9e3ab"
        },
        "item": {
          "id": "8f65384b-9b0a-4de3-9362-c6a7d552cb7f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2dcb77d5-78d8-470d-b518-ba8a172ff5f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}