{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3a366e7b-cca3-4f5b-899c-6645a063a59b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9fa652da-54d7-4d12-9a72-fd2116e53be0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd573f72-4e02-4042-a5e4-a0345ea1571c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "53509c38-e185-450a-9a72-7358edb69c52"
                }
              }
            ]
          },
          {
            "id": "b7ef6d17-4031-4d04-a1c0-dfbe3ca4497a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "adc60f6b-fac9-415f-bf06-85654a439cee",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c3615769-5043-466d-a813-7abb1f89451f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "02aeca59-1d99-4d72-8ed1-fe2cac092f27",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "945bbb8e-f07d-4383-890d-82353eadf8c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d40166c8-efee-432b-b05b-3215b8e0acb8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e779877f-28fd-4cdd-976f-94571da18fa9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0f32e21-4da7-4da0-a568-4c00a81aaa0e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "164cc8b0-f0ab-4095-9a14-8b290ff985ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8db619e7-6793-484e-acca-f42a8afdaef9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ccaf8a0e-a51b-48c2-8da9-bcbf6fa1fed6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f81fa6b-4993-46a8-8b75-2c155fe0d5d0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "845685c0-e8da-4b1a-a77f-c27e7daaee73",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bc436465-6df1-4f7f-b334-34143a0f64af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c284bf5d-7f07-4ef7-8a14-43f1c6ec569e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23815473-abd5-4e14-8cdf-ecd605490258"
            }
          }
        ]
      },
      {
        "id": "850d558c-98f1-4181-813f-c8dcb70a01ae",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ccd9377d-0466-405b-a291-731d81cdfa0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "526dd0bb-1a78-4a6c-a964-a610f7968bc8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "80200870-319b-4055-b85c-388f13388a81",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8720c8f2-d843-4059-ab59-a85cc4734205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ac236c2-1f6f-4f68-9677-7212829f2138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7a97bf-8cbb-4ec6-8531-b6b07c97e38c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d079a1b6-388b-4bb2-849d-9495e057f6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32bdb164-dc6e-4736-b7c1-4c4b60930599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857def84-9ff4-4c8d-a188-dd722a078d2c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963111b0-33f1-40ab-8082-97e7833c9b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8bb2b23-7641-4db4-a3fc-1dee9fadb0a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87b43abd-24b8-479d-ad10-699a013f55ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d86ef43-a804-490d-a505-e19602d93d8c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1394d4fc-b6cd-4b78-837b-e18fb8349418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83852660-ba11-4412-8972-f818fc50f5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2bc5dd-a1b7-45fa-962d-18f1904368a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cc9e2d-0e0e-46d8-aa9e-4f8e0d9c2e2d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "276a88db-23ab-472a-a666-eea12bb4e97e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d358eee1-5760-4816-bdd5-839d520052bc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad6846f9-5e3a-4c1f-a9db-ab71c39537fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "695010fc-0c08-4789-8a8f-18fad9d34a6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6201f080-426a-457e-8a07-1f90867c11d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "76ea32d6-7bf4-4cff-a8be-ff9476a7fa4e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da4b7f0c-39bd-4ed3-859b-a153b600bbc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c18b4c5b-d25b-435e-844e-89f5aafbfd62"
            }
          }
        ]
      },
      {
        "id": "c02dc3bc-73d9-4451-a89b-d468050601c2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0d8562f5-01d0-4282-a2f1-067d39ac18a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01bbbf66-f724-418c-99ca-3c09ce29c4b7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "676e9dd5-c5b9-4322-9719-99a7d8250fcb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc7b52e-3a80-4c65-8bea-e3419415b831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d18ccb8-2d5c-46df-8093-ce3d809cd05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acde4816-574f-4f34-86b2-c07c28812830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09f19d71-568e-4849-8e93-c982ba09f3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2675faf2-8075-4d85-a3af-56abb10bca6f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffc1a97-5aea-4943-887e-300444bb6f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5817a7-760f-4e88-a809-92e62fc9fea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f95611c-4c9f-48ce-98c5-ca9cf48f7c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23c830bc-96ec-421f-8fa6-e175443c7b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec55492e-6d4f-4cda-87b2-11f819de8aef",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89e9a35-cfc3-4607-8a23-226b42381500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e9067f-d56a-470a-8767-ae47855dfc52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fb6c2d-0f40-4226-a0cf-33ddd9b2ae4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35d4551c-c435-48f3-a22b-2ec3a13b049a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba201e8-33b4-47a2-87f8-993d43d6692e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dca8ef-0428-44ae-ae12-c260ef2a82df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851742ca-3947-4d77-9361-54467cebcb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30046dc2-4532-4f81-a20e-9182ccc4388f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8c0b057-8f27-4f38-9951-3ab6c9ec9f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8621a1ef-50a5-40b1-a45d-7bb1b0c1b51a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2301dc0d-842c-445c-aa86-ff54de47a415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4dadb2-1b45-4eaf-ba1d-0f66e1d328f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64aa723f-fcaf-4180-96e1-298b4618a87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc297d8f-5aab-4a72-8b88-3fc116608fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f02a42f-7b2d-463e-9d13-68eea6de9d2a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b2e60b-72c0-4052-b5d0-85684fd9868f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803f07d2-41d4-4d66-b301-292bed182905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f458093-b5e6-4a49-b8df-7271b7ecdbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98b68aab-a7c1-4250-a033-1c55fb7fc70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2136f2f-8b26-406b-a98e-28fe09b509ca",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6dd870-c59c-4aa0-87c6-694e5e792306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de5c4db-faa6-405a-b219-3a85a06d6349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f294d7-47a2-43b8-8f00-66a64eb9e74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd73da9a-9c13-471d-8964-aeec0ce3023f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db06bef8-c1f7-4c19-9fd8-8e148c405ce5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e81b55-8eb6-4e77-a5f8-668e5150da37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a83d59-8c13-4db2-a044-07dfe98f1f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124dc082-7262-4898-af94-2586deb771e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28e55bae-f629-4138-aed4-ea6502fb24e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea77926-4530-477a-bfa8-5e7bdee2d849",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e03720-66d3-4a55-a9b7-7064963bdcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8fb6f2-e287-4c8b-8d5d-ff09aceebaa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882e0f19-f9eb-46da-a153-bbe26e22c736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffa78dbb-ae58-48d9-8881-5ae8e1dce1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f57af99-66d0-4ec0-b9e4-f63017158edf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a7be77-6a2a-41a4-872e-5728f2140837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07578eb2-69c9-4c23-8184-db119a3dcee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8266a90-6ecf-4f15-8880-f946583024d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cce86ea7-6a1a-4bc2-9d53-58be27ff1f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0996d43-f7df-4ece-ae2a-ce19c4f4c659",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d3ccde-3024-4d71-85fa-35fac52cc492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d73a599-9a3d-4190-a32a-d04cc70c3391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b21a50-5e94-4e50-8a9c-cbbcf48d401e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb75cfc6-0f52-4b97-9cef-a48e8ceb8e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f05771-95b6-47d7-91a9-495b975c9dd7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77792afd-9a9c-44c8-ac47-ccd81bddbb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f5e68c-031f-402f-9f2b-5663c3d4b676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b504f288-5e27-4e67-8083-19438d402781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7e0d3d9-a816-4df7-b090-2a5ae578f5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e96d3b-a3a7-404f-8506-7ff2c1dfcb18",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931f5040-fc91-4a82-b2e8-1a693d6dd45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e47d7d7-9bb5-4f8f-bd4e-c26da43b111b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a2a426-64b2-490d-b477-55511fd23e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d96b195e-6028-4a0b-adfe-f5918348b8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eae7e11-3e82-4323-b037-3e381d79a57b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16df6b7-d3d5-47e5-95d6-fdf5d5ae6cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365122d6-8e76-443c-8acd-3eceadc6f677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4643f5-9bbc-406e-966f-c821615e2b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c793a55-de45-4962-a849-33516c4354c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b062e9-d8fa-44c6-8144-d93ba251bd47",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bc1c34-91d2-492c-8505-78ee90057027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ac2c70-f936-46d5-9ace-e58ed9b80fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6c5e55-eb35-468a-8c3c-2f71a639f3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a2cdc0f-33ce-44d4-99c4-6dd93902d3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087ff0b9-f499-45d8-83bd-c595bd111fd2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70fbc15-3ef4-4015-8099-2cd7db9e6421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4dd880-3398-4c02-9c43-8684acb13efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb728d8-74f4-480b-9f88-f1a3299e069b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78bc6b73-bfbd-4fc4-8e5f-a57ceff9b355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94ffc55-5529-4dbe-b199-f1bfd62468fc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8c0d0d-c0e0-4757-a1c8-24f5c4951e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7697af-bebf-4b83-b97f-4aa06041d435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a935459-1234-4675-a6e1-b9162f62ee86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31c6e032-dec1-4b79-9933-91c920bafb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa87fda1-77f1-4be7-af1a-c64e2f252493",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed29c575-8b12-4b4c-b09e-6f75921ea911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f3ab4a-d049-446d-be8c-aa6c8a03b889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61039406-406e-48cb-b002-c13a4813df2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b8e4d9-8e70-4d25-b364-15d53c3ad83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1b7de6-ce65-458b-9038-22944f22eef4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e8389a-1e05-4dde-9071-1bb753c90d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14924783-e500-4278-9990-9065397928d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1839629d-7dd9-4d95-bd48-9cfd3056761d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1222f54-6f05-4bf8-83b5-092472cd6833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7949e0b-2660-4680-9867-37ca1b46aeaa",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551d2f8d-6c55-4346-84c2-941ad2577dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43e2a3b-a928-4f23-a000-359ee991f377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147550c2-c316-4135-953d-bf9c4042395d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12b47618-1080-4bd6-b713-61f54e74d714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38840c4-90a5-475b-9611-4fcd23539e70",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6ee55a-d28d-4610-a449-4eb2f73b5caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fe4ef6-7e75-413e-8240-70f6fc98309a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1127dcc-84ef-4bcd-84be-d914023d74b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24839015-f439-4f5e-b5fa-e927f9ca4391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d671190-2d43-4741-bbdd-4c173cc41b7d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b761b6-b83b-4b14-8500-d41a6a0228d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e39010d-aa1b-4e7a-a3fb-bc2467e93672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db957ac4-557c-4057-9d6b-4d8c70d5f078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f45093-edb8-4a84-9648-a40294a376c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740489c9-475a-4c8e-a287-3e38d8bdc8ac",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6009514d-e755-44cd-971b-69947083cfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ff73bb-b477-43c9-8d53-61eb4ad6b48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7aa334-8124-4161-95f9-4109923fd8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ff5cdc-92f3-47ac-8575-a75763ce9e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e53ea9-5b9e-4c2b-8b6c-037bca26f7d2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4b5a3e-eae3-4501-b11e-83196364dc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282dc474-0cc8-49fc-81f0-5f154c2e3724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5d7ae9-2000-4a23-bbf2-4999ffca552d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "62047024-b518-419e-bbf5-fab83192fe04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95038d71-ced6-4df6-b34d-e0e886f05c20",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1fcfce-3cdd-4070-b432-2aacc275bf42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9fa5da-fb8f-461f-bc85-7ceb8166d14d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccae803-516d-4779-9609-d9f89b1c225c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6d637e-038f-4a83-8421-7c3800d64a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8c05aa-02d4-4dec-8b70-ce75bb72c050",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eef6eba-5da9-43b0-900b-ee41e2c29494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7352387-be75-4eaf-9e14-d71f9886a50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed6b457-8ca9-4455-97fb-cc02392fc011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "218d04d7-adef-46aa-a7b2-003448d9d477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d253ab5c-486c-4fb2-9b32-4f440420de38",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df86dd70-3e8e-47b3-9ea8-048e93116118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b2c91f-a0a3-42bf-acee-b4de6867f5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d710dd-323e-484c-8bb1-643e14cf5753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01f17d4b-4ed7-4538-b98e-835e916e1ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64077872-b5a3-40c5-b995-b904986664c9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd09fd4-8c46-481c-9fd4-16819ad8b56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ededef0e-f044-44ed-b609-41e3d902fe87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f3557c-6eca-4a8f-b412-2cb5790759e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b874839b-5e0f-4239-bf19-269dcaf81019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb91fbb9-e946-4ea4-88d4-c8dc52bab865",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d286ea-eedb-4f50-96bb-c110671b6ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b16edc6-fd32-473b-a96f-7dbc601a6d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d19438-c4f1-40f7-bc30-314118b67735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9162e0f-b940-406e-acaf-a5ea8d429be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba597a8-8b56-4297-a1c4-59442d020168",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0cc1df-fd6a-4739-af10-dc56e92e5580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97cef374-198c-4e3d-a7ed-aa91a97444d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d9a11f-bd76-47c0-adda-cc8f6c6d0432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8c7656-e6c5-4e21-bbb7-f7b261bde343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908d9194-5595-446d-83bf-1b11f48a0257",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ce1a24-5bd5-403d-845c-f14056868674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71770e8-8d62-458e-a196-414ac0b3cd70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bf8f8b-5cb8-4e30-9342-fd5abf5e2ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ea78c7-7c12-4962-832a-e2c6ba062322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0020bb-a8a8-41b4-b691-1adfc12cf3f3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bcce4d-d578-4a39-8c16-fce95c2d5407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf34d724-20b3-40a6-b14d-a23ded33d87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea03866d-03cf-4c82-a76d-ffb587597318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "626d5d11-a489-4dba-b1cd-8c3de4851e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c39a037-fb56-4b6f-a6ed-0fd1d2dcce70",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c78fee2-7f79-45f3-a000-8060dc7a8fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dcc729-145c-4782-aca2-754a59b9e3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75811ac-098b-4794-8e28-0760d2248ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75abcdfe-efa4-4b62-88fb-ad937ae075ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25d6811-ef7f-4271-8069-c51eb3d8820f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6badf12-13df-4403-b22f-6e04bed677fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393a0a84-84ff-44a4-b5b6-4c4e19aa2900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468ddc7f-b22c-4101-9234-4d63f7310938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa95f0a2-3b5e-4557-9dfb-e56a7806fc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71867ac0-818b-40d3-a0b3-b6c5eda32eb6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1d184d-5eed-41b4-9dc7-0b7aaee933aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb09613d-a620-400b-8aea-c60e7174fe71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb17832-fde5-423e-8ceb-9c7682ae27a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb131b5-b402-4b13-a484-6d34fa716ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54645ed-b265-4798-aac9-73c1b945928a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9741c73-b271-4b4c-abc3-3bd954c0429c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f775cbc4-a438-4ef7-952e-e7b83eeae62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c47c0e5-9afb-4826-b535-97be720e6201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b9f6681-4cc1-4a0c-9980-3a339c5ef1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e194d8d-b5f3-4aa0-916c-9af0f8b36d5e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "debadbff-951a-46e0-84a7-cb49a1499418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016e7dc9-e5f1-4466-8947-682ec68a657b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f29811e-d3cc-4475-803d-602987ab7495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22f89a8e-05d4-427f-a903-73f2b34c4a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c1f088-263a-4ed9-9160-3cf825f7dc8a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0619b95c-0031-42d4-8c30-6995973dc765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242db18f-8a00-494a-9011-3eb732fe2f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf93fbd-54b4-459d-b807-ae6fd2ac1d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0405e8fa-e025-4f9c-bb62-9565f4b5858a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20342e6-7214-402e-ba5e-2975e1d12f44",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0e5744-a396-43d5-9fab-4edbf023cfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4b3a10-aca3-4440-916a-446ac0ff9374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2beaa5-4d46-44aa-b879-76b71c9ee61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7d9b4c-a2f5-49e9-945f-6d7fcd45da71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685864bc-4496-4a41-8420-985a874ef7b2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743698b0-75c9-4720-be78-fa1539919f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9a3a64-ea9d-4481-a567-7d3663796c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69213a2e-025d-4851-bc4f-7afee66567ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "358ad4bb-f107-40c5-923b-f6604d515212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e740b0-cefd-4a36-bfa9-52c99f876443",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64aba10-e227-4d2b-8769-d7fccdc1d624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65095dc-4c9c-44d5-82c2-d4579cd41d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6b9b60-c828-4b1f-9119-f8f669548dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4543ce-82c0-416e-ad26-e882279e0915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a25253b-8aa2-4744-a26b-7e407b5daa16",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a1eb66-b238-41b1-b2ec-56c81951c341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acfbff8c-d158-429a-b233-fce5d2102439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362aaf3e-c0ff-4af2-8d01-f6ced795f537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "653f0312-b869-4f67-9d6d-a9d18bbc6262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa2f63a-c34a-42f7-bd4e-fafa9c8c547a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672d1f29-40d4-414b-8b50-b5d8f0af3709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6829ab-a782-404a-ad25-5d63302868b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcce416-2b88-47d4-be47-c6a6fb127eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff977d4f-5628-4ce3-8021-0e6446e13458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fc051d-6d18-47bd-9f05-94d99ed9537a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28c3b4c-5eaa-4e06-85b8-c2ff728824df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ca1a33-9d78-4003-9e01-60b271bd75b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54701da4-8bcc-4ae7-b381-be2d6fff5547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9deb875b-6f12-4936-8fc0-30f927bec8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206221ef-7a44-47af-b54e-713e2fe0ca01",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637bb0b9-f0bc-4078-886e-47626e0a9a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74199ca-40fc-456b-989f-3b224aedd6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9e3707-6e85-4218-a731-4fcb66a9d8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48ff9ddc-a3c7-4ab7-9425-87d910183be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7c23ae-1fe8-49c0-b470-eb16eab6d4d8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f42ba5-2504-4f5a-88d9-cc875e9576c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97f1f66-f907-4730-9284-aee5efcfe95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac6d02f-3636-4106-b785-c1826b133f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "927aaffb-3e61-4d40-8070-780d5938a28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b27d92-cc19-4280-979a-4276ca7924de",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383acc47-277a-4009-91e3-bcfc1b63181b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865f2cea-74dd-44b1-b791-f22bfdda3a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236652d4-a22d-4705-8c68-b48763a9244b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3be06a30-f6a1-4381-8441-c7a85b31c5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d88b22c-aa9c-4899-b5d9-d1b53114ea79",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da6269c-c0a8-435c-9bb3-e8c753843c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5f0732-65ac-4e8e-b70b-7d83df395543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e02e42-9477-4de6-a7a8-fb1a91a87f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42dba004-48e2-4370-81b7-d4fb71f44c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff54a23-18a7-4415-935f-8264949a739f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ccc0f2-c8a6-4185-9cac-cb07e8245913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7b5474-2af4-4014-8539-e7141234632b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a383cb7c-c1a6-4322-b9de-d1de07045027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "140f0729-cde2-4ae4-b1d3-f2356cb2910d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8298e86f-15b0-4ae9-9c0d-2b0bc02c15ba",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd1e93d-5ac6-4eba-9fe4-53ab9dd043df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3e0153-34e3-4955-81cd-cf1d753207b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092e8954-39c7-4412-a33b-14ed972e6441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8077bbd0-d85d-44ca-a385-f2abf6e00d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbe84ca-ebf6-4aca-8032-cccae01d5fbe",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a418de-d791-4f59-8719-542fc0a4cd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35b0b41-73f7-40f8-b30d-98530fe902a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35c03ef-948b-4413-b617-07fa513121f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "306cb79c-90be-41b6-823b-a132ead20668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b2c2a4-c469-4018-bdb1-15d5be91d466",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41f6788-a1ae-427f-8743-b05aac27165f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605083e8-beb4-4667-ad65-078100a065d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fb8b58-b60d-41d1-80ec-7e3011bb5264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "98d026be-0fe8-4b17-aa22-a52820381818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ff9195-8127-48e5-a8ae-65a77de2ec4e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae741fd-0970-4485-a288-2fecee518750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b538afe-86a4-4fe1-98be-e3d1d27323b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d83cced-bc0f-4663-975f-f9f8e8615107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec68e8bc-b9cf-4b82-963c-1b22e40863d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a79c364-1e95-469d-a157-a659952df26a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a57456b-f3b0-4952-a511-50f3b5927593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb946817-6593-496b-b5af-b4fa949b52b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8a9c0a-d250-43f1-a44e-7a1b83bb9eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece9d204-c5bb-485d-a2d7-c7b3e3249245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0802265e-4cf9-4271-9e9a-68aba2297a5a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cc56ce-6da9-4680-bcc2-e8e2a8d4991d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23dc606d-565e-4b61-895c-280040b997c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7715afe8-1dd4-4992-8b27-d70958c140e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a454874-91c7-449f-90a6-3cfe484b3118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a04cd0a-130b-495d-acb3-221752c33469",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c67992f-c5b8-4b24-91f0-caea356978c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2c2f4f-3011-4e68-b97c-c2e2b135bf19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ec6e25-69a7-497a-b966-ce892072e277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "00d68513-bbb3-4104-a60f-abdc24b90f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a15f2c4-aecf-4826-aa17-fcc715996d12",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7234d54a-1902-4828-b47a-27951cb8447f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091d8e63-21d9-465a-853b-9d75620fd207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081abbdf-757e-4a12-8fcb-cc1454ec2ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "da8aa219-0ac4-40af-956a-41d5f3a3a0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b012d0a2-b7e5-42c4-8ffb-82a7009e2b37",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36db6cb3-01b5-4c5d-a1b3-ec73428468c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c10b08f-26aa-44ff-bc62-00125f17f94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ad93b5-44c2-4fc1-a0a7-46314f1757f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bffe74fc-9b93-4607-ba79-ceb14b658427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b1e6cc-b861-4266-a155-b40298657476",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ddd84d-833b-40bc-9afd-2857c67d993d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7d2ee0-c1aa-41c1-9267-cc134fe2af63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff6a5c3-7b37-4387-a76b-7dea8a1317a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "266e3576-a219-4336-9a92-e2d2045396f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d865be24-8447-4531-bd66-782c23553622",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673564b1-a486-41bb-8058-73ae611223fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46fe179b-41c5-4d97-ba8e-55cb1249f605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcb4e51-df17-4b94-9d81-8af81068dc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8707a2-3527-4dfe-baf6-7e638d917673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd01c946-d075-495a-b148-99bb3500ccaa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07dd720-fa96-441f-bf6b-7b5966783ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d5b09e-1520-48a9-ab5c-5fc243857916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ead758-6b56-46a3-9a56-b502d1196264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8fc827-8182-4acd-ba30-8d3278ed198d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9629b265-4f69-4e80-814b-5c4867b1fc97",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24517feb-d197-4df9-abb7-d54063b8eff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58157c3-f069-4cf3-bd0e-1bb1d05bd280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1147b6a2-0e4d-4742-8fa6-7e13d7ce0c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3d5435-f9cb-4808-b32b-d985e59a44db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3905bd4-b7a9-41d7-a7d2-cef56bd5b774",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19bc21b-bf04-49cf-82f1-49deba6688be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db146ce-1217-4373-bdcc-fa39b4416b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101012ba-13a3-41d6-8ab8-9dc3d4261876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e68bd410-e115-4690-86af-074e039d12a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23eaa509-a75c-47b4-9c5b-8b469787210e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670dc2bc-6e6b-454a-a060-ccb25f811c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621ced9a-2ebe-4600-978a-72d3c58dc6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39de4654-c9bf-4b32-9245-04c91a161156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c606b16e-b695-4ed0-a621-5b174f393da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236466b1-eb4c-42a2-bf2d-8964a14600ab",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c352a495-cc31-40ee-96a9-bbb5947dd42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36cff4ee-e393-4443-9099-90e410f74568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05481263-c9a6-4138-b77e-425baf9e629f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "066459e0-8bdd-4ead-89f3-41e92ad92aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9326d9-5bf6-46da-ac6e-16fd7e576303",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab360a7a-a374-4199-8f87-9cf7ca731d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61356764-2d44-48f8-b5e9-5f742d7f3e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dc4ea3-5493-4af8-8130-59823b12493b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70097b04-ca61-4a69-a51d-d4b27febab84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833b8573-2dd3-4277-a8b8-4191e0294196",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23f7c3f-6a02-4dd3-87fb-3efa3bbdbecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a5e476-eb97-4e0b-aecd-f31515839991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca171be0-50f5-4d77-8c2e-52d75b021f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe95e86-8f8d-45d6-b420-2667208e2186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9759b9a0-7563-4d02-abdc-8dce501026aa",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74582531-003d-49a2-b6a7-6058db837e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de6610f-319b-4a4a-b1ee-a20bca06dd69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d50aae-ce87-4e73-9d4c-5fa1da140d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec06365-ef1e-474c-b009-28844e8a0bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c20551-a7b5-4c6d-b2cc-fa775a1724ff",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d60a76-984f-4d20-9afb-3aa1b6e69191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07df7c42-dbae-41bb-9f02-25ac6b47893e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1e6966-0919-4ba1-ac07-0d2aad02b47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ce5e78-74d0-468e-b158-b78a64888e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc5e181-e803-462f-8f41-ce1ef0936b4d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1b8b21-69ac-42bf-a1e1-05d611f723e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240229b8-4d64-46cf-98ee-d8117e872f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c003201-d5e0-45e7-8fb4-4e6e0b32ea65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd32037b-a163-4dda-813a-176ed61eab0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6394d46e-d631-440d-ac71-c28ad128a1ea",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc0b198-eeaf-4826-b4ee-ab147f5e3804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d565b2-6227-47bc-8ec9-0f710e06c83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b24b96-8e40-4a98-a535-d140cde89ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "324bf7ef-222b-4235-a256-556bb971bb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116c3e40-1fc6-4645-bbc5-9613719c836f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c752a864-b0ee-42bd-9d29-c6f12939fce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9ec9c3-b596-4910-8f97-dd7a21c185b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4873defd-eff0-4045-83d9-d8d218c0bcbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "241a8ef0-5918-40a5-bb90-56c131075215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bc5cb8-80ad-4b2a-9b6d-4077e3fe48f3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b478e7-ee3f-4d64-9649-47a5c228826a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0cfc7c-710c-4235-b39b-832259d2de74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dab5767-20ed-4326-97b5-42e30a7a5b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "358bea19-d60d-404b-be06-822648bfb20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecea947a-fe2a-45fe-9305-0096f64d6a50",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f47d3a-0c5a-4e6d-8cab-e99935cbd43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba896a5-4177-4f74-9207-b43cb20d15a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75bb3ce-4775-4ead-977b-c3abde4a73dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bae4625-03e6-43c5-8eb8-1c0aadc70fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaac26c4-e726-4d96-a5e9-bfa6e714563b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51cb0d5-a467-4337-b580-1255146f9457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cceb5ee8-6d1e-4411-9b69-747514636d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2c437a-bf63-4713-b58b-c98d52e30bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "04974371-d0f6-4663-b96c-c0f8f2b5050f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326f2b24-8d03-4b1e-b6f1-4248161d2b0e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67717693-1456-496d-841d-18e2ed5f6473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3f921e-3264-4986-878f-5c55bd7c9a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d2e853-3314-4542-9ebe-f642a0cbef69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c464e8-81b5-4da6-9802-02c50f1c07e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc6c4d1-f843-42ee-a405-8560f95c8bec",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c865dcb2-a142-4d0b-aeb4-da0ea2498862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9506ed-6853-4b33-8976-3c434fdbd449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd8a336-ad2a-438c-b25f-467b42c7d6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "244a651e-4341-4be5-b4bd-c9794a772649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4fb2bb-b3f4-48f6-a87f-1769275127e4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc992d8-4c59-4441-b0c0-e68ed951071d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f5ac92-044b-4a05-b523-b9be9a49347f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a500184-48b5-4bc7-aa50-073d75cd778c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb865a1e-8714-4369-946b-b1fe24d56818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470cd034-c28f-4383-acaf-c59d07295f18",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385f9e11-3ae2-4187-adca-2788bf02552f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ba5a27-ff94-4e98-9282-27eb2b6f249b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7227bf-59d9-4aa5-9170-52fe72408781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9d0998-c4df-4cc3-b3f0-89a66205ed5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8e1bfc-083c-4f96-b58b-ef98b7e6eeb1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4ccffa-de1d-4106-a574-6d06516db781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1648d8c-aaf0-43b5-b208-0c20fc5067ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efae3ea-d3d5-493d-8733-61598b0c27ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f02831-41b6-4450-8f12-68157a5e1dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae247af4-d697-4c8c-924a-02d42db11d4d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884a692c-d77d-495c-a3d1-2f8e9195f067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f0155b-fc45-4e2f-8a7d-8ae3a0e37f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e93eeee-2a3d-4b6c-977d-883eb71cbcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c67b8568-75c6-444d-8f84-57385da5de99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc10a481-c4f7-464f-ae51-a2af0fee6865",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d3f22d-81ee-4173-b291-7767adab81a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e12c52-323d-41c9-ae16-9b9c49f82583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e6bb79-4f09-4241-bde4-abc2d03ac819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16381e53-499b-4ead-b0ed-e50d56e533f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a939d64-87ad-4cd7-b80a-ef370657c646",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612233c6-66d7-4ab3-abe0-7bcb71d9af4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c19044d-0167-467a-b3a6-44c003bdf2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7298a980-640b-40c8-bf49-b3d989faab85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9be8776d-838f-46d2-b94b-76d73543aabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653b476b-96c8-46a8-bff1-3e8783581a02",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49991040-3fd8-4563-9da6-2995ae1748bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f91d14f-5571-4997-86e0-0f6fb601f35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89313c7-2a47-4f75-9314-0bc455efb41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f80f09f7-a918-4676-a0f3-108cbce20b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2243a63-a393-49ee-b45e-21d67d2514f3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21582164-7e16-4722-9ea4-49e7fadc56f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80265ae2-6e58-4b2b-b106-a3abef2ec84f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568da0fe-598c-442c-aee2-21c01d598a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9356fee2-ff65-4b9b-8797-30f8d82a692e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1357d48-2b30-4c2a-bebf-bd8807374359",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404f6b1b-427a-4b7a-9e11-84900b5e8150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da70f3f-41bd-47cd-8bcb-8ecb25295000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82443fe-551c-45b9-ad7d-0ada77804142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42e44fe5-0908-4c83-9295-7f452a98a710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccd5f24-eb6c-43db-a679-8882a6df3ff2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1ca2d8-bcf7-4a56-a4de-72c38eed9f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecd7e42-c651-4158-8ca7-a018a42d6da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6249f16-8a44-44e6-8ec4-52d3a432059f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6562c663-dd04-4381-bd18-3fa334ca9dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c092227-c099-4e06-879b-dcc730dce278",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee23c19f-6413-4920-a242-2b99e6e6a548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cceb28a3-fef0-46c8-b2eb-79def31c8559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb86966-9850-45d0-8b25-1641acc415e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "99819334-e195-414e-beb7-9706f4e86e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ebdc76-5784-4749-b1d2-705b667b962c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d292fe-e300-4b3c-9177-84f75dacaf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be81221-f85f-4222-870d-24c9b01d7b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fda07da-5d33-4ab9-86e9-50454aa26cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "90568387-72a2-469e-b1d5-c922a5ddd58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaac2eaa-f827-4334-9635-0d399200fdd0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa6b2c0-a633-49f9-95d4-05cb5a3dcc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdc82ba-c044-4804-8f81-9dd11526ac87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41c07a8-e7c5-44cf-a9ff-77835badcd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "10df8f6d-30de-46a7-b358-ef32a8682ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2477109b-bf6f-409e-99c6-9d8adc311d1d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33143437-0759-4c63-bc34-cf4058a8e664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8bde5c7-4f02-4cd1-8286-72154bd96cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3963e559-c216-4209-b4e0-965ffa8dae42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "acbc3933-342d-4347-bb8e-2d90d29bac00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2effe1d2-4ed1-4e90-a799-84d0211f42ae",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cb0995-fda1-48c5-b373-2b26a97f935b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8b4bef3f-a0c6-43fd-9ebc-efe818c99471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b5f6a3-86a1-44eb-8f54-f2619292d16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b931a5c-9d04-462c-8bb7-6a829cc87faf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9a3aa412-346f-48e9-8e09-27641fc91869",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e8238c7-0d4a-42fb-893c-2f28c4f5b3e5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee16fe7-4398-449f-9356-721f7fef16c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c94668e-d54e-4ed3-90cf-6b9909d315d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7848f2b1-b63b-4094-b0e0-6bda25fb10d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1fb17fd-de9a-4c9c-bfa9-127d4b34c6af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "577508f9-5ad9-401a-9008-e656f227901a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7539d956-73b0-4efb-a591-b37b0be37c3c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd172da7-262d-40b6-8908-eb95de27d069",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "435e84fd-7988-4c57-bd7e-3bc18fef85a5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d71acfe5-4302-41bc-8955-9cc27936fadd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34aa41ec-f09d-4963-8b33-58e3bff795c5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "34e18edc-9726-4f56-a86d-44c459207d85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce1fd912-a284-4921-ac83-e69e65346e88"
                }
              }
            ]
          },
          {
            "id": "387b4bf7-a861-4a14-9741-3d02b595ec5b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f84d348d-3f75-476f-8507-aa7b286afe23",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a30e7dc3-721b-489d-b40c-da7387fe2c93",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7876493-95d0-4e56-b191-f89ec85c1d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "acbd874a-6939-45d3-aff0-cb634cf86226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7987f9-38a2-4641-b733-97e051a0834a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd1a546-191b-4702-a056-43cb28c507f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "58191df1-3be4-4461-873f-34992237ac3d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d54059ea-d1f8-46e0-96ce-2078de105b5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f524e71-193c-48ba-8e40-0cc7c5048cea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4108100d-7fab-4316-a4da-5bb4009d07fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9227ba18-2709-42aa-8ff4-8a0686b9935f"
                    }
                  }
                ]
              },
              {
                "id": "5447ac3b-cae5-4917-881b-4f617769b514",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d42218c1-c5d7-422d-90fa-139a8f90a1d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0657751-7dfd-4f36-9185-4fdcd35412de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d43fc049-fa81-4fa3-b655-a3a6c20f82fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95cf35ba-797d-4a79-aa47-56d5e8daaa8f"
                    }
                  }
                ]
              },
              {
                "id": "11386c74-31bf-4fc9-a7d5-ca49af0dada7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af7944f7-569e-4876-b29a-51ea8fb3e3d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41f81832-6460-4d88-88b1-afd3415ec244"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b720c907-46f5-48dc-82f0-4210aecb99b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa713d9c-d7cc-4daf-9fac-084dc7eae2c3"
                    }
                  }
                ]
              },
              {
                "id": "9945d855-3b2d-4318-a108-7ecbc22b4563",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1f9e626-f5b5-49c4-8401-54de4d9cbd19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "691625af-7cb3-409c-b283-c0f779880c2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c9f5782-a7f0-4690-bd45-c877ccad267b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5e87eb4b-f971-4eec-a40e-9b193085aaa7"
                    }
                  }
                ]
              },
              {
                "id": "c7dc0ed1-e49d-4fad-9b26-c5aa763c6e4a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43cc6c70-de04-4c70-baf4-0403f2c6a0b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2d5efce-73a5-48c0-9853-02cdbfe11367"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a1ff709-1bb6-4ba8-a337-9d6905d6f65e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3e0a6c0c-7274-483f-8dd3-dfb2caa816f9"
                    }
                  }
                ]
              },
              {
                "id": "680b7eee-59d0-42a5-ae0c-4b9164a3aca7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5f8ebd9-bb3d-4604-a0c1-3e140721640b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8bcef66-2744-445b-a53d-34771c8e1251"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2028460d-867e-493e-8ffe-df9e72e6a05b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "09faefa2-beda-4f99-971a-1716a035266d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8a9a2475-89c2-4c55-90f6-7fd9794b242c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "423c0d2f-20e7-4287-b07e-1c058423f396"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d0b7957c-1df4-44ae-b835-184e75ca1881",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "834b1b6f-5a0c-4c70-bd5b-302eb55cadc4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "383a6050-3150-4585-84c2-08a551d282b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "501729e0-59f3-495b-b518-752400f5155a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "187ddbdc-9477-433e-ab1e-2179bd4dac18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee538273-8f9b-44f2-b3ac-f554d97a5f55"
            }
          }
        ]
      },
      {
        "id": "082aea05-cd29-476b-837f-026b256b77f5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7d5da608-06cf-420d-b118-7b1cfd7576b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4dbf59ae-55a5-4a10-828f-0774f292551e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cac4abe7-0b7f-4515-84ad-f2c1ff8779d1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae923cad-276a-4823-acb8-a867267b4681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c0fea7-b93f-4d35-9d00-92f2f8cd577e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb41c6c-0584-4367-a203-96432ab5e8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e40f936d-8a80-42b4-a2e7-a28917516fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1c2faf-3fc5-4cf8-8435-968f2cdaeee8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a75fe68-4f4b-4853-9f5d-1440daf135c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b63dbd6-1b8f-478d-8727-c7a1ea61fdfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a24df81-aa1f-401d-8fd5-b59a43a581df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc57a06-8f4e-4b58-8949-8da98dc4fb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bf7935-9ddf-4261-940a-b05bffe90ccf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac933b8-d3d7-4857-a879-172a9c277e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff8b93ce-c7d6-4eb3-86b9-df9e54077b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec9ff1c-30ee-4fcf-a6e1-8b4d2860ec83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67bdb64b-13cd-45c5-bd07-f726802d3d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b2419b-45c7-4e20-8ab3-dfbfaddeace3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb69887-eac1-426e-bcba-48b7243e56fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e90b02-6cce-44f6-933e-4acbabdc247d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1098b015-c806-4c95-9028-9432a8bb482e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82c9c42d-82ee-47ba-bdd5-116e73691bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67730ac2-0385-4e71-99cd-4b9711165b9e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1183061-b9de-41fd-81c4-4ed4b0d71ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90967a0-d944-45bd-9034-05f8f9333b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0958a4f-3508-4062-9f91-01da25ba4088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae87fff-134b-42e4-b2a0-dc6eda45193c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd046f6-c02e-4f43-a5d6-47ee8b58adb2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500c6f8a-8fa8-4320-a27c-650a9c8a66cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39751b02-a687-4fc0-9022-63ab693b918b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28629a6d-f27a-4d6c-8858-c2f166fd364b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85d853de-fc62-41a3-8fc5-270f76a9922d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3541e084-f308-400a-80e8-32bbec768906",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a594dcb9-9c7a-4366-bc69-49da7049fa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a6e819-f031-4965-9b5b-5b4b25ceb617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9502c01-4493-47ee-8664-e6be4001993e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2ed013-775f-430c-a66d-f49c7e0d9667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb7e703-c4d1-4006-b19c-a0f7b4039f90",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8537304e-b552-4d39-829b-a5d27952ae07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8368412-45cf-4f5e-97a0-3bacaaa0e8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351a15a3-b46c-453a-9ea7-2a0aabf2c158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14593fee-b8fd-4ff8-ac5e-0f71451f3b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3375c22-4a1f-4275-9b46-ff4276cfa3e8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7cbf10-6c0a-4050-92a7-8458effdd9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d4021c-2d38-4efa-bbe9-4cafc900753d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea49b0d-9ba3-4762-b850-101a22b38a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db09007f-9bea-4e4b-b257-920816c17aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f340baa-5d9b-4ee5-9b38-6426e1501e05",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40700a5-a744-478e-a3bb-113e9abf681f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4693247-f66a-4ac8-b889-b07cc757fe9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ca40f0-366b-4721-bfea-020f39ca3948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc97c4b8-11dc-4fbf-ad54-0b16d02d444f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f89ca0a-d7df-4f7e-8f4c-5b6a51cd0600",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62566c34-0c06-4ae8-a7a7-9c457c4dd608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645a511a-bc15-43a0-b705-d09de6ebf61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a7ecb7-7483-43e0-b8a5-3dd188e92194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cbaef9e1-6e0d-4a2f-a7c3-372f1bb2ffb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aedebe8-7668-4d36-9ca6-2599f2ce86d1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0a678e-20ab-43b0-b176-018681635b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2542dd-9843-4702-a6fe-e5fc685608db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8e7647-071f-4ea6-93fe-f1b0fb9fc7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d390f42-a4c2-4eb8-b20e-7b2c54102c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331220c6-606e-4ee1-aa5b-549df10689d6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7be0fad-13ef-4ce2-ac65-5e0802d63fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ffcfb0-b9ad-4138-8e18-ca30f4353b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9568e063-d08b-4dd1-bee0-aa61c0bc5bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94a89bd2-ffaa-47f0-ac08-b92a8471105f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6cc5c7-f60e-4573-82b3-3d4d47fe4af5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e68ad5-cf9f-4993-b70a-37248ef5b3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53a895e-0b7c-49cb-b84b-fe94ee4dd91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac49b8d-c600-4759-92f7-cf65c75c4f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dfcfe6b-2d86-463f-84d1-1201149e2754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d77e1f6-9c0d-4481-8654-42aa406fb104",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a3d47e-41ca-4b44-a99c-e01e22b07322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0e2ee6-c5cb-46f5-99e8-80c6ac275a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7d5990-bfbb-41c3-8369-28f8de2a38bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d49ebca-bde6-4275-9608-d95026015790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14cecca4-98cf-4f4d-bd5e-99716670b7b7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2b3aa3-9ca5-4dcb-8d01-c95bf9f73adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11bc5c49-e92b-4885-bda0-e542c204ffec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53995c8e-eb62-459f-a7bc-b1dc4fd2cb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbeb317e-e0b6-400f-989b-a1ded288a081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34160fcc-5236-456c-8e98-7ad1d383bdd9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5788bd4-044c-4bf5-bd87-f716a494dd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc04856-dcd2-405e-938f-50edc9ad6d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f389d4b3-bf63-4e66-a36b-c737cb0ac3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0f4aa4-a562-42c2-b3e7-fcbb771a3bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c5c504-6ff2-401a-91ad-0f82d9dc8c08",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50653b4b-f2ad-438b-8b0e-a8bfd975b434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7fee0a-fa63-41f7-a3f2-e3365326ffa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17bca1b-ef0d-4022-bd26-7efc4cb80a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1dc561-afcf-47d6-8758-a7e5a40e5464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71b984b-9793-482c-8b0c-6cf07fa4d012",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb3074b-daa7-47b0-9229-af632d2f3514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61a7deb-851f-43c8-ad48-2e21f66e8653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87055d54-e0c1-4a0d-bb7f-95e4575f55cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62586411-a1b0-4897-b352-ad4870a4c82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75341ae7-1b79-4000-8ff7-5d72d88913a8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9532395d-8922-4164-b2a7-161da495c7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2366f8c6-bbb2-41d0-9b61-a849fe8e013e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e32f5c-2bbf-4c6b-9169-2a77608c5ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5551fae2-8a18-4c39-a703-8a35a5998bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441eda89-0fab-41be-8bc9-332153df4579",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e31cf5-ad9a-40fc-8efe-1d3630c480d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc2c743-f4c7-49c4-87fe-743b832411a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6485257d-04bb-43f2-bca3-bc7166b652a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "035ae97a-e57d-474d-88c8-492fbad25d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9971f0b-1ee2-4fc0-93d1-6c1145d86173",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1c91fd-6761-4404-b215-eb00ac590ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e2e3c2-1322-44b4-93b0-1094d4876425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc084cbd-b415-490b-b0ab-ff430866a8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee6173c-31c4-4d63-b06d-751ac6bb9d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2cbf4a-7b12-4571-a5d8-1f182c71785c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c936c22-4d5c-46cb-ba9d-46fd375f90c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18319342-a1ec-41e3-8c82-628932ae6db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e696e6-315e-4a43-8e52-d11556bbe55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "090112df-4285-4d39-9be2-7d851b75c9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0079bb-4f8e-401b-a014-9f0aa3bd3e8c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afff1a8-a50c-4220-908f-88fe1a7321ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c60f5a-cc01-469e-a104-bda0261e77ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8694a26-3bff-4721-b067-71383242c9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9eb92db-3df4-4fe1-a051-4e231f21fc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a279481-83ca-41ff-b166-6797cd7943e7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9f086c-ea92-4976-b290-bed7bbb9a7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4cd54d-caca-497f-88de-032e8d1171f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325fd20f-9e2e-4417-83d9-125e9ca98ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a8d09e0-5ce4-472e-acac-dd17e7fc06e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7909d6f3-3a0c-4fd6-9c9d-674941bc395d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1ad30c-d660-4bbc-9503-d0c9098628da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb44779a-7d08-4004-8e35-bde2df2f8ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f99c30-b35e-4d4f-9643-f375cdd4dc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d9d20b-abf6-464e-9e10-1393a736c892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74901de1-937f-48cd-9edf-07c187e5b458",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb498ee4-08e3-4622-9dcb-411596a70304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b5b2c3-4a27-469b-a2b1-a24a3973d480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e1579d-6538-4ad3-9520-1d67edcdff6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79ef37ac-1893-4b13-9cc7-f4190ed85ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782a5cdc-e419-457f-8a98-243829f52c19",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65f5a97-5809-4a1b-892b-ca8f4ab94b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62698a2e-dbf4-420c-b2c7-b71c7b58bfae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c82512-db94-4801-aaaa-5e75c4b7d9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75a38a4b-57dc-4488-9161-7ad95ebc3fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30ae81c-d09b-4515-9fa5-cb0be14f947b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc735d5-5d7f-4149-a8b4-f3a03ba07b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6400eff-a3cb-468a-81b6-89ddab8678df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb62e56-7088-4b13-8df4-871d2a055e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e59bddf9-361a-45a4-8bb6-f01c610c54b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aee2685-1184-4365-bed4-067f54a84d54",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb83914b-00d2-49ba-9b11-791d0e32236f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa27f2e-b4d1-4be9-9009-77da72ed9acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635c4549-5a31-4914-91ea-b819b0d67ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bbb5e25-5e96-46aa-89d6-f7ba133ad7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a378060c-8d38-4818-adf8-399c6a82da14",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111407c3-f822-4df7-8711-41b55507ce6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca6fbcb-3438-43d2-8187-19aab176b42e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce590556-1a9e-4b0b-9f0c-fcb7f9f8f832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "239dada2-e8c6-471a-8c93-56805bef519b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3941f81e-d835-48b2-b4fb-cfd844fc5607",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4434f5d7-6a8f-411e-a2ba-83b032c81282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ce9c5c-a779-4ef2-ac16-918671200c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d12ad2c-68d8-42ea-a783-8d85700c13ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fba93655-7569-4d9f-b753-e166d2b6b25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b62d3e0-6181-45b4-b5ba-4a8d8f3daea8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39525a7-778a-4863-8672-97ae5c9b7fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1bca9c-c88c-42af-ac49-56f601ce69a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e804f82-9692-4165-a298-af642fc902b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be614f9d-e30c-40d8-9e46-6e4f8f648444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c654fd2e-793e-44ff-8835-33538da7bbe8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfd9044-328f-4cde-a268-2182f6cbe337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77de4ad0-c821-4334-b228-f27f941b9485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5602bb-a72f-4ed9-8995-1325abafb578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57f51df5-3cd7-44c8-ace4-285e065ef7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f7a7ac-f522-4f59-b77e-46a114c1e8d1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d935434e-a8ce-447b-a11d-73baaa15c96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fdf6c36-e5b6-40d2-9630-9527261c96ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd1dc3b-034b-4fa3-87f3-57ac2207e7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb1e8d5-2b16-48ee-a7e4-c7fe9dc8bcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928b12d1-3429-4a6f-8f63-d90ade99fe27",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a8fdc7-c79f-4a55-a471-1907168902fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932e6c24-0f8d-4de4-b2ee-242be3b2d5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73360216-036e-401d-b31d-2b696bbfc9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1281b5e-19c2-4c85-8e2b-bdaa2f48348f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b58ca2d-9d0b-450c-af53-be471e1ed38f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bb9f79-7d20-4a1b-8dab-360620378b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627d4dc9-6c5e-42f4-9ebe-ddf87a4ffeb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1903119a-4505-4fed-b9c3-1816ccedb0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa66182e-9321-4dc9-9087-486d0a4b995c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "38b872ad-8a6d-49d4-9b60-7752f0d7bf7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68c6a578-3684-4f0b-9bd0-1d78cf7d42ec",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f2fe34-0b45-4c56-8d79-65de75d74c0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "173eecee-42c0-4b25-8f96-f98f88f60fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32edcdf-c23b-4fc0-acaf-41a54072de13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30fcd3a1-a6c5-45ba-b943-198ef7347c78"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f16c2125-e147-4890-93d7-e0688ec34e7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "949a6847-d27e-4b7e-9282-2ce4b9073ce9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50514996-e83c-44dc-8718-165b4fc04710",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "649b7253-9547-436c-8404-6ed2668253e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e2f4d47-4d4d-47c9-8fce-89426f6aafff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c160735d-9ed0-47de-b97e-4fabc1096d30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5bfb83d5-6881-4c15-853d-c24d88e98062",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1dccb788-ece8-46b3-a271-eb3421b6dd09"
            }
          }
        ]
      },
      {
        "id": "16328d4d-274d-48d2-b8e8-507ba50ef4f6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c5e4d32f-006e-44aa-a634-c6725c896387",
            "name": "Negative Testing",
            "item": [
              {
                "id": "196a97bd-37d5-4849-9234-b4c54b13c09d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "14a34f18-b046-4d0c-b8b0-8395953ef7de",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6409ea4-f336-4255-a2ad-22c5b8ec7425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95bc2c89-0647-4584-96e6-51f4972a4be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32a023d-51f2-4654-80ea-55a083f90b6f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7d7058-7667-48ec-9a00-d98b89fba70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e9fe45-8905-4263-a1ae-79e8b0085976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0037d7-4ea4-4af9-978a-d43fc588989f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323c58d5-4f0f-4ba1-8dcf-c553fe1769a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee871f0-ab3b-43c9-b6c7-d45703308b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e55b70-0714-4b72-ba9f-0acfad629184",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6146d527-2cac-403c-a995-4059ff6f2228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49460b0c-5019-4b62-95ad-f9d3e15948f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75b5fcb-5e81-457d-851f-983dfa56f263",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4bd88e-b969-4ccb-8e21-626d5933f815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8a4c07-dd23-4b7e-9e7d-df77b44221a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a9392b-dfcb-4f7a-86b6-cc6e2df088dd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77a21d6-b463-4d9f-9ef2-fc19bcf697bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c85f7b3-9972-4f7f-91a4-ec7fd7037e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fa1ced-3271-4e2c-b14e-8c7b12748d49",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8565674-16d7-45a1-99bb-645692f9afda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ceae39-7e29-4df1-86db-50e117ec7986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814bbf0f-ad15-4b4d-89c8-44e93345783a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5e82e5-352b-4602-9605-3c26a5bd733e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc0038a-9d4f-4c7e-9873-8dff1f778406",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd0d348-8054-4618-84ff-e63e90a9c72d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d9a1a98-2f4b-4a73-8786-34693955e9a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "480dc61a-7f1d-4514-8d5f-10817fb3cdad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7921a59b-a510-44c0-9f1a-9c881c7ffb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cda5d1-7b32-4aac-9987-d4b68c64bb24",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de20234-6248-4826-8989-a57366401d37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "709ce894-5a57-4477-9cfc-52fccf8d8687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3050031-ae09-48c8-abad-ef9984a8f26d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe3b7b0-6ccb-42c4-9bf1-cb2a49fb974f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7dba5a-b657-4f34-b206-fc9de3275018",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20162657-3d1c-4901-be6e-6dc90af47273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0f9f6cc-4661-447e-8bf6-234d9a4cbe8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2044602c-b2fe-42bc-b7de-663ab8f36069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fe2d7e-72c9-4a6c-8b2e-975d8293d8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c55fbf-15d3-4a3b-b9ef-c1174e0f334c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b460f79c-b66a-4b77-b18e-5bcaed6d40cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e183db4a-0ab1-4467-8d3e-8d469496009a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360e55af-3e71-4a89-9df3-f22601048c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c46e66-2aa6-409f-b1f9-635629d448ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed22d18-ea27-4685-9358-d0dc62546afe",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96feae85-10f6-4f95-8c70-4f2297488a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc27cc16-1cc4-4caf-b1f1-a9224f6e3f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6342c3c0-a085-4870-867e-fc27e1b2555a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf84dc94-ffaa-480d-b82b-492f598b56ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155ec691-43d0-4ec4-be49-9213356e5238",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1218afb-9eb4-4296-a030-b29f3139ae16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ba3b953-144d-4756-9a61-ffb37c688a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af6af01-e7c6-40e1-893b-ca48d20b77f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79307913-3795-45e1-b216-8dd004ef2cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39f4970-8c15-4f89-bc90-5c2af128f191",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c26c52-6ba3-4fee-909e-25a916094e23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c2857a5-8e19-4404-8449-4fc9b7422c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20ae9e8-3690-4d10-b41c-2760d1bcd535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf72fae-ebd1-421f-9433-c30b98e222ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e6e7c8-121f-4164-b234-af43e4872f4f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a86c66b-5c76-47dc-825f-5a8975443a2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf2b5dfc-5676-4890-9118-807007997fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00cac0d-07ae-4e80-afcd-c7c6ed88ab6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06a2df8-c226-4280-8794-561c17da1225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f82172-edf9-483a-aaec-d18acb35851b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef5da37-c025-4a60-830b-de9d45de675a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff5c5f7c-7ce7-47bf-982d-662d32fac881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85c6109-b243-402b-a900-2e6ac51575b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91172e4-a693-4344-aa69-1f8e3251f620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518699a1-ab08-4b75-b9e8-6d0655eca277",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2007b7-a8ab-48fa-bab9-e9f6c63f7a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9dea0e1-2bde-4101-a33b-3b934c989027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "288769a9-3923-4cc3-9674-1bce7c7eaa7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0bde15-4ee3-41dc-955f-46b3315d15f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c89ecce-ca25-4140-8abc-439307a573fe",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abd0fd4-cd0c-43a2-b491-e20512e149e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7075478e-f308-43cc-bf71-b12ddec01b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7b580f-33eb-49dd-944d-bf55c3af12ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e51ea9-369c-4934-989a-13b20f8f57a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1dd0a9-eddd-4c93-b37e-90d031142d78",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d881a4-88f8-473b-b663-0e4fb4f81290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284068d2-37de-46ba-a937-19f7772208b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fe84dd-fbb3-4404-b20e-cb98b5efb3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01688ad2-f68f-421c-a4bd-570c59c3360c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe94048-e3a7-4c32-9a77-81a9400ad181",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6f1ab5-8931-48c2-a30a-436ba29737cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897038d6-a34f-4617-8f3b-02a857e541ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13d1b61-25cb-413b-b1df-84aced0b61c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88fb228-47de-40dd-95aa-025206a1abe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b3824d-f535-452e-b558-e61c42ef5247",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7fb2f4-0117-4da5-905d-8c92538dc6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6fa412d-7db0-4e60-94f1-a95cf3db1442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8833a807-8bf4-47b7-aadd-273e1ddc0836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3049a25f-51b7-44d7-a221-3fc9f0b140e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e5f99b-db0d-4ef6-a42e-66d0e8a75914",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d81e1b-4e48-4ee1-8fca-099ed8c5235c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95e18d7-305d-4b07-bead-1e309c2a3722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe11f8d8-dc45-49c3-be2e-a274f6193059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6ad096-cac7-46c2-8d22-979dd9aef977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6b47c4-a2db-4735-a91d-5fa433019081",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93205efb-3b64-4578-b374-090d8c2a49e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acaf02b2-8039-4f3d-9531-ccfc42d5b0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb75e3a-7b0d-485d-8cb7-95003d4519e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658f64e6-4831-4d3f-8db5-1678731b3958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37888c56-1e96-4276-9f83-f12ad005a708",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07debe39-aa5c-4a68-a0d8-602aa4c25e85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24948f7b-1933-408e-9910-47a3ddf97ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cba1c97-1395-4dbc-b23c-d357acd3f743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc2ebe6-16c5-40e5-b18c-605c3f17b12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd513c9-c1c1-4495-8155-06e77a707c19",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0844f0-5c57-48fe-8bec-cbd6f1a341ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "187f0a34-0429-416a-987d-b452a348e31e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b269447-989c-4356-a065-d392bc020499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bb310c-b2f9-409a-98b7-152b24b50414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d17c4c-e777-4b87-a4d2-4ab871c9d623",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b96d74-62ea-4067-81f6-911646394700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "363ec00d-eaf2-4641-a0a7-78a7d8f7cfe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6962d4e-2424-4b14-93d7-7a2b0d3f128c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4322972f-344f-49d4-bb17-ff84a0e63394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecd6b75-c466-4f0b-8715-1295cfe25c6d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a522b31f-de52-4589-a1d2-009e115edb08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17e26c6b-a952-43cf-9ec2-59ae07e813c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c223fb-6331-4d97-bf86-2f1011188f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d920e080-02cf-441a-a013-6e63ab77152b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a1b1ad-5c42-458e-a62f-e56895c09498",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af3f058-231a-4ded-ae5a-514bd04fec9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8720e1f6-5a8e-4909-814f-911e4fc1c6bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b20fc43-629e-4524-92e5-9056f2188c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16562e89-5c95-418f-9542-cd40e2ce548b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90db076-9b5b-4cdc-b963-3b8519547947",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb82ac4-9013-416b-845b-7a045e6a041a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f21d8cd-dba9-400c-bbef-cc9cf38109f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba71534e-a1f9-4348-b4d3-9b5d9a48bce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6021a7-a6cd-4e29-b2e9-dc547f3d4a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f65b11-142f-435e-be20-0dd7e81bca7f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdaf727e-d924-4b79-b786-9d50271a1651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6af25034-24c4-4945-a963-76d7de06b95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd0016d-469e-4b30-ad46-d8623310f926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b78dbf-47bb-4f20-9fbc-690b0d9a924e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cabc4f-977d-43e0-8531-1b4424c93b4a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3202f8e7-3bfa-4d96-a936-94918b727306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98790082-f3a3-4c5d-b478-0184ccdcf59b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86ca449-785d-4462-83df-cb0a22c8ae67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b664f5cc-fc32-444f-bbd1-dc50a8e4ca68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e081537-4401-49af-98ca-c6c8c108d77c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a428b9d-4c21-4b80-a69b-2b8996ec731d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f06c00b-382d-42ab-9ba6-6a3bb50eff02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e753bb26-c07b-4aec-a83c-d42f9f629499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5cea5e-d3e9-4378-918d-66f7960bde5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a17918f-3e1f-4925-a629-4c670198e1fe",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d262331-296c-4a89-b00f-7d1d2e9550d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "159bd0ec-3dc6-45d4-907a-8c45315f0ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a12503-7f09-4cd3-a4cf-89e24ca66896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4723a7-6310-4fc5-8afb-79bff07788ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb13c585-e4de-4ba7-873f-256b0f70bc79",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb7130c-bbd7-431b-86cd-6e8255945a2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21908a07-4eed-4bd4-bb8f-c437fb131912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b38fddc-8f50-4c79-b709-c7590b56c0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e12634c-6c1b-417a-a885-7a719c30362e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f629e452-97fc-4add-a0ea-953fe9215116",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cb4536-75eb-443e-b817-4a503ec88fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0351d9a3-c730-4fcd-a605-4d616b671a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8383a2-9565-4b10-8e42-3b31c105ca79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9649c1-ee78-443a-bf7f-a40a7466ae91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a68640a-8972-4585-827d-1d3ee13dccf2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026f5754-030c-425c-81bc-87799b2c5362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf1a86a-ab92-4bf4-ba86-e19a2748d002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d738f682-aaf2-4501-9c7c-36fe50872642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7e7511-c584-4c1e-b40c-86200a2130ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0347720-7cc5-49a3-ba66-e1f2f922ef54",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6233027b-2319-4abd-bf22-716e8a6c66d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e003e3-688b-4779-abc9-e81a1876837d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24391a7e-b593-4572-aacd-8087cccb5f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a7d04c-2137-46be-aea0-38896c35cd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e2ad6a-2fea-417e-a966-a1cdbc806567",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07b93e3-e32b-45b0-b94a-f59dfc66904b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f12541-d365-4a05-a0d4-e7eda4ade3b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce428fd4-e549-4d65-8656-f3b69c6fd510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81719445-4e63-443b-9e67-965defafddb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c9c630-badb-41de-82a8-44dcdb0fcbf8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccc554a-faad-4094-bf42-8be236f8d46f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce523c09-da62-476a-9f08-03abed47e83c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4ada6a-c4ea-4c66-b207-2406adca4f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb49ace-2610-4d7f-a40b-4c9584235439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e367a7b-86d8-4f7d-ace1-da5da86bd34b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace6ae21-e2ee-45e7-bd55-9615b2f5a6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f389683-3686-4edf-b407-d598add4616d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ec8d7c-40ab-49df-93cd-35bc200ce8b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2511e7-0760-4c60-b85e-3dae2fe2eba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fb5692-7264-4b76-9d05-67a241905bfc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa3296e-7409-4c62-b849-58def975289a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f119dd-07ba-4677-a3ea-303adec2767f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c155be65-e4d3-4eb1-9d5c-f9ccb7d632d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "441ba4f6-620d-4838-aacf-72fbabe746f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69a86fb-9132-4e0f-8884-7a8b19e59d0c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701627c9-5d9f-45d6-ae0d-492e7569af5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d8caef-f4eb-46b1-ae7c-be496b5b4b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14e078c-c622-45e7-8868-ea90a39e7cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb554a0c-c5b6-4737-a80c-52b384fbaa57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae70fa57-31c7-451f-97de-3aab8edc87be",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141012c5-78ef-4350-86f4-49707eef9a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087ea5f9-0981-40f2-8556-f025e3a2a9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb50f10-40fc-44e5-9793-6b87fe39d50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4309e65-fe06-4bd5-8efb-9cc22b66a543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dc045c-d302-436c-874f-dbb1d041d5bc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c168f4-96d4-4076-83a0-d637139adba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5fbe7c-7dbe-4dd9-970d-02ea16c4e44c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a370ca-d48c-469f-9fb5-815b58181acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589ccfd6-079e-46d8-a7a0-5e6fc4b84674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88109df-91c5-4997-b23b-1789693f5eb3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539a79ed-2b4f-4cf6-a1d9-9ca5f0114b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca26940-ca3f-4cc7-a212-f92fe2c4265c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98117852-a26a-4804-b579-0ea187e51437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af863cf5-3614-444e-811a-f231227c8b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e554bfcc-3d68-49b7-8c2a-1290b3d7b5c0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e160bc-51cd-411f-9e7e-532bd1c82422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3adabc53-7c84-41bd-a21d-2e02c79b28a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e0e9fe-06d3-4552-a570-0451f4259434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7bca32-be08-4e84-b757-f0408bfa20a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9013503-c213-43f8-9f47-dbb8ecbecb60",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f197c17-89de-4655-ad4c-2aceb87ac89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c26e0b-2af9-4286-a28a-815673719ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00183af0-3870-45c8-ab61-070f3b8b1553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9e954d-de72-4ba2-8dce-b2155eee32c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5f4ad3-7bfe-482f-ac7a-598c6609b0a5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2764ef-973d-4d18-a1f3-ca3619879402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9df6b60-2090-453b-b84f-dabd56a1067e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdee423-fb9d-4e14-ab28-de2d6f07035f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820dec91-5b1a-4e4b-89a9-275f3cd0de7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bf02b6-2e10-4c67-8027-884b866c7aa5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1134ce8-5481-4a81-a6d6-11ff9b475c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958f1062-4953-4f27-9aa8-54cb8a51c49d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6736cd52-ba07-4bb7-81ac-e8876ed9cf4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5e1d3c-049e-4fce-8038-914e6594a406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fca5f59-1210-4fe6-8cc9-af7593790176",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f7a94d-f835-4b16-bc1c-0e3f44a59e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1937e26d-d3a0-4324-985d-ee9cae0715cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a08bd8f-8741-46df-a318-7f317490a02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57892f54-369a-4c9d-8bef-0c684058c716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea266a22-7506-4855-a1a3-9d35b3838639",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c58df5-193d-44be-bfc3-bc9f3fde9eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa99faed-5cff-4a90-ac2e-bccea48a3e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c334f454-fc04-413b-9208-17fcc691a774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f30fdbf-10f4-46c6-bb6e-d120a2eced98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63edf983-7bc8-4e8a-b06a-846eb7acb0a8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef0528c-be2f-4f88-8508-3a44fe7ea337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20a2663-0ce5-40ad-88ae-f431db44bb48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4532ab-3b00-49f3-badc-04aabf236fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643c1a1a-6ed8-456c-9100-2176c84ecd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6722083-5fd7-4049-87a2-2a9db57ed4dc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063e6504-d777-4a5d-b382-4a351e92b968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4f4cea-e849-44ec-b5d4-e034a82582da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "032a0ea7-52db-48fe-a356-3b321948201e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f7f5b2-8fbd-4051-b4c4-8c2c5c84b699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9f5fa7-0b20-4c14-b9c6-e3dbd732b91c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bb1f9c-ddd0-45d3-a748-08e22c308268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80dbd709-7135-481e-a4f2-ddf5663c8a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17d81e7-b678-4877-9ef4-fd737d35f17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a73b96c-e65a-4ee4-885d-b8b4800dc69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c482c1d2-8c26-4f3e-b1ab-83786285f067",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d14a889-1936-4f56-bb4b-2eab9c8837b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc2a0e6-61ec-4b61-852e-8f830906d702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81ae2fe-8cda-4f61-acf3-ed44aa819dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca1d38d-a028-4787-aa1a-e781977198b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5705b049-119b-4890-9786-2d04167b994c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4346e1a3-15e2-4c54-a916-789055bfb5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e014468-4ffe-48be-a9ce-e4b6f80c74cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d1d886-5070-4cf2-a0b7-571a7b505e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3233f778-090a-4e3a-a062-96795086653a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55dbbda-5574-46b2-a651-bfa648e98bce",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09e6a26-128d-43c3-a408-2cdeac4c5d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37d5216-31b3-42c2-b0fb-60c0835a8998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b8df8c-77b2-452b-8afd-5c2095d78a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85d61d5-0aad-4f0c-94ee-118e1f7e89f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05945188-f141-4364-a6f8-a9615fe4394b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e32ea3-0d18-4c28-a729-ff8fd80796b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a12773-7dcb-4b1a-942d-1c958cc32876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c02a4b-89e6-4f14-8903-80f979856d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e960a86e-cac1-443a-ba0f-84b99a91241c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2aae29c-44f0-4045-a694-c99dee0db9ed",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d07a18-2789-492e-9a1e-d09bc048d280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7000e913-5416-4f62-b77a-4304cb1365b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83276e61-fdeb-4cbc-8d52-da4ffdd6cb79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95418fb-6a70-45f8-824d-698dc8da6833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d84ca79-0215-4c14-8cc2-af19d38dbad6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a76189-3411-4ab3-b396-afadf648b543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7522de56-271e-4fcf-8724-e5f1ac7567db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8af532-03b4-4d83-af4e-4aaeb806eb6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01910c2a-fa43-425e-94fc-84f9853b8e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67b614b-b797-4988-87cb-b6b48faf36bc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b974bce8-4971-482d-a17b-4e47e7a55b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257a2123-32bd-4c3e-a374-53b501c7b798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62accfc5-c993-4642-9080-bd49415f9836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c62b7bc-233a-4cd7-824f-623014f868ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ce2c7c-96c9-4732-8d1a-e4fad27271d4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743be035-3c6f-47da-8b06-a8b9e370ad75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3752027-202c-4f83-8200-3f0c16598d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95fc409-488e-4f8f-a2ba-bb0d7a46dc2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267fde36-bd4d-4e0d-afcb-db772933c83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70f02ee-aa0d-40cd-9775-38fa95a0491f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604b725e-d3ff-4aa7-89ad-5a9f4144e45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c255f1e-da78-4a24-9a25-8bffe19a063d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b731865-c4b8-4a03-ae17-40adc985726c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0e3f7a-9cee-4d95-ba87-54906049f2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09223df5-bbe9-4f83-bf4a-7a9b95da4430",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68bf87b-a624-44a7-aff0-9f21441fe5b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fd6c5c3-dd02-4a5f-bed8-3ea14ffe6bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63c1745-5e56-412f-8164-167343a6c190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e91896-6f16-462a-9608-f2d77779a2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c92f9f-6972-4779-acc8-5a9a6e393fc1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d4ae98-f047-4b66-b679-15d03418e443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa4b678b-5c7e-4904-8c01-c1d02232a142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdd0ca5-df8d-4da8-9371-f22768df0a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7ae623-dc8d-4b94-8c77-c54c4350ebf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfafc80-0da2-4d35-8928-bf698834faf1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96225bff-5f51-4a96-b66e-46a29d1962e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73ddbcde-fd9e-4c48-a675-6193cfd7aeb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cd94d6-bbb7-4833-9f9d-9bb279317fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a761a4e-dde6-46c4-b7fe-f04caadea013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a0226b-970b-46af-983a-c7c70175c169",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d248997-17de-495f-b541-c38fe90f2308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71c253d1-52b0-4d2c-a66e-60d3a1c48de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdca5eb-4cef-4a14-a365-d86a2db3ee7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938c45fd-4de1-45c4-9ec6-d5539fa4ab97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f18025-1479-470d-b5dc-3dda53cb8d0f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670b8c9c-ed09-4de5-83c3-af36d7e81ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47f5ce73-b061-4687-bcba-2ba7c744b5b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c01f26-8ff5-4d48-b82d-adfa0f27c48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2e440e-f269-412f-b60b-8b39f4c28c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8acf35f-5fc0-4980-9a3c-3b6af9f1a3c1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be433b81-1a9e-4366-8b81-4bc9e4fd357e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24fb22d3-bf40-4853-a08a-1eac4a6df1f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf040c4-6b7c-4b62-87b1-aa61491517b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2e09b8-167d-43c7-89ee-b527881f8ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7162d027-5c39-4fdf-ad0b-d3a5576b541b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f289f578-ede8-453c-ab2b-526b793c6952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad4acb89-a341-455c-8991-c154eba7fb2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cae8e73-ab9f-48d3-b4c0-3462929db104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604459c6-1903-4cc3-8269-a1b4af5f3af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa89665-5cb3-4fbd-9705-b3a31dfe91e7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0a2554-d668-4b31-8f8b-d53f4d5c0ef3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04c0f93e-ed88-4748-9dcf-a416d0a3d337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9762a3ee-5d3c-447a-8e58-4610e8f9b9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895847fb-6296-463a-a800-e6a3773b9136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f466f16-a2fa-46bc-b989-89c106549176",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119c4193-fe99-427e-accf-c4cbc53d5104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1cd202c-be8d-45ad-9e3f-e22a1c66afb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc6e10a-6f8f-4831-9a99-6e8c851665db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d44a8d0-ddac-4fe9-9dbe-aa5d3de64282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c41318-2ece-46cc-9651-cd2307289fa4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a900ebd7-d20c-4d9a-964a-2fc81a5527e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c2e7867-815c-4a4c-af69-1ec4b49172c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5646ff3f-74fc-4d7f-94c3-427d6eb58505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b511c1-a001-4b62-b1ec-d1d802ec33b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92d649b-1f77-4ab2-bbb6-1176aadab932",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3484036a-1b94-4e11-a0e6-91739b27ac1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "325c01bd-4ebe-4f23-a81e-b2a853622bb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f49f718-b28a-423a-831d-87fd8bf1598a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1346b9-ee1a-4506-8d40-85e4d5436c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7451afa3-e356-425e-9951-62a397a2e5ec",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a759db-ecb7-4ad3-89e0-166b446b2b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f27fbd7-90e2-4434-8360-cb11cd663885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3705ccd-024e-40b9-b3ac-dcd51328013d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58185da-70e2-4453-a2ed-cb0b0ac4a430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d537c724-3bfe-45dd-9f28-59c616108291",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebbfa88-e218-4114-886a-95aacaa02f96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03176534-0436-4136-b3b3-775c98255410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3bb968-10d4-496f-a8e3-f66cdeb3acd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a70de7-5eee-46d2-a742-b678592b6cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22c0d05-6d3c-423d-9c83-93d088c35dd0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d39f7e1-fef3-4078-bc62-e7e893e08ad3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45383a4b-d3d2-45c0-89a1-6380ac3d4e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31b772d-2044-43fb-8898-d83bd9375254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5715ac2c-14b9-4383-8e4d-c9d2f9469129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f84d49-75cb-4c96-b064-b96c335a4eaa",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4045ee7-4674-4fe3-84a0-2e6b71faf76d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c33a26b-cfae-4b43-ae81-24efdf3799db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7801e4-0976-4598-8149-2b5de211c2b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1d1ff3-794e-4cb3-ab06-0d574207596b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdb0874-a1e6-458c-a1f7-d367245cbbcd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcf8c8b-9f2e-4c2e-ab68-0140669babf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c09330cd-e147-4551-a9db-5adf734c6476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d993a53-1be6-4c28-83b3-b529670ea269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ffa710-0d39-44b2-945d-d5bb40af6f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009737d2-9bc4-400e-a3d0-7d7a21baf036",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8efd955-81d3-4b99-9724-6d422d97dcff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca4f1cc5-4821-4799-bebc-0e0e918e3cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c70efcf-49fd-4eee-a746-9d4e4c2006a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d44cfc-0ee1-4159-8899-0e929faab60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e64520a-7afb-433a-8f17-5465fd0188c5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f6cb10-cb36-4e6e-811c-2e63fb3458f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b1d31dd-a973-4350-bd05-7f4ececb650c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3024a92-ce45-4761-9b0b-83061ebe0906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd5a68d-d054-43b9-acf4-2f163a9298e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b39849-16c3-4eda-88f5-cb68dbc37f93",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671453ab-96c8-4721-8f71-f62c21cdd926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "219138be-caf4-4c76-9be9-b2a59404a59d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "679f3ed6-aa5e-40db-bf21-5239d3f49df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92681c43-7e0c-4c68-ad7a-0f7b473307af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0273aa09-f916-4113-9df9-a9b007d8e077",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be643791-1fab-498e-956a-187f3aa50f61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c582421e-547b-42de-afc9-f94ffb20a3d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b256df-3144-4b45-aa1f-0d771c7701e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f4058a-6a4f-443c-b8c3-42d85d2cdf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8c6fb3-5b8e-47ee-afbd-6a058c7801f7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12132ce2-b278-47df-aeee-88fc1c058179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ffe1baa-db84-474b-801e-dc14576a8814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4693b354-7ff5-4288-8a62-24dcbae8d31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc7f878-8e2f-4c50-9b30-8995ab4d6210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0f7af5-79b2-4a25-a23d-34079ebf1dff",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6bb66bd-36d5-4cd6-b0cb-ebb1b5464a8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b58d0fa-6ce6-42e1-8309-6bd054d7dc5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7a8ac6-481b-41c6-9a6a-43fff944f4ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd5c448-4592-42ba-95ae-2f70096a3fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08016fa7-5c00-437b-884e-db8c08cf6e56",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a7e8c7-d88d-400f-a8b4-85dc2315db85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3d7d220-6e6a-41f3-b0cf-7c4aafd353c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d151d745-f1f9-40f3-b698-d70152eeee6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4530f98d-b0b9-458c-89e7-9c611948dd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c11f97-4417-414a-b6fd-3f1173a0f13c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba502154-f015-4b19-84a0-6d9079669e8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eab57acd-caa5-47bb-9a51-da91d4eefc1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd7487e-497f-4870-90db-92a54a092245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d538acc-c44c-473e-9f2b-3990428e39a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c69c76-9ccc-43ec-998a-6511d08109af",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce31c810-b299-47a7-9ce7-3ddf2f5148bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0518490b-34b4-4069-8b3c-ae08d35cfe18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb016dd3-2c78-4b92-b11d-8ba5daacaa9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d68fcf7-8dc9-4c38-8247-c8d242ac3608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e8e63c-7e73-47ca-b759-2aa57198035f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff488fc-cef4-4c32-b2a8-2eac64aa220e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd66a999-1611-4861-80ab-8e3728ee120c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f087e3a-900c-4213-923e-a6c4ed8ddebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0714073-0ef6-4985-a09a-55efe022256e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0479c939-215b-40f1-b695-7869d2d8fddc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bf78a1-d0ef-4d3b-9dc3-611fa210d242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b418a195-48b1-4598-a6a1-d8c0decf7fa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d6eb54-e2c0-410a-b10f-b69bdab9a901",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30758424-f736-4f3d-82d3-0cbdbeb8b34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef29826-4d51-43a4-917f-6920d7dfdd0d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b660550-999d-42d7-9ded-031d9b0a0cba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06dbb915-5f87-44f6-80a3-35ad4a7f60d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ec367f-27fe-499f-a10b-07cb1ed9cc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c029d9-42a3-43b0-af93-cd1ff1f248b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73e13e8-b689-4499-9acb-b1c3b151085b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098f96b2-a02b-422a-a1bb-6ef931448b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f5b162d-ed9b-44d7-9f34-2099d1a812b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a82b99-0768-4d51-8f01-a87e9d76442a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c75864d-b317-49ea-ad34-965416d6f7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7555a08b-50e5-48c3-bc58-4408e988b598",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd78d216-1ad1-480e-9942-e567cee0b13a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f450f347-341a-4db8-ad41-3b136b7f2cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403d6f17-9bc8-4e93-b315-8190d59ec891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6ace55-f788-49eb-b3d2-27f434626024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1fed3f-abff-48aa-bdd3-7cd615a4feb7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f39cc1d-87d0-47c7-a9c1-ff55a9dba393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be321bc2-8679-4bb9-9b40-cdd777846ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9735ba-56ac-410e-b375-41035380baa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a83f95-21cc-458a-87e1-79ceadeb6ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8664871-a402-4761-aa41-b507045fd654",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f859071-d7f7-446d-8444-8c7d043c9425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb978205-74a7-443a-ad6d-d75c5736851b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b6fa92-60d9-4632-96c4-e4c1979972ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0aff612-db18-4ae2-8278-1f65cf9a7fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0461fb3-fa41-44b7-a0d1-5028a3691f82",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26df7407-bf96-419a-80ff-ef1870b822b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0a0cd32-50c0-4080-a7b4-e483f6b218b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60a6014-ed5f-4898-b721-6dc24517deed",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efae0546-0344-42a8-ae4d-c6e8a9676e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6a0c51-9381-4fd8-a892-5522e9dfacb9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f9e144-b4a0-4a7b-a541-c47b3dfff70f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f92aa49-8edb-4b4f-9aac-d60455766bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60123453-8d56-451a-beaf-54849a58a634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663c0aef-a4d8-41fd-8ff5-0d2a1a9c97dd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8399bccd-2ade-40b4-88e8-fdfb1bd6e96b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a72146b4-f16a-49a1-97ab-1f03a371e9ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94318b8f-8916-41f5-8157-100bd8e4b014",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6be294b2-2254-4215-8d17-ccd7ad2d1c09"
                    }
                  }
                ]
              },
              {
                "id": "2542719a-844c-4f69-ad58-311347260fa7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c74ccaec-29d0-4229-b5c6-402439ebad7a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ac2e67-407f-4c6c-992d-d4b2e162cd35",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7de4b72b-93aa-42d5-9b57-ba910ed84ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "478fe157-e5e1-4874-943b-05b448571f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "656aaff8-1a91-47a4-bbf5-7f73517140b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a41bb51e-cfc5-4aed-87e7-a777a289d331",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80967067-a006-49f3-86f7-9a409e5e4eec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1959996-8704-406c-9335-06b3e7196b93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf43609b-c0ab-46e1-9dbe-663fbe7dc271"
                    }
                  }
                ]
              },
              {
                "id": "f2bc47d6-8bd9-4a5d-9a98-665e91f099fc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0cfa540a-5a20-4951-9fb5-f62287ee6300",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b78f8d-edc3-4e44-9f9f-cac8d7139464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c6b9b381-5ed1-49be-9018-989724647a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b45e77-cc5b-46a9-9def-31d766ecd18d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ee6c6f-c06b-4990-8270-f043648a9ea5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aa31484b-3585-474f-a981-0c1c7ac92a01",
            "name": "Positive Testing",
            "item": [
              {
                "id": "12346e00-0613-4318-9153-1e83f0458f80",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8358b98-ade5-48f8-b47c-cc62bded3a8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c77ef3df-0503-42ad-8ecc-c3a4b06caea9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3099a52-5e4c-4c87-985e-9695414c104a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be7ebde2-d664-4929-8026-516ae05f6821"
                    }
                  }
                ]
              },
              {
                "id": "02aae2e3-be69-453f-8b7d-86fe1ef77af0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11f010f5-83ef-483c-8243-49eae0353ca0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "74f7c381-92de-4627-9e86-cae8b2a21bca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d1d1944-66b9-48d2-80f0-b4cc9e7f4064",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ac306d8-af7a-4c94-a4b2-65f64ed3598a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24c52f38-06a3-4312-a87c-1b0f0f53e738",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "22aeccfd-f552-4e0d-b651-ec315ba63a6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bd23511-d612-4042-b1fd-1810e1259a6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "759875ad-dabe-4b93-8cf4-e0dc87e7b280"
            }
          }
        ]
      },
      {
        "id": "0a88c625-62d3-475f-9154-a854634ed073",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a95e7070-1634-448a-961a-b4dd02762c1c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7648c8e0-7021-4595-89af-ba68fbdf866a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7c98c4e-f7ce-43a5-883b-f0cc99621f37",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ea9c6e-a774-42f2-9ed2-0d32be3ae2c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c4b0b9ec-3b03-42ba-b51b-93717a788fc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc77d16d-bc7f-4255-b2c1-6e8c2def3333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75b5c272-0cc4-4c58-9232-cb39ca2dadd2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c887ae8e-8c8c-48e0-b41b-78955b2ed329",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5eacc0c1-a988-4697-a984-8952599a25ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e66a6e39-76ea-4f69-b881-b181a2770105",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48d172f3-51fc-489d-b6ea-d4b736704447"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fb0ef19-e39b-48d9-a2be-625d1aec29b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "492d18ed-b512-4252-820d-cae379bf9edd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f44f516-8bbd-4df4-b7d2-68ba44b242c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5111f1b-bcb7-4318-b6c8-651714cec771"
            }
          }
        ]
      },
      {
        "id": "dfcf3148-d199-4527-a133-19aef027ba67",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "39ea3328-8250-4c4b-a161-d66e1f9e62e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7f0e37c-fb6f-48b0-8ba8-46885e74ca6f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0c5eb49-64e5-487b-bde1-37bcc0c5744e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d8c90c-b6cf-4199-9e72-55c31785c58f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2eb3ac41-c818-485d-85f2-214ca2775a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2750e48c-7a51-480b-a8a0-46c8a31839e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18d86089-7b1b-4e4c-9bd4-7fdf5762a71d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb0275d8-d5a4-4390-a677-80e822223fd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eff6db1a-4b67-443a-a318-e35ff5323d42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73767da0-370c-4b5d-8227-a43fe4952580",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed1696b2-c18a-4c15-8aa2-2aa9b33e5e98"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "575e79e9-ab6d-4215-95c6-313f94040306",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "214a7692-a443-491a-883c-25ace91ba405"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43e946e6-a930-4251-9127-e844395ef05a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8805bca5-4d26-4715-86c3-99f4f09d02f5"
            }
          }
        ]
      },
      {
        "id": "e43f26d2-cbab-4f29-989c-16fc1dc2c94f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fd8bfcae-5e1f-40f5-91b8-96b69b00e62d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52ca0960-b999-4dcb-a995-c65a4f1155b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8e47fd1-2381-4539-a082-dd8545ad98a9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc418d29-441e-481e-a1dd-9c21dc6add9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1d69249-e4a2-4efa-b49e-2e2726f4e22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1dec9a-07e1-4501-83e4-4d5519f14c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36f3d631-27ce-4781-9e08-2cad2a2a805f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4dbc80d0-256d-477d-88af-0d50b111b612",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d91a8ca-f53f-4635-9f91-7af38ced1980"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6804ed19-0d65-413c-bda0-af4463322c44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84e57b35-1ef6-4e40-a7be-81c60161b607"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a0f4a2d-d9bc-4969-a025-3d205b97f6ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0a15c534-0681-4266-95c9-b17ec6e6a3c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3785e588-971e-4d95-9242-17baa7c7efb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f68ce9e-f76d-4d68-8a56-c26fe9930624"
            }
          }
        ]
      },
      {
        "id": "29969ecf-00b3-4929-83d3-68e230100d7a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4da6e1e4-1e0d-4294-be98-c28bc7ebea53",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68972068-0af3-4890-9fe5-c6401a6f358d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8031caf4-ed4a-455a-b59b-57b24d14155c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14c70bc1-4f71-45f9-9596-6af7f22af6eb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7c86266-3c75-40f8-b884-20b57d9e5c0b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 72.20238095238092,
      "responseMin": 6,
      "responseMax": 239,
      "responseSd": 18.066749974705626,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721954373277,
      "completed": 1721954399493
    },
    "executions": [
      {
        "id": "9fa652da-54d7-4d12-9a72-fd2116e53be0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7bc119eb-b35e-427c-a1dd-6fbfefc91c99",
          "httpRequestId": "c648bf07-be4c-447c-bf6f-943cc7696693"
        },
        "item": {
          "id": "9fa652da-54d7-4d12-9a72-fd2116e53be0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a4bb5220-ca13-4c1a-a5a7-a30430c1836e",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "b7ef6d17-4031-4d04-a1c0-dfbe3ca4497a",
        "cursor": {
          "ref": "c9b9ab9e-4355-4060-9393-1bfb8c113f11",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b27230c0-9919-48e0-b76c-a3ab04531f6f"
        },
        "item": {
          "id": "b7ef6d17-4031-4d04-a1c0-dfbe3ca4497a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d7c8d5c7-3c4e-4fb0-9d70-ed22d60c1d1f",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "d40166c8-efee-432b-b05b-3215b8e0acb8",
        "cursor": {
          "ref": "93c19ec3-0b24-4340-9590-4ff6deb3d504",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5eae4fce-de95-42a8-9ee0-522995897487"
        },
        "item": {
          "id": "d40166c8-efee-432b-b05b-3215b8e0acb8",
          "name": "did_json"
        },
        "response": {
          "id": "c9b1e997-6035-4627-9d31-07d181b94a82",
          "status": "OK",
          "code": 200,
          "responseTime": 239,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80200870-319b-4055-b85c-388f13388a81",
        "cursor": {
          "ref": "eed17956-bd4d-4a3b-854b-909d4186a477",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ddfcc286-0789-4452-a1b8-c6808da7efdc"
        },
        "item": {
          "id": "80200870-319b-4055-b85c-388f13388a81",
          "name": "did:invalid"
        },
        "response": {
          "id": "01f4f699-cadb-4a36-8d7e-fdf1efe5225e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80200870-319b-4055-b85c-388f13388a81",
        "cursor": {
          "ref": "eed17956-bd4d-4a3b-854b-909d4186a477",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ddfcc286-0789-4452-a1b8-c6808da7efdc"
        },
        "item": {
          "id": "80200870-319b-4055-b85c-388f13388a81",
          "name": "did:invalid"
        },
        "response": {
          "id": "01f4f699-cadb-4a36-8d7e-fdf1efe5225e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7a97bf-8cbb-4ec6-8531-b6b07c97e38c",
        "cursor": {
          "ref": "3ac9f874-c694-4691-b768-579756074d9b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c27e7b6e-d881-4aa9-a9ee-3b78f01a7207"
        },
        "item": {
          "id": "bd7a97bf-8cbb-4ec6-8531-b6b07c97e38c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "59254a5f-b29c-4f02-8d4a-ba1deaa66e81",
          "status": "Not Found",
          "code": 404,
          "responseTime": 224,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857def84-9ff4-4c8d-a188-dd722a078d2c",
        "cursor": {
          "ref": "2ad79a9f-1cc0-47f9-b90f-f52bd44258d6",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a3fdd751-cb9f-436a-a9fd-a582e0094575"
        },
        "item": {
          "id": "857def84-9ff4-4c8d-a188-dd722a078d2c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f3a904e3-37ad-4534-b41a-872cdbc6367a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 71,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d86ef43-a804-490d-a505-e19602d93d8c",
        "cursor": {
          "ref": "7b847945-4277-4818-8d44-b98b534599f0",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "938dcd7e-99e5-4634-8277-391bd518eb94"
        },
        "item": {
          "id": "1d86ef43-a804-490d-a505-e19602d93d8c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f0b2cb63-ac91-4818-9687-389e83347f20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d358eee1-5760-4816-bdd5-839d520052bc",
        "cursor": {
          "ref": "8660c5c7-3c67-4878-831a-cd69d81eae91",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "692d20c9-e1b0-4ccc-a70d-23d71077a08b"
        },
        "item": {
          "id": "d358eee1-5760-4816-bdd5-839d520052bc",
          "name": "identifiers"
        },
        "response": {
          "id": "ddddff8c-c0cd-43b5-8f7f-1908dcb2b111",
          "status": "OK",
          "code": 200,
          "responseTime": 127,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676e9dd5-c5b9-4322-9719-99a7d8250fcb",
        "cursor": {
          "ref": "6ea888ed-7233-428e-84c9-5e4b41fd2abb",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4e08caee-73c4-4f38-9f14-83d1aae90999"
        },
        "item": {
          "id": "676e9dd5-c5b9-4322-9719-99a7d8250fcb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "85de8a90-8d85-4f0f-8e25-90bc124e0625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2675faf2-8075-4d85-a3af-56abb10bca6f",
        "cursor": {
          "ref": "7a520510-5c02-4b60-9e1a-fe97bb2ba149",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "05d3f898-a8b9-4593-96c5-ddc8b5e37b1d"
        },
        "item": {
          "id": "2675faf2-8075-4d85-a3af-56abb10bca6f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7793544f-421a-4565-ba2b-4bf5786acc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec55492e-6d4f-4cda-87b2-11f819de8aef",
        "cursor": {
          "ref": "3e67b897-5c3a-4c75-a924-d1cfbab0cb8e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c529e4c3-9cfd-4799-9b3b-9bb1b60364c8"
        },
        "item": {
          "id": "ec55492e-6d4f-4cda-87b2-11f819de8aef",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dc98fcda-53b9-4f37-9ffe-3564d6b6f89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba201e8-33b4-47a2-87f8-993d43d6692e",
        "cursor": {
          "ref": "e9d7a0be-f0d7-4c0c-9454-2ee67b5d7b13",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f52a37ac-2f08-422e-9b17-39381ff6c113"
        },
        "item": {
          "id": "4ba201e8-33b4-47a2-87f8-993d43d6692e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "dc9ea7c6-0b26-4617-92bb-9c2a3f38c09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8621a1ef-50a5-40b1-a45d-7bb1b0c1b51a",
        "cursor": {
          "ref": "2cd4c33d-7a77-40e3-931d-e131e1116bb4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a73b046d-8e15-42db-857a-bf6d7e9e78f4"
        },
        "item": {
          "id": "8621a1ef-50a5-40b1-a45d-7bb1b0c1b51a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5694b115-885c-42f2-af68-5a52eceab084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f02a42f-7b2d-463e-9d13-68eea6de9d2a",
        "cursor": {
          "ref": "a0b6299c-2d91-49ac-9145-85d59b639287",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "88a2272e-d99a-4f9c-b8bd-23e183688805"
        },
        "item": {
          "id": "8f02a42f-7b2d-463e-9d13-68eea6de9d2a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "377c0246-4a3c-40fc-a039-0661ab31a9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2136f2f-8b26-406b-a98e-28fe09b509ca",
        "cursor": {
          "ref": "8179efa1-ac69-4e6c-8653-951e6468ab20",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f43fe573-9c19-456c-85cf-7fef061c53bc"
        },
        "item": {
          "id": "e2136f2f-8b26-406b-a98e-28fe09b509ca",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5df0f6e8-dc4c-431a-bd6e-dbdf5c2a3581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db06bef8-c1f7-4c19-9fd8-8e148c405ce5",
        "cursor": {
          "ref": "39ec1b84-5295-4853-bd1b-77ed6b267b1c",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "daee8f2e-6330-4995-bb05-c21a58dc1dc1"
        },
        "item": {
          "id": "db06bef8-c1f7-4c19-9fd8-8e148c405ce5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "abf29e8a-2293-46b8-a19f-22f48d872647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea77926-4530-477a-bfa8-5e7bdee2d849",
        "cursor": {
          "ref": "b3398ed7-a353-4146-89b9-ffb655b76007",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8af2fd4b-ab31-401e-b07d-3e94938afde3"
        },
        "item": {
          "id": "eea77926-4530-477a-bfa8-5e7bdee2d849",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b3026921-3aa1-4b7f-b46b-339a0ebb0aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f57af99-66d0-4ec0-b9e4-f63017158edf",
        "cursor": {
          "ref": "dd914f25-df7d-4a3f-99b7-0fbe7863f465",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "28edfd91-7d02-4a33-a8fe-ee46f1e75c37"
        },
        "item": {
          "id": "0f57af99-66d0-4ec0-b9e4-f63017158edf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "90a38448-8476-45cd-b77d-11d3f4907c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0996d43-f7df-4ece-ae2a-ce19c4f4c659",
        "cursor": {
          "ref": "c3a97099-280e-4218-a3d2-69da1239e206",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dabf79ee-1dac-4bb9-a370-b10d376d8278"
        },
        "item": {
          "id": "a0996d43-f7df-4ece-ae2a-ce19c4f4c659",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "33553739-f4e7-4aae-9898-04e1080efee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f05771-95b6-47d7-91a9-495b975c9dd7",
        "cursor": {
          "ref": "2613d115-655a-466f-813f-5689b3710c3e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5891f6c1-8d23-4137-9c50-5067de1f3167"
        },
        "item": {
          "id": "87f05771-95b6-47d7-91a9-495b975c9dd7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "56e4f6b3-89f9-473e-a64d-39a795efde10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e96d3b-a3a7-404f-8506-7ff2c1dfcb18",
        "cursor": {
          "ref": "a808941a-07ae-4a42-bbb2-0663b8860426",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5bd19197-a1f2-4c6a-9b5a-a5081e166e88"
        },
        "item": {
          "id": "f4e96d3b-a3a7-404f-8506-7ff2c1dfcb18",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "12c9bab5-3b4b-4a2b-a55c-7e31745b509e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eae7e11-3e82-4323-b037-3e381d79a57b",
        "cursor": {
          "ref": "e18d0bca-c18b-4cda-8dab-d84e6c05ba57",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b952ea09-a3fc-4c48-889c-4351af5879ef"
        },
        "item": {
          "id": "5eae7e11-3e82-4323-b037-3e381d79a57b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "bfaecf4b-643c-44ca-b08e-a93bb172f8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b062e9-d8fa-44c6-8144-d93ba251bd47",
        "cursor": {
          "ref": "49ee77d6-359e-4c23-a804-c4e8c53f2527",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bf97700a-4420-4c96-b22d-64ef5eed03b3"
        },
        "item": {
          "id": "e4b062e9-d8fa-44c6-8144-d93ba251bd47",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8085c9cf-6182-42e7-868b-bd3ea91730e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087ff0b9-f499-45d8-83bd-c595bd111fd2",
        "cursor": {
          "ref": "6f4865fd-a4f8-452c-86c6-5db3027fecf6",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "572606f8-b83d-4889-9116-554afaeaec1b"
        },
        "item": {
          "id": "087ff0b9-f499-45d8-83bd-c595bd111fd2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7f53c912-6799-4fa1-adb8-630e1fe1410a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94ffc55-5529-4dbe-b199-f1bfd62468fc",
        "cursor": {
          "ref": "ffed50c7-94d7-4c5a-a7aa-84a4a5cfa79d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f18e5619-3709-4bc2-a1b3-307c522fb237"
        },
        "item": {
          "id": "b94ffc55-5529-4dbe-b199-f1bfd62468fc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1c33f6f2-4dae-41d1-8c96-b6ae537d9018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa87fda1-77f1-4be7-af1a-c64e2f252493",
        "cursor": {
          "ref": "f44a7c88-7aac-47f7-a7cd-f3b86939b4ab",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2bb1e1c4-09a2-4411-9f1c-ba9f0a3de196"
        },
        "item": {
          "id": "fa87fda1-77f1-4be7-af1a-c64e2f252493",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "eec5254b-e207-4513-b1e1-eae54ff4decf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1b7de6-ce65-458b-9038-22944f22eef4",
        "cursor": {
          "ref": "dded2669-4ef1-45a0-a247-8b65ea64a0f6",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bc59e2a8-e6d5-414c-82bd-311f68f6cdd5"
        },
        "item": {
          "id": "da1b7de6-ce65-458b-9038-22944f22eef4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1c7160dc-5c47-416e-9a27-79e2c7e9fd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7949e0b-2660-4680-9867-37ca1b46aeaa",
        "cursor": {
          "ref": "d5787639-a17d-4ffa-b933-0d55a4d3297a",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a37f430c-d1c4-4244-b57f-9735cfd616ee"
        },
        "item": {
          "id": "a7949e0b-2660-4680-9867-37ca1b46aeaa",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f61263d2-11a6-43cb-9e92-2485837af63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38840c4-90a5-475b-9611-4fcd23539e70",
        "cursor": {
          "ref": "a8a01f79-a1b3-4d0a-a21e-3429da414432",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f90232d1-08c9-4825-8335-91d5a55d8b3a"
        },
        "item": {
          "id": "a38840c4-90a5-475b-9611-4fcd23539e70",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d6865fbd-c69c-4a75-9acb-1323090ba60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d671190-2d43-4741-bbdd-4c173cc41b7d",
        "cursor": {
          "ref": "28d4221f-8639-40fa-ac3b-80f5c8475e20",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "416ae8e5-c208-48d7-a3cd-bb9e6f71cba4"
        },
        "item": {
          "id": "0d671190-2d43-4741-bbdd-4c173cc41b7d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bf146e86-7a98-4612-a19f-56f7582132d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740489c9-475a-4c8e-a287-3e38d8bdc8ac",
        "cursor": {
          "ref": "b657bf10-7096-4cca-a216-51c877604744",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3c5b2b7c-02ce-4fbe-83ca-ea235b2d07ae"
        },
        "item": {
          "id": "740489c9-475a-4c8e-a287-3e38d8bdc8ac",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "37ecaf78-3079-4757-9f01-c564fde30cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e53ea9-5b9e-4c2b-8b6c-037bca26f7d2",
        "cursor": {
          "ref": "d1e1699d-1d67-43bc-ae29-61550076c822",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e00d11ef-7b1d-4d3f-8c70-91f0ff927708"
        },
        "item": {
          "id": "33e53ea9-5b9e-4c2b-8b6c-037bca26f7d2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "41d3c35d-2404-44ff-915c-c6cb233b78a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95038d71-ced6-4df6-b34d-e0e886f05c20",
        "cursor": {
          "ref": "3ce98927-8fff-41af-888e-3da74f0e2486",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "989d41a2-a0bc-43c4-862e-45fabd977521"
        },
        "item": {
          "id": "95038d71-ced6-4df6-b34d-e0e886f05c20",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a22eb6a2-7f0a-47de-9aa2-385c89a8c9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8c05aa-02d4-4dec-8b70-ce75bb72c050",
        "cursor": {
          "ref": "f1818965-6265-4da6-aeaf-0f67992125e1",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b46d75ff-ab54-4208-9740-4d147171207d"
        },
        "item": {
          "id": "5b8c05aa-02d4-4dec-8b70-ce75bb72c050",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cdf613f7-8203-415d-a4e7-fd9c7d7353ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d253ab5c-486c-4fb2-9b32-4f440420de38",
        "cursor": {
          "ref": "8861709b-6f70-4610-8476-e6a038009bd8",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "836314d6-bdcf-4032-8793-3c2ffac7191e"
        },
        "item": {
          "id": "d253ab5c-486c-4fb2-9b32-4f440420de38",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6d0ee8ea-47a2-411d-a31c-5d3a8eb26488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64077872-b5a3-40c5-b995-b904986664c9",
        "cursor": {
          "ref": "391e15b3-3936-448e-8094-59e09e05c2a7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f5d01a8c-5abc-4a97-afce-2a3328668b35"
        },
        "item": {
          "id": "64077872-b5a3-40c5-b995-b904986664c9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0e173109-d148-4156-be9a-262cd8630d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb91fbb9-e946-4ea4-88d4-c8dc52bab865",
        "cursor": {
          "ref": "6628f4e5-209c-434c-ae82-dce6675f21bd",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a3de0b09-5839-4d2a-9a84-383b80d71179"
        },
        "item": {
          "id": "cb91fbb9-e946-4ea4-88d4-c8dc52bab865",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f9cc6aac-7d23-4421-9583-2f9868113d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba597a8-8b56-4297-a1c4-59442d020168",
        "cursor": {
          "ref": "04938f6d-bfb7-4c62-8990-865e7345d0c1",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ff72d1a2-8a6e-4a77-bc20-f63f3c0caf38"
        },
        "item": {
          "id": "bba597a8-8b56-4297-a1c4-59442d020168",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cefe5313-d123-4293-ba3d-7a470dbf11e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908d9194-5595-446d-83bf-1b11f48a0257",
        "cursor": {
          "ref": "8322428d-00c3-4121-be46-c7c65eb8df20",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3ba36cd2-19b3-463b-832d-bb7a2b78fa5f"
        },
        "item": {
          "id": "908d9194-5595-446d-83bf-1b11f48a0257",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b3873fe5-7e3e-41d8-8adb-0861d6a1b71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0020bb-a8a8-41b4-b691-1adfc12cf3f3",
        "cursor": {
          "ref": "cc00bcc6-ded4-4828-80c5-40a1aa55bc2e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7de8ddc7-e6f8-407a-b090-6861437a2f90"
        },
        "item": {
          "id": "2a0020bb-a8a8-41b4-b691-1adfc12cf3f3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "18c991bc-f912-40e7-a91a-64c4181dd2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c39a037-fb56-4b6f-a6ed-0fd1d2dcce70",
        "cursor": {
          "ref": "b7f3f757-ccfd-4ada-8c03-ff2319795d18",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "08ac5d81-6217-40ec-a382-79986b334709"
        },
        "item": {
          "id": "3c39a037-fb56-4b6f-a6ed-0fd1d2dcce70",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "620b474b-67ed-441b-ab95-f37fdcc81df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25d6811-ef7f-4271-8069-c51eb3d8820f",
        "cursor": {
          "ref": "ca35ce3e-60f8-44bb-916c-61828d96cb3c",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "63a8a8f5-1497-4b95-b89f-fa247b4ab426"
        },
        "item": {
          "id": "c25d6811-ef7f-4271-8069-c51eb3d8820f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a2735392-c3f9-43e2-86b3-274d5c8a313a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71867ac0-818b-40d3-a0b3-b6c5eda32eb6",
        "cursor": {
          "ref": "41bcb52c-c57e-4a6f-9f30-59054701d5a7",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "87cbf3ad-38ed-4994-acbd-8c2fe4b4220c"
        },
        "item": {
          "id": "71867ac0-818b-40d3-a0b3-b6c5eda32eb6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "da8f986e-4827-40f8-a988-d1104d5911f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54645ed-b265-4798-aac9-73c1b945928a",
        "cursor": {
          "ref": "1652427f-de5e-4249-8af6-1af4d6fa3468",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "674a74b4-7317-4754-b203-b800e2592c6b"
        },
        "item": {
          "id": "a54645ed-b265-4798-aac9-73c1b945928a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f0e42921-e6ec-49d3-ac07-d270bbc1a2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e194d8d-b5f3-4aa0-916c-9af0f8b36d5e",
        "cursor": {
          "ref": "bcaa92ee-c4bf-45a3-832d-19502090c6f2",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e4e22362-7a28-40ec-ad34-b260a4b3ad93"
        },
        "item": {
          "id": "1e194d8d-b5f3-4aa0-916c-9af0f8b36d5e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fe00b6e2-875f-49a5-8b5e-e3349df64399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c1f088-263a-4ed9-9160-3cf825f7dc8a",
        "cursor": {
          "ref": "1c3a90ed-6f87-4b93-9661-48332a1c0d6c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1f3dd967-89a5-4a01-acaf-84d9e9536c59"
        },
        "item": {
          "id": "b6c1f088-263a-4ed9-9160-3cf825f7dc8a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a209acaf-1a0c-4ea5-bd70-0dc4fc9ef837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20342e6-7214-402e-ba5e-2975e1d12f44",
        "cursor": {
          "ref": "41a54970-b280-4ef4-94f8-ee80a3f59d68",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "45892ea4-64a9-4133-b639-c783db000cac"
        },
        "item": {
          "id": "b20342e6-7214-402e-ba5e-2975e1d12f44",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5b084bea-8038-4eee-8770-d6ad83c788fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685864bc-4496-4a41-8420-985a874ef7b2",
        "cursor": {
          "ref": "abe86162-dcfa-4b9f-97b8-3674cd22f527",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e1bdde43-039a-4556-a176-b1bdcb53b4ca"
        },
        "item": {
          "id": "685864bc-4496-4a41-8420-985a874ef7b2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "57508c2a-51c9-46be-b0a1-42e2a1dd0e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e740b0-cefd-4a36-bfa9-52c99f876443",
        "cursor": {
          "ref": "820105bf-1458-4bf9-bad6-f6cbed4394e5",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8b2a2017-1685-4706-b3cb-ecb4f6ec5085"
        },
        "item": {
          "id": "85e740b0-cefd-4a36-bfa9-52c99f876443",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3cd1bb88-621e-4744-b5dd-dff105dc05c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a25253b-8aa2-4744-a26b-7e407b5daa16",
        "cursor": {
          "ref": "de243750-cfb7-44f7-afdf-8cf3b843f4b7",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "77444b26-38f1-408f-a7af-b83902774f1c"
        },
        "item": {
          "id": "7a25253b-8aa2-4744-a26b-7e407b5daa16",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "94a53831-6719-4d68-9c7f-8b31204e0c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa2f63a-c34a-42f7-bd4e-fafa9c8c547a",
        "cursor": {
          "ref": "7d5062ba-f1a6-4e94-94b4-31c822a34518",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "151747ec-8095-4561-bf35-07e8b96051b9"
        },
        "item": {
          "id": "daa2f63a-c34a-42f7-bd4e-fafa9c8c547a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "777b1944-3b30-4597-b9c8-314e5a7efb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fc051d-6d18-47bd-9f05-94d99ed9537a",
        "cursor": {
          "ref": "eb5f1891-6a61-428c-b896-130d2fb22eb9",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a1545d06-c873-40d2-bb9b-e951c7839257"
        },
        "item": {
          "id": "a6fc051d-6d18-47bd-9f05-94d99ed9537a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f7762da0-3514-45d4-b24b-5e7ce77bad02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206221ef-7a44-47af-b54e-713e2fe0ca01",
        "cursor": {
          "ref": "8cf52cfe-536d-4b07-93b4-7b6e09fd24a5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "877a58c1-8261-4b12-9ff2-7a187cee754d"
        },
        "item": {
          "id": "206221ef-7a44-47af-b54e-713e2fe0ca01",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6369dd8f-154c-45ac-85bf-4003e3b252ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7c23ae-1fe8-49c0-b470-eb16eab6d4d8",
        "cursor": {
          "ref": "930777a0-2ee7-44ff-b010-980e28d44ef8",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "473c3ad6-e3be-49db-ba69-0a7d70a83d2f"
        },
        "item": {
          "id": "0e7c23ae-1fe8-49c0-b470-eb16eab6d4d8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "73448a9e-b0b7-4005-9d13-b6a41bd37df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b27d92-cc19-4280-979a-4276ca7924de",
        "cursor": {
          "ref": "2b523cf8-cc89-4a1f-a522-aead14ac24cc",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7f0e32e6-22ec-4f8e-ae06-bc2308130f25"
        },
        "item": {
          "id": "f1b27d92-cc19-4280-979a-4276ca7924de",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4f03aa8f-7423-40b2-b310-78a7741f4e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d88b22c-aa9c-4899-b5d9-d1b53114ea79",
        "cursor": {
          "ref": "f920cdd8-d69e-4637-9f37-026c237985c6",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6af4f2d2-837d-4aa1-9ce3-a7ba631e58b1"
        },
        "item": {
          "id": "8d88b22c-aa9c-4899-b5d9-d1b53114ea79",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0fd88662-a540-4756-b903-243acbf411f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff54a23-18a7-4415-935f-8264949a739f",
        "cursor": {
          "ref": "31c03b21-4abc-42b8-97cd-1048085a3ef4",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ac5ef4be-0993-41c3-886f-138830467706"
        },
        "item": {
          "id": "1ff54a23-18a7-4415-935f-8264949a739f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "97347234-5a3a-4897-911b-b7b1ea879040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8298e86f-15b0-4ae9-9c0d-2b0bc02c15ba",
        "cursor": {
          "ref": "342476b3-6449-4632-a4c1-29fe52d2fc92",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "72e8fa36-9d93-458e-98b8-ed2d56d77f9d"
        },
        "item": {
          "id": "8298e86f-15b0-4ae9-9c0d-2b0bc02c15ba",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f995c015-25ec-4e77-8ac7-9c8eff5dd86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbe84ca-ebf6-4aca-8032-cccae01d5fbe",
        "cursor": {
          "ref": "3d17764d-8931-4a1e-a78d-055f7e79d609",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "67010a7a-17f4-4ebc-a1c4-69b235eddb7a"
        },
        "item": {
          "id": "ddbe84ca-ebf6-4aca-8032-cccae01d5fbe",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "09081431-b60c-4052-8bd3-849f56a227a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b2c2a4-c469-4018-bdb1-15d5be91d466",
        "cursor": {
          "ref": "d9a7d833-49e6-49a4-844b-1840e15689a6",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "272d4f6a-e490-4279-9a05-ea6b420b409c"
        },
        "item": {
          "id": "a0b2c2a4-c469-4018-bdb1-15d5be91d466",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4e68ebb8-499a-4e7d-abd0-f9c8a5c0f22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ff9195-8127-48e5-a8ae-65a77de2ec4e",
        "cursor": {
          "ref": "89120e28-78aa-4897-9634-d2870efecf32",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "afd5ed1d-2174-43fe-bc8d-66c758e211b1"
        },
        "item": {
          "id": "79ff9195-8127-48e5-a8ae-65a77de2ec4e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "14984360-2421-4987-82d8-e412560179bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a79c364-1e95-469d-a157-a659952df26a",
        "cursor": {
          "ref": "5216bcca-8100-4279-b5cb-a83c106696cd",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a9587197-4559-45d1-ba0f-8647b4b1ebae"
        },
        "item": {
          "id": "4a79c364-1e95-469d-a157-a659952df26a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7f987e4d-a1a1-4e0a-94df-f3db3a436ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0802265e-4cf9-4271-9e9a-68aba2297a5a",
        "cursor": {
          "ref": "92215206-368d-4886-9bde-2a80c4398b38",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e01f116e-bca4-4f1f-ad70-35e7951decd3"
        },
        "item": {
          "id": "0802265e-4cf9-4271-9e9a-68aba2297a5a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "791af85b-1fab-4b17-910d-dd7d46ce6fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a04cd0a-130b-495d-acb3-221752c33469",
        "cursor": {
          "ref": "9357c8bb-ae52-429a-9165-971f8df218bd",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0c322dce-d233-4b96-a85b-5c6f0d67da42"
        },
        "item": {
          "id": "4a04cd0a-130b-495d-acb3-221752c33469",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bde535dc-daac-4315-bb5b-e9f478544ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a15f2c4-aecf-4826-aa17-fcc715996d12",
        "cursor": {
          "ref": "c7a82f0e-5d4b-4a20-a1a7-cfcd67a34e10",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "88f47c12-25ee-4ba9-91c2-03e70a209c10"
        },
        "item": {
          "id": "8a15f2c4-aecf-4826-aa17-fcc715996d12",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "93b4b5d2-176d-49bd-94b4-a096292de72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b012d0a2-b7e5-42c4-8ffb-82a7009e2b37",
        "cursor": {
          "ref": "76a70749-48e5-491c-b54e-2d29044b0804",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5e4495f9-26ad-4aed-9b65-ad3ae45e1646"
        },
        "item": {
          "id": "b012d0a2-b7e5-42c4-8ffb-82a7009e2b37",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "62e2c53c-8f75-4282-abbd-b82e1842a2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b1e6cc-b861-4266-a155-b40298657476",
        "cursor": {
          "ref": "534124bf-90be-4cc4-9d48-9c2b69a67ac1",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a3539f78-538e-4c02-834c-a7756079db31"
        },
        "item": {
          "id": "a2b1e6cc-b861-4266-a155-b40298657476",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d6364fd3-6d54-4672-9a99-95c9cdff9496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d865be24-8447-4531-bd66-782c23553622",
        "cursor": {
          "ref": "e27379a3-525d-4fa6-a226-c13d8acdf4f5",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "486caa16-95bf-483c-9bdb-76ece4f14f88"
        },
        "item": {
          "id": "d865be24-8447-4531-bd66-782c23553622",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ac9ce22a-b758-4c7f-b94d-74b663f21867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd01c946-d075-495a-b148-99bb3500ccaa",
        "cursor": {
          "ref": "c151bf27-184f-4180-a90a-39a4c94fcbc3",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "01d84a14-dd6e-4bfb-b68c-653f921f26d7"
        },
        "item": {
          "id": "cd01c946-d075-495a-b148-99bb3500ccaa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "22bf98c8-f7b5-490c-b0ad-d8f969fbd9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9629b265-4f69-4e80-814b-5c4867b1fc97",
        "cursor": {
          "ref": "e37d9ae7-a171-4d76-9b62-ad70c525cee0",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c2d827f3-cb50-4190-9286-665d7f4ce1b7"
        },
        "item": {
          "id": "9629b265-4f69-4e80-814b-5c4867b1fc97",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0df91d55-4888-4b55-967d-8afc53e9ff1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3905bd4-b7a9-41d7-a7d2-cef56bd5b774",
        "cursor": {
          "ref": "dda33610-e055-4eaa-a460-475c39a80ee6",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "86b63119-6d11-452e-84fb-3176bc960f8f"
        },
        "item": {
          "id": "d3905bd4-b7a9-41d7-a7d2-cef56bd5b774",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ececf8f4-d0f1-4610-bc64-fd5b4aa2600b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23eaa509-a75c-47b4-9c5b-8b469787210e",
        "cursor": {
          "ref": "bef5a1a7-8f2e-4ac6-8972-5463b6f85467",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e7d5e9d2-f15f-4b30-8008-555359b2bf14"
        },
        "item": {
          "id": "23eaa509-a75c-47b4-9c5b-8b469787210e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a3779615-077b-4672-a500-397f4bb83148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236466b1-eb4c-42a2-bf2d-8964a14600ab",
        "cursor": {
          "ref": "f0eeaffd-a37a-4119-ac26-3b438c3f9b75",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "333729bd-1fff-462f-aac5-3f3865c7975d"
        },
        "item": {
          "id": "236466b1-eb4c-42a2-bf2d-8964a14600ab",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "148251b6-0795-4db1-b99e-fc6d4136bbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9326d9-5bf6-46da-ac6e-16fd7e576303",
        "cursor": {
          "ref": "0ac3ea1b-332d-486d-8d51-95468caf822c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6e9b0cd6-bfff-48e8-b6d3-ae996b04fb07"
        },
        "item": {
          "id": "9b9326d9-5bf6-46da-ac6e-16fd7e576303",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ab39a288-0a50-401d-9209-87f4d65d4653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833b8573-2dd3-4277-a8b8-4191e0294196",
        "cursor": {
          "ref": "c5434902-4aa3-478f-b8d0-b8494e2be265",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4fed76a0-291a-4c8c-bab4-6dc1a74b7ec3"
        },
        "item": {
          "id": "833b8573-2dd3-4277-a8b8-4191e0294196",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "abc28d43-fed9-410b-98b5-3033fd64824a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9759b9a0-7563-4d02-abdc-8dce501026aa",
        "cursor": {
          "ref": "ceca780a-622a-4236-a1a1-c9b1d683bcae",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "56d2b028-09b2-4e46-a8b0-d831b76c4ba8"
        },
        "item": {
          "id": "9759b9a0-7563-4d02-abdc-8dce501026aa",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "249758a7-1519-4796-9bbe-1c9592d64514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c20551-a7b5-4c6d-b2cc-fa775a1724ff",
        "cursor": {
          "ref": "49672024-a18b-4545-ab7c-daaa4627e3ed",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d684bd2b-095d-4ae1-aa10-c1985c80ae03"
        },
        "item": {
          "id": "96c20551-a7b5-4c6d-b2cc-fa775a1724ff",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f690dd1c-3317-4497-bf44-4dcda3ac29ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc5e181-e803-462f-8f41-ce1ef0936b4d",
        "cursor": {
          "ref": "beb5f02e-4d1c-479d-a042-bd2c60cd9458",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c0fd739c-c237-4a73-adae-a7915e675d69"
        },
        "item": {
          "id": "cdc5e181-e803-462f-8f41-ce1ef0936b4d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a7391bbc-c035-40d9-bd5a-d8607863cb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6394d46e-d631-440d-ac71-c28ad128a1ea",
        "cursor": {
          "ref": "9e135a47-7a32-45b2-8ab1-02cb2c227603",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "16124d8c-a6f3-4511-bb4f-73196484be05"
        },
        "item": {
          "id": "6394d46e-d631-440d-ac71-c28ad128a1ea",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "eafb2db2-facc-4992-b6e5-0a2405e7714b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116c3e40-1fc6-4645-bbc5-9613719c836f",
        "cursor": {
          "ref": "b033e470-eb0d-40a2-b430-acd8105712d5",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fa804e51-a0d0-4161-9679-70bda9306ad3"
        },
        "item": {
          "id": "116c3e40-1fc6-4645-bbc5-9613719c836f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "efe341b2-2ae4-4c28-9469-3f07b8e209f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bc5cb8-80ad-4b2a-9b6d-4077e3fe48f3",
        "cursor": {
          "ref": "3458bf44-02c6-4996-8a30-0c610dcdcd14",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4d0e33fe-59a1-4b9a-9bbf-efaa1d0f40f3"
        },
        "item": {
          "id": "17bc5cb8-80ad-4b2a-9b6d-4077e3fe48f3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4f399945-465c-4372-bf44-1fd5f146865f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecea947a-fe2a-45fe-9305-0096f64d6a50",
        "cursor": {
          "ref": "5f9baaef-4951-4675-8a12-f09662b2ba06",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d2a5d577-bea6-4dd7-bda0-baa03d8a586f"
        },
        "item": {
          "id": "ecea947a-fe2a-45fe-9305-0096f64d6a50",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "53122dba-f12d-4c05-bb99-918037c10fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaac26c4-e726-4d96-a5e9-bfa6e714563b",
        "cursor": {
          "ref": "85739890-81cc-49d3-a65e-abdf4d156879",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a3bcda05-dd81-4f21-a867-a4420d32be26"
        },
        "item": {
          "id": "eaac26c4-e726-4d96-a5e9-bfa6e714563b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "769da220-d0cf-4e61-8fa2-b919159337e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326f2b24-8d03-4b1e-b6f1-4248161d2b0e",
        "cursor": {
          "ref": "ac140da6-dcb6-458d-b5c3-86a7241db554",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fbf2938d-e0b3-49fd-a9cc-8e2dcd91c6c5"
        },
        "item": {
          "id": "326f2b24-8d03-4b1e-b6f1-4248161d2b0e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9e9e87ae-1303-448f-b14a-b64a3c6f0b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc6c4d1-f843-42ee-a405-8560f95c8bec",
        "cursor": {
          "ref": "fcc3ec89-8146-4e76-81a7-2809efba6235",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "46525a18-054e-4fae-8265-f5abc41a34c1"
        },
        "item": {
          "id": "2fc6c4d1-f843-42ee-a405-8560f95c8bec",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c8c843a3-5889-4ca1-8214-2e66a110b7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4fb2bb-b3f4-48f6-a87f-1769275127e4",
        "cursor": {
          "ref": "1617cc0b-b6b2-4578-b101-b9e7bf46ecaa",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4a73bf34-8c8b-4a19-9170-0078dbe03d71"
        },
        "item": {
          "id": "7c4fb2bb-b3f4-48f6-a87f-1769275127e4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "847b1c63-0864-409b-85f6-616450f6a3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470cd034-c28f-4383-acaf-c59d07295f18",
        "cursor": {
          "ref": "3f7db530-ac1c-4b7a-b7ad-361d35fafcdb",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "38d81dde-e412-4615-8e10-c08f7ef6ec6f"
        },
        "item": {
          "id": "470cd034-c28f-4383-acaf-c59d07295f18",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "35143f6b-3937-4e0a-bb8a-44df042bc84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8e1bfc-083c-4f96-b58b-ef98b7e6eeb1",
        "cursor": {
          "ref": "4b1ed7f0-a4da-4eee-90ca-f867633eee72",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fa4e70c0-80b5-4bb2-9859-9aee17fa4469"
        },
        "item": {
          "id": "9c8e1bfc-083c-4f96-b58b-ef98b7e6eeb1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3bd90a45-3a30-4353-82f5-3c060afcf1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae247af4-d697-4c8c-924a-02d42db11d4d",
        "cursor": {
          "ref": "2a1dd680-2f2a-4fb1-bdb4-b924e45c60bf",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fe63bc6b-64a5-47a2-b221-9061d03c9760"
        },
        "item": {
          "id": "ae247af4-d697-4c8c-924a-02d42db11d4d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "468be1db-3d8b-4438-ac2a-185214b048cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc10a481-c4f7-464f-ae51-a2af0fee6865",
        "cursor": {
          "ref": "0bb518ba-e0e0-456a-b95c-08cd5c8a16a2",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1ee519bb-d618-4b46-921e-33fba3c4cda1"
        },
        "item": {
          "id": "dc10a481-c4f7-464f-ae51-a2af0fee6865",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f92ef973-df22-4210-a812-aa902bf43196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a939d64-87ad-4cd7-b80a-ef370657c646",
        "cursor": {
          "ref": "6650029e-9f76-48fd-9972-9f37dfbdf735",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5b193332-8062-40be-9d3b-431c55366193"
        },
        "item": {
          "id": "6a939d64-87ad-4cd7-b80a-ef370657c646",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7d1143ea-55bb-43bc-8dac-8f48f907d59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653b476b-96c8-46a8-bff1-3e8783581a02",
        "cursor": {
          "ref": "4a04dcc6-590c-4b32-bacb-f3a5faef1896",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "34a387f7-ef3c-40f6-bdde-ab5804897b33"
        },
        "item": {
          "id": "653b476b-96c8-46a8-bff1-3e8783581a02",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ab5bff29-31c5-4e6a-8e9b-b97484f132bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2243a63-a393-49ee-b45e-21d67d2514f3",
        "cursor": {
          "ref": "22e51aa7-f7a5-488f-abd3-177b593b0f5b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "00ed9d30-a645-4a97-98bc-64f33cdba3d0"
        },
        "item": {
          "id": "a2243a63-a393-49ee-b45e-21d67d2514f3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e14414a2-52e1-4cec-8686-4ef5ba898d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1357d48-2b30-4c2a-bebf-bd8807374359",
        "cursor": {
          "ref": "931f5129-cad1-4a80-8a2a-bdee7c277deb",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c0cbbc4b-8399-4cc3-907e-836c92b515e1"
        },
        "item": {
          "id": "c1357d48-2b30-4c2a-bebf-bd8807374359",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c3984340-17a7-4031-9789-75304343b53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccd5f24-eb6c-43db-a679-8882a6df3ff2",
        "cursor": {
          "ref": "d8e4ac49-fec2-42fb-9386-8cac7b8d26e6",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2a94a77a-d60b-40ca-ac3a-7ec58e6dd359"
        },
        "item": {
          "id": "5ccd5f24-eb6c-43db-a679-8882a6df3ff2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e9c4c886-b6f9-4a34-ab0e-08a1ed72adc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c092227-c099-4e06-879b-dcc730dce278",
        "cursor": {
          "ref": "c469642c-b31c-401b-93fe-00f0d51609b5",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3a5a555f-c1c9-422c-8416-eb6804ecbe67"
        },
        "item": {
          "id": "7c092227-c099-4e06-879b-dcc730dce278",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a7b3cb55-4db1-4bba-9f71-407b49a88fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ebdc76-5784-4749-b1d2-705b667b962c",
        "cursor": {
          "ref": "78eda09a-dccc-492b-af36-fbe811e3dd4e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a4347082-ecc9-44b4-aaa2-a0050bb9807a"
        },
        "item": {
          "id": "44ebdc76-5784-4749-b1d2-705b667b962c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0bcfbf83-547f-4d21-bc47-8a6dd02c4015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaac2eaa-f827-4334-9635-0d399200fdd0",
        "cursor": {
          "ref": "997b36b8-3dcc-4379-817d-bede97e70a69",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "020e98f3-3a09-4dd3-a98e-023af54f0e31"
        },
        "item": {
          "id": "eaac2eaa-f827-4334-9635-0d399200fdd0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0abf2f04-438d-41e9-bd7a-3af9387aff33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2477109b-bf6f-409e-99c6-9d8adc311d1d",
        "cursor": {
          "ref": "a8ce6c81-2afa-48df-96a2-12fde5057864",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dfc99463-d229-4e7c-99db-e605d36b5c5d"
        },
        "item": {
          "id": "2477109b-bf6f-409e-99c6-9d8adc311d1d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6850726a-b4b1-4fa3-998a-2a0e81f59987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2effe1d2-4ed1-4e90-a799-84d0211f42ae",
        "cursor": {
          "ref": "49d0beb9-896d-455d-9621-67bd9fd41a0d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2d7febff-9dc0-4b23-a25d-53e5485fadce"
        },
        "item": {
          "id": "2effe1d2-4ed1-4e90-a799-84d0211f42ae",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9f1f36ef-9a53-4f2c-bb18-7a20ba96b0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8238c7-0d4a-42fb-893c-2f28c4f5b3e5",
        "cursor": {
          "ref": "b2bf0c71-9784-4ef5-be57-0631751b6023",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bf75a7a6-eea9-4c0a-8fa9-36241b4460f1"
        },
        "item": {
          "id": "9e8238c7-0d4a-42fb-893c-2f28c4f5b3e5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1a6e0a38-5874-4273-bc36-613eb0d64548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30e7dc3-721b-489d-b40c-da7387fe2c93",
        "cursor": {
          "ref": "4cda6510-4e9b-4fff-b894-0bed062c2b6d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6e95f527-beb7-4a92-8f89-c56b352c2672"
        },
        "item": {
          "id": "a30e7dc3-721b-489d-b40c-da7387fe2c93",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a8301040-8aa3-4824-b027-d4e2e42a872f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "58191df1-3be4-4461-873f-34992237ac3d",
        "cursor": {
          "ref": "e21fe162-428c-4706-ae68-93a0ab12c944",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "49595711-0dd7-411a-aca1-5a9bd0003a2e"
        },
        "item": {
          "id": "58191df1-3be4-4461-873f-34992237ac3d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "07015be9-fbad-4428-b34b-fd49ce5aa8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5447ac3b-cae5-4917-881b-4f617769b514",
        "cursor": {
          "ref": "c281446d-932c-40e9-90be-74bf4ec507cc",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0e0ea216-28d0-4654-b383-c93e5ce166e1"
        },
        "item": {
          "id": "5447ac3b-cae5-4917-881b-4f617769b514",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1b472884-73a8-4c7c-b600-d23e75e272d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "11386c74-31bf-4fc9-a7d5-ca49af0dada7",
        "cursor": {
          "ref": "b2a44ff9-5d94-47e7-beab-a494404c6670",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6bf7da99-8156-41a6-9192-d1d50470db21"
        },
        "item": {
          "id": "11386c74-31bf-4fc9-a7d5-ca49af0dada7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e325b47c-f7f3-4a41-9d07-0679823b1a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9945d855-3b2d-4318-a108-7ecbc22b4563",
        "cursor": {
          "ref": "599188e4-b675-4e11-8134-58861241f574",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "55446285-3b34-48df-b61d-600c4149ec6a"
        },
        "item": {
          "id": "9945d855-3b2d-4318-a108-7ecbc22b4563",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ad3431a2-d10c-45e0-958e-075bb30d4679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c7dc0ed1-e49d-4fad-9b26-c5aa763c6e4a",
        "cursor": {
          "ref": "6ea50675-00ee-4310-922b-248020ff4393",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6ef960e8-1b16-4b0d-945d-32b445ba662f"
        },
        "item": {
          "id": "c7dc0ed1-e49d-4fad-9b26-c5aa763c6e4a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "31d786e1-8b05-49e0-97b8-c6376feef2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "680b7eee-59d0-42a5-ae0c-4b9164a3aca7",
        "cursor": {
          "ref": "fe204b79-73b1-40ee-abb7-623a38265504",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9936985f-bbea-45c9-9a76-ef52443bf2a9"
        },
        "item": {
          "id": "680b7eee-59d0-42a5-ae0c-4b9164a3aca7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cbac2898-2325-4f22-84c1-93a5862c281c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "cac4abe7-0b7f-4515-84ad-f2c1ff8779d1",
        "cursor": {
          "ref": "52d84ee8-07bc-40eb-be77-16fc3bc4720d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1882c4d2-b433-4aed-8627-5cfaa5d20dbe"
        },
        "item": {
          "id": "cac4abe7-0b7f-4515-84ad-f2c1ff8779d1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "57430a79-09c2-41a7-930d-c5c4d7dae48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1c2faf-3fc5-4cf8-8435-968f2cdaeee8",
        "cursor": {
          "ref": "7d0fe0fb-0395-4270-9f35-9fd88ecbf75f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5ab926be-db13-4fd4-9b27-5dad48d13bc4"
        },
        "item": {
          "id": "9d1c2faf-3fc5-4cf8-8435-968f2cdaeee8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bdfc2398-42e3-4fb9-ba3a-2baa1168048d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bf7935-9ddf-4261-940a-b05bffe90ccf",
        "cursor": {
          "ref": "b2cc2a8a-eb95-4371-9f06-a2563c8f8119",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a87c5eae-38c2-4a73-a9dd-b53a4e14befd"
        },
        "item": {
          "id": "00bf7935-9ddf-4261-940a-b05bffe90ccf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dec5da4b-570c-46d3-8895-7ba49b6e68de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b2419b-45c7-4e20-8ab3-dfbfaddeace3",
        "cursor": {
          "ref": "a04aed2d-108c-4ff8-8d25-64e8cf8befbf",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b2ac9794-3d5d-4766-a20e-a29294a9fc7a"
        },
        "item": {
          "id": "52b2419b-45c7-4e20-8ab3-dfbfaddeace3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f86f24b4-a6eb-40cf-be6f-b629874d1a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67730ac2-0385-4e71-99cd-4b9711165b9e",
        "cursor": {
          "ref": "ce4afe6b-3919-4bbc-bcfb-a8cbe79e9a31",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a44f4865-ab1e-4d89-a369-259703e272ab"
        },
        "item": {
          "id": "67730ac2-0385-4e71-99cd-4b9711165b9e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6625bd37-f046-415d-bc92-b978cc0a7f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd046f6-c02e-4f43-a5d6-47ee8b58adb2",
        "cursor": {
          "ref": "498bf891-3da4-41cc-913b-fee0a848c1d3",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a192d7c7-456e-46ae-8d8b-a47e6c83ffb9"
        },
        "item": {
          "id": "6cd046f6-c02e-4f43-a5d6-47ee8b58adb2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "68cca103-4534-4791-8fb8-78a99a11e48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3541e084-f308-400a-80e8-32bbec768906",
        "cursor": {
          "ref": "a1ca15e8-83ce-4b60-810b-d001441abd89",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bff036eb-cdd1-491f-83b2-71f81a873056"
        },
        "item": {
          "id": "3541e084-f308-400a-80e8-32bbec768906",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "121e22e9-7ff2-416c-aa14-96dbb00a2105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb7e703-c4d1-4006-b19c-a0f7b4039f90",
        "cursor": {
          "ref": "5c2e9ab6-c05f-46fa-84f2-f8cdd7148b2d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ad0596f0-50b4-4eb2-83eb-bf1126bc318e"
        },
        "item": {
          "id": "0eb7e703-c4d1-4006-b19c-a0f7b4039f90",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4a08b439-1196-4799-8899-abe56a09d105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3375c22-4a1f-4275-9b46-ff4276cfa3e8",
        "cursor": {
          "ref": "302057c7-ddad-4968-8b89-01759d9b3607",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9ed62189-9b17-4ea8-8215-e83fe77703d4"
        },
        "item": {
          "id": "e3375c22-4a1f-4275-9b46-ff4276cfa3e8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2805fb24-57fc-467b-b6bf-b6213d59627e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f340baa-5d9b-4ee5-9b38-6426e1501e05",
        "cursor": {
          "ref": "40578d47-6468-4445-a5bb-6b3d51225663",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "18d7a942-fb3c-47fd-be6e-397d08855ee7"
        },
        "item": {
          "id": "9f340baa-5d9b-4ee5-9b38-6426e1501e05",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7dbb34be-dac3-4831-9121-92112c919ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f89ca0a-d7df-4f7e-8f4c-5b6a51cd0600",
        "cursor": {
          "ref": "54458df7-617c-4742-8800-104855596ed2",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bb74913e-3040-4dc7-8dc3-59d649589803"
        },
        "item": {
          "id": "1f89ca0a-d7df-4f7e-8f4c-5b6a51cd0600",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d2b5a569-800a-4c4d-9118-527b98dfd0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aedebe8-7668-4d36-9ca6-2599f2ce86d1",
        "cursor": {
          "ref": "f8fb0c2f-4d78-4113-9045-83333339883c",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fce2eef5-8483-414c-9780-abbcd1ba51f6"
        },
        "item": {
          "id": "8aedebe8-7668-4d36-9ca6-2599f2ce86d1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9b87c829-2d94-45ce-ad13-b9e15e4d7545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331220c6-606e-4ee1-aa5b-549df10689d6",
        "cursor": {
          "ref": "4f83ec6f-6ae5-462e-8705-2d568527e696",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "38091ea6-fd4e-45f7-b573-d7b02bcbc945"
        },
        "item": {
          "id": "331220c6-606e-4ee1-aa5b-549df10689d6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cc14a29d-5abd-4e18-a834-117cdda189ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6cc5c7-f60e-4573-82b3-3d4d47fe4af5",
        "cursor": {
          "ref": "e025c3b7-1523-4669-b241-84ea8d214ff2",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "166e2c16-ddae-4d06-af99-2ebb903064be"
        },
        "item": {
          "id": "4d6cc5c7-f60e-4573-82b3-3d4d47fe4af5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7a1dcd6d-4124-4c5d-afe3-ad18a3eff0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d77e1f6-9c0d-4481-8654-42aa406fb104",
        "cursor": {
          "ref": "685856b2-cb25-47e5-bcd0-caf2f3840b52",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8a41ee47-21ff-4003-85be-8ef9022d835e"
        },
        "item": {
          "id": "8d77e1f6-9c0d-4481-8654-42aa406fb104",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "eafe5896-7518-44c0-8305-2f038526de0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14cecca4-98cf-4f4d-bd5e-99716670b7b7",
        "cursor": {
          "ref": "53833566-78a3-4cfd-b4bb-4fa5230e38c6",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "980e9af5-861a-4613-a1ce-f30aed0f8031"
        },
        "item": {
          "id": "14cecca4-98cf-4f4d-bd5e-99716670b7b7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bc870ed1-4524-448e-825c-895bb1f34b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34160fcc-5236-456c-8e98-7ad1d383bdd9",
        "cursor": {
          "ref": "e9f42333-0841-4645-b2f2-d46d3e901bc3",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a7918072-f7a2-409f-930a-7ad5a1277be7"
        },
        "item": {
          "id": "34160fcc-5236-456c-8e98-7ad1d383bdd9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9135562a-c1e4-45b1-9530-dffc92705aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c5c504-6ff2-401a-91ad-0f82d9dc8c08",
        "cursor": {
          "ref": "61780866-f2ae-409d-823c-eb99342b657f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "715670a5-3c1b-49f7-8dad-7af9ee9b38a4"
        },
        "item": {
          "id": "c7c5c504-6ff2-401a-91ad-0f82d9dc8c08",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fc82219a-3209-499a-a74e-07cebd2f2e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71b984b-9793-482c-8b0c-6cf07fa4d012",
        "cursor": {
          "ref": "73d1f3ba-1b96-453e-90eb-6f0c8f1ab95f",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cf48dc75-8f46-492a-bc9f-d14d02da99f7"
        },
        "item": {
          "id": "f71b984b-9793-482c-8b0c-6cf07fa4d012",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9c3d1119-8901-459d-8b7b-a86088bfc5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75341ae7-1b79-4000-8ff7-5d72d88913a8",
        "cursor": {
          "ref": "9e378d6e-383a-4538-8e22-65ce2296b727",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "78324948-955e-4a62-a4f9-bc47538c44b8"
        },
        "item": {
          "id": "75341ae7-1b79-4000-8ff7-5d72d88913a8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "85d78089-7147-43d9-a083-e7e7322857a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441eda89-0fab-41be-8bc9-332153df4579",
        "cursor": {
          "ref": "32506187-cafb-4b04-9f8a-05ccd8cbda7f",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e3b9dd1b-c24f-4c63-90e2-cdacd2bb0bcf"
        },
        "item": {
          "id": "441eda89-0fab-41be-8bc9-332153df4579",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cc1d7ffd-dcce-4787-8174-965a4e6cb184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9971f0b-1ee2-4fc0-93d1-6c1145d86173",
        "cursor": {
          "ref": "f66b8d3a-4b53-41b5-8277-7a34d61d3405",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "10ee1160-9a67-4aa1-9764-b9001d3c9f92"
        },
        "item": {
          "id": "e9971f0b-1ee2-4fc0-93d1-6c1145d86173",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e2479923-5bdb-4c3f-9a1f-da86e36d0d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2cbf4a-7b12-4571-a5d8-1f182c71785c",
        "cursor": {
          "ref": "4e407508-1c4c-4453-a279-8254fbf81f9a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cc89eaf2-cf5f-473a-adcd-18740eb4760a"
        },
        "item": {
          "id": "1c2cbf4a-7b12-4571-a5d8-1f182c71785c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "68ab6c3a-5d80-41cb-a109-ff8cf234eaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0079bb-4f8e-401b-a014-9f0aa3bd3e8c",
        "cursor": {
          "ref": "73797462-0ed6-4ccf-b17e-da35544ce6b0",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "efc09761-213a-41a4-a589-e1377d8aee96"
        },
        "item": {
          "id": "1f0079bb-4f8e-401b-a014-9f0aa3bd3e8c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "18ff9adb-dc1a-41f9-ac42-76429c8bb913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a279481-83ca-41ff-b166-6797cd7943e7",
        "cursor": {
          "ref": "50ced732-b62a-499f-8f7e-a05443b8cc27",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0b50a306-ee09-4187-999f-1ee72a96847e"
        },
        "item": {
          "id": "2a279481-83ca-41ff-b166-6797cd7943e7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8ebb6895-b5a9-4d7f-a8be-69a08e4774d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7909d6f3-3a0c-4fd6-9c9d-674941bc395d",
        "cursor": {
          "ref": "af24ac37-5c2d-4685-a87f-3c3e4070d2b3",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "616171b7-04bd-491d-a897-2c991fef9ad3"
        },
        "item": {
          "id": "7909d6f3-3a0c-4fd6-9c9d-674941bc395d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b1866ef0-5cc3-48b5-8a66-c59e365ce61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74901de1-937f-48cd-9edf-07c187e5b458",
        "cursor": {
          "ref": "c5513e9f-e133-43fd-bd97-369f7fb8a306",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ccb0a805-9d87-46e3-96ae-4c56458e9c52"
        },
        "item": {
          "id": "74901de1-937f-48cd-9edf-07c187e5b458",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5c26f47b-0fea-46d5-b427-bda4093d100a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782a5cdc-e419-457f-8a98-243829f52c19",
        "cursor": {
          "ref": "45f3af9e-8b2e-497c-9e93-cd2f903940e4",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a162a666-8dbf-4cdd-a2e2-7f3748f092ff"
        },
        "item": {
          "id": "782a5cdc-e419-457f-8a98-243829f52c19",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5d232bd3-d8a2-4c46-86fe-074c9578004d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30ae81c-d09b-4515-9fa5-cb0be14f947b",
        "cursor": {
          "ref": "c757f308-ffd2-4aae-9699-c603b84e1270",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8300feaf-3816-41d6-b2a2-4d86dedf82d3"
        },
        "item": {
          "id": "b30ae81c-d09b-4515-9fa5-cb0be14f947b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8e34081a-0f40-48d5-99fd-858f7f8001ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aee2685-1184-4365-bed4-067f54a84d54",
        "cursor": {
          "ref": "4c61f21e-1e3d-4aab-a87b-ad3b40d1c280",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "75c06196-98e2-4649-a6cd-288a278facfe"
        },
        "item": {
          "id": "3aee2685-1184-4365-bed4-067f54a84d54",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "febf9d44-9ce0-4490-a971-36b66585f296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a378060c-8d38-4818-adf8-399c6a82da14",
        "cursor": {
          "ref": "b9800827-fdba-411a-9884-7b0f65a23873",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "64258058-603a-45f1-85eb-2d75c290b0f5"
        },
        "item": {
          "id": "a378060c-8d38-4818-adf8-399c6a82da14",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1801f834-20c6-43b3-a65f-1bbc27d8746c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3941f81e-d835-48b2-b4fb-cfd844fc5607",
        "cursor": {
          "ref": "5448ed39-38b5-4d70-b20f-11b1a32b2d37",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d3fc354a-d69f-4f0a-94cc-d2d0deb57ac8"
        },
        "item": {
          "id": "3941f81e-d835-48b2-b4fb-cfd844fc5607",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ee6c4641-d160-48c6-a7d8-a1ad724e40fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b62d3e0-6181-45b4-b5ba-4a8d8f3daea8",
        "cursor": {
          "ref": "d003d4a6-7efa-4132-b3ba-5806f6b9e703",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "29083ede-cd67-42a2-8cb1-69dd07bc741a"
        },
        "item": {
          "id": "4b62d3e0-6181-45b4-b5ba-4a8d8f3daea8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "80b8a45f-0100-4852-857a-81bc689eac2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c654fd2e-793e-44ff-8835-33538da7bbe8",
        "cursor": {
          "ref": "f6b43561-996b-409b-93c0-414a6a80b7ee",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7871c19d-ba8d-46ed-a9b0-7b8129ac8748"
        },
        "item": {
          "id": "c654fd2e-793e-44ff-8835-33538da7bbe8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f8cfb38e-51c2-4e99-b0cb-d22f7fb22319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f7a7ac-f522-4f59-b77e-46a114c1e8d1",
        "cursor": {
          "ref": "94acec53-84b6-409f-9ec0-d84eafb421cc",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2d110928-c1cf-472c-8796-41bd8710e5e3"
        },
        "item": {
          "id": "09f7a7ac-f522-4f59-b77e-46a114c1e8d1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "23656fa0-c199-4af8-a2d1-2e5fe2e358b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928b12d1-3429-4a6f-8f63-d90ade99fe27",
        "cursor": {
          "ref": "84b9335b-caf9-441f-946e-606022e700a2",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f229344b-dd33-415a-8286-97aac5b83610"
        },
        "item": {
          "id": "928b12d1-3429-4a6f-8f63-d90ade99fe27",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ce6d98ce-a80d-4e57-af97-504a50d88660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b58ca2d-9d0b-450c-af53-be471e1ed38f",
        "cursor": {
          "ref": "5883f01c-5e59-4240-ba8b-f752c1cfb868",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fda19804-2cd0-4678-ba53-f1113e56052d"
        },
        "item": {
          "id": "6b58ca2d-9d0b-450c-af53-be471e1ed38f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "22f1caad-765d-4ad1-8f59-c8bc202616e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c6a578-3684-4f0b-9bd0-1d78cf7d42ec",
        "cursor": {
          "ref": "d57664c8-24ef-4951-a542-3174d75e7672",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1e6f165c-0196-4266-be3f-c7bed7899f8a"
        },
        "item": {
          "id": "68c6a578-3684-4f0b-9bd0-1d78cf7d42ec",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3463c750-6962-440d-9961-3ccec2c00a10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a34f18-b046-4d0c-b8b0-8395953ef7de",
        "cursor": {
          "ref": "2c2aa836-411a-491e-810c-ea844ac38558",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2112f698-18e9-4391-a36c-99d3c2510aab"
        },
        "item": {
          "id": "14a34f18-b046-4d0c-b8b0-8395953ef7de",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5de818fc-a747-4cfe-b73c-fb563943982e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32a023d-51f2-4654-80ea-55a083f90b6f",
        "cursor": {
          "ref": "df49daee-ee38-44f3-a613-4c8938d846e6",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2e2bf39f-9cf4-4bb7-bd9c-8c219b85a66d"
        },
        "item": {
          "id": "a32a023d-51f2-4654-80ea-55a083f90b6f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6102563e-b9ec-4acf-957f-879274747887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0037d7-4ea4-4af9-978a-d43fc588989f",
        "cursor": {
          "ref": "6e6b54af-8396-475f-9b1d-5d9cf766dea9",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bdb6ee3e-bca2-4524-9be4-fe4c5cedcd7c"
        },
        "item": {
          "id": "af0037d7-4ea4-4af9-978a-d43fc588989f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1dc32679-ccc9-4799-a676-55a2c8e1bfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e55b70-0714-4b72-ba9f-0acfad629184",
        "cursor": {
          "ref": "68a5e086-b48e-442d-a0a2-43d6369fedc0",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0688f668-e1a2-41d3-8574-ba184dfc7788"
        },
        "item": {
          "id": "31e55b70-0714-4b72-ba9f-0acfad629184",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b1944289-5148-4b5c-a5e5-b6cbcb6ce88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75b5fcb-5e81-457d-851f-983dfa56f263",
        "cursor": {
          "ref": "f1f8536e-a9a8-4302-990f-efb2db11a0a3",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ba046ff8-627c-43c8-8a70-34d5c45947db"
        },
        "item": {
          "id": "c75b5fcb-5e81-457d-851f-983dfa56f263",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "517bcf39-dde0-4927-85e9-eab0e0ed1c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a9392b-dfcb-4f7a-86b6-cc6e2df088dd",
        "cursor": {
          "ref": "0702c00c-330b-4d2d-840b-45a6889fd010",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "27614ec6-6c21-4507-a2fe-587631699dff"
        },
        "item": {
          "id": "e1a9392b-dfcb-4f7a-86b6-cc6e2df088dd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "94739a6c-b636-4a50-92ee-c4487d9589b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fa1ced-3271-4e2c-b14e-8c7b12748d49",
        "cursor": {
          "ref": "fa46b6e6-e206-4d49-a9eb-313fdc88ab98",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f75f1d89-e65d-4c18-a6d8-10e2675cdb7d"
        },
        "item": {
          "id": "b3fa1ced-3271-4e2c-b14e-8c7b12748d49",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a6aa1e07-f3b4-4eef-8cbe-c6e62cf4121d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc0038a-9d4f-4c7e-9873-8dff1f778406",
        "cursor": {
          "ref": "194d217f-e6c4-4856-8de2-ac408749a375",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e29ebc0b-fcc2-459a-8f95-01c1bcd1eba2"
        },
        "item": {
          "id": "adc0038a-9d4f-4c7e-9873-8dff1f778406",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "883a8e2f-7c8d-4a86-b141-f86c22eeedfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cda5d1-7b32-4aac-9987-d4b68c64bb24",
        "cursor": {
          "ref": "9cb6b9f7-5874-4872-bcf8-d6a8bcfcbc0d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "18dc46b9-88d6-498d-a765-ff3264bbe5b7"
        },
        "item": {
          "id": "d2cda5d1-7b32-4aac-9987-d4b68c64bb24",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "73190c76-58f5-4836-a688-7a3ecd3a1f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7dba5a-b657-4f34-b206-fc9de3275018",
        "cursor": {
          "ref": "565b0322-4bc5-4dfe-adee-8df6b57aeb04",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ae8bb73e-3807-4648-91f9-281f19400c45"
        },
        "item": {
          "id": "fb7dba5a-b657-4f34-b206-fc9de3275018",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c4d6b853-c4fa-4453-b2ca-bf0b06f907fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c55fbf-15d3-4a3b-b9ef-c1174e0f334c",
        "cursor": {
          "ref": "88166693-8a16-435e-a169-eb880e01ca9d",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "925dce7a-ba4b-4dfd-ae38-c110b1c994d9"
        },
        "item": {
          "id": "f9c55fbf-15d3-4a3b-b9ef-c1174e0f334c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5fba4f54-1c97-43e3-a6cf-8d6bd0781ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed22d18-ea27-4685-9358-d0dc62546afe",
        "cursor": {
          "ref": "c98ab857-4fa9-48b1-beca-fcad70126680",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5dc9efea-1b0f-45e5-a49c-efea23dedc28"
        },
        "item": {
          "id": "eed22d18-ea27-4685-9358-d0dc62546afe",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "66125cfd-0910-4b5c-8fec-c2f3914a7a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155ec691-43d0-4ec4-be49-9213356e5238",
        "cursor": {
          "ref": "f5b0ceb0-c373-434e-944e-edfcc39acfe1",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1a53d8cf-208e-4f44-8c16-09e9cbe5bed4"
        },
        "item": {
          "id": "155ec691-43d0-4ec4-be49-9213356e5238",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "665d65ec-7b9c-4d79-a7d2-e9ae6b1748c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39f4970-8c15-4f89-bc90-5c2af128f191",
        "cursor": {
          "ref": "5384e624-afc4-4c1b-af69-b6d4e2d4098e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a6d6a5d3-502e-45e5-9840-7d690a412c81"
        },
        "item": {
          "id": "e39f4970-8c15-4f89-bc90-5c2af128f191",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8f75160d-ff27-434e-a709-22542ef1d2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e6e7c8-121f-4164-b234-af43e4872f4f",
        "cursor": {
          "ref": "44f737b3-8ed1-44d7-af8a-6d27856f4aec",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ccc9de01-9dfa-485c-abea-4d449daebb83"
        },
        "item": {
          "id": "30e6e7c8-121f-4164-b234-af43e4872f4f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ec2f9024-8485-44ff-8f2c-40c2454b86ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f82172-edf9-483a-aaec-d18acb35851b",
        "cursor": {
          "ref": "c8a18e64-a725-490c-862f-269e01277359",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7b5dee6f-cd48-415f-b4fa-59bdd5464c29"
        },
        "item": {
          "id": "d1f82172-edf9-483a-aaec-d18acb35851b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2210d375-fd5c-44ea-9fd2-fc41a7c5d53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518699a1-ab08-4b75-b9e8-6d0655eca277",
        "cursor": {
          "ref": "e525883f-1541-4b2c-9a2c-c59914e958f8",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ccf81762-b85f-4514-bf2b-0442ee59022e"
        },
        "item": {
          "id": "518699a1-ab08-4b75-b9e8-6d0655eca277",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "90caa040-178c-4160-9743-e09a0fdf5091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c89ecce-ca25-4140-8abc-439307a573fe",
        "cursor": {
          "ref": "92c79712-550c-48ab-b16b-aab79ad75305",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "337559c5-2baf-47c7-9d8e-39d0cbb1a7c6"
        },
        "item": {
          "id": "8c89ecce-ca25-4140-8abc-439307a573fe",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "35833029-c5f2-403e-b326-85cf71c94181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1dd0a9-eddd-4c93-b37e-90d031142d78",
        "cursor": {
          "ref": "081ecf63-9a42-4cf7-90d1-a5136d2226f9",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "026c7a55-cd58-4755-b478-e23107f2e689"
        },
        "item": {
          "id": "cb1dd0a9-eddd-4c93-b37e-90d031142d78",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "182e6148-6ba9-4f39-b367-758e2d75ee32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe94048-e3a7-4c32-9a77-81a9400ad181",
        "cursor": {
          "ref": "35f7563a-ce41-4d6c-b55e-5d754df99293",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "479f163e-1d99-409b-8357-769c35044ceb"
        },
        "item": {
          "id": "dbe94048-e3a7-4c32-9a77-81a9400ad181",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "632514d3-9094-4c41-b16a-af87fa845c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b3824d-f535-452e-b558-e61c42ef5247",
        "cursor": {
          "ref": "a6e8419d-5dda-471d-a2c8-15c13549507e",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "201f4dd9-8743-4911-b957-5d01e1b3a718"
        },
        "item": {
          "id": "90b3824d-f535-452e-b558-e61c42ef5247",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "184d8ccf-2c68-4fad-baf4-cca5642df58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e5f99b-db0d-4ef6-a42e-66d0e8a75914",
        "cursor": {
          "ref": "df250e2d-122d-482e-acbe-d3a4f98c5faf",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3b059549-31ae-4630-9223-33bc48d89f2e"
        },
        "item": {
          "id": "d1e5f99b-db0d-4ef6-a42e-66d0e8a75914",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d6eb9c1a-f57f-4515-80d0-7ebb936300a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6b47c4-a2db-4735-a91d-5fa433019081",
        "cursor": {
          "ref": "6d6aba9b-d7f6-46da-bab0-fbf61d21c75d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "85a442ee-ed38-4ac0-8bdc-b062fbbe53a6"
        },
        "item": {
          "id": "4e6b47c4-a2db-4735-a91d-5fa433019081",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1da7008a-6a5d-4598-a39c-4b7c55f087bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37888c56-1e96-4276-9f83-f12ad005a708",
        "cursor": {
          "ref": "150b00e7-8ef3-425b-93d6-11a6d5e88f10",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6954dbb1-28d6-4203-b9c1-10adba5b2679"
        },
        "item": {
          "id": "37888c56-1e96-4276-9f83-f12ad005a708",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c6d709a2-d7ff-455c-b65f-9ade6e9f3aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd513c9-c1c1-4495-8155-06e77a707c19",
        "cursor": {
          "ref": "905d9255-95d7-448a-b16d-4a29e6ec53d1",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f6e4e745-91f4-4ba5-a518-740387ec95ba"
        },
        "item": {
          "id": "2bd513c9-c1c1-4495-8155-06e77a707c19",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d9269804-7e16-4f9b-96fd-6d63c1c9ade7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d17c4c-e777-4b87-a4d2-4ab871c9d623",
        "cursor": {
          "ref": "a9045b4b-3f7e-46be-bb38-fa08a0315475",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bdb54039-30c0-4fb9-849a-c5ea403cc269"
        },
        "item": {
          "id": "80d17c4c-e777-4b87-a4d2-4ab871c9d623",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ef4a142b-0e72-40bc-ba6d-e8bd5bd1956f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecd6b75-c466-4f0b-8715-1295cfe25c6d",
        "cursor": {
          "ref": "da364e45-0661-4b3c-a293-f79e4ce4814c",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9b33085f-7d7a-4c64-9dfc-7bdfbf959cc8"
        },
        "item": {
          "id": "0ecd6b75-c466-4f0b-8715-1295cfe25c6d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7ef907d3-fd06-42d7-b1cf-60934bd580ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a1b1ad-5c42-458e-a62f-e56895c09498",
        "cursor": {
          "ref": "ef304aa7-3e59-4036-9b9f-c592644af925",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4f47e621-654e-421d-96ae-e48b5d5fed39"
        },
        "item": {
          "id": "d2a1b1ad-5c42-458e-a62f-e56895c09498",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c7ed7ac4-6218-4239-94fd-ae516263c965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90db076-9b5b-4cdc-b963-3b8519547947",
        "cursor": {
          "ref": "04c5e5f3-fc27-4527-b95e-5476bebce77c",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ff9620ad-1487-48cb-8383-5d6dc00360fa"
        },
        "item": {
          "id": "e90db076-9b5b-4cdc-b963-3b8519547947",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "db12766f-557c-4a77-bdbd-e92d59dd2f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f65b11-142f-435e-be20-0dd7e81bca7f",
        "cursor": {
          "ref": "909c7f37-e4da-4ab6-8edf-4d412cb2567c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9209237c-6ec9-468e-9474-c4633ca16a92"
        },
        "item": {
          "id": "f2f65b11-142f-435e-be20-0dd7e81bca7f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9c2182d5-8caf-4f88-aa42-9d5af48bcc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cabc4f-977d-43e0-8531-1b4424c93b4a",
        "cursor": {
          "ref": "7baf00e9-c06b-4fb0-b3e3-9813e250a37c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "02ca6f6d-67d6-4bdc-b267-3ee07bd516a2"
        },
        "item": {
          "id": "44cabc4f-977d-43e0-8531-1b4424c93b4a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4344603a-6847-448d-8f37-9204be8586f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e081537-4401-49af-98ca-c6c8c108d77c",
        "cursor": {
          "ref": "ad40f46b-83b3-45a0-8d77-efe840349747",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9136bfc7-545b-4a79-b025-e5e6cd524c56"
        },
        "item": {
          "id": "3e081537-4401-49af-98ca-c6c8c108d77c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "448f899f-d056-4675-93c0-7b9a5283268a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a17918f-3e1f-4925-a629-4c670198e1fe",
        "cursor": {
          "ref": "f152968b-9ad0-42d1-8391-2c58aac2d5be",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9833f3dd-5dd1-4160-8606-fbeffaac7cd9"
        },
        "item": {
          "id": "3a17918f-3e1f-4925-a629-4c670198e1fe",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "037f6ec7-8ef7-4d4d-bb84-c2ed1a76aff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb13c585-e4de-4ba7-873f-256b0f70bc79",
        "cursor": {
          "ref": "532e5ee7-5408-4328-bc28-0f5ae7201609",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e59ee3f5-cc8a-44ac-ade2-e5f81b7402c6"
        },
        "item": {
          "id": "fb13c585-e4de-4ba7-873f-256b0f70bc79",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d44014e4-8f1e-4754-9b96-577d085c85e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f629e452-97fc-4add-a0ea-953fe9215116",
        "cursor": {
          "ref": "f3e0b6ee-39a8-4803-9171-0f826b096228",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f3225fe5-14ee-4607-9f82-ef12fbe2244d"
        },
        "item": {
          "id": "f629e452-97fc-4add-a0ea-953fe9215116",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cd53c104-9395-44e8-ad3d-b8e2865490cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a68640a-8972-4585-827d-1d3ee13dccf2",
        "cursor": {
          "ref": "a864d084-b7de-4234-9826-6225affa68fa",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0e52cbe1-e3d1-4fcf-b3e7-31ce55a1a4e1"
        },
        "item": {
          "id": "1a68640a-8972-4585-827d-1d3ee13dccf2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bb8cfeeb-5984-49b8-a3e0-3d98381b4122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0347720-7cc5-49a3-ba66-e1f2f922ef54",
        "cursor": {
          "ref": "79e246f6-7b86-4078-a91d-6f8706d7c9bb",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "14a9475d-233e-4784-ab81-4d19c9662d48"
        },
        "item": {
          "id": "b0347720-7cc5-49a3-ba66-e1f2f922ef54",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6f87c64e-acc0-4ed6-986c-1d51199a0f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e2ad6a-2fea-417e-a966-a1cdbc806567",
        "cursor": {
          "ref": "460b2131-1526-4d9f-ab58-42dff1d7755d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "59f0356a-9810-4839-a99c-8962fbbc2134"
        },
        "item": {
          "id": "d3e2ad6a-2fea-417e-a966-a1cdbc806567",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "02e866dc-53b8-42e2-807e-081f034f32b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c9c630-badb-41de-82a8-44dcdb0fcbf8",
        "cursor": {
          "ref": "062b9d82-0bd2-43cf-bd7d-35d034b83d26",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2051241b-8a21-41bc-b8f3-201a67dd3da5"
        },
        "item": {
          "id": "75c9c630-badb-41de-82a8-44dcdb0fcbf8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4106f262-67f2-49af-be38-01cfd69277a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e367a7b-86d8-4f7d-ace1-da5da86bd34b",
        "cursor": {
          "ref": "1227c427-c3cd-4300-9b2e-e2370d4d6918",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a70f85d6-06ed-41e1-9779-5eb2454069c5"
        },
        "item": {
          "id": "1e367a7b-86d8-4f7d-ace1-da5da86bd34b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8d5539ce-9ef9-40db-bbe3-ea9c65ceeb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fb5692-7264-4b76-9d05-67a241905bfc",
        "cursor": {
          "ref": "9316f574-cdd7-4b37-970f-1cfe10e573c6",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "320e687a-02cc-4cc9-9855-42179084de3c"
        },
        "item": {
          "id": "25fb5692-7264-4b76-9d05-67a241905bfc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7103e09b-5d60-43b8-807f-b439edb29f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69a86fb-9132-4e0f-8884-7a8b19e59d0c",
        "cursor": {
          "ref": "f19d78c9-bc50-44bc-a5fa-274aca1edea5",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f90bfdb6-2b6b-43d7-b104-d697ddad97fb"
        },
        "item": {
          "id": "c69a86fb-9132-4e0f-8884-7a8b19e59d0c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e60b3d52-7215-4a5f-9113-3fb1ebd2e4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae70fa57-31c7-451f-97de-3aab8edc87be",
        "cursor": {
          "ref": "c416c0dc-e8b6-4589-b9d3-e89ed32c80cd",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2e866938-a8ae-4090-87b6-d0b44276fc3d"
        },
        "item": {
          "id": "ae70fa57-31c7-451f-97de-3aab8edc87be",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6e1e602b-6629-4202-9650-4933ec7e2bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dc045c-d302-436c-874f-dbb1d041d5bc",
        "cursor": {
          "ref": "6ffcabf8-725e-4781-8a6b-f2ddc93faf07",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a7e6b8b6-36f2-4b43-b686-51bc9c67d944"
        },
        "item": {
          "id": "56dc045c-d302-436c-874f-dbb1d041d5bc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fef3fc5c-3713-46d0-8807-335045926bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88109df-91c5-4997-b23b-1789693f5eb3",
        "cursor": {
          "ref": "d2c7287d-76ef-465e-aec9-941e8ae60aaf",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5ffe59d3-c039-4c46-a6eb-834a962cc8d7"
        },
        "item": {
          "id": "b88109df-91c5-4997-b23b-1789693f5eb3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c9087366-5d25-4f4a-aa1c-f8fb8daad3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e554bfcc-3d68-49b7-8c2a-1290b3d7b5c0",
        "cursor": {
          "ref": "e63c754e-0022-4fbb-921d-3804e8fa6116",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "82dc6022-3d83-4091-83b1-50b9b8a50fe3"
        },
        "item": {
          "id": "e554bfcc-3d68-49b7-8c2a-1290b3d7b5c0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "861aef3a-2caf-4f8d-9e69-b223b82b89f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9013503-c213-43f8-9f47-dbb8ecbecb60",
        "cursor": {
          "ref": "d46d8d38-d8a2-4a46-ad79-f8c8f4b0c22a",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "593a0c35-2fbc-46c0-83fe-9da9d05e117a"
        },
        "item": {
          "id": "d9013503-c213-43f8-9f47-dbb8ecbecb60",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3721113d-8989-410e-b954-4965492aab53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5f4ad3-7bfe-482f-ac7a-598c6609b0a5",
        "cursor": {
          "ref": "750ff475-12e5-461c-8803-06c68b690aed",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a4179740-7eb0-4906-9c16-b13a36e26631"
        },
        "item": {
          "id": "eb5f4ad3-7bfe-482f-ac7a-598c6609b0a5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "22984111-ada3-4bf2-96e6-e1fe43555f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bf02b6-2e10-4c67-8027-884b866c7aa5",
        "cursor": {
          "ref": "14951779-5983-4fe4-8898-3f746c6a6424",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a0be2d09-3399-49e8-8e8e-ec424690460e"
        },
        "item": {
          "id": "57bf02b6-2e10-4c67-8027-884b866c7aa5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "81097d3c-9ae2-4d97-bd54-98df5c749c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fca5f59-1210-4fe6-8cc9-af7593790176",
        "cursor": {
          "ref": "debdcc14-b308-4c64-832d-dd110ce062f3",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fece6277-9969-410a-8bbb-d04f676aee47"
        },
        "item": {
          "id": "6fca5f59-1210-4fe6-8cc9-af7593790176",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5810588b-247a-43f9-b174-55581dca7df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea266a22-7506-4855-a1a3-9d35b3838639",
        "cursor": {
          "ref": "f5e83196-bb82-4d7d-8d56-4e636aa534d5",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3a1f0fc4-ab4c-4735-a298-657bb0010bae"
        },
        "item": {
          "id": "ea266a22-7506-4855-a1a3-9d35b3838639",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dc517a3c-d2df-4f93-a316-19920610f57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63edf983-7bc8-4e8a-b06a-846eb7acb0a8",
        "cursor": {
          "ref": "a69fcd35-1d76-4654-a314-9d601c4f435e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fbc42a56-c0e9-4e42-9f94-d0fa397f867f"
        },
        "item": {
          "id": "63edf983-7bc8-4e8a-b06a-846eb7acb0a8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "15f9fc20-1ebf-4562-a232-0e0e66533e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6722083-5fd7-4049-87a2-2a9db57ed4dc",
        "cursor": {
          "ref": "0aa96cfc-94f8-4d92-89f4-ad2f811f01ad",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7fe802a3-5806-405c-a412-5f41781cafd4"
        },
        "item": {
          "id": "e6722083-5fd7-4049-87a2-2a9db57ed4dc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8f142ef9-934e-4d11-b3ce-ebfe5abba0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9f5fa7-0b20-4c14-b9c6-e3dbd732b91c",
        "cursor": {
          "ref": "c5fdcb40-109f-4c00-9bb7-b982774699e3",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9298b390-cb28-405f-8834-42a5cf345b13"
        },
        "item": {
          "id": "fe9f5fa7-0b20-4c14-b9c6-e3dbd732b91c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8a5ee232-92d8-4ed1-9bf7-10ed23662c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c482c1d2-8c26-4f3e-b1ab-83786285f067",
        "cursor": {
          "ref": "18ae4517-4d16-4729-a210-abd9703d350a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bd923c5b-12e9-4095-b964-ac11e451eb8b"
        },
        "item": {
          "id": "c482c1d2-8c26-4f3e-b1ab-83786285f067",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "486fcf07-6aea-4297-bd7c-a5fec8e760e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5705b049-119b-4890-9786-2d04167b994c",
        "cursor": {
          "ref": "3e1bd3a5-40e1-4a22-984c-d88bfd5f4a64",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0ee09dcf-b2cc-4963-b6cd-d9e5a8b48dee"
        },
        "item": {
          "id": "5705b049-119b-4890-9786-2d04167b994c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e496cd07-6252-4057-98a6-069d6e498ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55dbbda-5574-46b2-a651-bfa648e98bce",
        "cursor": {
          "ref": "51975500-8818-4375-ba87-def81859d9d7",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5e129117-dfa8-4c8d-b5fe-9551f1e5f5e4"
        },
        "item": {
          "id": "f55dbbda-5574-46b2-a651-bfa648e98bce",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8ed0b3bd-405b-438f-8914-30f448a45e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05945188-f141-4364-a6f8-a9615fe4394b",
        "cursor": {
          "ref": "d776396f-dcfc-4978-9f8e-bd5af2d8eef2",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2536fcfa-439d-419c-a1ba-6801a8ac1f39"
        },
        "item": {
          "id": "05945188-f141-4364-a6f8-a9615fe4394b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6044dd2a-8423-4b73-8c38-f22df8a53100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2aae29c-44f0-4045-a694-c99dee0db9ed",
        "cursor": {
          "ref": "178792af-f11e-41c9-93ae-fded79f8a767",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "562e2e9b-8eff-4b92-8e50-ad954f9e307e"
        },
        "item": {
          "id": "e2aae29c-44f0-4045-a694-c99dee0db9ed",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8412d81c-a013-4c69-ac0b-5d98249e28e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d84ca79-0215-4c14-8cc2-af19d38dbad6",
        "cursor": {
          "ref": "e83f21e8-c23f-4c88-8ea3-7cd0a4f19b67",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "23762d78-dae3-470e-9435-80b44dc43c05"
        },
        "item": {
          "id": "8d84ca79-0215-4c14-8cc2-af19d38dbad6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "015f97df-16e3-479e-89b1-f50bbfb476c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67b614b-b797-4988-87cb-b6b48faf36bc",
        "cursor": {
          "ref": "7d645c16-4129-4b6c-a9f6-6e0e9f2da7e1",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b00fa0e8-459a-4439-bd44-340ea15fda4c"
        },
        "item": {
          "id": "d67b614b-b797-4988-87cb-b6b48faf36bc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "aeceb1bd-460e-456f-a4bc-82a337a0be64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ce2c7c-96c9-4732-8d1a-e4fad27271d4",
        "cursor": {
          "ref": "f35c34ba-9767-4c67-874a-29970985b096",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "78d216aa-7643-4558-97c0-86dcb4282982"
        },
        "item": {
          "id": "f5ce2c7c-96c9-4732-8d1a-e4fad27271d4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "03e41713-57fb-42c9-b6aa-4b7e1a8b3003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70f02ee-aa0d-40cd-9775-38fa95a0491f",
        "cursor": {
          "ref": "8a287743-b6c1-4951-9084-425822747f30",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5e7111d1-8c6b-4576-85be-606b030a6461"
        },
        "item": {
          "id": "c70f02ee-aa0d-40cd-9775-38fa95a0491f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "dc8daa75-311f-4001-8348-9906a60a9869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09223df5-bbe9-4f83-bf4a-7a9b95da4430",
        "cursor": {
          "ref": "3754b292-464f-4889-b32c-c83c2e10badd",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0e684a0b-bb18-4a76-aca4-5c51ef7c6128"
        },
        "item": {
          "id": "09223df5-bbe9-4f83-bf4a-7a9b95da4430",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "431809f1-ea4f-4c5a-ab56-7f8ca579bcc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c92f9f-6972-4779-acc8-5a9a6e393fc1",
        "cursor": {
          "ref": "4cd0cfa4-0f5c-4fde-a89c-2c5dcdaace13",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5f961a21-05aa-43b3-ae06-39b876345363"
        },
        "item": {
          "id": "b3c92f9f-6972-4779-acc8-5a9a6e393fc1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c8e2be9a-30ca-4aa1-9261-f9f3d2eb82d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfafc80-0da2-4d35-8928-bf698834faf1",
        "cursor": {
          "ref": "386c229e-cd35-400c-858d-8fb54b76907e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ca5350c8-b43d-4fb5-bad0-7dec63f994e0"
        },
        "item": {
          "id": "ecfafc80-0da2-4d35-8928-bf698834faf1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3d92dffb-727e-4c88-8a9e-3ae195291e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a0226b-970b-46af-983a-c7c70175c169",
        "cursor": {
          "ref": "cf021909-6617-401a-a23f-2e0984b5ea41",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ed511d88-e718-4357-b370-bd0faa59619c"
        },
        "item": {
          "id": "11a0226b-970b-46af-983a-c7c70175c169",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6d59148c-07e4-4cf5-b20e-ca36056eec5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f18025-1479-470d-b5dc-3dda53cb8d0f",
        "cursor": {
          "ref": "38e96528-bc56-496e-87b7-060e47f59a29",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bd63762f-82b4-4af6-9142-f5e8d09f2643"
        },
        "item": {
          "id": "26f18025-1479-470d-b5dc-3dda53cb8d0f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "075659e1-18d8-4b3f-af7f-4b73f585bc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8acf35f-5fc0-4980-9a3c-3b6af9f1a3c1",
        "cursor": {
          "ref": "7f0ad099-b95b-4108-b64e-c07973dbc9ec",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ddaaab73-a8fc-42b3-9884-7687e05d6dd6"
        },
        "item": {
          "id": "b8acf35f-5fc0-4980-9a3c-3b6af9f1a3c1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1fcd0280-6099-4536-ae84-be2b44f3f11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7162d027-5c39-4fdf-ad0b-d3a5576b541b",
        "cursor": {
          "ref": "511a683f-f893-4d0e-b3fa-f93f85d085b5",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c946d795-7954-4a84-8844-873213a1cdc4"
        },
        "item": {
          "id": "7162d027-5c39-4fdf-ad0b-d3a5576b541b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2e1399b0-1ba1-428b-ba85-a5430b85ca88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa89665-5cb3-4fbd-9705-b3a31dfe91e7",
        "cursor": {
          "ref": "4d09b4e7-bfee-4ba2-94cc-837a58953761",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d91d12c7-0967-4760-9c75-3d6bcf981fa5"
        },
        "item": {
          "id": "ffa89665-5cb3-4fbd-9705-b3a31dfe91e7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6781980f-3f89-4307-90e0-0ccfeccdb2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f466f16-a2fa-46bc-b989-89c106549176",
        "cursor": {
          "ref": "cd957622-801c-407c-bcba-de562c29a425",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "380e122b-6a21-4a04-9391-14ca850a4426"
        },
        "item": {
          "id": "9f466f16-a2fa-46bc-b989-89c106549176",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "74319404-f8d9-4c5c-9871-f4d3d684d5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c41318-2ece-46cc-9651-cd2307289fa4",
        "cursor": {
          "ref": "fd68ec11-7fca-4542-b16e-739d429cb93a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "83da0817-7f40-425f-819f-136ee474fd8a"
        },
        "item": {
          "id": "10c41318-2ece-46cc-9651-cd2307289fa4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e18c09d3-f329-4a3f-a9f0-e12e10c5eb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92d649b-1f77-4ab2-bbb6-1176aadab932",
        "cursor": {
          "ref": "fc6b58ed-8079-4a6a-a6ed-e26e59c9fa33",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a7e9394b-d7a0-4255-84f6-e9e00e7fde69"
        },
        "item": {
          "id": "e92d649b-1f77-4ab2-bbb6-1176aadab932",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "64e3e34d-9b1b-43fb-8242-389357487d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7451afa3-e356-425e-9951-62a397a2e5ec",
        "cursor": {
          "ref": "2d5e9034-5c5d-45f3-bffc-ab6e55c75ffa",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b82bd054-a0ed-47ec-964c-d66ecae147fa"
        },
        "item": {
          "id": "7451afa3-e356-425e-9951-62a397a2e5ec",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9204dd94-0418-485b-998f-b556c7e79310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d537c724-3bfe-45dd-9f28-59c616108291",
        "cursor": {
          "ref": "c79061a5-74c0-4a84-a50d-40d65aafbd22",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ae4eddf5-a823-43e8-acaa-4e6d4cac7172"
        },
        "item": {
          "id": "d537c724-3bfe-45dd-9f28-59c616108291",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "58675195-8cf0-41fb-af0a-9218a3fac0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22c0d05-6d3c-423d-9c83-93d088c35dd0",
        "cursor": {
          "ref": "9d8d32c0-6c1a-4a6b-82bb-bc91f2c78fce",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c6d4869e-d71c-4c68-94b0-04e1419051b6"
        },
        "item": {
          "id": "f22c0d05-6d3c-423d-9c83-93d088c35dd0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a370e1cd-0943-4092-b89a-afc454cd0d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f84d49-75cb-4c96-b064-b96c335a4eaa",
        "cursor": {
          "ref": "1240d947-6278-413f-87e8-e712044a0299",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6ebe9707-9f87-4c60-a2f6-32a18b08336a"
        },
        "item": {
          "id": "c8f84d49-75cb-4c96-b064-b96c335a4eaa",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0d5453cd-ef9f-4aed-9d6d-dd29dca2983d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdb0874-a1e6-458c-a1f7-d367245cbbcd",
        "cursor": {
          "ref": "3cdb3eb7-bc38-4ceb-afd4-58814cead746",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "03f2fd75-1d1e-466f-84f2-1293235b20fb"
        },
        "item": {
          "id": "ffdb0874-a1e6-458c-a1f7-d367245cbbcd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "030cb3f6-fa75-422c-a98b-f09ce33c7478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009737d2-9bc4-400e-a3d0-7d7a21baf036",
        "cursor": {
          "ref": "0e6995f2-9ed5-4c02-9094-f0b836dbcab8",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d450afac-6e67-4c3d-b2b6-a910a1755fe5"
        },
        "item": {
          "id": "009737d2-9bc4-400e-a3d0-7d7a21baf036",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e76cd2d5-83df-453b-a7a2-6195b26d3c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e64520a-7afb-433a-8f17-5465fd0188c5",
        "cursor": {
          "ref": "44135323-b9dd-45c3-aeb6-5cb223553cf2",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b9d86199-c0eb-4b73-89a6-b79afb2468ac"
        },
        "item": {
          "id": "3e64520a-7afb-433a-8f17-5465fd0188c5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9e75ea9b-6822-4043-b574-f3558e13dd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b39849-16c3-4eda-88f5-cb68dbc37f93",
        "cursor": {
          "ref": "3972bb53-3de5-42da-baac-bb8c905bce1e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0815d1e1-94b5-449c-89dd-c35ce2b347f0"
        },
        "item": {
          "id": "b3b39849-16c3-4eda-88f5-cb68dbc37f93",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "17e986f8-ec7d-47ab-a541-383c577b09ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0273aa09-f916-4113-9df9-a9b007d8e077",
        "cursor": {
          "ref": "b1eadcba-3403-4976-b25b-9eefea4f7610",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a17158fe-b5e9-46d1-81c6-331bcf6490c5"
        },
        "item": {
          "id": "0273aa09-f916-4113-9df9-a9b007d8e077",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6a5d44d8-b871-4243-8137-4642550451ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8c6fb3-5b8e-47ee-afbd-6a058c7801f7",
        "cursor": {
          "ref": "b757b337-e828-443c-9e52-760e84871378",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0b238ccb-d9a0-4830-a463-3dce7fb17330"
        },
        "item": {
          "id": "8b8c6fb3-5b8e-47ee-afbd-6a058c7801f7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4655805d-03fc-47b7-9e13-ae38f114a43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0f7af5-79b2-4a25-a23d-34079ebf1dff",
        "cursor": {
          "ref": "cba406ae-f826-41fb-9bb5-6305d56d3013",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "811a48eb-f308-40f9-aada-3a5be1ca4036"
        },
        "item": {
          "id": "7a0f7af5-79b2-4a25-a23d-34079ebf1dff",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e3a2a923-29ef-4836-a8a6-583ca4e83f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08016fa7-5c00-437b-884e-db8c08cf6e56",
        "cursor": {
          "ref": "bc0f07bd-e78d-4c80-b4ca-029e0e0be1f1",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2e01fc6e-e1cb-4abd-9aa4-f7d6c1c6d92f"
        },
        "item": {
          "id": "08016fa7-5c00-437b-884e-db8c08cf6e56",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "00677b27-b1e0-4017-985d-ffa2e9e30a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c11f97-4417-414a-b6fd-3f1173a0f13c",
        "cursor": {
          "ref": "85283841-3706-4a7f-be86-caa82fe74ba3",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f8fd12bf-7c55-4227-b4d3-b4cf5d6056fa"
        },
        "item": {
          "id": "94c11f97-4417-414a-b6fd-3f1173a0f13c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9d467653-09fc-4541-a7de-90fdc491f316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c69c76-9ccc-43ec-998a-6511d08109af",
        "cursor": {
          "ref": "4bbb222e-6cb6-4382-84c6-e13438d0bd51",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "be13b1eb-f66a-4150-8820-3fd9ab22803d"
        },
        "item": {
          "id": "04c69c76-9ccc-43ec-998a-6511d08109af",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f6e62e1c-dcd9-49c0-8009-b18ee1c88131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e8e63c-7e73-47ca-b759-2aa57198035f",
        "cursor": {
          "ref": "8b13493b-5e3b-4f91-95c0-e0d09f4e6984",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "68ab55b2-6a08-4d68-9fde-e11d2acdc3cd"
        },
        "item": {
          "id": "c4e8e63c-7e73-47ca-b759-2aa57198035f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ec84ffdd-400e-4062-a5d7-74063fb0dc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0479c939-215b-40f1-b695-7869d2d8fddc",
        "cursor": {
          "ref": "5bd31190-1584-4175-acaf-bfa77c68281c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "aeda47e1-3826-47d7-87d2-6f2dc602dde5"
        },
        "item": {
          "id": "0479c939-215b-40f1-b695-7869d2d8fddc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "30e9af56-fc5a-4284-9859-cdd22ad52cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef29826-4d51-43a4-917f-6920d7dfdd0d",
        "cursor": {
          "ref": "382fcc59-606d-4186-a261-e975d421cb77",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "463e5ffd-8b0e-4f85-9ae1-174978697778"
        },
        "item": {
          "id": "1ef29826-4d51-43a4-917f-6920d7dfdd0d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c5075185-e55a-4570-ba15-5ba33b240caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73e13e8-b689-4499-9acb-b1c3b151085b",
        "cursor": {
          "ref": "949347c0-46d7-46e1-ba01-d6509e96ae14",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "330eb191-486c-46cf-9b3a-ee51ac903b07"
        },
        "item": {
          "id": "b73e13e8-b689-4499-9acb-b1c3b151085b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7d8bce21-1915-4311-8ad6-d738cfe736cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7555a08b-50e5-48c3-bc58-4408e988b598",
        "cursor": {
          "ref": "0e3ebdc8-c38b-4148-8ce5-ea5367043fa9",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6e607655-3e0f-4566-93f7-578d386f53f2"
        },
        "item": {
          "id": "7555a08b-50e5-48c3-bc58-4408e988b598",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "33b7f315-24e2-4556-b18a-34a686264ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1fed3f-abff-48aa-bdd3-7cd615a4feb7",
        "cursor": {
          "ref": "79624105-04e3-4b9a-b150-f8afd48893d4",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c22f052e-a4f9-4db9-a09f-81618a2bd3c4"
        },
        "item": {
          "id": "db1fed3f-abff-48aa-bdd3-7cd615a4feb7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9225a674-ee19-45bb-bb46-5b76ca19cf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8664871-a402-4761-aa41-b507045fd654",
        "cursor": {
          "ref": "7e39f7ae-1fab-4008-8d05-458918f58577",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2c3bb228-1094-490d-a82e-57145cf14dd6"
        },
        "item": {
          "id": "b8664871-a402-4761-aa41-b507045fd654",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a2981f9d-def4-4498-aff2-7958fc399866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0461fb3-fa41-44b7-a0d1-5028a3691f82",
        "cursor": {
          "ref": "1c1ea48d-0b74-47f4-84fc-78df61428a92",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "aba6965f-d592-4359-94d0-706bacca676d"
        },
        "item": {
          "id": "e0461fb3-fa41-44b7-a0d1-5028a3691f82",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d16c76ff-a2a9-4648-a2df-0749a3eeac03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6a0c51-9381-4fd8-a892-5522e9dfacb9",
        "cursor": {
          "ref": "8b496cc2-6270-45d2-85a2-521244a14d40",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d4ca14b4-3c78-433f-be3a-5a8d50d1a6a2"
        },
        "item": {
          "id": "6a6a0c51-9381-4fd8-a892-5522e9dfacb9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ec5796cb-e7f0-45d0-b87b-76cd3e6f113b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74ccaec-29d0-4229-b5c6-402439ebad7a",
        "cursor": {
          "ref": "7d5959f4-5cec-46ca-a54f-32a057948feb",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3f7bdcfb-cd18-4d7c-928b-cb60445fb620"
        },
        "item": {
          "id": "c74ccaec-29d0-4229-b5c6-402439ebad7a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9cfd43c5-a35a-4994-b109-cd746b1dd908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfa540a-5a20-4951-9fb5-f62287ee6300",
        "cursor": {
          "ref": "0d0926dd-49e7-4c6c-a3c9-c8d9eb856dfc",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "adef80f9-ecf6-49ef-838c-7ed501e1ce55"
        },
        "item": {
          "id": "0cfa540a-5a20-4951-9fb5-f62287ee6300",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "368a9475-2fca-45dc-8209-b17f3364752a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "12346e00-0613-4318-9153-1e83f0458f80",
        "cursor": {
          "ref": "72df6e47-6075-4504-945a-e46e325d293d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1a6fbd5a-8c8a-4fda-8656-a2f90cf23c18"
        },
        "item": {
          "id": "12346e00-0613-4318-9153-1e83f0458f80",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6b2b5235-fb81-4462-9549-7e92d53d4ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "02aae2e3-be69-453f-8b7d-86fe1ef77af0",
        "cursor": {
          "ref": "5938585b-88cf-445e-b890-6adb50d795e2",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5bb025d2-8784-40ab-bdfc-1c45bfc229be"
        },
        "item": {
          "id": "02aae2e3-be69-453f-8b7d-86fe1ef77af0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "574b9d90-0336-43cb-8af7-225ea548ed0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "d7c98c4e-f7ce-43a5-883b-f0cc99621f37",
        "cursor": {
          "ref": "633459f5-c7e3-44e8-a6a4-22baed56e4bb",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2609a970-83d3-4677-9fa7-e1dc8efe8caf"
        },
        "item": {
          "id": "d7c98c4e-f7ce-43a5-883b-f0cc99621f37",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fd665bcb-1688-4862-9a91-632f78d4df51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c98c4e-f7ce-43a5-883b-f0cc99621f37",
        "cursor": {
          "ref": "633459f5-c7e3-44e8-a6a4-22baed56e4bb",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2609a970-83d3-4677-9fa7-e1dc8efe8caf"
        },
        "item": {
          "id": "d7c98c4e-f7ce-43a5-883b-f0cc99621f37",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fd665bcb-1688-4862-9a91-632f78d4df51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c5eb49-64e5-487b-bde1-37bcc0c5744e",
        "cursor": {
          "ref": "66003eed-c82e-4ab5-8cd4-5b003418f3cf",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "167e5199-516c-4108-9cce-f4f1bff0fca3"
        },
        "item": {
          "id": "b0c5eb49-64e5-487b-bde1-37bcc0c5744e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "00e2abf2-cb42-40fa-a66b-15d1c5b4bfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e47fd1-2381-4539-a082-dd8545ad98a9",
        "cursor": {
          "ref": "12a1e273-8f25-468f-9eae-0e8963aa8236",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3c04532c-34c5-4bf5-92cb-f60a66d8512f"
        },
        "item": {
          "id": "a8e47fd1-2381-4539-a082-dd8545ad98a9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6629de4c-58ed-4cb3-bc27-286fe01de5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}